{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4f8c6a5e-9e07-48e8-8212-857a031805c2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a478a6a9-e741-4e05-b59e-72a05fae306a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "59e02015-3437-419f-b9b5-8099d0e0ae93",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6dadf5aa-d843-4552-bcff-0b337ecf0437"
                }
              }
            ]
          },
          {
            "id": "97564d9f-df5d-4f3a-9bc4-bfbb190b84da",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "581745b8-bd27-459f-862a-5129b4b29e44",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9db44f6d-1e1e-4240-bc3a-48ac8c9bdf46"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6c162e70-bf67-4c91-b180-f455c5846130",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "53502e29-f95a-429e-b0b9-8744e47a9a99",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f609eb26-75c1-46dc-a14d-e74204c79266",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9f78aa0-b97f-4941-ad51-882911bbd8c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "59e7ebd7-e0f0-4d94-add9-d0fc5f00e119"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "06bf7ef2-1421-4910-8ada-e2943ff46a40",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2958ac54-02c1-4889-81a2-2b8129ba344d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8496448b-6b89-4a41-87b1-2dac9f6855a4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "536aa32b-a45a-4cc5-a282-8a6319a7fd38"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e5c920e-2da8-41da-ac13-d468cd339d98",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1e167fce-8185-478a-958a-bf06189477ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3acd836c-9f25-4963-b0f2-2a139c7f2025",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "781dc30e-8c0b-4752-b0bd-f6e30959b3c7"
            }
          }
        ]
      },
      {
        "id": "b89df283-2e9b-401a-bdad-ed40d9f7e0f7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ce83d48d-afac-497d-a12f-766b3b29ea3d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e86b3ce3-d2d0-489c-805a-af0e02f64327",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "865a97e4-97c7-44d0-ac42-32382a43811c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d743db98-0b60-4254-a357-0ccd3149c2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7a014d8-1b70-4489-825d-1d35c0d8543f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9492eb52-94fb-4788-9292-6c81012ce1f8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a12d62-b0e1-4a84-ba3d-e14fa2603b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f23d4477-3367-4001-b9f4-d731bfd420dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1cd0e59-7c9c-4134-87f2-0cb599d969bc",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b566b2cf-f122-471c-96b8-df85c26b9b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8cda461d-0ddf-4285-b8be-af2340ab0b40"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "001ba55d-1189-4305-bf68-efab0f124ebf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cc9a0d9d-8f82-41c7-841b-fe95bfb4a19a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bea568-73cc-4385-a399-67d62235ba9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "781b79c3-af4d-499d-bf55-c1134706e0a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19624028-1591-4a8f-a4bf-29b0402f59f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15c2b27-66ea-4fe4-84a2-96a534301902"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "683ee341-3a42-4664-8eac-fa46ba1465bc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3d0cbdca-2978-42b6-bb4b-c3e8140d3314",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6dbd1097-ae60-4c29-b9b0-8bccabd3bcf6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c1795d9f-717f-46a2-9d27-47bbca6f91e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17ab77ed-ce04-4d43-8062-77b5c9929a9d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5389d60a-49e4-428c-b75a-4b994461199a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e2471da-b796-4816-96d1-e8b291540275",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a16b783-6bc5-4dcb-b5e3-5a00951885cd"
            }
          }
        ]
      },
      {
        "id": "6d34bc35-c5cc-40f5-a871-71ba90c1bc22",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "91380aac-85ea-4e4e-b12a-db6f8cc7dade",
            "name": "Negative Testing",
            "item": [
              {
                "id": "588460c8-9286-44d1-a36b-461a69290780",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b19d4ecd-678e-4538-bcb8-fbf458d5ef60",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1610efc2-dabd-4bbe-88d6-8de8cb4642ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fbd695c-0386-431c-b63e-c1aa02cb57c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a39128-1d78-480d-9d20-e6ac15a972cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84b92361-7e41-46f3-b4ec-d88dbe083b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef80d93-176c-4a00-b83a-ab882453dcda",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d2340f-b2ad-4b2e-b749-3ccb4e9de6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f7bf61e-8d8e-4b24-8f4a-776628c62e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daff540b-4132-4f20-a752-7f13b60c8a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcd1b59a-c785-40cb-b9b0-783fbe8909a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc34a1f6-fe57-47ae-b22c-831b07c94934",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc6f343-9796-4fad-81b0-024819376be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5926270-023d-4a22-85d3-5e7fb84ea0ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0ccdd5-14e3-4b3d-94dc-2fa0b4cac859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fe79517-82b3-4f2b-92ad-bdf4f01c74e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc605f0-a4a1-4707-9e71-5bdbe2ad775d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62117cd9-889a-4c36-bd45-b86124147301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19ca0ba-0373-46f3-a4f9-dbdbd98885da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307b14b9-0bed-4994-8223-9be8372811c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79cd0e68-6aa5-4d8e-aec4-4d3621329b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a52bf31-845b-49c0-bff3-19259cc8889b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e5a438-91a3-4778-b2db-bb985b225cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc55158-a078-4f89-8141-7e7e933e5c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383a59c5-d40b-499c-a759-a63902977314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa1bb183-6415-454e-a028-b68a2440c421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564b60cb-a9d9-44aa-9628-b0985c84ac0f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18d73e0-ae35-4436-bc54-8346d255d761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "428b9376-9757-4e20-bf9b-efe4a5e645b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76326358-114a-4ffa-9528-6a4d90da39ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8592c89e-0793-419f-a183-57e89d91486d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b89028-a2c2-46c3-b668-8ed751fda9e9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1a7fea-ddf8-46a1-aa52-dc6c1be8a010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bc54e66-f0bb-42f6-b4c9-02841f60dd05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0b0e1c-1617-4740-9e20-71713585c297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b8205f5-05e0-4fd0-a9e5-3f918a18af3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6636ecd2-872b-4560-9f49-3a77756945c0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddae6abd-859f-4059-8a45-9f507e1c12a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05423b6c-73e7-44e0-ba41-45742a882509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b016d81-108a-4522-ae04-35258a6237cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9e04e60-2278-4a39-ab2a-1b790f115bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a145a52-18f5-4bf7-a381-934813e4759b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b33bb6-057e-4f4e-83a0-74a0093f34e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d30ea17-1eb5-40b0-984a-e287ea90c3fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71784273-3ec1-4dcd-8347-5978aa5b0ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "123ec1a9-508b-469a-91c3-5daa978b887b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa301a1d-e8e2-4db4-a5d9-be84ce59ed89",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c2c46a-7502-44ef-b328-8a190c12bcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c8c14a-0971-4779-a047-fbd8f9eea2bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3df3d8-3fae-40ff-a78f-99f06e42fe54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b7691f0-4fb0-4098-ac32-ea2ff448cc19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6816ab7a-0ef8-4b7b-8e30-1dc66556f6f4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c720bc-f301-44cb-b7f0-846414689d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7f1483-ca67-421e-88ca-0e4a39217420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7825b0c0-2914-4803-afc4-39066c547e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08ad5208-b3b0-4ac0-a2a2-f0bbc1a01979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411f5155-b5ec-42b0-9ade-5715e6123671",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee46eb1-69f1-4872-b07f-8e0b5cc32b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d2e139-a5b4-4246-ad9d-1700495662ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d433c19a-e54e-4a67-b385-d2bed9ec36b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1133be51-1563-491c-bc62-40288b494d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d68ae8-a527-4aac-8616-371451494d9e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadc767d-69e6-4cfe-a9c8-91ff82a0b7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d93e86-80c7-4f0d-a7be-fd52b2f34506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6ade4b-ec05-4e55-90cd-cc67467043ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dde75d69-f6b0-4d09-ba96-17572d9a6a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96393ce-aca6-4987-9ab2-1ab3873a594c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edeaba88-626f-4ea9-a4f8-64884897f1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1121e0e5-5f0a-41ce-8f2d-bf476bcaad58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845f2bd3-5ae5-4f9e-afe6-698f8fa223ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b991243d-eb5b-4f5a-9428-a6e35f6176b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0182a3e-c260-46c2-afd8-270359a8fba8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e5f157-2691-469c-ba6f-4029f99beb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c95dee6-760d-4273-9a3c-0ed165929b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1693bdaa-a458-47b3-a449-13585a014c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23d70983-8d07-4411-999c-73df5940f588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e189dc5-33c7-4ae1-b642-9cf2ae734886",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b44680-c1b7-43b9-b868-27d591d2c2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31996610-2f99-46ec-ab22-74b5946ed655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093e2401-43cc-496c-9173-bed2e4929e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bc5b980-2c66-42f9-96f0-b65eaa0abca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5468c00-13a0-4694-8412-8353fd3c634e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbc6bcf-fa9c-4d6b-91a1-0d0b9446c70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009fb134-430d-4f9d-9883-e66f28560c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334051d4-2ac7-4fee-94c9-ae944d4e6cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc7642e0-b830-4f4b-996f-718e6f65148a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd7c84a-a7f0-4931-87e0-263efc980627",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e8e6b0-4a65-403b-b7c7-2e65d705ab7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b39cc40c-6903-4853-8e74-6b64d9221ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9e949e-b479-4396-8504-d330caad17e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "69b609da-562d-414e-a6b2-6cc52439430b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd00e6c-0d2b-436d-923a-50a5d3bf4732",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586bcbe4-8d5a-44ea-8209-b972f6de939a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa6b39c-f78a-432a-932e-94bd3bd9aedd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf342c3-265b-44f8-8dda-862d7d7f50ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23bf6010-7d37-42a5-a656-853ce4c3f837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b38d1c-fedf-4127-aa5b-bbb9ee511ef9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6172184b-55c0-4b83-88c9-c25d7af411c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "812b385b-dd46-438b-9511-75aba4ebea75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe039d42-b9e6-40c0-a827-6889c7bcc47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a454ce06-4662-44e1-989e-4adfc02a1322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800beb8f-8fd9-4e0e-97af-43d92e2ddbf7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28292a31-a481-4ca5-9a68-4944196b8b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b35d4e8-dfe8-497c-a96b-d16778fa9964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123f408c-71d8-4aac-a1dd-89622bc239af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a058c8e0-fe56-4ecd-b806-3d511c1c659c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87a2e43-3e3c-4413-9dfd-4a1936bcc702",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83abce20-fbf3-4a4b-93c3-bb73c2b26ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbcabb52-5ad9-4bfc-9172-8ab5ac0e7d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32d3752-fdb0-4366-9a2c-4ffa5ad19daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f18554d7-1c61-45c5-9ab2-ecda8870121e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d8bc6e-bd58-445a-93b6-89bd8b4dcb81",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2e3df6-e8e9-4ed0-a768-3c622497f82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f0816ed-624b-427f-a98d-e4597a5d84cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d37af9-2a79-490c-ab7e-36dda3064652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "45f39647-4c07-4151-8138-9893b5fa3c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474f4fc9-b73b-4c17-ae7c-d1eb923396ca",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e50b95-8152-43a3-a878-4b5675630b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e38299c5-cf6e-4d53-9fa3-2ae1146f3fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baaef656-950f-489e-971b-5cc7f6421bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b61d43f8-be7f-4965-b4b5-42d4e4331fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a780ac8b-ea56-4cad-b32c-5ba5f462afb9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b72f74-7d1a-409e-82b0-f8fbd7134e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ff1ce1-3771-46f9-a435-a84cd8162acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52eb5f14-5bfa-44d9-9979-49a773535ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6978c545-453d-4c23-ba7b-0b050af31c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e3bcd7-5186-4053-bcd8-6593b7034a98",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b738a788-084a-40ec-9c0c-50941d59a6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2d69cc-6ed1-4b8b-b092-5458328ed134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847d452a-1e88-45cc-a235-51a80ab509bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0f06bee-a64a-4434-92ab-89d2add7bb28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8eb2af-dca6-450f-9ba2-028b8c2d70dd",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed91a721-63d6-4813-8de8-258ee7d7057c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec4df5ae-92be-4e91-8f88-b63ca2ceca06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fa86dd-8b63-4c02-bf0d-fd9a1fd4ec99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cac3798-76f1-4d79-9930-55ee1b410c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3584861d-68aa-4c61-98c0-68fa3898d2e1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcd1daf-1fbc-4e82-9a91-ca1d75b265a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35980c47-2447-4757-b103-65bfd8139811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba70fe68-f0f6-4fb8-b3c4-87ff1eed6754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "609c57b9-68a6-478e-a7e6-3a7ee89c1c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57a1859-13f1-495a-9e68-c8219c79594c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b69494-047e-4b6d-a237-6213b248471d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8ce58d-36a3-4a4a-8a17-d3e1dd26d04f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d69d1ab-2ff6-4a70-a496-02a7ef9daa5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "159ebb98-1816-472c-ba61-44d5714446aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec402121-d8b5-48aa-8118-c0d366f984fa",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1548950f-dc83-4675-858a-a721e0faa4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5e7927-5b71-4aaf-aebb-55cc329edf19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d46299-b59b-4f0f-9a71-f453a9d5e350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccbb354e-5581-4117-a66c-672915c77de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e96136-238a-4078-9ea2-734de4dff000",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe398432-4cc4-477a-9bba-e39b00c275a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b337ea2-e6f5-4f8f-9fe3-f1cf0a0e8e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb4ca02-0757-4270-9f2a-4556f4511384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e910f482-bd86-475e-a466-e60e552b5948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf4326e-6d21-4ac8-aff7-0e71da06da8c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cad8148-4f8a-4456-b12a-19dade898c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee45aff-c5ba-41e2-bfad-bf2461f04cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade72d06-d973-4727-bb46-a0971e33ea75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da188069-e110-4a3f-ba4c-579523d88ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7af2be-22ae-4e64-8c74-706f90c15d99",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33efd88c-53fa-422d-9ba7-fc2fbb5074cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74c35e2-04e0-4a07-b7c5-cef2f4a21dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee50ceb5-1ca2-4169-9d28-22bbd4e5a087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "920a0270-d6ba-4030-b6c9-5d5176fd452e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d222a7-4014-4356-a41b-4c0091e87d8a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a036007-a18c-4dd0-86ea-3813d5a3b005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348359b1-9bfb-4905-8be6-b9c60c904d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbfc7a5-5316-4861-b8ac-b5aae3672608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91abb59d-0950-49a9-83ea-bc4e56b40775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8e87fb-24f1-49eb-a6b3-4e119e20bc9d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5ad0cc-f925-409b-8549-b223c6003959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c458266-cfb5-4b87-89ad-e263aacfeb6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76b4928-5f97-47ce-8db6-9559af927c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a17e2a0c-da2f-4b0d-9ce6-4e5eb92a0023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e3d75e-b9d1-4631-93f7-fefc1249d787",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e431635-b216-4a9c-9e31-ef80af9c2ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7168a7f9-d279-4898-84ac-a78f556d5814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23083e4-add2-451b-bd1f-8d2b93400e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fb2b103a-8e9d-4565-ad45-c6da127c11ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1f47b8-11b4-4cc7-ad23-b5c94e9ec5e7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecce84b7-0941-4388-8cde-901eabf9dc18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "738eb92c-378e-43d7-9947-782816929bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c2cec9-ec03-49ed-bf5d-75bfe4b707ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d52c9cdd-87b3-4da7-b53e-d4efba46f3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e813741-5d57-40c4-8829-548f126dfaaa",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a3170f-5b07-434e-916b-5ddd3924309e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2dc9fc0-f84a-4f5a-9fc7-1ad716c5ab12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45cbb263-c578-4d1f-939d-498174b3cda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "102da5b6-0003-4589-80fa-57a8d0a53f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4afc1bc-f9e2-445d-8c58-610676563727",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8c2ad3-f9fa-42ed-8488-2456c561b91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0c655a-6444-4cfc-b2d7-70e75d87a87d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6728fe0d-75a7-464f-8294-55bb7cf4ba84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "08858c71-6c7a-4877-910b-2404501f62ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44251302-67fb-47a9-a82b-58ec9a3f3fda",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8481cd40-39a9-47c1-99fe-49408679d6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f2cb5b-b224-4b69-93e2-e282bc34a048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b8c92b-ce7c-4549-8a7e-51090511fc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a570b684-9a9f-4d3e-82de-5d9786aa4ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e952d06d-1b4a-41a1-89e4-12286e7b992b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ad0782-5952-4184-a640-0e78c3ccb6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cdd3471-4fa4-492d-b147-0cfff1249e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead7a98e-a1c8-4c05-9eac-8c0b3b36b63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "38e677f6-3cea-42be-9a08-352f0f90973f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef4455e-c8a2-4615-a37c-79c8f7e4c739",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ee9da8-3faa-465a-82d4-7dc614ec99cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f555250-eea1-4856-838b-e47c049afd97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cce9d81-3186-40bc-8de8-5da709b5dac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8f796e6a-38ac-43fe-b121-02a0181721b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c210053-db1c-43b1-a59f-7a294d21f15a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240ccba9-9e8e-4288-bddb-9fffe4383f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a2f776-64c4-48df-b41a-651ec236c704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116ed4c0-51a2-453d-bb8d-0dee6b0f20fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "459bfc7f-be39-49ab-986c-1e7abb9789b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc1c0e8-bac3-437c-a2ab-3eb5bcfc786d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2351325-225b-45ee-a55b-038d07438f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42420859-5db7-4945-a4f5-95666facb1bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5b5ef0-ff9d-4e46-a29f-aa2cc741565c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fe8ec51-40eb-439f-8e59-355e4fddc7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e491c157-ffe6-477f-8e29-a11f805a45d2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce545bd-a557-415e-91ee-80b20a0694d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890e3e68-7e73-411d-89b7-be6f577d2e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aead38f4-2fc4-4ad4-8bc2-2de81754fa51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a62dd42c-bab8-43d7-8df6-b645a3b6d309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687db3aa-d17e-414f-857b-8cc1109d8e7b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2330d032-3781-4a44-8fa8-6ce7dc55c1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad11224c-bb53-4e42-b59c-f466cb616d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5c0755-376f-4156-88bf-1f2d9abcb179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46cbd37b-9e8f-4d33-84a5-a630f63c2369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87175cb9-89dd-429c-89d2-6ddb26e39345",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88862747-3382-4a97-85b0-241a0447ae88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26104dd9-59b5-41ab-bde0-21011604e6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6533d4a3-e1af-48fb-8af9-2faa48a36e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85261a93-c9b3-4396-87f1-cb75fee6fb37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f3841a-35ff-467f-9ce0-92786fa68101",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf31917-80b1-43ce-88a0-42d91be4e5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc678380-8ffa-4a01-a58b-fcea98050607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "706f179d-be8f-4a23-a3e8-7ca9a14142a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab9bc343-431d-451e-b869-716351ed9f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdb1ed4-f4c2-40d1-8d3c-81140e9a250b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "340b7dc9-7d0f-4c89-b466-2b08d2033617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070ec815-8b8f-4d5a-adae-4d2b7843e6a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645af795-a824-422e-8906-4240c8a65eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b74d598e-cdae-4e9b-aaa9-1db01a7cbb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4a36c0-19ae-4262-8cf7-543cba006746",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db87ec8-47d4-47ed-801d-3203f7f77606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "268dbc33-1241-4d4d-965f-b5104348e406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc879422-f3d2-4dd0-adbb-90d5acae616e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6f323d-3b5d-4345-acee-4597ee23605d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456c2682-7c13-4a07-95f0-2877005320f3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2956a8-d910-43b5-bc47-c9c067572511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "203a51f6-94e4-463e-9002-d9c3db4f8a3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d06d0ec-ded5-41fd-96c2-7daee744d02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "040a718f-67f6-4d62-a621-0a4b8aca3375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062d065e-a40c-469e-abd2-ce89a5f74393",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d212077-632d-4f16-8e42-c1b68c62c7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5711bd-ca24-4960-9121-ba147d6f8cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0172ae-c1fd-4c38-92bc-c0883d651bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "38ca879a-185e-4b3d-95da-57f244630e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413eb5c3-0865-4699-ba0b-63c1ea9de9ce",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90381960-df6a-4962-89e0-469a449586aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f313e4e8-2576-4f90-9d58-9c237008d7ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b123cd-a22f-44de-b4e4-ca0189cae734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc97071-8393-4de4-93b4-9353d8590f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d717c3-51c8-47d6-94b9-fa408c21f8fb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "288ceac0-a63b-40c3-bbb8-adabec63b624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68775c08-c6a3-4d9b-8a34-88a5bb3616f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287b0e14-cec0-4780-9ad3-e62c54073b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce815349-5397-48ce-9f5e-825fc7680714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c793a1-647a-420b-9409-4180c97eeb9c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ee8eef-53fa-4c77-99b5-be18a81bb6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "297db0be-98d7-468b-8221-88e5e43cc217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26159d7d-24d7-4496-8148-c854483272bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed6fe763-ae84-48ab-b0e5-9f3e1132bc23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3ee126-db49-43e0-8980-078605a93fcd",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398ba8b3-802d-4ece-abd0-5c3176d3ce4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0931300d-6688-4a3b-bb33-1f3d50e159e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c598a099-cb60-4589-9dbe-cd63cc7ebc6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1f1ece86-935b-4eda-b12f-63b096859f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7724ee7e-6793-4c10-817e-736174b0c8da",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fc2e99-e0df-4547-ae11-92094f89a897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232c3f6d-3b48-4c4b-8911-1264929851e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a6aa3d-6f30-4618-bdf7-747b86ce5c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3405c529-19b9-4d33-a694-7252f68c9807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0feb81ef-d966-463b-a37a-b1b8fabe4e26",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2417a4b-1655-4c25-b5c2-ab4846dc9190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0cfd37c-a53c-4ca4-8298-2a31ab9cb3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73822f5-7f35-487d-baa9-fcf0511c8fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aef73709-285d-48d9-aa75-18d808ca982b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1acbbe7-6456-4dbb-ac20-a520796e6bba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e8fbd5-1300-4a3f-9525-a286c08808e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a7a34f-62fe-4fac-8481-3ee885c7b4f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e65635-52d8-4aff-9c69-4f77eeb8f112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3617f35a-7872-4108-b19a-f39b087fcd91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e2de20-3e06-4cd9-b913-02bd85c6c399",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51e2f19-19cb-4467-b6a8-395169b223a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6fbb98-ba41-491d-b802-ebd75ffcdbae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bca7a0-6d02-4a27-811e-ee7b59a5a42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d036e02c-ce03-4e1e-877f-aab09b66a793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d9412b-a24a-43a7-be1e-33cd7b0fd5a8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3e9014-2cbc-4ada-843b-434fbd0e83ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72fff94d-25f0-43f6-bcb5-33efeeb09941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56897d02-3947-47aa-882b-606ee2173015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "226bec0c-5c9d-45cf-9767-9e36738e9c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2448ec30-bc9b-4807-9634-cfa4cca2f195",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25dc930e-4c08-469b-8219-61b1155a39d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c8eb59-a6bf-49b1-a883-7cb073bcb7df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce8b6bd-f3e3-4b6b-a1c9-47a86c3d3250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad43551b-d741-4c1e-b61f-45a51d79905c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89cd97d8-ef1a-4061-a4a3-a1da2b2a3f8d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd2b5de-ba18-406d-a4a6-d37e26395d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f649fd4-4bda-4fd3-bf89-3ea6f7f65836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141b9e2b-93e6-4109-bc07-d1f4618a83da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d6ab46-9906-410d-9a75-fb2dd0cb2017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbbcc95-a598-456f-8378-4afb3ec6e113",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2e8778-e695-4378-b24a-10cd41faf7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "800f1e24-6be4-46c7-9f47-0cc9b5f386f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c65222c-e093-4ca1-aef4-51c0ea083431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8beebc0-0fb9-426f-ba1b-7695f8b47aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ba0158-e97e-4d55-876e-de1ffbbf8635",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c8b09f-343b-4bb4-8390-f2feb5232ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e3b948f-1f82-43ff-bbfc-dea522b2f78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80d21aa-9c32-4cfa-ab27-0abfb4f71e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f124061-526b-40ac-8cd8-3ea66742f562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ada7670-e9c8-45f2-8bb4-f1abcd6828ae",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc43620-24df-458b-b236-21d5ff41856c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e64c589-0a97-4bca-8f5f-e930576f58ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c25707a-ba37-44a6-ab60-f93747be16f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dffc9b5-73a3-45af-ab97-c30f3659c37c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fcb4f09-ae74-43f5-a1c4-5e84e07581a6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb05e6b-ebd4-4426-addd-2cf0643e5b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "441f56bd-9917-45fb-95b3-25ccfc3f265e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc8d32f-66df-4a65-abb3-a8f32214f2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "064ec6b5-5642-49fd-b0a6-c51da0a3e914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b7e529-01ba-4359-a3ef-ae6aeed934b8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0677dcb5-e3e0-442e-9cce-500e8c88af48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43c048b3-984e-42f8-9614-0aaa22652514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f402bad-6e48-40dc-98b0-422f0d10c1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a374966-69ad-4299-a064-4ad49c393f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81d98e6-e374-4b39-9d32-0485b846cca8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ee10e7-c3f7-4a3e-b563-d56963827368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76981573-fd31-4210-87c7-2d1b40408737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa413b9-fcb0-4f44-ba8f-28fc11436ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b345b0c2-b4c5-49d4-8cf0-78edf082b2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209d66f0-df1a-4781-bbfd-7b634000d673",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0d1c70-888e-4aa0-9822-c9d5f8e2c6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c50d43-574e-45ac-86bc-2f5ceba4ff72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc826d1-c182-4c29-956a-8693025a18b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63202d37-7d12-46f5-af7f-0f47dbdc67cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d6dd07-8e44-4ceb-a709-a2ed38788345",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7768b86d-0b12-4583-9d94-0d6dac07853a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adcf6c2f-0e61-4806-8629-efda1b155457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3787054-8303-48ca-9147-ffbcce1de60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b45cec57-88ad-45f6-a3ce-a4157793aaec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f48ccd7-f8ec-491b-94d9-2b6c7608b4ce",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b837063-ef55-4411-8d0d-166b4c0a5679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15b658f7-9c0f-4ebe-8b98-949704be5c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c6369c-283d-417b-9e15-75684b4f2bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8caea1a3-88f2-4f6b-a687-450a45b29163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952e79c7-ffb7-4cde-a718-0b8b84db065b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f36fd5-0820-494f-8f4f-ddc3cd0ead21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6e7fd7-ee4f-4748-917f-02c518df3899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49e0ffb-5dcf-4fea-afbf-2b61b99b95d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac7c4eb5-3936-4755-871c-a6d47b516d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434ed2b7-3437-4958-91ab-f9fc9cf7e7ed",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e61529e-bb58-4f05-90c4-9e29de3426f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c228b7c-3b71-4a2f-8a1c-3e00cd276b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5173ef-e6b2-4a04-bef7-4c070ce5838b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a011910-fe54-46c9-8a58-8e2353730b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88c5bcc-faaa-4421-a887-55ee72415873",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16dbfaa5-acbb-4789-bb8a-5139bc6fa0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "633c615c-54e6-434f-8706-7d24c5a32e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05f4249-f326-452d-a53c-cae1106fda7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aae81fda-34ed-4327-9154-e27e17f28451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65dc0f05-acf2-4cd6-aecf-94b734288847",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a475a2f8-a3d8-46c9-b76a-2f511df38143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0476966-1744-4849-a46f-c00060089aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4c3aed-37be-42f7-b80b-95ee0f04aafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bcede76-4859-4d56-8439-09a4b070d10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e016cb-a4f0-43cf-a3d9-f8e5c1187612",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f8b40a-409a-4649-84e5-a520b3032aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d2a32c-415c-46f6-ace3-7acc0b9c8ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5258f5-d6b4-48cb-9da7-ce62a12f6480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9960dd08-f145-4826-a877-808f9546a91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffeeeedf-87c3-43a6-a6ae-984505df7e80",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda9699d-0c42-4493-86d4-dfa7d22e5696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d8c9135-9220-4be7-8129-7dbefb898c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8511f16e-966f-4697-bfac-c86f5553cb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "095c5c4d-f571-4f1d-955a-23f938c9a2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad4635c-71e6-408e-aed7-87bec3101b6c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec445da-0ba9-460b-8fb9-98f8a496a3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271ed04a-ea19-418a-930a-03cb46e21656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3346b55-c0f4-4d0d-99b9-3ed36a9e886a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e2bac33-8325-4781-ab24-0be0cf90b813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea79149-0a66-468d-bb04-8ed399ebd9b5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99421865-5bc5-42eb-8d94-f876aa7978db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d440c94-c279-425d-8f5e-75912cc70e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4cd4547-3c47-49bb-ba75-863abc80d609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f78ecbe-cc41-4551-825c-d025bdf2c2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be1e08d-24c2-47c5-94bc-d7440a83354a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57458edd-1e29-4e87-b814-4d61ec5299dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "299cdcc8-fb67-4953-91a2-8adc2569d542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e740beb2-d133-4c7f-bce0-68fb15c2a32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fbb337d-bf33-4083-8c26-9849f216c270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b93730-4c9c-45e5-9232-cf4fe1a22dd3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8767ee3-a0a0-49ce-8f29-eff11f82d75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c554dffb-c603-4c70-9915-100e980c933c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca7fbed-285c-46e6-ba46-482eca95e0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73ad61a3-85bb-4c25-90a9-345680d5785a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd3d639-4ee5-4700-b60d-c569c9499304",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6fc3e6-1547-4bfe-9b39-f2d9402c63c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1302ef93-6721-4f69-b016-28437110b5d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234cd704-4914-467e-9499-87bedeaa5520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4429928-51a4-420c-9c24-316dfe002567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9d25a6-2518-453e-95e3-747580cd8339",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18471b32-559c-41bd-b5f4-50dda6e3e63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a87585-7078-49ca-b249-7755d17eb827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677e7560-2660-4084-8312-060792b8f19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7dcb0a-ff44-4269-840b-ccaa3a3e7058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897534d1-6ec5-41c4-8cac-bdf4fbec4850",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "355c77f3-953c-4305-96d1-519daad250ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb567a0-403d-4fc6-93bf-0ac100283542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab52281e-ebeb-44f7-b72a-0dbf7fba5784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63d265de-45d9-402a-a44f-a55ab4a7716f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c4c911-5c90-43a3-a6c8-52424156c7bc",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0fbb435-3290-44f8-8a60-af07939e9477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a62a8c-4eb2-43c5-8cc9-803a098894d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b548c2-de57-41ba-8179-3d2ee935fc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "007f52aa-f058-42f4-9f53-21988e70940d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92d8182-47c4-47ea-9b8d-c2a1a5151848",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a403822-a3da-48a5-b318-9aadf2359007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daec2bc3-292b-4f37-a842-ffb2681e35e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20b3d0f-03d6-4d36-ae4f-fb7ee310c2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "abcf4e8e-3996-4bf2-b252-ad1aea500994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d159c0b-d962-4269-ac43-a6a9a25ddd44",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b458720a-1999-4da5-8b5f-186b1f5c1f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1d4015-19f0-4aa3-92ed-65c692f08284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c73551-1e4a-4116-8a27-b9fb50e9aa6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9595c4c-423f-488f-92db-40aaad54782d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8de69b-d371-432a-9364-06bb632ddace",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b96e05b-cfd3-4419-a838-21c41d8abd11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adbf86b1-4f32-44c6-9647-672d7a1a76c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2494b4ec-2aae-402d-b047-308e17c1fff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd8113bd-2f24-4f14-bbd8-15d6e72f5a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9aafc6c-185a-4605-81c4-eb2851927e54",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833b8573-3735-4b80-a503-428f4d3e21de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02838c5-3c45-4a92-854d-a7696b3fec29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c27f20-68fc-4837-948f-cd664f4b06bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c55d1a1b-b386-44e8-bc12-7f36ca2d2139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce4b7b5-7161-4c69-8f99-0166b6e2171b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e9011c-64c0-4184-b688-a3993ae1f822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f5ebe9-d469-436d-803e-d7384d866686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6316c0fb-0d00-495d-991f-971acd0f32c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "227864ab-75ce-4bb6-9156-74208d44a461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15a0855-677f-4849-8519-2ffa346d5b29",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482893ea-ef29-4695-bf9c-69d010abe7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b120b881-6ea9-4616-8014-5dfbca3123ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65d3bad-b923-4e24-9304-e0c6fcb2ad63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ff750a7-fe10-4ea0-ad29-89df1a0b41fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "377532ca-7f6d-4941-88a1-48b02f0bb6f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4dcd525-cfe1-4acf-9d00-c939db973d24",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f733f9-cd1c-4bb5-a0b8-4b809f500024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f95ca064-4808-4f34-b8c0-804e265403cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a47246-86bc-4100-bb4c-53e1adc2536d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cab833f3-66ac-405d-b76a-38d13d4a52ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6aa1094-8089-49e9-a19e-206818f92448",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afb871ea-3c77-47c3-b765-1d642d4fc19a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e735b6fc-d247-4788-8b92-2db72018bd20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c002b8b-5ca8-4ec2-a749-bbec96683859"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4b743e74-fd99-4113-a9fc-064edc751c61",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3de9c417-6cdd-41e8-8b1e-452d29de9ab8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6e074b81-c343-4b00-b7b5-562a2a476f5c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b93d3d03-fadb-48bb-b5af-d312612cff81"
                }
              }
            ]
          },
          {
            "id": "82ff7656-cb5f-4027-81f8-af68d7499c80",
            "name": "Positive Testing",
            "item": [
              {
                "id": "702e8baa-d5ec-4487-b89e-a30d7ae937d0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f5a9416-3c8b-4843-af96-8d77b73f1259",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d028a1c-5e12-4a61-b8c2-7e96ed429bb6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89de5ff2-9fe5-4b0e-ab10-59c3de056044",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "03b25a3f-122b-455e-957f-7cecf18e707d"
                    }
                  }
                ]
              },
              {
                "id": "837d5bdf-fc32-4aae-8733-527d7dba9198",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e81c68fd-80a6-450b-93ce-2ac9b7f8ff61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a786c962-68c8-40f8-9099-3b766977fe3f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85f81627-81a6-4d16-9aba-9015057f24d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "be845344-c875-4f4f-9569-dff75a1f507b"
                    }
                  }
                ]
              },
              {
                "id": "2ce050c4-2944-4201-8e10-4705dd480e26",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1528804-5a4b-45df-a7e6-96e602588c5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e035bdb1-5afa-4317-8776-02755692f1d2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3e81782-90a6-4696-ba43-0dbaafebe9fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5186dc03-2ce6-41d8-b060-7be6b2286754"
                    }
                  }
                ]
              },
              {
                "id": "0b07c8d4-536f-407f-a06e-74240e18d154",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02a4441a-c33f-4391-aba4-1100704e27e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b071bcdd-fc95-44d5-afaf-6d946edce4e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1509fb05-06e6-478d-a720-0238671cac94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "94a18cce-f289-4324-96fd-078e6b571b05"
                    }
                  }
                ]
              },
              {
                "id": "920ddcb9-17c6-4b4c-ae5f-5a237beb0a48",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2214b93-5679-4672-a99f-625861fb8497",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e4365a9-6684-4e1b-81dd-5c4e3e603640"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b5ab12c-9a33-4343-a25a-0f53dd8933a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0ecc795e-4da9-4f2c-9c24-bfb8088a1d6b"
                    }
                  }
                ]
              },
              {
                "id": "6c796039-5583-4afa-808d-c4dcba49c2a6",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eac0c169-e1ba-425d-95d0-c9d9a1c224c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb312a16-1669-409b-8231-814f96519310"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "041b6fd5-5b32-43f3-86b6-3c7f36f2f136",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a9508f94-68c9-4203-bfd0-86355e37bf14"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5c4116e1-4a11-4675-ab30-c5935dc35758",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7e228f78-a08a-4eea-90ab-6d0b6bc87f96"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eec234c2-f5a2-4c38-9baa-2205b6812bf0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f129aa8b-8933-40f0-b358-6f2a0908ae10"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bee58edc-35f2-4d4f-97d8-29858d9ffd03",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f0f1fc4d-373d-447e-9e1a-30a25fc1fa72"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1babd02-47a0-4eb3-9624-6fabe509b8c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0228714a-1084-40e6-be70-6cacd1ee9356"
            }
          }
        ]
      },
      {
        "id": "04930922-239b-4597-92b0-eb9fe6dcec46",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9b73c1a8-0269-49e9-a1b2-b8860e5ea057",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08528d5f-5951-4f86-8f3c-d24f7bfa0920",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "89781891-0ee2-4e40-9720-6a2c0e5fe36b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f0ea46-eb0f-4734-8fbb-ee31f9a30220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "522238ba-a1e1-46a4-b559-3bc8c36b955e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9436de4c-bc2c-470c-8d0a-05dab852c90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "39a1a58b-6ea2-457b-b257-ee2c9e291802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb78abf0-2e00-4020-a814-a1a2693f48da",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2b17bf-3f2b-4b40-82e8-9f3dbf14d8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c51dde-5f60-42da-97bb-66531cbae93c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e724bd79-ab02-479c-b651-ec983ffe1350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "54df8f8c-95b8-4b54-82c9-e0fec1e193df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e290f77-5c04-4fb2-b3ac-af666c87468b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e985b1-2dd4-4ad3-81cc-0c629b440332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d76cd3-b95e-40c0-bea9-6a39b803b3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c4bafc-b132-4017-b598-6d860a4ef41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c30965e4-8ce0-4762-a96f-1a7322006dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75492b11-edcb-4023-a1dc-dbb66b78ad00",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddbfe0d-d137-434b-b2b4-6e36bc07d35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e80c1c-b4b7-4a28-8b97-a0efd4839108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda07871-05cf-407d-8a7b-7c13db9f186d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "778dbc7e-93dc-4122-9f76-7be7522e606f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630a9f83-af7d-4da3-a9c9-93c43e59d06f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5800b7c-4681-413d-81a1-ff785eeba019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca79c61-0d73-4dda-9c89-386904b2664a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37273f71-01d0-41ee-b9b0-84bad613f0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10f6b2d5-fa17-4133-ab0e-e606246cf315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735e548b-6332-41c7-bb0e-4187359bdc19",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1de45f9-c5e3-4102-840b-68e84e7642b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9868d5ce-52e1-4224-9d83-911cc2ed32bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09a2825-f12e-41e1-b029-e66fafc52d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "127ac9fb-90f0-4b6d-b473-ed68880602e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e279a14a-2e29-45c0-bbce-0be183cf8005",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1553af-4e3e-4aa7-85d5-3aeef3c4837c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b346166-9590-422c-b8b7-7291d0f672ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9490a8b-2b6f-4110-81f3-2664f23f6310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3036e3eb-8527-4487-8bc3-634b8307060b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3738bebd-af99-41cd-a546-efafe8f3bcee",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3208d976-ca72-46f2-9581-23f2bc64259d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988235b7-0254-4fe9-9bda-d03c999f91f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37a58b9-0fcf-4cd5-a8a9-12042e125e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a75e043-bf6f-4425-81f6-60d56d0ee58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fadb8d5-7df4-47d8-8722-0c7a99710561",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92973f75-245f-4f8c-a1fb-712dc1698713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9bc7525-fe92-4054-b82b-88a0c3e0af19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be32b29-f08e-4988-8afb-36a911ee4f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83c6e197-1230-496a-948d-056afa6c6f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b15fc8-1a95-4396-83f3-53b0017c78e7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac8fba9-29a4-4355-9108-b6da5ef0868d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a50bb5c-e9ca-4709-b3a1-5d0f1b9d1180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a0df5a-d3d8-4b7d-88c4-add67ac1abf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e172a3b7-c80a-4fe9-b95a-d95e674b7c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23be91ae-c6c0-459d-9923-f0aee8020532",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9c707f-5f00-4fb8-84bb-281258e8a0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4322cae3-02fb-4243-969f-14218d48f9e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0decb739-dae3-4165-8954-22dbe19a813a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e44eb172-4efd-447d-96e3-5e2acd36195d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3112505-9ad8-4a83-98e0-89eac0df6e1d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5001fdda-68b5-445b-903a-f0c7e500b017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc4a23f-999a-4741-9d2f-aea982ffdba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c8b1f7-a066-44fb-b1bb-abc598d7dc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e06d75-26e3-46d0-a70f-0342bc23b8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0411465e-f425-4963-ae03-2bdeff8395df",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521fbdb8-de59-48c7-9bb7-3661a1fcfb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36dda8cd-f36a-4985-ac91-437a84a9e109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6293b0c-27c2-42dd-8def-cbc6733b3d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4920d255-1fca-47c3-98e7-7a273d6f8c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b206188b-f2f4-421a-9a62-3096a0ce0b52",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e60849f-b84f-4101-b05b-93893de91eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38bbe437-c980-4db9-a4b0-af15d5a5f335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf9f68c-da43-473a-a4e5-dd02ca724a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c35758-3fcd-4af8-8d5d-da6aa33f8f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f10d7d-7270-4e21-bfd2-876dfeeb3ef6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69afe1e9-ac7f-4120-90c5-6f47f0ae42e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f40d89c-4f38-44c0-b9ca-8346774291c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aefc223-124a-4f60-8e29-d9ce8ca808d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "68f9be62-92ef-473c-ab0d-29b9d53700ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e124d388-8214-4e84-b8aa-e0661518ba17",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb3be37-2fa7-4292-a86d-d931b21b5d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46dd6134-eadb-4b27-aaa1-babd61ef52da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa60983-aecd-49f6-bae4-5506cc76bf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa60b328-24d0-4ed8-905c-de8e85d0c38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb590012-040f-4a4c-9954-4512d681d757",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0713ad4b-8d61-4582-b54b-5b3c7f99d31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d8d62e-f0e4-476c-9201-c828b584005f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2983ebab-e512-45c3-86f1-054f3ffe6f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "28cf225c-2d1e-4e1b-80e9-c3299d9dbe57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb27125e-facd-4e23-af87-4121f821b9f3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "decf0b89-0133-4980-8052-7edb90b779d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f99bab-d070-40f9-ac8a-e24757c236b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2e8369-36d9-4fa1-b914-3a91f6a334c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aadda9c6-aed5-4d0b-bf0b-8d4d1a04eef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03463ea4-e090-4726-9813-17e16eae03b9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66129a1-d533-4799-a7fb-d81ecdcbaf1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bfffef3-c21f-4b88-80f2-df0205f64ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f5ebf5-615f-42b9-b6a2-de18ce846300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f64b9ba2-f69b-4f8d-864d-06b7bfa1c986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e577b92e-3d30-4c77-829d-d3dcb8f8f537",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9012800e-b055-4c5c-858a-7ad4c0555c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c635a36e-951c-4097-91d3-12b33ab0e3c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa3fe5b-e000-4a7c-b2aa-e836bbfe9639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf794566-5520-4118-8bc7-685b197fa228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0082edde-6aa2-4d96-b1e7-467a70dca3d8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0905a3-349f-41f4-b81c-cb1497ab526f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a605675a-e854-4e38-8e07-a6c2d8651949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea36fa3-27e5-420f-93ed-34d561e9a21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecf7f680-ae2c-48ba-b99f-1c926d6ea325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9faaff-e6f4-4cbf-b947-fb34c3f32828",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6978995-7b5e-4f6f-89aa-c7a3a6041b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167286ff-f09f-410b-8890-cdd48ce20353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd0a234-2fed-4ac9-9975-65222c32c2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "987ae614-645d-4134-966c-40a9b8c3ccd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d0d00f-a2e5-4896-a2b3-076e4352dad2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8ceeea-c275-46de-a311-f8b19d403fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8391b5c-927e-4a90-b850-1fe216783588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb7e83e-25b3-4c0b-8e41-e7525cf7d7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2981c54-dae2-49fb-921f-4e56c7c02fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8855f8-f07d-444b-b3ef-4c5e2e1070c5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286d703f-4778-49b6-a84b-dfc7eeb41661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d4e325-f6f4-4cc4-b2fd-5bd955f34841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579afc8e-e93f-4b99-8fc9-80a1efd12046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "678da65d-733e-4056-9762-73a625d79fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2853ef-2a8c-43e2-8f77-3ea8fd8234f4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5791694b-6c41-406a-a45b-0b32a32a97b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0923e9b6-1758-4198-99c3-8d80c86d2c51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cafefb-ed34-4eac-afb5-3b797c4c825b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da904c2b-5f42-42bd-af98-ea4852cf2040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c26760-98cc-4fc5-973c-e8c7873df9f0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b54af1-aedd-4d4b-989b-8cfa47cd3a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2fab7b0-afa6-4f92-8cbc-84b9141245a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec30404-f2d9-4549-acc2-120a2518630a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b2ed8e8-db7e-4def-8deb-51b42faf7eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e820e19c-b107-40a6-806c-76a53f8d0bda",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7af4a66-2338-4146-90d3-b53f6596754a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38ffe35-d1d0-4a62-812e-5201cddd7b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d243fb-1eea-46f2-aa93-154a20f7b2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bca29284-3260-409c-9ac0-b295e41b39ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f2390b-2bf6-49b8-9b8f-d409800e1191",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027d0251-e50b-4168-aae2-0836d2019625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f46f2d8b-374c-4603-8620-3f5f4cad7ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f00e74-50e5-4ff6-a12f-99b1023af653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35679c20-fe6e-4f22-a88d-0bad30530fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1466c12c-d1a0-418a-a507-3e713e136645",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9a7a60-3480-4c5d-aa5c-130d86de6b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b66e884-b202-4370-a082-599f932936cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1dd71e-61dc-4bf3-a697-4c1493f5894e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba4a3235-5114-459b-bb09-fb6bc4610c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de5f22d-0f44-4a4c-8910-530fbd7d4ae4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0033fd-f905-4661-8632-ba8bafb3a8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a45bfb-2b72-416c-9fb3-69968fcb04dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1ec299-8735-4690-b24b-3cb709f9952c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "399c5744-e463-4d75-a905-cdc69b59dbff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c542b3d-bcd7-4386-86e5-8c3f3c221ffe",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce72ac46-6798-4580-b630-52ce257ebe04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00710484-6103-4b2b-b316-a4591c24dec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b027c4fe-2193-4728-a9e6-6da25a1ee0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1becfd92-79aa-4f1c-b59d-0953e182eace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dabab035-ce60-497d-99e1-4e4d739e99c3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75452e7f-441d-4c75-8ea6-20668c0e5e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "135f5376-83e3-4c50-9f2a-dc06a0c38756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01b8396-f96e-4137-b367-43b5026f20c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e15cc0f-1dc8-41ef-9823-a9dc75bd8cb1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "acb01ae7-30ff-407f-855f-9e92538d126a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "565b9d5c-bf72-4065-93ef-a5efd367ddf5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6622e01e-5ab9-4be9-8465-6765580df79e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8598f603-c5ea-4467-aabc-7140eb418c2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c28a7a2-f611-4ac7-afc9-f2911b1b9e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d01bb063-2132-444c-94fd-3415fca8fb71"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70f675b8-4418-4da9-a465-0a2eca55b11d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61e4de2e-65da-4b03-ae57-d674ddec4c19"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b11b84d-6474-46f7-afb8-cfdebd5bea25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9cdebf6-1052-4c1f-be60-15a95123a5cc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3940af6f-e7d0-497e-b665-1f22ffb8f650",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3581a02e-80b7-4775-bd63-a0490e95b9fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "600e2ea1-e27a-4300-b951-7cf52b0ce6ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1d1377c3-f8db-43ee-9cd7-eee33b6013c0"
            }
          }
        ]
      },
      {
        "id": "9d061a9c-6241-4eef-94ab-9212db98a843",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "60ff95c7-9d7a-4bfe-960c-eac40931a6ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f6889090-86a7-47f4-a7e8-afaa8f386e03",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e7a1b635-ff63-4493-b1b6-97931f811e11",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1a513c-3e5d-41e7-b6e1-c075b0762c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5665d96-2d56-47e1-8f34-29cc21c4f247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca19eb05-4723-4107-b56a-1a5d883429b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "92a4f4d5-b796-47e7-98b0-804bb14af8a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e334df-9764-43b8-bb00-ce94c1bfa44e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e0f6c6-71a6-4a46-83e9-535ad053c1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ffb91b1-95ab-4357-af97-182633646c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744297c4-c93b-4f75-9741-1a1d57f12f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "71e0d137-9b65-4346-9800-86093de3bc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e733ca-05d2-466e-84bb-f65875ff4cc4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70e8e12-8bd2-4a53-ad69-1c7a5f60a25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46ed7f97-5c6c-4bb2-a421-145889bbfa60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d1b9d1-62be-486c-abc9-717c4b6ec752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "189ee6f6-0511-4b79-bea1-7a2bd79f355e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d50c1c0-5a78-4078-84e9-8f54fbeffa6a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c970531-13e3-4161-948e-a270b76e9287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a6294d-cbb6-42dd-967d-2e98ed3a4282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48163c07-e0e1-49e9-8838-97463fa88357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d99c3c7-bcff-42fa-9c4e-a781c1e430eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f728377-67a4-4e5e-86f4-2446ba4f3e5f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3db19e-8711-49b5-b4a9-d8a8ff56dbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4abe1f8-149f-4c50-a57d-604891b756ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f7ca56-0dff-4a81-8fba-475b8da971bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a0061e7-9c9c-4d5f-9e88-0b1db0d2b4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8e3dee-c510-44c4-b263-157e56a3fd6b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7390bbbc-8f98-4fca-a63f-5cbc8d6a1b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced2caee-a1a9-4a09-8b20-d7ea1a5f17c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c9fb5b-0f7d-42f2-ab17-bf9ba3253b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "164c3d3c-7ec8-4a6b-b557-4a52a687143a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e183c0-9d55-4a62-b339-5c685cb51933",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1a79c1-bbe6-4cd2-b959-65ec00f1d513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "672ec083-b55d-449b-b271-a3bb3a09fb95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e5a9f8-c7c9-42c7-8698-635294971966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d87ac9fc-fdda-4600-9727-5b95ba567f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18dfac1c-7c0b-43ac-abff-c15a3315ba06",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b6686e-571a-441c-98ec-356486b35ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d9fef0-04d5-40ee-b527-0c758504e986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea4c065-ef1f-4116-a11b-cb6e48c26c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc348c3-ac34-48eb-a680-fc50b0ab4c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bc843a-f461-4518-b144-82e347a0de3a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db9966d-2d5c-4938-996c-983c68a687c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52c1db9a-ab40-40a7-b05e-4824b2f53d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52db6b87-8954-4e07-bba6-d5b1ec7ea630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83b18c1d-eec2-4881-9cfb-685a21cb13af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e3cd43-20f2-42e5-ba0b-8d19359598ec",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549b220a-0736-4ed0-8397-3236cb62cc26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ec94d6-263a-45b7-9ebe-c3098776be4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed0f632-5cf8-4587-b8e5-6f75cd0583c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e0af34-f5b3-476d-b70c-82e50fa75413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f462537-59dc-44c1-bf67-4f41f04347ac",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace189c5-79c0-4cf7-bff8-39d4073fea1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a175502-d3fb-4525-8a16-fb46599fd1cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be11eb03-3278-4eb5-a39b-280420ebed80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cf3f9427-d07d-4141-bc81-98023add96dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509bf0f6-3fcc-4bdd-a6f9-373e3df6b186",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7347d10-e236-45e3-a746-619f2c91706b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee47c10-9791-4334-8fff-907887ecf136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ecbc7e6-9c3c-421f-9854-0167c7f0343c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d066c60e-3ce9-44f1-ae8d-36a631c8a083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07cf5f21-f9a2-44e1-a465-294dd8101350",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee61ec92-ddec-4887-978d-010576ff9bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890cc8b2-febd-419f-80c6-52bc6c19b8fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec8b23b-2957-416b-9a79-0cbcd75a16b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1a1fc3-0608-4a29-93f6-afa879993908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337e2bb2-3dfd-4767-b963-87a16508ebf0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5ffae8-1e12-4612-aff0-44eaad9f9ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b2c2e5-0cc6-48aa-84ee-0eca485a9716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779e7a0a-e2fd-46f5-8033-56fc2a96e7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c4663cd-70f1-4d02-8c45-5789696086dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c3f60e-e1ce-4d07-9389-89dcab06ad4d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1a06e8-1be4-4ee5-be6b-4c1e8d646516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e972833-c4c1-49ef-89df-71d42e95b0e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217b94ba-f49b-4b49-92d5-21fb45ee5411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "22a88553-1ee7-444c-b778-75998db722dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8117ab4-b2ef-40d3-9db1-b80bd5cc8ec8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74aebfc1-3c47-4646-8883-a51a0f286667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ace8da-82a4-4c90-92dc-528d5021b535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122023a9-f57b-42bd-b6e7-e50e09cd6f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "23ba310f-d517-44c0-a602-70895681c3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f5fe1a-8f2e-4b8c-8165-bf13a8dde43d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2fe6cbe-fcad-4519-94b9-37aecad05f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92074c3b-17b6-43b1-8a41-2e88ccdf1921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3e7a1a-7aa4-4781-9dff-aed2f00afdf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a024708-93dc-42b8-b224-e42d1dca46ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63505a9-47b1-4dfe-b20c-31940a07a8d9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc11063-fb84-4fe5-8329-d395f0d857ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb0d9a1-cf11-461d-aaab-82e6f3554539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6541893-f976-4b3a-ad1b-f17766a4ad8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3763b421-afc1-4115-bc44-5bf3719b8bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf79ac2d-f16b-42b9-b144-7dc2afcd12b9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6063bd45-0263-45e9-af27-926fece1b272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1cac5cc-85d3-45db-a20a-ee2c9aac7a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0ce48e-aadc-461c-9e51-7d1961036848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82b45bd3-d0f4-4774-89f2-e7e806ed12d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94afcbc0-6dfd-4e0c-9151-ee86c4ea3a0e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51c8305-17a7-4822-bf6e-e870d76a8e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dbaa411-148f-4517-9565-7663fa9d0dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a4a8a8-aefd-45fa-814a-0082bff66669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bafe4ce7-065b-49be-8571-8fd6a54a6588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8011eddc-f115-4785-9baf-3f2ef68bbba5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1026a677-6311-43ce-8f71-9841a1ea0a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f42790-9918-4913-b9c1-7d1530193a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad213cb5-b354-4f0c-9222-da4999e37484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89c242f2-ec26-4127-85a5-541bd804e52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b47634-b3cb-4028-97a3-b7c5508791d6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9e5d0a-8c00-44e9-b757-9b82fe0edb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10489706-b39d-44d7-98c7-d428ad2f55f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac955d37-b425-4bec-bdf1-b22e4af17082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "166baf3c-a7ff-4fbf-9dac-501f4ead5bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1ce846-d612-4c56-84f2-d1d64f65dd13",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ba8e97-7f1e-4a48-a460-e2b3c4d7403a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20eff2b2-1b83-48be-b6fa-e34cf5599e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d77d357d-d74a-4fc8-be1f-9e598eeadbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "004dab66-abb5-446c-be8a-ab3086ab4ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4d16e8-f1cc-4fc6-9778-0265f5a7810c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ee3204-cbf3-4e8b-9727-d4d6db00e954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce1f305d-4a5a-49c2-85fb-3a4e6d2d65ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e824c2-a2b1-4466-a514-f15eb78d1367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23264d35-4a00-452b-85e2-fcc423781490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7361afd0-de94-40f5-8646-5995bb22577e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf49e31-5797-4637-8529-d8893cdf9733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0788200-567c-4a29-91a0-0e3c28408643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bef9f58-22c0-4ae1-85c7-9e6dd972a69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eeac967a-c7bd-426d-9748-6c7c18d125d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fabd72b7-0cf3-4784-b994-c3bcd6d0c22d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "374c4dcd-abcf-4847-bd47-6c0be2aaf691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db6e7e3-d9a8-42ed-a004-1df5eae84f7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46afbc38-ff8b-42ed-b172-eefb9be3ad9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73d6d106-194b-4c2b-8b93-1a5773d77b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2849027e-5e1b-4ace-aab5-0506511997e4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfe7b25-a8d8-4080-825b-8858ab04e905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9805f2ab-d198-4cef-8c93-a26250066194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861e8d9b-93e8-4967-9ceb-0f6b3142db0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d65180a9-88b5-4446-a968-c74927602e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19eab0ac-98cc-4b88-ba2a-01ff50f6e935",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f684127-f31e-4359-be2e-b74e66b1899d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c949f778-7257-4553-a6ec-40b86d399c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da49294-aa3a-48b8-8209-8c90b23825af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5541e429-21fe-4b49-926b-fdc4442681ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126011c0-b933-43da-85db-e8eae43823dd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377b7ce7-adba-4e6d-9539-d92488bd9d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a89496-7912-493f-96cb-3b65b4ed07f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a047781e-1d3a-4bd9-8bdd-ed7fa8e13ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc44b62b-976c-4a4f-876f-38c0b2d659ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44aa570-7604-423f-bad3-eb22bbab4826",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d52fef-0f41-41fd-ab9f-89ec3bad8d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a546e3-4362-4fef-865d-444418bb6437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64c3086-d541-48dc-86c3-9f1584e143f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "821de8a4-d5c7-46a4-b76a-9de7a5721092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e76cf5f-8706-4d17-894d-20f25fa745f8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b1599c-296f-448c-8037-5367992dc938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a9f0f02-86d5-4599-a235-2121fda6a79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc203e73-ac05-4497-9a59-1c1c931a42a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db9ac61e-9537-4f16-bdf9-45a9d91ac8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48270c47-9122-4c05-884b-c794cdfbe08a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f293da2-8fb6-4cba-93bd-489f1cde6013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c63e6f-e2d5-4a80-ba35-73844ca0a775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74bcb1e-bbeb-4262-9fe7-0bb365c355c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6130cc7-9271-4ba1-8756-a1e5fd020a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032cb698-7e8b-42a8-9d95-32a101002853",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a371b0be-e2b2-4531-ade3-dc0f25cb5ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7172bb4-79da-44e8-8d46-c1b298462254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c31cff1-c053-44d2-9eb8-d3ea0365f704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f6b69cf-da2a-412e-a9a7-1e659a85dfd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7117236d-05cd-4f27-8fe2-3319c686a6ad",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a32373-9fe8-4bed-93c5-4f745bc59f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6859cee9-2719-488e-bf4b-9aaff1e6b456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c4cdf6-4bcc-431a-a1e6-da9c4ddc644c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d2b329-3297-40ef-8ef8-50bc3b9fccfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0882f44-cee9-4402-96e3-ae88e189f25d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da53e620-01e6-4dba-807a-c859344c860a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8066f834-4b8c-49f7-9f0b-e663b303e9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321e4379-e810-4d69-8023-37655d428112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81bbebc0-2222-4b8c-ac1b-2281cd4cdde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e58d043-8a85-41a4-983f-125bb9677761",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d1b889-fa79-41dc-845f-8dbbeea34a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc3a81d9-8cb1-46fa-8a05-73e1fd583beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cde674-05a3-473c-a258-c7e4069081ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4469c52b-e1cc-4181-b629-c7e1f7c9ac9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2d637c-191a-4aa0-878f-481d11d7c9f1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8613862-3dc2-434e-93d9-183a715f78b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a850044-8587-46f2-9b32-884b5bdf3ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7ed906-3aca-4121-b08c-fd76ebdbef73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25533cff-0dcf-4cd7-abb0-3588e380a197"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0e583db1-d400-487c-900c-709055211981",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e0b0c06-54f6-4b78-95fb-b75506f874f9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e025b1-c9db-47cd-9b55-856e9501a85b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4c9deb2b-151d-4793-9fe4-1aebfbfc71d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a9eaf3-81ec-4a87-9e5f-2c33cb590f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30fdc429-9613-4b80-97a5-2addcafdaa45"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af085ec2-50b9-434b-9527-103a8ce3359e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e254f30-ad91-4516-a7ce-f8c64ce9bb07"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aaf5f198-eef6-4e1f-9906-db53e53c2801",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e235969-5444-4a6d-b55a-2c294eef7363"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b9dddfc-31a8-4a20-a7c5-87acdf17fc02",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bc85722b-c9b2-473e-b0f3-bcabce3dd5a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca7d41b0-d2d8-477f-a3e1-4ef030bac38d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf9190fa-b746-442c-8a6f-3dbba3167e25"
            }
          }
        ]
      },
      {
        "id": "e8086f29-7c7f-407e-9441-4cfdce3dbc31",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c5996b6a-bc52-485b-b42a-f2f1800a0c1a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d3aafe3-2ad7-4a0e-b86e-34fd5d315f81",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3ab796d7-c042-4c2a-a55d-e2d630c7b576",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6186f780-533a-4eab-9327-b51a82ea0b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb16860c-e4f5-4e51-83e3-c68ed0ba114a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df3eabb-da8b-4313-8db2-41629af3515a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d339d9-dff9-4774-835a-283b3b5c3616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14fea0be-3dea-4e28-b413-f5ec47227841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59b788f-b134-4b6c-b728-7f8f343513d9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "475b6ad1-f075-47d8-a756-6856701116b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6566fe30-9c0d-4b05-af9d-6f935add314f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59839f12-4a71-4365-9110-26ec7cfe60ea",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa57559-21cd-4376-b71e-b9e9217b08e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86cded8-1037-496e-ab90-b4f402883042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1bdd61-9311-43d3-93a9-82b478322ec8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f767ab7-c55a-47e7-b776-de285c902e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a50e77-2819-409b-abfd-c48458c69ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8559dc5e-dac9-41ba-a8de-acee2de6c659",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc535ec2-fd42-4e7b-9970-1f1da0b14b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e7c9b06-cc76-42a8-a2e8-79295b2a04c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732f6842-4b84-45e7-8657-016ffebfab86",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a09ac8-6c41-4005-98ea-0f2643b88cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87a7fef8-7842-4a5d-a0d2-f457aa0b5f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acbd5b9-68ed-4fb3-b47d-c135ceb2f1b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05059bda-131a-485b-b3da-00660dfba635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75809daf-52af-4eee-be18-c0a60271d3fd",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6a435d-5573-4ef5-a8e1-377cf70dd759",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d2fa44b-a8c9-4572-b1f4-0d28066831b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cfaa25-0647-447f-a53d-d63e705511de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0973dbcf-ecdf-4682-8773-def965f7403a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093cc84a-97da-4da4-abed-7a0a4b9833f9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98faf07-5790-4235-9d5e-025fea39288d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "756b66a0-2d1d-4c06-b856-7b51a4552903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f168de-1128-4c80-ac57-23a79333e8bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f599af-737d-4c25-a995-64dbf6e4ff1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b170b20a-6bf4-4b76-9d5e-44b4787722db",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be8d199-2660-4f26-ae47-54703a82b48d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb8a9ed1-3c31-4576-bb3b-93c2c9943697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04425490-acc9-4076-9133-529493d524c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48d53fb-1bf3-4e5e-9135-71761a01daa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71697716-6a83-4535-bac5-bee399bfd797",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdba6462-cd06-452b-ad8e-cfdb131adc35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "794b3dec-b115-40f6-98c4-9f78c1517fd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "101d7ad1-e838-4aab-ab25-a277931a0156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9edb28a-3244-42c0-85fe-e0af7d136098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96516bac-6c3e-47c9-9ac9-2c194b210cef",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d211873-1b99-46b3-a6f9-54ddb53bdb4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb93d10-48da-429a-866e-f09deba6afe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ab6e1c-4c0e-4ddd-b97d-8d054bd0e3c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ab9929-e8cb-49ec-963a-a7bada40c792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53449c4c-b71e-4133-b58e-ec28457f0143",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e44117-a58d-49a8-b72e-bac30a035e6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56af0ae6-e196-464a-bd17-95eba24e63f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6703fe96-e377-4a57-88e9-96ef4dfc55a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f943e64c-d821-42d2-ac29-26b911dafd71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf0fdc3-50ad-4683-a179-3b778d11baac",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7939e0-4be1-4ce8-a534-5ffe4f17f9ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e722f0b-2fc4-49e3-b99a-7ca684e3348e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d369fd-eea3-4b74-a743-019d4a83bc21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f85ef4-dd6e-4ea0-acb0-8162c3d78279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50332d8-ca3c-4eb4-85ba-836a066f612b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ecdcd62-c51e-4dc5-a2f5-27c21361834e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "871057e3-802c-4f48-9d1a-62e6c74bf506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4fa90d-8aab-47e7-ae4c-357ace616970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c3a7f8-629f-4c6c-a4e9-9730cbcee8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29895c8-4032-4e6c-b665-b96165bb5c83",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7cd75a-4598-491e-a764-dd2da8dc2e75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f44bc0f8-3f9e-489c-94c8-d8ac7b1afe8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48255403-a1d6-4103-9241-9f3f5b26c1e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9774104-2a8d-46e3-a30f-957b4082ba77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebf795a-5285-4e6f-8d70-edd5a79fe82c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339ce255-ed40-4a36-b44f-3c29b38746e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e350a4ff-e5df-4568-a7ee-9a6893fb5725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0be4cd-4eb5-4459-a706-74b62589ef63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d496eb3-c614-4cf7-98b9-93a03f72f5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99cc47b-7d92-4516-b43a-94980f888115",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7ff339-6c4f-41da-bad8-506da74b3f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f044c2-44f3-44af-8a1b-6dd121250244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6c7629-9baa-43cf-85bf-609bca7f4744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f8b2b3d-f17c-4ba8-90dc-21fa87a05c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ec3754-bad4-45ea-bbcd-f7bd04ead85d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b4bd4d-8775-42d7-8d45-b940be41a384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a35170e4-7955-4218-a4b3-7038900f8c54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14cd0251-609d-4484-833e-85b822ea17e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d4ccbe8-7a24-4b02-84ca-b984d5e65487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05df4223-9904-4fd9-b64b-b5e2aa329b7f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f298c7-7f8a-44a2-9e3b-9a228e71f540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "143de42b-47f7-49ed-a790-079b583d3697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "747e6c61-fb9e-491c-ac49-e523d85fb4ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7ef4ef-f802-4543-a76b-c55636b06b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd765faa-c78b-4427-85e2-99b17751b091",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174c05ff-6c37-4731-a48a-a934af8f05f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d964c01a-9b39-4be1-bbd2-747559454112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1faafe4-8640-4b4b-852a-832aa5433ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8399d6fd-8798-4f55-a8fd-d26adedd234f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b47f8e0-4180-4ef8-8c4b-bef8c62f263e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fda4b94-537a-4471-93c3-cdd484b7f2fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "236952c6-8c49-4639-9ee8-5e095757d45b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b5124a-cc94-46f4-a2c5-c54afb4d2ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500da9f4-0ba9-4c30-b37c-6047883a97f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ff591e-2ad8-494f-bf36-79e04709a03d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd4e08f-5184-4fc4-bc14-bb21d5c408c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e013d320-b516-4614-a038-a5dff2af0dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8856595d-9d00-40de-8943-d4f7c31f2ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6bd7565-a73c-4500-888b-bbd948ce062d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd493e5-bf3f-41e5-80b3-233a839fafee",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53e0201-1687-4f72-9afb-569540d4fd0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb8c8280-6ac6-4957-8ae8-e8905c605d01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ebcb5e4-2509-4696-b0b3-a5d93c7b0e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c989a1e8-3915-465b-bb07-ad388019363a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d6d713-677d-454e-928b-693bb9997ee2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f57de68-48fe-498d-8f1b-984b629c027e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27514500-4250-44eb-8d93-bf0c81561e86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d655a6e0-f8fe-4e7c-821a-33408eeb0a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fff3142-8361-40d4-9258-9a37d317f186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb07624c-479d-4d79-b79e-dd5fc311637c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d12c5a-0514-4803-aae5-8cd00b895056",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ec3cfa9-730f-4f7e-ac44-5d018caf862d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8832f800-da87-4ce4-ad5e-82e053bdb703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5adb5f1-f26e-4bfd-8225-eba383509b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfa9ae1-d16a-4b12-8679-fbccd9a0fc58",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7a35da-9e2e-4935-b4ad-0b36591b8596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ee15c3e-28ed-455b-b8bc-92aea327a6dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e3981c-0ef0-4d2b-b86f-7852357ac5fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9d7ea2-217d-4bae-a1cb-0ca6f17f0290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3291c1d-ccd0-46d2-9027-e4fea98570a8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78dc33e5-a03a-44d2-ab2a-aba8a57e9936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d8f166-262c-400d-ad87-1ef62e7f0c4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce973311-7b59-4efc-bba0-acabfaf7eabe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b10d47-d213-4492-b073-681f99f2e54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c476aaa6-6cb0-4770-8ef3-1310c02cf38f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7682d260-d55a-4b62-8afe-f26cdb6f9abf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d3db7e1-0d3e-4a36-92a0-41e998d7a9df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa2e066-661f-4e3c-95fa-6652d2280251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5b89a7-2afd-479c-b11f-425df506d92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb04e5c3-2dd0-498c-adb2-631426c120aa",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844536a1-2b4d-4f36-8d85-979c69188916",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c945dfed-f68d-4e68-8ec6-5fd57d586584"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdaa6037-9468-4d94-bcb9-06ce4e6a99cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a51714-c842-4468-a734-e1edeb0ce2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5cf8bef-ffee-4633-86b8-61cb5d95482f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2f8e45-f6c6-4476-87e1-29aaeaeae44b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d640b5fd-a025-47d7-ad51-a95044dbdd9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc2a382-fa53-4199-89ac-2f45f4581c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4493a32e-e0ac-4899-bda8-84fa62fd6f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da10100-8ca2-4451-81ba-873732da4d30",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cde756-5b80-4ac7-a844-0d0cc768c7eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "674b120a-9da3-41db-8abd-437eeffe309c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9578eae1-a196-48e3-adfd-c8c376256caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d384181-ff14-4aae-8595-e075bfb00c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45ddc10-e3f1-4a67-a73e-dd0bf2bcf8fc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bce1d6d-3a9d-4df4-9565-22ffd185fc88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c30f92d6-7dcf-45e8-93b1-4d11cb1964f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "991a7fcf-de2e-462d-85e9-658ae67c5483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5feb2688-bd99-4595-8926-0cf5bfeeb6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574972b8-da13-4ab8-8136-45db32215e26",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734a71bb-6296-45aa-b308-ded6a5fbc1b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77bcd187-beb5-4fc6-93a2-3946daa61726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47358a90-ed64-407a-918b-ba8c7215e6aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ba3ce9-8f07-4880-9658-c519ead08ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89eb3e8e-dbf4-4530-899d-1e88aa68754e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13f08eb-f95b-4ac1-9c37-088f5e2fd3cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f1d708b-85aa-4699-867d-98681989a3c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd38b912-2bc4-4d7f-8631-10736cd5dc01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac12437-16f7-4585-ad6a-76c6586b97dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f40571a-9a5c-4273-b5b8-265467869063",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572adf81-21ad-4326-81eb-2e098b7e864b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e4ba1a-37f5-45a9-ba1d-6902290f72b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4a6137-5c88-4f1d-9841-f508c81d2962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccbcda4b-dcbb-40ee-9363-236fcddc7854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f114a28b-71b5-4aa9-a13e-f711e38c96c4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e132bd-ea29-4104-aa92-212f815b363b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8071678-78a1-4480-a533-2c73ab61496e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "814fd673-e6c6-4491-aaea-744459da92b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d46058-498b-459d-a30c-92cf11e7e587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd66e840-4f89-4c9c-8691-c5c65f154702",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12efe4c-c747-4494-9ffb-5c0d8ef42449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd49196c-e3ff-40e7-b4dd-7d047c948a56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b657ad81-5518-4d24-905f-13888ed6e898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e32af3-d58a-4590-90ce-55bf80674c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c03131-49bc-4cb7-b465-f0570a7350dc",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ab42fd-20d6-4037-8d96-b0d510c00c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e6d75b-992c-4ead-bfd5-8dc44dd57178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8323c5b-c88f-4e2c-a3c4-bc41f0a3c6da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac138bb-4a8d-4685-b464-84af26f68a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe962e8-3fe7-4c1a-9858-da9b114cc44b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7fc708-2366-4495-8125-4b1e344bd2a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f604ac-1b23-42cf-bc72-932950f1422f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7d3eaa-1871-414a-8a59-73b2db985f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f920c003-ee99-4ec2-96d8-14e8040a3692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11553630-0cc8-47b1-af5b-b65041488cf9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69cea08-6e25-45c7-8fae-180b31cf70a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac64d4e-11d7-4b70-a8d9-d27028e8b123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33533ab-6b99-4b29-8ee6-dbb19580a641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4b7193f-db38-41a0-986e-d8511daed58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b560b3f-c8e8-4998-ac9c-7a9a47477fd1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafa5254-cf9a-4b5d-857b-7b3a7312582a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce5734e4-7746-46a9-9aad-4b7b62d03aa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca37070d-3e4e-4052-bb99-969cbcc19fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139ec203-34ec-495a-98b0-7b9e9026da2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6513eea-6847-4e3f-a301-d5855bc5f28b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54844b7-6827-4daf-9113-2b97e1574bcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505c665a-b6e1-4d0b-85bc-6f551434cfd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5cd1d4-9647-43d3-b268-a53c02b51439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee62cfe-9970-484b-a168-bb58726d49ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eefc57d-454e-4b8c-b095-1ebd5a78f964",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3484d1aa-1f8d-4574-b912-80898acd857a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f1d211-0a97-4e34-95b7-a04788aee80d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4bae0b-75e5-4edd-af44-538364f79765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f9a1cbe-24dd-4db6-bd3f-24fc3a8a0394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e4cd51-344d-48c2-a64e-3c2c42137886",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fc9a25-c766-4485-ba6a-7b2a5aa4c83c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d592e4b2-4024-46a1-abbd-dbd0fde26474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1ed2a8-fc7d-424b-a6ee-edc9059f8ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91728eb4-fe82-40a2-8177-a31097fd12bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33328930-d340-445c-924c-f020e11fa537",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cf8b4b-61f9-41c9-96d6-436705733f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c92a10-3504-4918-9175-03c2ee35c99f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5c1da3-32e9-4364-830c-78c47d9d8d72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b5e11c-5c17-451a-85c9-dc4da4bb768a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9859f22-b2ff-4c82-a337-01ba17dfa09c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fff49f4-8025-4905-b5d1-07e1108bf7d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db611f3d-a78c-46a7-919a-6b1d72f2d982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d847589f-30f6-41ba-a28a-600ea06142ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2676eee5-5bfc-4a90-b391-bf332da68d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2902f5-dcb6-4cae-b87b-a0491702b719",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f6e3b7-2dba-4a3b-9e6f-2367c1f6f099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "007ab2f4-7fcb-4b71-8050-1ba2dd89086f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77834468-aa15-4476-9656-58e4867c0cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f6e56f-29cd-4910-802e-f948a55ba162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21e13d3-2a0c-4675-aed7-6cf49a46f5eb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3224ecc-e367-4e32-813c-7c2cbd610820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a116ec9f-ce1f-4d5f-b33f-824d95b1ea3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec497f1-bcb1-4798-a31f-12ddf2aeef23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "749c54f4-41ba-4570-9feb-ab8aeb117c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d577221f-3682-4bd9-b55b-c3711f7b5bab",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae4b39f-042b-4449-ac06-b637c1a7cc39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83afd1b1-8502-4d92-a485-dd065ca4d586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf5be8c-7f92-462d-ad8e-771c133c1cff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "125f83b1-9b5d-4d09-9c01-a8cb4a060046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c450b7-fc0b-4e23-923a-edcae08f220f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe45915-a2fd-4916-981f-7f52d390333d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4c4f24-a779-4916-8031-fbfac4913635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a56370-babd-42dc-9140-fa235c93e077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae073a15-74af-42af-a06e-ec58523e01bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccfa11e-f7ba-40cd-a9d6-39f85e16b0c9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6178de38-23e3-49c0-b059-3b572fac9ba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f06a0ed-a900-410a-b16c-b01909239e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a676a3-3685-41a1-9f8c-6a856850a657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eccd95f-396d-49cb-8eed-7c6ea56e2bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3feb8b9-3086-45f8-b80b-849aa3db11a1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2444224f-47be-4c91-a270-cdcaabc9374d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caef33cd-7e8b-4e7e-8454-0a74492914af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2eabf4-b518-4c24-894c-1b54f12522dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b336f2-5b8b-4bae-b310-ededbbe4d94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bef078-5d4d-4100-bc69-97228a0a3d9e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce06fb2-7f90-4fed-ae27-9389869721b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a39f3626-f775-45f2-9873-9ca894a7a3e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42e70b7-186e-401b-b75d-f2a18b3dd91c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab0105b-2492-4743-9400-e500812bbf03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce64fb10-67eb-45c4-acf5-a2dc94df4565",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0fc7c4-3f3b-4056-a99f-7be43ddf15e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35252014-3c76-4749-9882-1f2683f3dfc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42b279c-ce60-4459-9c6f-63e4429d65bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3d7921-3af6-419b-b1cd-00abbf11c392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a0cfcd-ea70-4026-9dc2-7470a6a76e78",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3b0214-3847-4956-bb89-766f9039bc83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d7fdb0b-bd30-4ecc-aded-270250f899ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8f7aa1-cfad-44bf-b5a7-e51ef58aaf03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e76b70c4-29f8-4e29-b933-a51116fd7b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3bcd1c1-ecaa-43be-91d8-5ebae180080c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae4f72c-5a06-4f9a-9dad-397f652b93ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a958bed1-a81f-4990-b073-ca2a0f3fd78a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1e0ca7-ca2f-4688-a6ad-9a79baa627fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b1c1cc7-374e-4e23-a5bf-a73be7592c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44c181f-8574-4912-9ae4-769d191ea967",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a73303c-2d5d-4ce3-abb2-637e67d174d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b924ad-8d22-4478-a7ef-6b80aa5fc487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb0ed3f-803e-4f9d-a214-792502b7a355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88688be2-3107-42af-a35e-688f6b825582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20970072-1f34-4ce5-915d-28224ab53732",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33dda60-df2b-4959-9690-b68bcb9d43eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94fb2302-e032-4982-987a-dfed5643ac27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7528e824-7bbf-4b49-9499-dd9b9bd8e28d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a88c3b-36a5-4ee9-a8e6-468a35cbe045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b660d8d-20a4-4945-943f-08cf70fd77f4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f1de89-291e-43b8-9e26-08c54c8a1456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b946a88-443c-45b7-bc97-0534267e03d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0113e313-da17-4dcf-9f35-1b4820df4851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4203f3c-ca49-4d93-afb2-5e3d495d5053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e2ade4-69f4-4cae-98a1-b216de81b701",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2b9044-3097-41fd-ae7a-e51a7644585a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6721122-5ce3-4376-a03f-f27fb2109ad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9887092c-93dd-447f-bb9f-8ac6f34b55b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64bd9606-6970-413d-aa7a-35f8e8851cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0883ab4d-2d58-432a-b328-f8e61eee8746",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722212fa-c9bd-48c8-9e55-f17badffb0c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763d0cf3-0e24-4ffd-8108-97e9e65ffc1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcce3820-d46e-4e99-aad0-743babe326b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b3d4637-7874-422d-988b-5b40a2531c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b1e4af-00fa-409a-b426-639459fec1ec",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06045dfa-bba4-4d38-9711-054ed6115c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc6897c-dd10-40f6-9f1e-01a83bd123a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb8f98a-e9ea-46f3-ac3f-94abe1d8f5f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9358deff-ffc3-4aa1-9c1b-ae03cdddbec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29fe808-78c4-438a-8b95-6ce928f2d346",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae54537b-b956-468e-a5e3-991779fbc375",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b28a9543-65a7-4d55-99af-8c6b08cddcdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ce9610-8baf-485d-b64b-015bbc4f5b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ea1f4a-f814-4075-a968-f497a9e895c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5bc7cff-7e81-4ee1-b3f6-91515cd265d0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a36520-5d1a-48a2-9c9f-d535e91f38bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eed354f-d1ce-444b-a4b8-9d43018f4b1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d510a9cb-0bd7-40ca-a7aa-afdba1273700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d1b816-e0eb-4ad9-9a11-e068078605f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3789742d-3156-43af-91bd-dd509b391f57",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4bc1f2-4a7d-49ef-bf0f-82d7cd22513e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94feda43-95b9-42e1-a24c-2118cd88afab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c51ebc8-76b4-4428-80ae-7ddb9a25057c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0483eeea-e64a-4890-9cf7-2b9f855d3abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c93a49f-9fd6-4de0-9f74-a3cf47b3c567",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce13100c-0298-488a-9dfe-0c5dff1d815e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dd46c09-09e5-409c-98c7-cd83e7f92c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c455f2-8f48-4862-a41e-655cba3dfbed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf174991-26f9-4553-8a45-dafe36a05046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c4a6b6-72d4-46d5-abc7-65bd22553482",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84eb4c5f-814e-4740-8919-4de1fa33209d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b8dc562-08b6-48a5-9938-25ba9ae7f12b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f4c519-59b9-4156-afdb-458f3d17c2d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b695694-fc66-403e-abd0-1a60b60a6c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b456d7-5870-44a2-9bf6-0febb1cf6d28",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0946dd-b2f2-4206-8d83-fec5af190be4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e8b6a8a-f793-4a08-aaa0-40e3749c4eaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47552c0f-f012-4208-940a-ebb72ae09942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb1e5cfb-edc3-4426-99ac-15e31d079add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5249891-d756-4324-ab52-7c6c67e2b107",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86feadf-f849-489a-9d3d-ae9291a158cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1bd43da-cd99-4dc6-bd60-b197d72df62e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce2f439-63d6-4eea-b859-b5bff2c9daed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26161d1f-f7af-46eb-858f-6f00db62765d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720cc7e3-bdcd-4c41-b5b5-e7f3458b2570",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9898be3-df05-4395-a5b9-9fded28ac80b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3e8dc11-b898-43a0-a25c-b26d623cb51c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72caadb1-0fdc-4048-b4ae-166af1484b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6626b33b-d700-43b9-927a-9d0d99cf1d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b673bb-25e3-4a1c-817f-fdfb388ea8ad",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b04c0d-0ee1-4518-bbcb-4d55e3a04da1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "900b6d71-4114-4c46-920d-0f77acc2430e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea032c2-242f-4cd0-a608-21811fc76a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34488664-00c6-4523-a7ef-d8c10a456380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6d06b3-5e24-45c3-aac0-8781faa0ada5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8bc5e5-3b26-452d-b1c2-b9abcadcbb16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4466d050-13df-4bc1-a975-dc181a6c46fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10276e4-c254-498f-a60f-65029c8fdfd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d791e7-d3ee-4f73-ba7b-f8f6c7c956ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661e6a0d-6deb-4ade-a8e0-204389069414",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3efadc5-f33d-40e2-9223-84adc0c0361d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03a432f3-fa24-4c38-b8d8-0f5778823be1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f11830-9f90-40e5-b1e4-395c01c6da73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "722dec98-bee0-4934-90ce-88d229dd46e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33765913-4f4e-413f-b314-57e3626af9e6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9456a75d-1518-4046-bc3b-efdf0342f886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0613fa73-df0d-46d1-a2db-1c066cd1ce94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb0446e-2c11-404f-a68c-8bd5043b7837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d2594e-c4b7-4423-a6b9-11e654194290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b811c0d1-d4b0-4275-a874-c7b638472090",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b844437-2f92-47c7-b31f-90394db9b849",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a507b15-b8e9-40e0-bb33-6ecbeee7a282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f27867-d976-40b1-9532-015cf917a4a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c7278d0-bbd0-4a6c-bbda-9da8ab6a4503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94b3d37-409e-451d-ae32-215b54234137",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fda2fa-8aff-4870-92a1-9244927eadc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "677ebd8c-4469-43b8-8792-e22c8aae720d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a733eb44-9f92-46f5-a7aa-258fa4949da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "367c2dc7-bc6a-420b-a2e6-b57a64532dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d22ec4-3970-45ae-b407-acc01080bcb7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99496b04-0558-4f00-ad91-2a7648b29424",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63fb6b09-d20d-4fd3-a573-8713ef754fe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "611a189f-4903-4228-b164-e94d259b631f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c23da2e2-ce18-4c78-9e84-169c842403da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c757edbf-4e83-4a53-81f8-2a40a496de76",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2855b7a-d892-4ecf-851c-e5d75465a584",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca61ab9c-cd3b-41af-a75e-4ccfac352739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a579386-2537-4564-bfc9-faf112df72f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a01a377-5efc-4a91-9cdf-5f0d4517b768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a651cad-6c0e-422d-9cf4-724fbcc78b63",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0213d60-de27-42c1-a376-b030ce5f4134",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eca2db0-cad2-440e-a88a-450ad935c9d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece432d5-e792-4ddb-a3de-3ac93e2176c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d4aa996-061f-4b21-aebd-9af01f6bad57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfbbf8a-e5f4-48f6-9907-7b65bd193576",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104c5158-7bd9-4a18-b969-b674bbf5fda8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "798107be-d442-4de9-85ee-eb443ca81805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3d68d7-09c3-4b32-98c2-703e0e3e5f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "944cee14-5b30-4186-8cc5-64f5710bdb7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1f5764-4a5d-4c02-bb24-69ab441124bb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6821e2-0758-475a-8f84-f80501b9f23c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17803801-5409-49c8-9b38-89ba5a28f4b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b9694e-39a7-4a59-9b54-68dd1a87a73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2affc92-a0ad-49f1-ad5c-62c953f8edf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83f5990-934a-451e-8638-105db9142c1c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035a7a88-8809-4d0d-bba6-a03a188a84e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62525c2e-bd6d-4efe-999d-797daae7068f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba79cd96-f664-4e7a-b188-ee20ef26ba1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a3d6ca3-2b9a-47c3-a3ee-9e7d5fee6b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e244f7c-4ec3-4ad1-95fa-ec8593c3b412",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33b330c-ae8b-4e17-8c28-63c89f753d29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23e6e5d0-7912-4354-b2c4-d718e7270022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e57a4fc-282c-479b-8bdc-ed046ab351ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d05e8f-c14f-4865-adc5-f5a9ef463dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37033f4d-0864-40b5-a346-ed825d554608",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19cd755a-1a0a-4e15-8b52-c559f604d3fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1af8a075-0c7d-4555-bbc0-c13f432bea39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "458b3ae6-0eca-4412-b0d4-a75dea9cc1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2721f5f-a647-4895-9516-e70d07e9672d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ad08ff-e961-4031-ba63-1ba3a3927aea",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69214347-662c-45be-9a78-9b5db697ff9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af88128f-46ac-4bd3-b728-b417c532e34a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31b23c6-7d98-4261-9cc3-ef11a87757fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5906b3e-cf2f-4d3c-9b59-5f5365ad96dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ecc047-0c18-4616-bf11-2e9473467047",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348a7ea7-2872-41d8-917e-d88a9c80a29e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c8e3892-b7d1-482c-9678-65605ae3b63f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25361081-af92-4b90-9f9f-39262558d4e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1731a90d-fff2-4c02-b25d-1300ad28975f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1148437a-4d56-40b4-b1c7-6167d1de6b27",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d35f71-48ab-41d0-8c3d-b89d14f1692a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2709b3ef-22a3-4587-a18d-65d2f5f63553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf15d0a7-0f63-479e-941f-e7f06b670cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f58aa8de-6676-4dc4-8bbe-ea11de59196f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491ab762-797b-45e0-9392-95d8bd16e490",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905f6d6b-a8b5-42ff-b903-8413bbfd9df6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c71ef33a-cb04-472a-8aa7-53c6d5714b44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b5e247-29c5-4933-bf6a-8ba4eb3ab9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1223cde-596f-4f21-a20c-7d00dea0b1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d95bdbd-a6d4-4f6b-8126-4207a219a5d8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806cec15-6c15-41f5-abb1-e48dd0af5f84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "302227bb-8736-4129-9798-782d511ef6ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4288a74-8571-453c-9d9c-07048af7ac25",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "949bcdf5-6022-4e8c-aee2-ec2816096131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b3d6f4-d77c-4046-aac6-41606d66bba0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de893d51-07cb-420b-8389-3696d85ccf83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53b38216-b4c9-4458-b0da-1540e496dc10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd64a89-dd41-4280-9702-b7cbfe9c1511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6353bf91-5d2b-4b1f-ada4-af1c72279220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd52f82-d093-45c5-8e4b-047b36baf00f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c517455c-6cda-4e7d-b221-b2c8f6d41a96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c55c754f-8546-4ddd-adf7-dda5766ff6a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8c7865-33c8-4f3d-87ad-604caf2540ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a332a6-46b3-44d1-b3f7-fd0596141306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15368d2-e524-4f94-83d7-259a4ff37fd7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad61372-c1d7-4c37-9ca8-da16bd00bc91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cbfdf66-c88e-45a3-9a70-b04e4607123c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61552e64-903f-45a0-9a60-0271a32d4962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9863c566-c5c7-497b-9d56-a4936860fbd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c59ce2d-40d7-42f9-abff-bcdc6bc2aa09",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ffb5e6-1a0c-4caf-a909-43cecfe596cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f176bf6-994d-445c-84bc-9e98656f829e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd58e0c-2da4-465b-acd1-8b2920d51a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c35089-1b38-438d-ae16-d1f76359bff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7553efff-d729-44a8-b4d3-60a1c0a335a2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6835735b-aeae-4105-8559-a64fa246145d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "decbd1f5-79c4-4c28-8eb0-5fab72f73bac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b61896-e1f4-4929-94fa-b8b254b50ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "381df05e-bae8-4cdc-a744-4cb621eac825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24414703-7e8a-43b8-a000-e468e1d5a396",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9023b9-3628-4ebb-b2a0-2dc654b7cd80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea783c52-6b62-43b8-bbc5-53c060ca292f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8201fc5-2732-4f4e-a97d-6efb78f46027",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea967e0-b346-40d3-9b3e-6c19f7f628db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee97770b-6fc1-4d62-898c-ffcc8e263eb0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0a8f18-fa57-4eb8-9ac1-46443dcd8caa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7d1d0ee-18be-44d8-8d77-bf4d83174ccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27e4753-45fb-42ad-83df-1844e897eb88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc5cc289-ba7a-4a15-a38d-d8df80904af4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f652d96-4a71-4357-9a4e-40194ead055d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da13e54e-83d3-4b60-8af7-95c9d6ae2254"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d4b7114-a4c0-4f5e-a85e-9be1b00ef831",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6c98d357-3d2c-430b-bd48-831a028ba993"
                    }
                  }
                ]
              },
              {
                "id": "10ba1a78-9f4d-415b-b7ce-5d21e43244bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59c22cd6-a434-46e3-b530-0967ec59c023",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a981d2-c181-4f89-be58-30e0158ac06d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "16580753-b73c-4d6f-8b18-86e77aa4c564"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9881683c-22eb-4355-a5ea-f4fab84ddb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e245633d-f4e5-4291-b3d5-8bd67c4daf53"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13c13751-27d3-4674-983b-27e60442cc36",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f0f0ef2-ae3e-4af2-a172-7d85a66390ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "205b71ed-6d46-493a-8c94-6eb2552cf09f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab1ca5a1-7b53-46d1-9792-acd2986faf41"
                    }
                  }
                ]
              },
              {
                "id": "c5db4b0c-7193-457c-b2fa-66d296239376",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "42d79c40-f8f2-496b-8100-984569b59e06",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f14aa5-796c-4d3d-a432-db7e3aa82522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ff077030-9849-4373-ace5-b5befa746b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961213c4-dd25-4cdc-8b8d-755df45d1adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c47f1de-7155-4d7f-a095-1ac893871f0a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9c0765fd-8ec9-462d-96b8-2e58012b9bb1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "319048b6-91eb-4fae-8c56-63a3bf120050",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60d6f197-d1d1-419d-ac21-45b536e61459",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "75f1375c-0004-4cf1-913b-128cc9e3eb3d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b321a1ee-828e-4be1-ba5f-2c224c9aba17",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32a29912-2322-4707-9a32-4df9c8c05e07"
                    }
                  }
                ]
              },
              {
                "id": "c4fb8398-2fa2-4657-8df8-d0aa47d66821",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06a462a5-263c-40e3-bf03-bd865fc19ebf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b22b2c7f-dcf0-4390-9372-fb9fe338d95c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "088ebc38-06db-472e-8881-12d5bc79131f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7aad85c5-c89c-4ef5-a0f8-8def9973ac68"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31ffc797-3842-4d20-8c0f-8a3f698017af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1087168d-2553-43e8-adfa-cc7de6609032"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6acf701-7872-4b54-afa5-ab6950b3df02",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b010ffaa-bc35-42f0-b06e-da8e66d9478d"
            }
          }
        ]
      },
      {
        "id": "1e8a385d-006a-45d9-8e55-f60f30bb8762",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "662a07ce-354b-415e-a2dc-13f1f30fdc18",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5005f788-5c0b-40cc-9536-0d4695e153fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aae3b91f-1f3c-4669-805f-0881a3f673d8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4133495-27fc-4bdb-ba10-a19da0cc2890",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "30d80cf3-c11e-4f5a-976b-892a9806804c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cecae3b1-b915-4c2d-837e-040a5a2a1d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d31a7471-3232-480c-b77c-8ea789e3358a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d605e20-f7cd-4b80-9cef-4203a1b564db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4314fbd7-f192-4487-92b1-ffb2e454b80a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "80205dd2-2612-4abc-8fe5-717c66db09b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0213029f-9587-46b7-b90d-bf0cb192c91c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b720c4b-70af-4220-9981-3e677591bd87",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "881ce1ba-0f1d-4f77-b1dd-170d10825e94"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19f7964a-51bc-46ea-9b8f-0e69aa21da42",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "96857606-a128-4668-b364-0a02a9e36f64"
            }
          }
        ]
      },
      {
        "id": "cbc1140c-8e8e-4b2b-8291-3e6cefaa2098",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2e4d7749-314b-4b1a-ae22-942e09f3e57b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a6f6507-67e5-4479-95b3-69d5b41e78d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "213453b0-3712-4018-b4b5-697addf616a1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fce0314-0e2d-4e7b-96e7-b555bf2d102d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2608bb26-f5bf-4bd3-b774-d8bf508e217e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "733d687b-1873-40ce-a412-da6061a1d7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb058a80-893d-4e0e-8923-029e50c3825b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10136e19-ad1f-4fb9-9cb6-56684a6425b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a0a2024-a89e-4354-9197-35e837665c42"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "80ee421a-a0e0-47e9-9478-422585da8746",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddf09746-6262-4389-9c7b-0fb62b57842c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4201668-9d94-4e69-b5c8-fda8fda3c537",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "972f09e7-c95c-4661-91fb-5c283178628c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d765354-ecfd-4d01-8425-860ef3cce265",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82f8f0eb-49aa-4df5-9f04-b575fd29466b"
            }
          }
        ]
      },
      {
        "id": "721fea9b-9d04-4c1e-9328-540e0bd449a0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8fbc9cc9-cfd8-4435-b84b-5ce93d7b9b34",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f4c5d726-3a48-4300-bd26-00209b4a7fcc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56e8345b-b9e2-45cc-84f1-234b6e925046",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f76bfd-ddad-464b-a2d4-c4da22613cb2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66300794-7e24-4a11-b572-c803dcb6df48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5cbddb-6131-4bc3-997e-88118e82cd79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "205612b5-33e3-4315-9713-f3c4be9015e0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5aabf199-8400-4581-a8ee-cd0c947d7cfa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6df3ab6-8bc7-4ab1-a584-0fba7d320021"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e168103-fe68-4002-ab70-cb3d13854f4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83ec80bb-8d84-4759-b76c-5e98c33cb22e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff42fe1a-712d-4849-b505-e59c697c8c5b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b8ecf59f-5342-4890-90bf-8dae2d70fe03"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31c6d7cc-61c3-4cb9-9dae-e9cecb685c6b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9b55db11-8f37-44af-96a2-001d8e330afa"
            }
          }
        ]
      },
      {
        "id": "70aa4d03-4e3f-429a-b0d0-9a90cf4ff6c2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef788ad0-1875-4d24-af89-df4351e82c02",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13196927-3058-401b-a916-1041a7414d61",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4e3c4aa5-169f-41d1-9a00-ec212edffcf5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96e005a6-4dd3-4c1a-b342-9aec2409ba82",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "572259ea-14c4-4586-b440-ad3f33c69811",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.22183098591549,
      "responseMin": 7,
      "responseMax": 242,
      "responseSd": 22.219537197412702,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690936761382,
      "completed": 1690936776416
    },
    "executions": [
      {
        "id": "a478a6a9-e741-4e05-b59e-72a05fae306a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ea933f92-dd6f-4833-b23b-94a333b86a06",
          "httpRequestId": "7c378c7a-34b1-4cd2-b110-8eccb5d33cf4"
        },
        "item": {
          "id": "a478a6a9-e741-4e05-b59e-72a05fae306a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f9d26d91-ad30-4b8d-a33b-4caf0098dea0",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "97564d9f-df5d-4f3a-9bc4-bfbb190b84da",
        "cursor": {
          "ref": "c20d1456-d9f7-460c-bdff-e64f6cec13a3",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cd79d825-b78d-42f3-94b6-274b76912751"
        },
        "item": {
          "id": "97564d9f-df5d-4f3a-9bc4-bfbb190b84da",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "915d1988-6fb6-4b89-bfae-7a047300916b",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "f609eb26-75c1-46dc-a14d-e74204c79266",
        "cursor": {
          "ref": "b12fb431-89f9-46ba-8464-92d730f460f3",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1478622f-d914-430f-816d-bbae8ee369da"
        },
        "item": {
          "id": "f609eb26-75c1-46dc-a14d-e74204c79266",
          "name": "did_json"
        },
        "response": {
          "id": "e4035596-066c-49a9-aa55-804699f7b49a",
          "status": "OK",
          "code": 200,
          "responseTime": 165,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865a97e4-97c7-44d0-ac42-32382a43811c",
        "cursor": {
          "ref": "a5b2dfba-1240-4c92-8b3b-44faa42d4d53",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "029562d2-62fe-48ff-9033-8199187d92f1"
        },
        "item": {
          "id": "865a97e4-97c7-44d0-ac42-32382a43811c",
          "name": "did:invalid"
        },
        "response": {
          "id": "7fc8c124-66aa-459d-8736-79a7320d8bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865a97e4-97c7-44d0-ac42-32382a43811c",
        "cursor": {
          "ref": "a5b2dfba-1240-4c92-8b3b-44faa42d4d53",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "029562d2-62fe-48ff-9033-8199187d92f1"
        },
        "item": {
          "id": "865a97e4-97c7-44d0-ac42-32382a43811c",
          "name": "did:invalid"
        },
        "response": {
          "id": "7fc8c124-66aa-459d-8736-79a7320d8bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9492eb52-94fb-4788-9292-6c81012ce1f8",
        "cursor": {
          "ref": "3c17ce97-8740-44ad-b461-515d4f25cb8c",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e496a8df-38e8-4d4d-9b13-4250cebf5cdd"
        },
        "item": {
          "id": "9492eb52-94fb-4788-9292-6c81012ce1f8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fa3cf60e-17bb-4391-bf3d-8c9e96ca67b2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 50,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1cd0e59-7c9c-4134-87f2-0cb599d969bc",
        "cursor": {
          "ref": "1f7c2a00-d4b0-4767-86fb-aad51880874b",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3d6ec1dd-7f7a-4d64-a4c8-0f80b5b581b9"
        },
        "item": {
          "id": "b1cd0e59-7c9c-4134-87f2-0cb599d969bc",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "37c09aa1-8678-4301-aa20-779728668ad9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9a0d9d-8f82-41c7-841b-fe95bfb4a19a",
        "cursor": {
          "ref": "999e1c95-1edd-4662-b1e1-f3d2eb94fe21",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d5353921-ef8e-4c52-a853-6355aad88421"
        },
        "item": {
          "id": "cc9a0d9d-8f82-41c7-841b-fe95bfb4a19a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "526ee92b-86c3-4118-9975-db2406b12d80",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0cbdca-2978-42b6-bb4b-c3e8140d3314",
        "cursor": {
          "ref": "889002c6-51b5-42ec-8fdf-9080db6cb1df",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "781a5919-7e6c-4115-9df2-18954d2922b3"
        },
        "item": {
          "id": "3d0cbdca-2978-42b6-bb4b-c3e8140d3314",
          "name": "identifiers"
        },
        "response": {
          "id": "c49b37db-9e82-450c-a614-408b5ded32e6",
          "status": "OK",
          "code": 200,
          "responseTime": 166,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19d4ecd-678e-4538-bcb8-fbf458d5ef60",
        "cursor": {
          "ref": "d5840429-bd3f-4a2d-ac8b-9f590347f078",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7b4c9b1d-1d42-4bd2-96c2-85a80e7e92cb"
        },
        "item": {
          "id": "b19d4ecd-678e-4538-bcb8-fbf458d5ef60",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5aac1c2c-6490-4096-aaa3-494a8da18c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef80d93-176c-4a00-b83a-ab882453dcda",
        "cursor": {
          "ref": "e23c37bd-bec5-43e3-9573-ef0a653c2d7a",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8843a3d9-f288-4a30-9bde-e5aabf358755"
        },
        "item": {
          "id": "8ef80d93-176c-4a00-b83a-ab882453dcda",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6c53e459-5001-4a02-b09a-623d67f2d598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc34a1f6-fe57-47ae-b22c-831b07c94934",
        "cursor": {
          "ref": "f847f3ee-7610-4717-a6ef-dff606ce888a",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "15e7fbff-d5b2-4d0e-9ab6-e0c8a7a5078d"
        },
        "item": {
          "id": "bc34a1f6-fe57-47ae-b22c-831b07c94934",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1254de1b-b7c6-467e-9ae9-321c8213876c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc605f0-a4a1-4707-9e71-5bdbe2ad775d",
        "cursor": {
          "ref": "ea5e5412-c8bf-45e9-b77c-67a98f50addf",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b0b7173a-1674-4e47-9ec4-42be0f902952"
        },
        "item": {
          "id": "3cc605f0-a4a1-4707-9e71-5bdbe2ad775d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bffabbdf-8401-4616-8e99-7e33b8dce8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a52bf31-845b-49c0-bff3-19259cc8889b",
        "cursor": {
          "ref": "fbdecf47-2f4c-4b66-b744-da9fa688aba1",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "59f5eba7-5a4b-4316-b224-4dec0f89fbb6"
        },
        "item": {
          "id": "3a52bf31-845b-49c0-bff3-19259cc8889b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3af7aea8-7b10-456d-8a18-d0b25e246ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564b60cb-a9d9-44aa-9628-b0985c84ac0f",
        "cursor": {
          "ref": "26d1f0f9-ab2a-4c28-b9fb-cb41eb7ae782",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "57ee78b7-55d3-4946-ac74-ad90bd364020"
        },
        "item": {
          "id": "564b60cb-a9d9-44aa-9628-b0985c84ac0f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4570867b-ab61-44e9-83c0-51315accbc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b89028-a2c2-46c3-b668-8ed751fda9e9",
        "cursor": {
          "ref": "26fa1bd8-57ed-4ae2-98c7-43b47214f310",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "326ba5b7-5833-4cd8-a72b-3545e028c4b7"
        },
        "item": {
          "id": "c6b89028-a2c2-46c3-b668-8ed751fda9e9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c7d8667c-465a-48a7-b015-591d9980cbb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6636ecd2-872b-4560-9f49-3a77756945c0",
        "cursor": {
          "ref": "46c0af95-eabb-4375-b23f-86a3d5b91e4b",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1e8c0224-dd5c-40a2-abfc-26227c4a5d52"
        },
        "item": {
          "id": "6636ecd2-872b-4560-9f49-3a77756945c0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ae65b685-183f-4072-b529-77ba4ab7acb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a145a52-18f5-4bf7-a381-934813e4759b",
        "cursor": {
          "ref": "3e4b4af4-7f21-4af0-9e10-367ecb32771a",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "67e657f4-2565-4d3c-8bf1-4673b38bf57c"
        },
        "item": {
          "id": "9a145a52-18f5-4bf7-a381-934813e4759b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f68b3cd4-a796-42d4-acb1-eb73ed21fd17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa301a1d-e8e2-4db4-a5d9-be84ce59ed89",
        "cursor": {
          "ref": "4236f369-b6cf-49b3-8f1d-0b733328fb97",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "57a48e3d-1ed8-4550-8eff-6fa7b0aa6f15"
        },
        "item": {
          "id": "aa301a1d-e8e2-4db4-a5d9-be84ce59ed89",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4a7e9169-b63d-4159-8500-9a06254e3738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6816ab7a-0ef8-4b7b-8e30-1dc66556f6f4",
        "cursor": {
          "ref": "625fadc5-d407-4b15-8bb9-76459ef37a7b",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8cdfc208-021f-4396-9cb5-467c6e9adf09"
        },
        "item": {
          "id": "6816ab7a-0ef8-4b7b-8e30-1dc66556f6f4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1216bec4-fa11-4004-ae78-4b04159a69d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411f5155-b5ec-42b0-9ade-5715e6123671",
        "cursor": {
          "ref": "5a17761b-e7f2-46e6-a378-7b946a2dbfd0",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e59b7153-38ac-4499-b65b-c69b783e8746"
        },
        "item": {
          "id": "411f5155-b5ec-42b0-9ade-5715e6123671",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "fbd24bbc-3831-4cd6-9954-dcf8b1ae7ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d68ae8-a527-4aac-8616-371451494d9e",
        "cursor": {
          "ref": "a8685a27-9e38-4b21-88e8-5ad3ecbdf68d",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7aa8e871-90fe-4b16-aa0d-e946d5c63f97"
        },
        "item": {
          "id": "98d68ae8-a527-4aac-8616-371451494d9e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3e133072-1a9d-4fc9-8aa4-aded230978d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96393ce-aca6-4987-9ab2-1ab3873a594c",
        "cursor": {
          "ref": "d9fa4cc8-3326-4e5c-8fbd-5b82efa11aa1",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e7a5eb20-4c06-4325-856d-f987225f7d35"
        },
        "item": {
          "id": "d96393ce-aca6-4987-9ab2-1ab3873a594c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "bea0ac69-86d3-4f6c-870c-e4c226ccf298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0182a3e-c260-46c2-afd8-270359a8fba8",
        "cursor": {
          "ref": "ffa3e8bb-70e3-4e71-bf52-1aa22ed1581e",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0c7f0fab-9baa-45f6-b4fb-50c3d6fbbfee"
        },
        "item": {
          "id": "b0182a3e-c260-46c2-afd8-270359a8fba8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1437a1df-af5f-40ac-bcba-4efbe5751b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e189dc5-33c7-4ae1-b642-9cf2ae734886",
        "cursor": {
          "ref": "a35852ae-59db-4a40-95ee-c8915bb06572",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f18daf68-ad87-4a3a-8b6c-2271ab3347df"
        },
        "item": {
          "id": "6e189dc5-33c7-4ae1-b642-9cf2ae734886",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b392eea9-bc56-4de4-a221-f3bc0172175d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5468c00-13a0-4694-8412-8353fd3c634e",
        "cursor": {
          "ref": "3ee995fb-0c18-4dc2-acd7-86814c09126b",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "234903b3-f569-4e2f-ab0b-b2370ffc93f3"
        },
        "item": {
          "id": "d5468c00-13a0-4694-8412-8353fd3c634e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c9f27f40-b4f0-441a-8904-3876c2e65afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd7c84a-a7f0-4931-87e0-263efc980627",
        "cursor": {
          "ref": "c50558d5-e2a5-4245-a403-5f5442aad47e",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "84badd1f-6d6d-4c37-a0ce-264499b96021"
        },
        "item": {
          "id": "bbd7c84a-a7f0-4931-87e0-263efc980627",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "627067ba-d0a0-4ad8-af83-6323cf0472ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd00e6c-0d2b-436d-923a-50a5d3bf4732",
        "cursor": {
          "ref": "45bf2e57-915f-4840-a16e-0e929dc44235",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "85dd4f65-5bf9-4c60-bcb0-e60de403157d"
        },
        "item": {
          "id": "ffd00e6c-0d2b-436d-923a-50a5d3bf4732",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0ca91027-8c0e-455a-ab3f-60608991d298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b38d1c-fedf-4127-aa5b-bbb9ee511ef9",
        "cursor": {
          "ref": "7a1c5fa9-af6f-4ca4-9e1a-2f52750ae3f0",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "79be0b08-492b-41b1-9a7d-9b08418ae44c"
        },
        "item": {
          "id": "e1b38d1c-fedf-4127-aa5b-bbb9ee511ef9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "06a4208e-4bdc-49ce-a9a8-27005a9ca39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800beb8f-8fd9-4e0e-97af-43d92e2ddbf7",
        "cursor": {
          "ref": "01800ce6-ec3c-472b-9380-ed6f011e078f",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7004a05a-a648-41df-8711-644c1887578f"
        },
        "item": {
          "id": "800beb8f-8fd9-4e0e-97af-43d92e2ddbf7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5537f87c-15f3-444a-a8a3-18ae509b92dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87a2e43-3e3c-4413-9dfd-4a1936bcc702",
        "cursor": {
          "ref": "a848bac5-9505-42d8-8941-d3425b9b49c0",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "cf8a8288-6f03-4e5f-a75a-20bbf18e9f35"
        },
        "item": {
          "id": "f87a2e43-3e3c-4413-9dfd-4a1936bcc702",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "17a39f48-7383-46ad-aec5-b4899552024b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d8bc6e-bd58-445a-93b6-89bd8b4dcb81",
        "cursor": {
          "ref": "e4f60174-c7bd-45f5-a6a3-f1a1c01a9ba3",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "414da660-370c-4571-9b13-9b1633e5ddeb"
        },
        "item": {
          "id": "29d8bc6e-bd58-445a-93b6-89bd8b4dcb81",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f3cd27e7-4497-4543-848d-221b2bd8946f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474f4fc9-b73b-4c17-ae7c-d1eb923396ca",
        "cursor": {
          "ref": "fe821afc-f27c-47fb-a925-60f180ff360e",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "96e6d973-7309-49b6-9da0-02f083ab3260"
        },
        "item": {
          "id": "474f4fc9-b73b-4c17-ae7c-d1eb923396ca",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "80353520-8193-4de6-a86d-3736efcd657c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a780ac8b-ea56-4cad-b32c-5ba5f462afb9",
        "cursor": {
          "ref": "911652f7-3448-4ddf-94d5-d4eaa0b3cefd",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1e175dab-b3b7-420a-a56f-00031c4983f1"
        },
        "item": {
          "id": "a780ac8b-ea56-4cad-b32c-5ba5f462afb9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d7eac0a1-c84b-4336-8c97-4c91d60d43e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e3bcd7-5186-4053-bcd8-6593b7034a98",
        "cursor": {
          "ref": "dad8b33a-9d22-4e3b-bfeb-d2d2fc7d2ff7",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1d57cabd-aaf7-4929-b9cc-fbc3f2817d27"
        },
        "item": {
          "id": "03e3bcd7-5186-4053-bcd8-6593b7034a98",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "88af858e-3e89-4290-ac3b-4ad76099b009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8eb2af-dca6-450f-9ba2-028b8c2d70dd",
        "cursor": {
          "ref": "07a1b2c7-e5af-4cd2-81dc-b31d667ba1a8",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5fae7f66-4bae-4811-ab7b-8a8d03964690"
        },
        "item": {
          "id": "8e8eb2af-dca6-450f-9ba2-028b8c2d70dd",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ee2db9da-6784-49be-8630-06646ad065ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3584861d-68aa-4c61-98c0-68fa3898d2e1",
        "cursor": {
          "ref": "cf7c24d6-a7e2-4c1e-9819-e5db8a1e5180",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3d552bc1-65a9-414c-8b9f-d4b789c7be8e"
        },
        "item": {
          "id": "3584861d-68aa-4c61-98c0-68fa3898d2e1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ddc29bcb-64e3-4278-9d5d-37356f5d32ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57a1859-13f1-495a-9e68-c8219c79594c",
        "cursor": {
          "ref": "1afd8cd1-a4e8-4be6-8085-73fb776a43e8",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9480e72e-25f3-4b9f-b243-83c0a7f574e1"
        },
        "item": {
          "id": "a57a1859-13f1-495a-9e68-c8219c79594c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "51fb4faa-1551-442c-a34a-a62c9ac3ee90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec402121-d8b5-48aa-8118-c0d366f984fa",
        "cursor": {
          "ref": "ae93a779-5f66-43f5-89dd-ed354dfc2d98",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "51f99567-bd2b-4854-b7ee-d69e31a9aedc"
        },
        "item": {
          "id": "ec402121-d8b5-48aa-8118-c0d366f984fa",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ded1a723-4bbf-4bad-9263-ccae5666d798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e96136-238a-4078-9ea2-734de4dff000",
        "cursor": {
          "ref": "718398e7-bb30-47be-bbcc-90fa1bd2fcf2",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0182f475-1156-47ab-a113-ef86ac232bb6"
        },
        "item": {
          "id": "53e96136-238a-4078-9ea2-734de4dff000",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "805f39f1-43a2-49ca-9459-d14a67427647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf4326e-6d21-4ac8-aff7-0e71da06da8c",
        "cursor": {
          "ref": "d2ad1d18-d032-4a44-aef7-772995168e07",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6f3d2be7-ec46-4ae3-a5e4-a2888ea94155"
        },
        "item": {
          "id": "9bf4326e-6d21-4ac8-aff7-0e71da06da8c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "fb292eb3-1986-4e5a-a32f-5537b61c17c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7af2be-22ae-4e64-8c74-706f90c15d99",
        "cursor": {
          "ref": "f17c3aa9-f3b2-4715-a01b-53d0cb1c4f61",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1e2af3e1-d4cf-4e54-860c-a95b53b9cd16"
        },
        "item": {
          "id": "ca7af2be-22ae-4e64-8c74-706f90c15d99",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5449e853-dbb6-4c58-9dfb-6a40c9ae6361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d222a7-4014-4356-a41b-4c0091e87d8a",
        "cursor": {
          "ref": "4e0671bc-6bdb-4940-9bb0-6dbedcb6469a",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "96440397-ccb8-4f69-9970-56339a0bab50"
        },
        "item": {
          "id": "50d222a7-4014-4356-a41b-4c0091e87d8a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0404b761-badd-4f53-b5c2-d92b64a82590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8e87fb-24f1-49eb-a6b3-4e119e20bc9d",
        "cursor": {
          "ref": "a990d427-e827-4a59-8e87-1e7edcc8280f",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b86dc6f6-440f-4317-90f4-d5377fbb9a2d"
        },
        "item": {
          "id": "0c8e87fb-24f1-49eb-a6b3-4e119e20bc9d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d4212afa-6643-45b7-a3fa-cae4ee28df30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e3d75e-b9d1-4631-93f7-fefc1249d787",
        "cursor": {
          "ref": "9024d32b-c0e5-4938-a59c-86e20fc8dbce",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3318750d-7c19-4cd3-ad76-588327a4cdaa"
        },
        "item": {
          "id": "f0e3d75e-b9d1-4631-93f7-fefc1249d787",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "261506c1-cffc-4aba-9dd4-69af774d8abc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 24,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1f47b8-11b4-4cc7-ad23-b5c94e9ec5e7",
        "cursor": {
          "ref": "b095257f-98c1-44d6-9d25-cbdb01dcd7e2",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "05a6a6ed-8248-46d6-a681-059644c95567"
        },
        "item": {
          "id": "bb1f47b8-11b4-4cc7-ad23-b5c94e9ec5e7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b1263d8c-91ae-49e4-a350-3b253718692b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e813741-5d57-40c4-8829-548f126dfaaa",
        "cursor": {
          "ref": "1c8814ce-d517-4c6d-9dc2-0719792d195c",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cfd2b38a-0835-4643-ae71-e1db367b4e6a"
        },
        "item": {
          "id": "6e813741-5d57-40c4-8829-548f126dfaaa",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2cd375fa-d82e-486c-85d8-5edd7135fb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4afc1bc-f9e2-445d-8c58-610676563727",
        "cursor": {
          "ref": "935a32bd-bc43-4dfb-82ab-d21d55565f27",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "882be860-8dfb-4f7c-a32b-de1f70bd52c8"
        },
        "item": {
          "id": "d4afc1bc-f9e2-445d-8c58-610676563727",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1f3ee12e-74fb-4125-b1da-67ca23b0dbe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44251302-67fb-47a9-a82b-58ec9a3f3fda",
        "cursor": {
          "ref": "f3351ca4-bc68-4246-8867-565499824bce",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "434bf377-65af-4cbe-bfb7-d9885d425dfb"
        },
        "item": {
          "id": "44251302-67fb-47a9-a82b-58ec9a3f3fda",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0f80d6a7-8b5a-40c0-b7bf-6d641cc92bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e952d06d-1b4a-41a1-89e4-12286e7b992b",
        "cursor": {
          "ref": "726dfbc9-794e-4526-9a77-504f27ef0634",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4f171923-55f8-4cc0-8258-538e15d20a38"
        },
        "item": {
          "id": "e952d06d-1b4a-41a1-89e4-12286e7b992b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0100c8cf-9472-40ef-9c64-d21cca637370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef4455e-c8a2-4615-a37c-79c8f7e4c739",
        "cursor": {
          "ref": "4196ffaf-2e8c-4f1f-8e48-9ee9a3a29526",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "874d207a-122f-486f-b3d0-6387be31b5ec"
        },
        "item": {
          "id": "cef4455e-c8a2-4615-a37c-79c8f7e4c739",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2f9b93f1-b328-481e-af20-7d2e647e7bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c210053-db1c-43b1-a59f-7a294d21f15a",
        "cursor": {
          "ref": "37c64ca6-ef84-4526-8022-d73ce721fda9",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "dcfa574c-18b6-4cbf-a094-dc709f14ec5a"
        },
        "item": {
          "id": "4c210053-db1c-43b1-a59f-7a294d21f15a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "19943b94-ae73-42ab-bb21-a2abb440328a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 23,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc1c0e8-bac3-437c-a2ab-3eb5bcfc786d",
        "cursor": {
          "ref": "fab4956e-1e74-409b-8139-d675c3fd54b0",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7a4989ae-7dca-4a28-b2b9-0d2de8e33e4d"
        },
        "item": {
          "id": "9dc1c0e8-bac3-437c-a2ab-3eb5bcfc786d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4d2131b1-2672-4fc8-b410-c562f5e4a43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e491c157-ffe6-477f-8e29-a11f805a45d2",
        "cursor": {
          "ref": "272908b1-116a-4156-81b6-dcf061818679",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "18029f92-4444-4344-adcf-ba356f1922ab"
        },
        "item": {
          "id": "e491c157-ffe6-477f-8e29-a11f805a45d2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "dfc6bc2c-e486-4b51-89e2-885003a01b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687db3aa-d17e-414f-857b-8cc1109d8e7b",
        "cursor": {
          "ref": "0f9f75ce-8f85-4d55-9235-d0058c504857",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ab15b21a-228a-44bb-84dc-cf1a58087418"
        },
        "item": {
          "id": "687db3aa-d17e-414f-857b-8cc1109d8e7b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6e852f06-ec07-473c-b07d-cf1bc73901f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87175cb9-89dd-429c-89d2-6ddb26e39345",
        "cursor": {
          "ref": "5bf6b2f8-077a-472a-81ac-62035ceb6495",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5c6ea77d-58fb-4d53-baba-bb16541654aa"
        },
        "item": {
          "id": "87175cb9-89dd-429c-89d2-6ddb26e39345",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0a85235a-4a96-4370-b4bd-21a494aa02be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f3841a-35ff-467f-9ce0-92786fa68101",
        "cursor": {
          "ref": "87ec0fc1-7b23-478b-872d-968fa5d6cc13",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "09df0db1-a0a9-43f8-baa9-5f0d76c260a0"
        },
        "item": {
          "id": "c8f3841a-35ff-467f-9ce0-92786fa68101",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0f7be665-7c79-415e-8a74-5b2b5557e336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdb1ed4-f4c2-40d1-8d3c-81140e9a250b",
        "cursor": {
          "ref": "487bd344-6b55-46f0-973e-994be43d11a1",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c7da3b07-d5be-445c-8561-be6c12c23eae"
        },
        "item": {
          "id": "ffdb1ed4-f4c2-40d1-8d3c-81140e9a250b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "cadfcec9-f87d-4648-800d-6b328e3477d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4a36c0-19ae-4262-8cf7-543cba006746",
        "cursor": {
          "ref": "0372db55-53d6-4ac7-b739-114db63feaff",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "eb5646e5-f19a-46c6-b051-4ead9c68dc53"
        },
        "item": {
          "id": "cf4a36c0-19ae-4262-8cf7-543cba006746",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2c3bfed0-f3d6-457b-84f9-291e65fbf078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456c2682-7c13-4a07-95f0-2877005320f3",
        "cursor": {
          "ref": "231162b8-3555-4a3e-b246-017ef30dcd83",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f6e1c731-6ad5-4b23-8756-de860253277a"
        },
        "item": {
          "id": "456c2682-7c13-4a07-95f0-2877005320f3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fbf7c3dc-15fb-4627-916d-099a20493e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062d065e-a40c-469e-abd2-ce89a5f74393",
        "cursor": {
          "ref": "bbdb1465-fa83-4659-8d99-16e9bf2afc22",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9eda253e-9605-4ec7-8476-1ef4e12ec9b5"
        },
        "item": {
          "id": "062d065e-a40c-469e-abd2-ce89a5f74393",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "bc8c9d33-e4f2-4b00-8e37-0cddb7864a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413eb5c3-0865-4699-ba0b-63c1ea9de9ce",
        "cursor": {
          "ref": "01747ce0-531a-4002-ba4f-67457e2a8af2",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "48059246-a73c-4240-8b97-0b990c9e1a2c"
        },
        "item": {
          "id": "413eb5c3-0865-4699-ba0b-63c1ea9de9ce",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b1c903cb-3a70-40ce-91b2-729bef070916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d717c3-51c8-47d6-94b9-fa408c21f8fb",
        "cursor": {
          "ref": "97e2a8a1-0f4e-449e-990e-10dcc86181e1",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "752b749b-24d9-411d-948a-15f0ed5ce568"
        },
        "item": {
          "id": "66d717c3-51c8-47d6-94b9-fa408c21f8fb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bd7696a2-1b46-40ba-bcea-726513c6d1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c793a1-647a-420b-9409-4180c97eeb9c",
        "cursor": {
          "ref": "b3c246cd-1288-46b7-b72c-4be685bbbcc6",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1533dc3a-f349-41ae-a1f1-b171f6e8f56f"
        },
        "item": {
          "id": "22c793a1-647a-420b-9409-4180c97eeb9c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "cceca952-ed00-40b3-a1c5-c208432f26fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3ee126-db49-43e0-8980-078605a93fcd",
        "cursor": {
          "ref": "49d08eb3-0f68-465e-a1e2-11ff1c133570",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d003e66d-6015-4a8d-bab9-9b628f297510"
        },
        "item": {
          "id": "aa3ee126-db49-43e0-8980-078605a93fcd",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "78aef993-c2d8-4fc8-b9f1-8af1199c8215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7724ee7e-6793-4c10-817e-736174b0c8da",
        "cursor": {
          "ref": "8d6553a4-a72d-4feb-b902-877e173577e8",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bac94e0c-779b-4dfc-bc4f-1fc439704624"
        },
        "item": {
          "id": "7724ee7e-6793-4c10-817e-736174b0c8da",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3e072c11-6284-4956-9430-7a772a959f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0feb81ef-d966-463b-a37a-b1b8fabe4e26",
        "cursor": {
          "ref": "cecf8109-a57e-4c92-ac4d-7c5b1aa715d2",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "19740f6b-19fe-42ed-b1e1-4c59ea268c65"
        },
        "item": {
          "id": "0feb81ef-d966-463b-a37a-b1b8fabe4e26",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9340105f-e13f-4176-a4ca-c0b2841ddefe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1acbbe7-6456-4dbb-ac20-a520796e6bba",
        "cursor": {
          "ref": "00719443-e119-4b80-a1df-4c9488874dd2",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "60149d5d-7929-4301-8337-1ec37708ae13"
        },
        "item": {
          "id": "e1acbbe7-6456-4dbb-ac20-a520796e6bba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6d517efc-b4df-46f4-b3a4-ad194bc33fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e2de20-3e06-4cd9-b913-02bd85c6c399",
        "cursor": {
          "ref": "586f081c-ed26-4e3b-b430-7ad8b934bd99",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6cb9073e-d387-4789-88f3-45e8ff47e3a4"
        },
        "item": {
          "id": "d8e2de20-3e06-4cd9-b913-02bd85c6c399",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5c283b62-6385-46d7-b234-4f731bc49b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d9412b-a24a-43a7-be1e-33cd7b0fd5a8",
        "cursor": {
          "ref": "287c79c2-80d9-4e4b-88f3-b16ad36bb894",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6f072a16-3531-43f0-ae30-66dad7a39ac0"
        },
        "item": {
          "id": "52d9412b-a24a-43a7-be1e-33cd7b0fd5a8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "73bc1132-fc88-4ed0-886a-5fddd728d0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2448ec30-bc9b-4807-9634-cfa4cca2f195",
        "cursor": {
          "ref": "34e06b66-0c90-454a-b860-dd3f4d0799aa",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "920b9f7e-0261-4d51-a1ba-feb41ff1f4ee"
        },
        "item": {
          "id": "2448ec30-bc9b-4807-9634-cfa4cca2f195",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9f65b34e-39a7-44c4-a69c-385437a295bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cd97d8-ef1a-4061-a4a3-a1da2b2a3f8d",
        "cursor": {
          "ref": "fd53b1e4-58c3-4947-9169-7da96a22f9dd",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8b62ea38-e3da-43d6-aea7-e77ca76147b5"
        },
        "item": {
          "id": "89cd97d8-ef1a-4061-a4a3-a1da2b2a3f8d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e2b98b3d-4352-4055-bdb3-750653c76ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbbcc95-a598-456f-8378-4afb3ec6e113",
        "cursor": {
          "ref": "8a172af6-702b-4476-811d-0d85298c2a58",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6808c1df-7934-407a-90d2-924890a74215"
        },
        "item": {
          "id": "9bbbcc95-a598-456f-8378-4afb3ec6e113",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f548f4b9-b46b-448b-9dd1-6e9d552d2ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ba0158-e97e-4d55-876e-de1ffbbf8635",
        "cursor": {
          "ref": "ed90d3ad-26c5-4943-9695-bbeb7119874d",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9de37467-8542-47dc-92fa-a7d4b36bd625"
        },
        "item": {
          "id": "77ba0158-e97e-4d55-876e-de1ffbbf8635",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e3e03053-4d57-4434-b391-084c3d6aeec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ada7670-e9c8-45f2-8bb4-f1abcd6828ae",
        "cursor": {
          "ref": "f00f4316-9090-45f3-8400-05fade8cc8a0",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f4dcea2f-fcd1-4ea7-a202-9703b935611c"
        },
        "item": {
          "id": "9ada7670-e9c8-45f2-8bb4-f1abcd6828ae",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "852dd195-25f6-4d37-86a3-bdaf490123ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcb4f09-ae74-43f5-a1c4-5e84e07581a6",
        "cursor": {
          "ref": "4feb59d9-bc56-4727-86b3-f6f443029426",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "273f3a23-5c1e-4791-b88e-b1acf824f122"
        },
        "item": {
          "id": "1fcb4f09-ae74-43f5-a1c4-5e84e07581a6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ad556154-2a49-476e-909a-60b2b75139fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b7e529-01ba-4359-a3ef-ae6aeed934b8",
        "cursor": {
          "ref": "8052c0c2-63fc-4b13-95c8-a613bab4cb1a",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2f865979-63ec-44ac-bd44-f4d7192d42bf"
        },
        "item": {
          "id": "a2b7e529-01ba-4359-a3ef-ae6aeed934b8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2bd50f3f-41cf-4d21-a8bc-9938b0658787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81d98e6-e374-4b39-9d32-0485b846cca8",
        "cursor": {
          "ref": "5dfc3a1a-dbfe-4939-a2c0-2a1989969534",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "921e8edb-d4a8-496c-b8ca-78171e94b759"
        },
        "item": {
          "id": "e81d98e6-e374-4b39-9d32-0485b846cca8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b11ece8e-5bc5-49a2-afdd-23c28be4bcd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209d66f0-df1a-4781-bbfd-7b634000d673",
        "cursor": {
          "ref": "af74f727-eb14-49af-a0b8-82aad630e7f4",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b80332ce-73ee-4392-b8e5-2a99de922b9e"
        },
        "item": {
          "id": "209d66f0-df1a-4781-bbfd-7b634000d673",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2d13fbe9-6c02-444e-b166-8c863d41fe83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d6dd07-8e44-4ceb-a709-a2ed38788345",
        "cursor": {
          "ref": "d750586d-d7f1-4019-a1b5-513b4924d3ad",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fc2b13bf-4866-4acd-825d-a402788d5a3e"
        },
        "item": {
          "id": "a9d6dd07-8e44-4ceb-a709-a2ed38788345",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "53db4527-110e-4a4f-9ea1-d86511621ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f48ccd7-f8ec-491b-94d9-2b6c7608b4ce",
        "cursor": {
          "ref": "ee7ca8d5-9a09-4d63-abef-564321ee552b",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0b8208a3-2b87-468a-bc7d-73188e5a9de3"
        },
        "item": {
          "id": "5f48ccd7-f8ec-491b-94d9-2b6c7608b4ce",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "767b5b78-91c4-4787-a03c-695ceae86264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952e79c7-ffb7-4cde-a718-0b8b84db065b",
        "cursor": {
          "ref": "0b5d2867-a105-4516-b4e3-816be7786d5c",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4037361c-9b24-417c-836f-07e9962ea35a"
        },
        "item": {
          "id": "952e79c7-ffb7-4cde-a718-0b8b84db065b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d4259ee0-1f42-4d39-a247-46db9b70879f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434ed2b7-3437-4958-91ab-f9fc9cf7e7ed",
        "cursor": {
          "ref": "c8ca6fd2-316e-4902-b2ad-0f95af1bb763",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a2a05b68-41c7-4040-aeda-7ada128cfa3f"
        },
        "item": {
          "id": "434ed2b7-3437-4958-91ab-f9fc9cf7e7ed",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "56f5bdcd-8df9-456c-9153-55462e0dafa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88c5bcc-faaa-4421-a887-55ee72415873",
        "cursor": {
          "ref": "ad6891c5-4605-4bb6-a25d-17d05314311f",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7d0e23ae-f5b9-4a4a-93e5-144e8c342cd1"
        },
        "item": {
          "id": "d88c5bcc-faaa-4421-a887-55ee72415873",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a3a93222-e60a-4d24-9eb3-883adfe0a584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65dc0f05-acf2-4cd6-aecf-94b734288847",
        "cursor": {
          "ref": "548af817-6234-4d5e-9822-a89b987f6338",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "95628b91-9fc6-42ef-9a1d-bb31846ca325"
        },
        "item": {
          "id": "65dc0f05-acf2-4cd6-aecf-94b734288847",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "694f64e7-578f-45b9-9b49-988c38d9d8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e016cb-a4f0-43cf-a3d9-f8e5c1187612",
        "cursor": {
          "ref": "77f15837-3f1f-41d5-a593-ea4e5492a4a7",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4093dc52-b1d6-41df-b2b0-0ef255a95edc"
        },
        "item": {
          "id": "f0e016cb-a4f0-43cf-a3d9-f8e5c1187612",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5db937e0-8b2d-43d0-b987-8ac918f6bd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffeeeedf-87c3-43a6-a6ae-984505df7e80",
        "cursor": {
          "ref": "1100cd6c-1d70-421f-976c-49bc08bf895f",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a6bf2bdd-9516-4d1c-84e2-5b5715535103"
        },
        "item": {
          "id": "ffeeeedf-87c3-43a6-a6ae-984505df7e80",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "69787ed5-b9ea-4972-b086-67e465906347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad4635c-71e6-408e-aed7-87bec3101b6c",
        "cursor": {
          "ref": "d734bab3-34dc-4cfd-9d80-d29a27788e73",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "dc724b65-f7e3-4e73-bb6b-92a1ffb05743"
        },
        "item": {
          "id": "0ad4635c-71e6-408e-aed7-87bec3101b6c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "87cb423f-527d-407f-adc5-fbcaa3f8be3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea79149-0a66-468d-bb04-8ed399ebd9b5",
        "cursor": {
          "ref": "c66ae45a-bff6-4cb6-bca6-c58921dc787e",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "522fe9af-6c9a-4bb1-b714-28c25748ed30"
        },
        "item": {
          "id": "bea79149-0a66-468d-bb04-8ed399ebd9b5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cdfefc8c-b0c3-4521-801b-898a44baf0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be1e08d-24c2-47c5-94bc-d7440a83354a",
        "cursor": {
          "ref": "c84adc01-b478-4882-9e7d-0b7f242651a8",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8ba12737-29b0-47d6-9fc1-639a485d95bd"
        },
        "item": {
          "id": "5be1e08d-24c2-47c5-94bc-d7440a83354a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e81d2b3f-f7af-4c6d-b457-2daa7fb26dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b93730-4c9c-45e5-9232-cf4fe1a22dd3",
        "cursor": {
          "ref": "e22bfb67-4211-40a6-83d7-632d9c7650c9",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7646d897-2674-4da1-baff-5158e07979d0"
        },
        "item": {
          "id": "55b93730-4c9c-45e5-9232-cf4fe1a22dd3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3ec0d169-fd7a-4d78-9a34-7d076710de09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd3d639-4ee5-4700-b60d-c569c9499304",
        "cursor": {
          "ref": "154c504c-38c1-4b81-ba06-4a252cb7e923",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2bbd2ea8-92ac-4bbd-9c44-db98df0caf7a"
        },
        "item": {
          "id": "6cd3d639-4ee5-4700-b60d-c569c9499304",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9c1ba086-341c-456c-a8bf-5558399831b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9d25a6-2518-453e-95e3-747580cd8339",
        "cursor": {
          "ref": "7b0515d6-1154-41bb-b068-742e66787397",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8e7dcd38-55b4-4b66-8bdb-85e51f7ef0db"
        },
        "item": {
          "id": "3b9d25a6-2518-453e-95e3-747580cd8339",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8bc47f94-21ed-46a9-a439-bca851841d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897534d1-6ec5-41c4-8cac-bdf4fbec4850",
        "cursor": {
          "ref": "7bd742af-a6fc-4277-bdd8-8d0b73004045",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "decd48b1-dc93-4ecd-870e-9a3c8ab714d5"
        },
        "item": {
          "id": "897534d1-6ec5-41c4-8cac-bdf4fbec4850",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "752918fa-6ed1-4b44-8c21-9038a4efe3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c4c911-5c90-43a3-a6c8-52424156c7bc",
        "cursor": {
          "ref": "ae7499fd-2b14-4e27-aef7-bb9ae1fd0c13",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "43ea249a-86d8-44df-a1d2-7ad8458ea1d7"
        },
        "item": {
          "id": "69c4c911-5c90-43a3-a6c8-52424156c7bc",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "208f3b23-18cb-4e30-9fdb-ca1da2eec018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92d8182-47c4-47ea-9b8d-c2a1a5151848",
        "cursor": {
          "ref": "38222584-33ea-4df8-9f59-ed691013deaf",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "dbc6b936-f1aa-491c-b76b-a7204b49d616"
        },
        "item": {
          "id": "c92d8182-47c4-47ea-9b8d-c2a1a5151848",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5576f1d4-41d0-4108-81b2-952256acf5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d159c0b-d962-4269-ac43-a6a9a25ddd44",
        "cursor": {
          "ref": "40f98ed0-d1c8-413d-938f-97930b61e2aa",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f15fcb77-d3a5-408c-909f-bae2b7b8059f"
        },
        "item": {
          "id": "5d159c0b-d962-4269-ac43-a6a9a25ddd44",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "286a9f31-647a-48e8-9c48-34e9f9f813c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8de69b-d371-432a-9364-06bb632ddace",
        "cursor": {
          "ref": "e2c3dd5e-cd9c-4c3e-9c8a-4d60ae93f958",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1235c417-afd4-44d6-8d03-38fdb3bc5382"
        },
        "item": {
          "id": "2d8de69b-d371-432a-9364-06bb632ddace",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "69825cef-250d-4c10-86bd-1122f30d89d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9aafc6c-185a-4605-81c4-eb2851927e54",
        "cursor": {
          "ref": "1387b6d4-aca3-4323-93c7-b615382e55a8",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1d986157-e23e-46b5-a048-925b31d639f6"
        },
        "item": {
          "id": "a9aafc6c-185a-4605-81c4-eb2851927e54",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "50634eea-68b2-42e6-89d1-3b87f1fc9aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce4b7b5-7161-4c69-8f99-0166b6e2171b",
        "cursor": {
          "ref": "540b6bdc-5672-4a6c-889e-ec65b0a9b344",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c3da8422-1b60-4a7c-85e3-f90f2410bd7e"
        },
        "item": {
          "id": "4ce4b7b5-7161-4c69-8f99-0166b6e2171b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d957d399-c09f-43c3-9d41-2a18fb989cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15a0855-677f-4849-8519-2ffa346d5b29",
        "cursor": {
          "ref": "99a13f5a-6bb1-4e0f-aee0-4d4938bb787f",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e612283b-972f-4965-9954-0cf833a595db"
        },
        "item": {
          "id": "a15a0855-677f-4849-8519-2ffa346d5b29",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e85a061b-5546-43b6-a5c7-ed5c6c23d542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4dcd525-cfe1-4acf-9d00-c939db973d24",
        "cursor": {
          "ref": "0f1fac2d-ec30-41a0-9227-eca416690b11",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "449d2cb0-a4e0-4cb2-823b-19e21756cd83"
        },
        "item": {
          "id": "a4dcd525-cfe1-4acf-9d00-c939db973d24",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "78a184f0-0e9c-42fc-9e35-9a3748d1cb6d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702e8baa-d5ec-4487-b89e-a30d7ae937d0",
        "cursor": {
          "ref": "d9eb8b25-e135-4f23-896d-b0ff17d5c63e",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2a201802-db0e-4e87-a107-26cbcc0bb27f"
        },
        "item": {
          "id": "702e8baa-d5ec-4487-b89e-a30d7ae937d0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c439b058-484f-44e3-8a6f-7d7c2d2e7d64",
          "status": "Created",
          "code": 201,
          "responseTime": 36,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "837d5bdf-fc32-4aae-8733-527d7dba9198",
        "cursor": {
          "ref": "c89df438-95c1-4d66-bb42-8cd4a52ddb58",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6c224282-2cbb-4763-8a0e-19878061fbcb"
        },
        "item": {
          "id": "837d5bdf-fc32-4aae-8733-527d7dba9198",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9d87e84a-1447-4f84-a080-90994fe7ff28",
          "status": "Created",
          "code": 201,
          "responseTime": 175,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce050c4-2944-4201-8e10-4705dd480e26",
        "cursor": {
          "ref": "d2c954b0-5cc9-4613-bdb4-10f61f299049",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "79c6c157-e75c-4039-8246-4ff0e67ad900"
        },
        "item": {
          "id": "2ce050c4-2944-4201-8e10-4705dd480e26",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8916ee8f-e6d6-4109-a082-2d168cb13683",
          "status": "Created",
          "code": 201,
          "responseTime": 78,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b07c8d4-536f-407f-a06e-74240e18d154",
        "cursor": {
          "ref": "757231d0-1954-4c7e-8b2f-b9021df92c0f",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "13ded96c-2113-4393-95e0-08440a2c0a64"
        },
        "item": {
          "id": "0b07c8d4-536f-407f-a06e-74240e18d154",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9a4ca12e-ca8d-4109-a3a8-999c704e90ea",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "920ddcb9-17c6-4b4c-ae5f-5a237beb0a48",
        "cursor": {
          "ref": "8812d23b-f8f0-4c92-8e87-39a2b83cc5b9",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7e78fe4e-ecc2-4a11-9fe4-4f6da1ca4208"
        },
        "item": {
          "id": "920ddcb9-17c6-4b4c-ae5f-5a237beb0a48",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "56bc223f-83b6-4a8b-9fa7-bda2eddd7e53",
          "status": "Created",
          "code": 201,
          "responseTime": 39,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c796039-5583-4afa-808d-c4dcba49c2a6",
        "cursor": {
          "ref": "7d560e14-f22b-488d-ad95-a390b0e7082d",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e05cd27d-401e-4f4b-87e7-452546f3bc53"
        },
        "item": {
          "id": "6c796039-5583-4afa-808d-c4dcba49c2a6",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d19a2cef-01a0-4b11-9f85-170ab1d9c9a5",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89781891-0ee2-4e40-9720-6a2c0e5fe36b",
        "cursor": {
          "ref": "81cfbd6f-6419-4f3b-a0c5-4283948f5e50",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "795bd3d1-109a-4de5-a54f-e6ede848edd0"
        },
        "item": {
          "id": "89781891-0ee2-4e40-9720-6a2c0e5fe36b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1a7cb5b2-1b24-4810-9389-640c8f6f6751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb78abf0-2e00-4020-a814-a1a2693f48da",
        "cursor": {
          "ref": "88a314a9-11b1-4647-8e2e-5c7bf9c497a0",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9748efb7-e3b2-4d65-99c9-910c246f895c"
        },
        "item": {
          "id": "eb78abf0-2e00-4020-a814-a1a2693f48da",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8915847c-b004-4a27-b1bf-782514bdc69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e290f77-5c04-4fb2-b3ac-af666c87468b",
        "cursor": {
          "ref": "d7750b69-f94a-4b55-8a4b-fafdcbb97d43",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "95b2b76e-b8f4-4475-a10f-c850f8ce8a89"
        },
        "item": {
          "id": "5e290f77-5c04-4fb2-b3ac-af666c87468b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "18cdd7c9-b865-4207-8dd0-47af1da14154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75492b11-edcb-4023-a1dc-dbb66b78ad00",
        "cursor": {
          "ref": "e562b2bb-b018-4f32-b707-b06e9a010611",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c4ca0853-5bdc-4602-ba9d-47cce21dd740"
        },
        "item": {
          "id": "75492b11-edcb-4023-a1dc-dbb66b78ad00",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "646ca729-f881-408a-9b0b-e21b75a61717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630a9f83-af7d-4da3-a9c9-93c43e59d06f",
        "cursor": {
          "ref": "530396df-51dd-4acb-b7bb-91522fedc13f",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a071f2c4-f059-4303-a86c-85a942e1e58a"
        },
        "item": {
          "id": "630a9f83-af7d-4da3-a9c9-93c43e59d06f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9d8722cb-b068-40a9-a338-984c49b9ba7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735e548b-6332-41c7-bb0e-4187359bdc19",
        "cursor": {
          "ref": "4d19299d-63a7-4249-9932-c25815538452",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "88415e61-9ba9-4db7-bbb3-a6c811c5f755"
        },
        "item": {
          "id": "735e548b-6332-41c7-bb0e-4187359bdc19",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2ae051f7-949e-4749-b185-d4765cd2e9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e279a14a-2e29-45c0-bbce-0be183cf8005",
        "cursor": {
          "ref": "6d56986f-1a56-469e-afa6-03da9878c070",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "cd2b6d32-1858-4826-98a8-52982e60f9de"
        },
        "item": {
          "id": "e279a14a-2e29-45c0-bbce-0be183cf8005",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fbf93458-11cf-43c5-bb0a-78e9972b2279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3738bebd-af99-41cd-a546-efafe8f3bcee",
        "cursor": {
          "ref": "ce53166b-2c9e-4fb6-95cf-8e626b994910",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2d6d3d98-97f1-4f34-9027-e4bb6affd575"
        },
        "item": {
          "id": "3738bebd-af99-41cd-a546-efafe8f3bcee",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b9344f86-48c3-4611-b03a-9f42753b7668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fadb8d5-7df4-47d8-8722-0c7a99710561",
        "cursor": {
          "ref": "63e6b42f-9456-4b0b-b88d-54d42daa8dd3",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "19740003-d9c5-4c9a-963b-8bcc97bb9921"
        },
        "item": {
          "id": "7fadb8d5-7df4-47d8-8722-0c7a99710561",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "963dba65-1422-4a0a-973f-efa01f7ded12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b15fc8-1a95-4396-83f3-53b0017c78e7",
        "cursor": {
          "ref": "1ae71cfc-d294-4696-861b-1590e330d795",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "11c01abf-f2c2-4ea3-9bed-a0d8fb729326"
        },
        "item": {
          "id": "b3b15fc8-1a95-4396-83f3-53b0017c78e7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7b044f10-330f-4d43-a057-f1a30dd34761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23be91ae-c6c0-459d-9923-f0aee8020532",
        "cursor": {
          "ref": "1c0c0531-b787-4d4d-9f58-154e18c9e64a",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5ab8a713-115e-4779-bbf8-69199fb83f6b"
        },
        "item": {
          "id": "23be91ae-c6c0-459d-9923-f0aee8020532",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "830a112e-4a4f-4086-a9b1-5d8c2f4f02e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3112505-9ad8-4a83-98e0-89eac0df6e1d",
        "cursor": {
          "ref": "f8bd7158-dbfb-487f-a23d-4bc70af70f28",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8b84c8b6-4875-425e-b2ce-1eefecac0962"
        },
        "item": {
          "id": "c3112505-9ad8-4a83-98e0-89eac0df6e1d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "055ee83b-148c-434b-ae67-679d3f2913f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0411465e-f425-4963-ae03-2bdeff8395df",
        "cursor": {
          "ref": "669faf72-dab9-46c5-b0c4-77bf91928616",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2b6ddea7-52f1-481e-a11a-737fb015bc2f"
        },
        "item": {
          "id": "0411465e-f425-4963-ae03-2bdeff8395df",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "477c8e50-342d-495c-bb60-7eecd4dd5aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b206188b-f2f4-421a-9a62-3096a0ce0b52",
        "cursor": {
          "ref": "6f37c416-73c7-46ad-b5c1-95ce1b11c3a2",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e647a142-6882-4c19-938a-2f87ac3f4e56"
        },
        "item": {
          "id": "b206188b-f2f4-421a-9a62-3096a0ce0b52",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "994e9827-ff43-4a6f-9f2d-f9657a7f6ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f10d7d-7270-4e21-bfd2-876dfeeb3ef6",
        "cursor": {
          "ref": "8a1675f8-8587-457f-95ce-94b307a59a6b",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e2f0b95c-961d-40fb-9c51-273d1d74fc0f"
        },
        "item": {
          "id": "a7f10d7d-7270-4e21-bfd2-876dfeeb3ef6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5a57ea0b-6cac-4c9f-b48a-c9ee85329239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e124d388-8214-4e84-b8aa-e0661518ba17",
        "cursor": {
          "ref": "6a6c1a33-8619-4b6a-a091-74bf5eb70015",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "81fed35d-aa77-4638-b3a9-7d57952dbdc5"
        },
        "item": {
          "id": "e124d388-8214-4e84-b8aa-e0661518ba17",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c8af4201-77a9-4652-af38-b091f7accbb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb590012-040f-4a4c-9954-4512d681d757",
        "cursor": {
          "ref": "ccf76792-e16b-4c29-8ee5-17fc63adecf3",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "60b3a3f4-55c0-44f3-a82e-2e2ca44a7088"
        },
        "item": {
          "id": "cb590012-040f-4a4c-9954-4512d681d757",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e6e2a9e4-6a76-436e-9f70-4ccabf1ec1b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb27125e-facd-4e23-af87-4121f821b9f3",
        "cursor": {
          "ref": "f9957dc1-a4e3-4c74-bd64-d20c96402244",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f4f0ab06-68fc-4cb0-8eb7-7fdd1c54c5db"
        },
        "item": {
          "id": "fb27125e-facd-4e23-af87-4121f821b9f3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0919efa3-ae93-42b5-b3c7-be1874211b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03463ea4-e090-4726-9813-17e16eae03b9",
        "cursor": {
          "ref": "5da0faf6-48f7-47d8-905e-1c61f3b60ad1",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fbf8e38d-a001-49b6-92ae-63f063ae897c"
        },
        "item": {
          "id": "03463ea4-e090-4726-9813-17e16eae03b9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "71e1630d-7367-4127-af88-2a226cff7312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e577b92e-3d30-4c77-829d-d3dcb8f8f537",
        "cursor": {
          "ref": "90676910-269b-4d48-8c53-27471840fd80",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "10e5b386-ecb2-4fe3-8bb6-2774af21a6ce"
        },
        "item": {
          "id": "e577b92e-3d30-4c77-829d-d3dcb8f8f537",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "473973b3-5fed-4cf4-a315-c0dbd906b7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0082edde-6aa2-4d96-b1e7-467a70dca3d8",
        "cursor": {
          "ref": "5ed41d58-a9ef-4ca0-b692-ca46a47a2947",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "77773b7a-b105-4d0e-b5f4-f6118d3d1459"
        },
        "item": {
          "id": "0082edde-6aa2-4d96-b1e7-467a70dca3d8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cdc5b5db-45d5-406c-a3df-556dab2d4dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9faaff-e6f4-4cbf-b947-fb34c3f32828",
        "cursor": {
          "ref": "dc123d63-b9be-45f9-8e9a-934e661cd7a6",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "dcfda946-1509-4150-81a2-606a1fb2dcde"
        },
        "item": {
          "id": "7e9faaff-e6f4-4cbf-b947-fb34c3f32828",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bc30bcc6-00fa-4d35-b927-b53851acf5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d0d00f-a2e5-4896-a2b3-076e4352dad2",
        "cursor": {
          "ref": "7c0271fd-bcaa-4d71-a104-8627828cdb11",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f2f88cd3-01a2-4e3f-a650-ca8f5a29d62b"
        },
        "item": {
          "id": "a6d0d00f-a2e5-4896-a2b3-076e4352dad2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2a443162-a61a-45cd-9d72-a91d373e9947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8855f8-f07d-444b-b3ef-4c5e2e1070c5",
        "cursor": {
          "ref": "c6f3986c-d209-4c29-b68f-ea2aabd0eb16",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "070634e6-f579-4c43-94a3-ff4fc87c1bd8"
        },
        "item": {
          "id": "1c8855f8-f07d-444b-b3ef-4c5e2e1070c5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2c7e5a69-d366-4852-8fbe-d1ea43d6579e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2853ef-2a8c-43e2-8f77-3ea8fd8234f4",
        "cursor": {
          "ref": "a47b3c3c-9158-42af-9ee0-63d09c165a19",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0a2f64bb-f81d-4fe5-b38b-1ef8ccaacdde"
        },
        "item": {
          "id": "cf2853ef-2a8c-43e2-8f77-3ea8fd8234f4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0b86d9cf-df9e-4451-8cee-437c1028d6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c26760-98cc-4fc5-973c-e8c7873df9f0",
        "cursor": {
          "ref": "9ae559d0-6374-4250-b42f-ca9f5472d7c6",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5a3068ca-518c-463c-a7ef-dc1e906232a2"
        },
        "item": {
          "id": "00c26760-98cc-4fc5-973c-e8c7873df9f0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f72b551c-2f99-4b61-a1da-142a5698fb68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e820e19c-b107-40a6-806c-76a53f8d0bda",
        "cursor": {
          "ref": "f3348e48-e34f-468d-8bce-281733b6c76e",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2738f09b-30a9-402e-98e2-d0b5cf85700e"
        },
        "item": {
          "id": "e820e19c-b107-40a6-806c-76a53f8d0bda",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9e580146-5bd0-4657-80fc-a18dcf2f9a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f2390b-2bf6-49b8-9b8f-d409800e1191",
        "cursor": {
          "ref": "e108c36a-7b0e-486e-85f6-7cbe7d10a1d3",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1957bcac-e415-4b90-9cbb-a8ae94a7398d"
        },
        "item": {
          "id": "e2f2390b-2bf6-49b8-9b8f-d409800e1191",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dbbc49f2-7825-4315-8631-6998e7a293a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1466c12c-d1a0-418a-a507-3e713e136645",
        "cursor": {
          "ref": "b16e2458-6f57-4633-9942-b7428cf353c8",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0dfac4af-f2f5-49f6-b977-05c68265d932"
        },
        "item": {
          "id": "1466c12c-d1a0-418a-a507-3e713e136645",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a9c8bd84-8f54-4d4b-aada-90fa122f4321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de5f22d-0f44-4a4c-8910-530fbd7d4ae4",
        "cursor": {
          "ref": "95aedaf9-3581-4045-8d47-bc248a329b33",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ff948572-38e6-43a5-a1fe-7884886024a5"
        },
        "item": {
          "id": "9de5f22d-0f44-4a4c-8910-530fbd7d4ae4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d639201d-7343-4208-bb7c-acc1b2b39721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c542b3d-bcd7-4386-86e5-8c3f3c221ffe",
        "cursor": {
          "ref": "21decf3a-cf50-45e8-a887-9c14ca7ae790",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3752659a-bf49-4d81-8340-1fc7df13c309"
        },
        "item": {
          "id": "6c542b3d-bcd7-4386-86e5-8c3f3c221ffe",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "aa7a90dc-29a0-433a-a872-f2bf3f8e27f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dabab035-ce60-497d-99e1-4e4d739e99c3",
        "cursor": {
          "ref": "89515143-5033-4354-a2bb-9c50016c030d",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1b9ec767-d125-414d-b0cd-9a3089589c1c"
        },
        "item": {
          "id": "dabab035-ce60-497d-99e1-4e4d739e99c3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b7efe95f-c23b-4152-8f7b-81ce68d98e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565b9d5c-bf72-4065-93ef-a5efd367ddf5",
        "cursor": {
          "ref": "a11e3143-bf99-41fb-aa31-78fe38543c87",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2b96f7c5-6572-487f-9b4d-9b6bb1d096b6"
        },
        "item": {
          "id": "565b9d5c-bf72-4065-93ef-a5efd367ddf5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2dd8cc17-fb7e-4fef-862f-c0aeb93aaf9e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a1b635-ff63-4493-b1b6-97931f811e11",
        "cursor": {
          "ref": "5440f505-57cf-44e1-b54c-dcee75f6ddad",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "351a41c0-02d1-4775-b31b-64235b60fb9c"
        },
        "item": {
          "id": "e7a1b635-ff63-4493-b1b6-97931f811e11",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3033db03-739a-418c-a996-a641665b59ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e334df-9764-43b8-bb00-ce94c1bfa44e",
        "cursor": {
          "ref": "9359ef4c-54f8-4a4f-acee-026b63616f62",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d20ab205-b2e9-4338-a3c0-1cfd890d5ed8"
        },
        "item": {
          "id": "19e334df-9764-43b8-bb00-ce94c1bfa44e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "02cb1f16-226a-4dee-99dd-35d6cb2cf50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e733ca-05d2-466e-84bb-f65875ff4cc4",
        "cursor": {
          "ref": "635c20c4-e193-405d-9e37-df7b3aec4450",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a11a61c9-b5a7-4337-b097-55f5c9cee702"
        },
        "item": {
          "id": "21e733ca-05d2-466e-84bb-f65875ff4cc4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1be297cc-c3ab-45e7-8667-fdf0fe257fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d50c1c0-5a78-4078-84e9-8f54fbeffa6a",
        "cursor": {
          "ref": "40c947c7-2e7b-4780-86bc-124996fc220f",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ed61516b-8428-420e-8d60-5055f8e80b82"
        },
        "item": {
          "id": "6d50c1c0-5a78-4078-84e9-8f54fbeffa6a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "891d014a-5fbe-4209-be89-43bcbefd81d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f728377-67a4-4e5e-86f4-2446ba4f3e5f",
        "cursor": {
          "ref": "b44fd200-1fc0-4126-bde5-c0b3bcd64f88",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "481600df-af23-4aea-9146-a55400da17bf"
        },
        "item": {
          "id": "4f728377-67a4-4e5e-86f4-2446ba4f3e5f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "705ac721-02ca-42ce-9cc2-b886894a8448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8e3dee-c510-44c4-b263-157e56a3fd6b",
        "cursor": {
          "ref": "371220e0-5026-48fa-9696-de0707ce71ec",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "67134f8c-ad11-4474-833d-9b06250749c1"
        },
        "item": {
          "id": "0c8e3dee-c510-44c4-b263-157e56a3fd6b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b654836c-2140-457f-8791-e5e5713d22df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e183c0-9d55-4a62-b339-5c685cb51933",
        "cursor": {
          "ref": "7a20ca6a-f604-4f61-852a-6752b7ce696c",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2667ecf7-efaa-4edf-8971-5c365e8b6646"
        },
        "item": {
          "id": "e3e183c0-9d55-4a62-b339-5c685cb51933",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4c860346-68ff-47c7-b890-9126bcaf44b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18dfac1c-7c0b-43ac-abff-c15a3315ba06",
        "cursor": {
          "ref": "007d61bc-367a-4847-bfab-ab3f727b85d3",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5e4eaf8c-a798-4e88-9600-8e077168a22d"
        },
        "item": {
          "id": "18dfac1c-7c0b-43ac-abff-c15a3315ba06",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "11f980dc-b5c6-470b-a931-384457653bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bc843a-f461-4518-b144-82e347a0de3a",
        "cursor": {
          "ref": "210b1a2a-dd44-4356-b3a4-92c8a3b1270f",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8fef39bf-501d-4c6b-a15f-2c36b70f5948"
        },
        "item": {
          "id": "b1bc843a-f461-4518-b144-82e347a0de3a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "35b8c892-d1cc-48de-b361-2d8294976b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e3cd43-20f2-42e5-ba0b-8d19359598ec",
        "cursor": {
          "ref": "a621b2b8-ed3f-4b2e-81f6-bb1c0e0b7a60",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4fea42d6-0e53-4b86-9179-0a3643528176"
        },
        "item": {
          "id": "87e3cd43-20f2-42e5-ba0b-8d19359598ec",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "930a31c0-0eef-4a65-bd01-ec15483237d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f462537-59dc-44c1-bf67-4f41f04347ac",
        "cursor": {
          "ref": "ae1007b0-601b-43f8-99fa-8154a8f69ec2",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f6e6f522-12f9-4af4-ae08-f24b74d77cc1"
        },
        "item": {
          "id": "6f462537-59dc-44c1-bf67-4f41f04347ac",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "35eefd57-01cb-46c9-87cb-345eff29ad9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509bf0f6-3fcc-4bdd-a6f9-373e3df6b186",
        "cursor": {
          "ref": "9defea4b-3ab4-49a2-9614-0fcb65a1ab3f",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "864d73bd-b05b-44fe-8f40-6b3c6f17b21c"
        },
        "item": {
          "id": "509bf0f6-3fcc-4bdd-a6f9-373e3df6b186",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7dde8e5d-3fbf-42ab-b209-9e0bdec24b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07cf5f21-f9a2-44e1-a465-294dd8101350",
        "cursor": {
          "ref": "2c913dbe-4c68-4dda-ac24-9e64e3a83e0c",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "803ab8b3-85a5-4876-a716-d47664df24fe"
        },
        "item": {
          "id": "07cf5f21-f9a2-44e1-a465-294dd8101350",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b9e60f4f-2628-433f-9cb7-f9a340deadfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337e2bb2-3dfd-4767-b963-87a16508ebf0",
        "cursor": {
          "ref": "51a67807-4365-4bfc-8f54-fb2fad5d815f",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ef137974-75e6-4ec2-a94a-447ed66263b4"
        },
        "item": {
          "id": "337e2bb2-3dfd-4767-b963-87a16508ebf0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a7d40c0b-8f9c-4059-8518-e3d62a73ce76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c3f60e-e1ce-4d07-9389-89dcab06ad4d",
        "cursor": {
          "ref": "d62b59f5-ba2a-404d-8a16-67349f44de09",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4d518fe8-d4d0-4be3-87f2-20562af48af1"
        },
        "item": {
          "id": "85c3f60e-e1ce-4d07-9389-89dcab06ad4d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "985d2616-5f70-4645-b0f7-a70a6a6c76da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8117ab4-b2ef-40d3-9db1-b80bd5cc8ec8",
        "cursor": {
          "ref": "34a52ad8-4fa6-4ed5-912b-51eae73fb79f",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8790bd2f-4f15-4a55-b6f3-db4e787c722a"
        },
        "item": {
          "id": "d8117ab4-b2ef-40d3-9db1-b80bd5cc8ec8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "afe078a0-7e31-4c84-9a3d-9b0ffe09646a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f5fe1a-8f2e-4b8c-8165-bf13a8dde43d",
        "cursor": {
          "ref": "cb6fe1d8-b361-49d1-af8d-69c06acbfa6f",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "74d89c9c-03b3-457b-9fe0-9270c42a5394"
        },
        "item": {
          "id": "47f5fe1a-8f2e-4b8c-8165-bf13a8dde43d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "913ebdc5-601c-4d7b-bea8-04c77a871b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63505a9-47b1-4dfe-b20c-31940a07a8d9",
        "cursor": {
          "ref": "0a1f7fdc-59fc-4840-8f96-b0962b0f1ab7",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fc65e9ec-f29f-411e-a055-307afc9e7291"
        },
        "item": {
          "id": "c63505a9-47b1-4dfe-b20c-31940a07a8d9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a8f4e448-54fc-4d35-827b-77131ca806be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf79ac2d-f16b-42b9-b144-7dc2afcd12b9",
        "cursor": {
          "ref": "e8eb03ae-a4b8-4ea3-96f0-8744854af5f4",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e87dcbbe-cfdc-4bef-a14b-7eb4278d78ad"
        },
        "item": {
          "id": "bf79ac2d-f16b-42b9-b144-7dc2afcd12b9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "404de8e2-ac9a-4696-90bd-8be2b5419112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94afcbc0-6dfd-4e0c-9151-ee86c4ea3a0e",
        "cursor": {
          "ref": "9f6f037c-4e89-42e1-98f0-4b789528aba4",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "32d2b7d3-012d-4d00-b82e-97be577f443f"
        },
        "item": {
          "id": "94afcbc0-6dfd-4e0c-9151-ee86c4ea3a0e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "944e52e3-46cc-4611-bfa6-5dd5f30ba2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8011eddc-f115-4785-9baf-3f2ef68bbba5",
        "cursor": {
          "ref": "9d969f7a-ab26-426c-bef2-50b688111532",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6de63f6f-ef13-44eb-806b-5edc066d3bc9"
        },
        "item": {
          "id": "8011eddc-f115-4785-9baf-3f2ef68bbba5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "18468f45-488b-46f0-ab32-093f65490cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b47634-b3cb-4028-97a3-b7c5508791d6",
        "cursor": {
          "ref": "e45abb79-74c9-4df1-ada4-b96f9e6cd884",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5a0ec65b-c409-4967-83e5-37d86b43af8d"
        },
        "item": {
          "id": "01b47634-b3cb-4028-97a3-b7c5508791d6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0187cf5b-d6fc-4c97-ac1b-0858f09c4882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1ce846-d612-4c56-84f2-d1d64f65dd13",
        "cursor": {
          "ref": "92ff5ebf-7083-4237-8bbe-8ec72b588373",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c99c36be-88cd-403c-918b-ef49d6b4162b"
        },
        "item": {
          "id": "5f1ce846-d612-4c56-84f2-d1d64f65dd13",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bb201151-d1ba-44fb-a939-7e5360bd4264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4d16e8-f1cc-4fc6-9778-0265f5a7810c",
        "cursor": {
          "ref": "c692ab81-e24b-4e7a-ac2c-9c4c9a4f847b",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3f939ce1-e140-4909-9721-5fc6668afaa0"
        },
        "item": {
          "id": "dc4d16e8-f1cc-4fc6-9778-0265f5a7810c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "384af11b-d7bc-44ae-b20e-814da90cc73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7361afd0-de94-40f5-8646-5995bb22577e",
        "cursor": {
          "ref": "bdf8eb13-b663-486c-9c00-914626994fac",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4fdfd081-f948-487e-bfb8-833271c2969a"
        },
        "item": {
          "id": "7361afd0-de94-40f5-8646-5995bb22577e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8af2d9db-29da-47ff-b3fd-a37d03d2742a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fabd72b7-0cf3-4784-b994-c3bcd6d0c22d",
        "cursor": {
          "ref": "34180e25-66ad-4de7-a0c2-15704d38c07c",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e6c7183a-1042-4643-80e4-ef5419c1b954"
        },
        "item": {
          "id": "fabd72b7-0cf3-4784-b994-c3bcd6d0c22d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3515f71b-0292-4423-94c6-9405542c65ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2849027e-5e1b-4ace-aab5-0506511997e4",
        "cursor": {
          "ref": "290d24f1-671e-4fb8-80be-53a03829a3c6",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4ce44a41-c45e-46c2-9788-1566c1620ee3"
        },
        "item": {
          "id": "2849027e-5e1b-4ace-aab5-0506511997e4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "60321c15-9fe8-4734-8e31-3db5ef46eeea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19eab0ac-98cc-4b88-ba2a-01ff50f6e935",
        "cursor": {
          "ref": "8bf441ff-f8bb-4432-b032-8b8af9c7da33",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "69704f80-5fbf-46af-acf2-9b9b41a21161"
        },
        "item": {
          "id": "19eab0ac-98cc-4b88-ba2a-01ff50f6e935",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2bf9c722-96c2-424f-b95f-e2f7e28b37c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126011c0-b933-43da-85db-e8eae43823dd",
        "cursor": {
          "ref": "0104366d-5c34-441a-b899-4174f4f03d87",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "216bb709-8ce9-42e2-adcf-1ec323ad3726"
        },
        "item": {
          "id": "126011c0-b933-43da-85db-e8eae43823dd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "87c2fca9-f2c7-447d-94a8-6628964d686b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44aa570-7604-423f-bad3-eb22bbab4826",
        "cursor": {
          "ref": "662fbc30-5e7f-4509-a978-3faff1d803ea",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4a4a5a2a-de28-4101-abf7-3a3a3b56fe31"
        },
        "item": {
          "id": "f44aa570-7604-423f-bad3-eb22bbab4826",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1644bc8a-8b46-4391-85ce-cbaa6e45851d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e76cf5f-8706-4d17-894d-20f25fa745f8",
        "cursor": {
          "ref": "613c3c29-0aa5-4445-afc3-dc77a93459e7",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "47f1c95b-e886-4a68-b916-b245886343a8"
        },
        "item": {
          "id": "8e76cf5f-8706-4d17-894d-20f25fa745f8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f8b06d87-897a-4e47-bacb-f7f4ffe5f14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48270c47-9122-4c05-884b-c794cdfbe08a",
        "cursor": {
          "ref": "c2c19eec-1e03-4403-b2a3-c16494a70d36",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "29154f10-c533-4d29-ae1a-e2a93bcdf30b"
        },
        "item": {
          "id": "48270c47-9122-4c05-884b-c794cdfbe08a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b7d928e8-3126-42b1-852a-9074607d9032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032cb698-7e8b-42a8-9d95-32a101002853",
        "cursor": {
          "ref": "d701b8dd-de26-4a09-8294-7f921056bd66",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f6a932ac-8d60-4e4a-8723-a5953e125c6c"
        },
        "item": {
          "id": "032cb698-7e8b-42a8-9d95-32a101002853",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "30ce8c94-c437-4a62-bf47-737fd647605f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7117236d-05cd-4f27-8fe2-3319c686a6ad",
        "cursor": {
          "ref": "b1158f7f-c72c-425e-ae5a-98b02f4b834f",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "21b4f331-eef6-4879-856d-577d55f5a763"
        },
        "item": {
          "id": "7117236d-05cd-4f27-8fe2-3319c686a6ad",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cc1d099e-8451-448e-aa64-734d3c43033a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0882f44-cee9-4402-96e3-ae88e189f25d",
        "cursor": {
          "ref": "5b5880c0-f08e-47d2-a159-06b49ae15dc5",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5ebf87a7-f942-4bd7-a308-f61fab74d4b7"
        },
        "item": {
          "id": "c0882f44-cee9-4402-96e3-ae88e189f25d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2c77a111-a5fa-4435-8ba4-1647e82c4074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e58d043-8a85-41a4-983f-125bb9677761",
        "cursor": {
          "ref": "52ab18e2-fddd-465d-8fd9-4ebea4e853c9",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5b1d3e18-350e-4319-88d7-ffb9ffe185bb"
        },
        "item": {
          "id": "3e58d043-8a85-41a4-983f-125bb9677761",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5ca8dc4d-197e-4d96-9724-3842b5851170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2d637c-191a-4aa0-878f-481d11d7c9f1",
        "cursor": {
          "ref": "ff3d36bb-c2af-4987-b519-c9f15425abe0",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "bb33e7b7-fe5a-4839-85be-fac952a1222d"
        },
        "item": {
          "id": "fe2d637c-191a-4aa0-878f-481d11d7c9f1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4cb67108-e3f7-4e75-b0ab-335b04f5fd75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0b0c06-54f6-4b78-95fb-b75506f874f9",
        "cursor": {
          "ref": "39ef90f4-5fe1-4a64-ad15-8cf88be1e62d",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a0b3fd84-e4d1-4729-956b-f7819b5345cf"
        },
        "item": {
          "id": "7e0b0c06-54f6-4b78-95fb-b75506f874f9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "453728a9-3780-4de7-bd89-c20e09429a07",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab796d7-c042-4c2a-a55d-e2d630c7b576",
        "cursor": {
          "ref": "e88fe5cb-0994-41d2-883b-bfc5952b7f0b",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2cb5aad4-3078-422f-93bb-f1f47f5b6977"
        },
        "item": {
          "id": "3ab796d7-c042-4c2a-a55d-e2d630c7b576",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a1888584-94f7-4cfb-92cb-d98a81935c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df3eabb-da8b-4313-8db2-41629af3515a",
        "cursor": {
          "ref": "c9d8eb6d-e86e-44c2-9152-d6bb0d31ccfe",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "583f171b-ccd4-453e-80a9-695a4d0a2d59"
        },
        "item": {
          "id": "8df3eabb-da8b-4313-8db2-41629af3515a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "202cfd64-e513-4777-9f83-5219bda2cb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59b788f-b134-4b6c-b728-7f8f343513d9",
        "cursor": {
          "ref": "77fc2c66-f08c-460a-a545-8c72d6db6ae0",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4d293fb7-12a4-4797-a382-e480b4bae172"
        },
        "item": {
          "id": "c59b788f-b134-4b6c-b728-7f8f343513d9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cfcf39d4-39be-40b7-a2bd-2cb5be387fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59839f12-4a71-4365-9110-26ec7cfe60ea",
        "cursor": {
          "ref": "4192c0d6-bee0-44ee-99c2-425878404005",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "be8b0faf-4b14-4d60-a36b-81253eb8eca9"
        },
        "item": {
          "id": "59839f12-4a71-4365-9110-26ec7cfe60ea",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5971cdd3-c4d1-4955-92c5-79a79820974e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1bdd61-9311-43d3-93a9-82b478322ec8",
        "cursor": {
          "ref": "16533796-2db3-4410-a92b-064310a494da",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "57da826a-8b51-4c83-941e-0b1f41de1c69"
        },
        "item": {
          "id": "2c1bdd61-9311-43d3-93a9-82b478322ec8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9a584c4a-c111-42e6-9471-a8617817162f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8559dc5e-dac9-41ba-a8de-acee2de6c659",
        "cursor": {
          "ref": "2509e8e3-942b-4f6f-a125-463b98310c45",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "de498a1f-f4ee-48fd-b049-d2066f58620d"
        },
        "item": {
          "id": "8559dc5e-dac9-41ba-a8de-acee2de6c659",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6043f3be-fe17-4d53-a018-e78763801a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732f6842-4b84-45e7-8657-016ffebfab86",
        "cursor": {
          "ref": "8f54df30-d13e-41b5-9afc-1b4eb0f9fb4f",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2f045872-b4eb-4d3a-89de-2796a661a0bc"
        },
        "item": {
          "id": "732f6842-4b84-45e7-8657-016ffebfab86",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2689dedf-7491-4d45-a194-852ae23478a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75809daf-52af-4eee-be18-c0a60271d3fd",
        "cursor": {
          "ref": "92cd8517-f6bb-44e4-835b-a3b594c312c8",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "45082a1a-41e5-45cb-838a-73a9d14b079e"
        },
        "item": {
          "id": "75809daf-52af-4eee-be18-c0a60271d3fd",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3ed64ef8-e6e2-45e0-bc41-fb0280864b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093cc84a-97da-4da4-abed-7a0a4b9833f9",
        "cursor": {
          "ref": "eab94f10-65a6-4ad3-a035-0b960dda4ec6",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1162073f-f094-4321-a9b3-be7f838484a2"
        },
        "item": {
          "id": "093cc84a-97da-4da4-abed-7a0a4b9833f9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "88cb30d2-48ca-4231-83f1-ba67d79116a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b170b20a-6bf4-4b76-9d5e-44b4787722db",
        "cursor": {
          "ref": "bd0cdeeb-84ac-4536-a087-21220e6af536",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2acc7f17-af31-4f26-8e63-21a33c1ca8fb"
        },
        "item": {
          "id": "b170b20a-6bf4-4b76-9d5e-44b4787722db",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "13a94304-c3e3-4ffd-aea9-40bc5e7f074a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71697716-6a83-4535-bac5-bee399bfd797",
        "cursor": {
          "ref": "f6f52f6b-c90d-4e2f-a478-068ad4e002ee",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "460d1dfb-80e9-4b7a-b72e-965341a947f8"
        },
        "item": {
          "id": "71697716-6a83-4535-bac5-bee399bfd797",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ed8668fe-c3be-4446-a699-ea7360c38a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96516bac-6c3e-47c9-9ac9-2c194b210cef",
        "cursor": {
          "ref": "1a79ebda-8a0c-4fef-83da-062e09b74428",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e158a50d-2582-4098-a54f-c73461b54716"
        },
        "item": {
          "id": "96516bac-6c3e-47c9-9ac9-2c194b210cef",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "55187836-d7d0-45f3-92d5-e69ecf19bc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53449c4c-b71e-4133-b58e-ec28457f0143",
        "cursor": {
          "ref": "740c70dd-10e8-4982-9490-1006fcdee19c",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "982e162d-93f0-4ecb-9612-7f28b83efade"
        },
        "item": {
          "id": "53449c4c-b71e-4133-b58e-ec28457f0143",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3a491a52-1962-47b7-bff2-63167a66b8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf0fdc3-50ad-4683-a179-3b778d11baac",
        "cursor": {
          "ref": "6549a654-c32a-4626-85db-6efea59d9851",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "225d7b30-9cb7-423f-8dea-c7d4073395b3"
        },
        "item": {
          "id": "ebf0fdc3-50ad-4683-a179-3b778d11baac",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c1d5cb86-518f-47a1-925b-38a65a7131e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50332d8-ca3c-4eb4-85ba-836a066f612b",
        "cursor": {
          "ref": "701d67e6-6e2d-4222-b167-d153cb5e5b94",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "97e2df27-d163-4d8c-9fad-6df0f819a2b8"
        },
        "item": {
          "id": "b50332d8-ca3c-4eb4-85ba-836a066f612b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1a6b0bd7-78c6-4080-bba5-7e0b9af2209c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29895c8-4032-4e6c-b665-b96165bb5c83",
        "cursor": {
          "ref": "f736520d-4c69-4ce4-9995-b5d23e5ee1eb",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4dc7e255-ef46-4ea6-8f1b-b7e68a80da06"
        },
        "item": {
          "id": "b29895c8-4032-4e6c-b665-b96165bb5c83",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "36744163-c58b-42cb-8234-7c5dd9f200c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebf795a-5285-4e6f-8d70-edd5a79fe82c",
        "cursor": {
          "ref": "526a5aea-98d1-4997-b91c-8de2e3f02743",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "956b91cf-e988-4fd8-9deb-4110e2c792e8"
        },
        "item": {
          "id": "5ebf795a-5285-4e6f-8d70-edd5a79fe82c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d603fc8d-1136-4b15-ae8f-d62ec90631bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99cc47b-7d92-4516-b43a-94980f888115",
        "cursor": {
          "ref": "fa8bb1e2-2bc6-4048-969d-f0f496671981",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f91cc411-9805-4205-a452-4a0ef1d6bd3f"
        },
        "item": {
          "id": "a99cc47b-7d92-4516-b43a-94980f888115",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "365b7846-ed15-4076-975a-dbe03b1671b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ec3754-bad4-45ea-bbcd-f7bd04ead85d",
        "cursor": {
          "ref": "9102e512-d539-4a78-950e-15df16224da0",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0b4da337-c9e2-4c61-ba86-085601aa9a04"
        },
        "item": {
          "id": "18ec3754-bad4-45ea-bbcd-f7bd04ead85d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "59ef66da-576b-425b-a99a-0c19e9762831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05df4223-9904-4fd9-b64b-b5e2aa329b7f",
        "cursor": {
          "ref": "bb81a46e-4766-4030-8fb7-731270900871",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "644ad957-5c4d-4424-bd77-470ac2b06e0b"
        },
        "item": {
          "id": "05df4223-9904-4fd9-b64b-b5e2aa329b7f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4f20bfca-f77a-489d-a8a0-e31a5fe3ae1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd765faa-c78b-4427-85e2-99b17751b091",
        "cursor": {
          "ref": "9e6f1851-76d3-4b07-b988-302a083c4438",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "00fdb0b8-9eeb-439e-b9ca-6db4bf644a92"
        },
        "item": {
          "id": "fd765faa-c78b-4427-85e2-99b17751b091",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "46575240-e79e-474f-95dd-886eb89347cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b47f8e0-4180-4ef8-8c4b-bef8c62f263e",
        "cursor": {
          "ref": "d0300cdd-4bd1-4748-8dd6-ba749f284e7d",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "211e705a-7b1a-45c8-8cb1-c1949f2d8a4f"
        },
        "item": {
          "id": "1b47f8e0-4180-4ef8-8c4b-bef8c62f263e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "23d2ffbc-8be6-43da-a725-7a6235d9e737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ff591e-2ad8-494f-bf36-79e04709a03d",
        "cursor": {
          "ref": "2be27b4f-df09-40ae-b9cc-3a22f6da11cc",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5c1e17a7-5866-43bb-8e95-52fa9a556b43"
        },
        "item": {
          "id": "d3ff591e-2ad8-494f-bf36-79e04709a03d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5955f898-8319-4b40-8b1c-ec45474c2f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd493e5-bf3f-41e5-80b3-233a839fafee",
        "cursor": {
          "ref": "39cda4a9-5b6d-4dea-9b5a-d6b3932b4b60",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c97cce04-04b1-4910-b798-6ceb361486d6"
        },
        "item": {
          "id": "0fd493e5-bf3f-41e5-80b3-233a839fafee",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5841955f-cecf-4cfd-a882-65fef040bb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d6d713-677d-454e-928b-693bb9997ee2",
        "cursor": {
          "ref": "7252874a-8b48-40dc-8c02-a2e22f8e29c3",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "aef65001-928c-4814-a2c8-a7e19e6ccaa0"
        },
        "item": {
          "id": "d1d6d713-677d-454e-928b-693bb9997ee2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "04f56f3d-4462-4c77-92d0-c42ca524fc62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb07624c-479d-4d79-b79e-dd5fc311637c",
        "cursor": {
          "ref": "4922c551-6f6d-4647-ae32-9ce379d2f344",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "af879794-e8d3-48b2-8c72-6d820901ea34"
        },
        "item": {
          "id": "eb07624c-479d-4d79-b79e-dd5fc311637c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8440c71e-dd5c-4045-aae9-bc5a7c2aa745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfa9ae1-d16a-4b12-8679-fbccd9a0fc58",
        "cursor": {
          "ref": "61d18b1c-6acf-4eac-94ca-c7c6d23d44a8",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f5a627f9-fb7c-4579-8830-0ce9172ddb35"
        },
        "item": {
          "id": "1bfa9ae1-d16a-4b12-8679-fbccd9a0fc58",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "079ae122-8909-4aa4-981a-00714c28b9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3291c1d-ccd0-46d2-9027-e4fea98570a8",
        "cursor": {
          "ref": "abac717e-a5fd-4b6c-beab-44af3fbfe607",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "53143598-8e14-4bc4-9562-e41d72bf9aab"
        },
        "item": {
          "id": "b3291c1d-ccd0-46d2-9027-e4fea98570a8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2d0b8340-2f23-4b58-b711-45287477b244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c476aaa6-6cb0-4770-8ef3-1310c02cf38f",
        "cursor": {
          "ref": "d200e499-bd6c-43d5-a6b0-575c5b9f4aa3",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7b339b8a-ee6a-48b1-b845-585659d9130f"
        },
        "item": {
          "id": "c476aaa6-6cb0-4770-8ef3-1310c02cf38f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9dcc182a-9117-4a4e-9b8d-39624d8ba9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb04e5c3-2dd0-498c-adb2-631426c120aa",
        "cursor": {
          "ref": "0615fba3-a1ae-44a9-9d8d-ac066b4181bb",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e7bac53b-ab30-4b12-8c8c-d6bba9212558"
        },
        "item": {
          "id": "cb04e5c3-2dd0-498c-adb2-631426c120aa",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1b71c712-828b-46de-8b75-50acf0656b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cf8bef-ffee-4633-86b8-61cb5d95482f",
        "cursor": {
          "ref": "2d9a957d-b976-45b9-a90d-43b1f3db2ad1",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "67770b19-a4fd-4995-883c-9480a4313cdc"
        },
        "item": {
          "id": "c5cf8bef-ffee-4633-86b8-61cb5d95482f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "15e5a9e5-ad00-4276-90e4-659b5afa1888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da10100-8ca2-4451-81ba-873732da4d30",
        "cursor": {
          "ref": "43870b9f-7e59-4955-883b-7c37859a940c",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "eabeac9f-764c-4813-8e6d-f905c4fd68aa"
        },
        "item": {
          "id": "3da10100-8ca2-4451-81ba-873732da4d30",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "be336d05-a0f8-475c-a908-841314073a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45ddc10-e3f1-4a67-a73e-dd0bf2bcf8fc",
        "cursor": {
          "ref": "a47e0778-a456-4d42-addb-3b5fe9829767",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3ffb9888-001f-4235-9f70-42d59b2012bd"
        },
        "item": {
          "id": "f45ddc10-e3f1-4a67-a73e-dd0bf2bcf8fc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2dcd5e65-6343-45ec-b1df-4fb1006b790b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574972b8-da13-4ab8-8136-45db32215e26",
        "cursor": {
          "ref": "a51ee3ac-fb47-467b-bc41-e1d1383463bd",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "59f1329c-095a-4081-833b-0440a6707620"
        },
        "item": {
          "id": "574972b8-da13-4ab8-8136-45db32215e26",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6d2dd875-9d9f-4c41-b57e-f057e41fbebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89eb3e8e-dbf4-4530-899d-1e88aa68754e",
        "cursor": {
          "ref": "19fd7178-0c4a-4ce3-8e08-8a09306fde0c",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0e7c8a88-1555-46fe-b106-8f1c35221bed"
        },
        "item": {
          "id": "89eb3e8e-dbf4-4530-899d-1e88aa68754e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5e9a81d0-6cbc-4f0b-87bf-3114dff6e449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f40571a-9a5c-4273-b5b8-265467869063",
        "cursor": {
          "ref": "714436f9-53f6-44dc-bcc8-25521bbdddf3",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fff7bacd-f5dd-4543-bed3-ba0707b39bcc"
        },
        "item": {
          "id": "8f40571a-9a5c-4273-b5b8-265467869063",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "96ffc3bc-ce06-40ad-ad96-746628b6a77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f114a28b-71b5-4aa9-a13e-f711e38c96c4",
        "cursor": {
          "ref": "d2cf431b-a36c-4b5a-a43c-6f986c252420",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d7ebfd6a-1fb4-4423-b750-fce12ebda366"
        },
        "item": {
          "id": "f114a28b-71b5-4aa9-a13e-f711e38c96c4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "bece35ad-823c-459b-a067-0496d9673bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd66e840-4f89-4c9c-8691-c5c65f154702",
        "cursor": {
          "ref": "16775e08-23db-4710-a01d-420b30488104",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1dd5af32-1bcf-4aa2-a38a-9961988280f1"
        },
        "item": {
          "id": "bd66e840-4f89-4c9c-8691-c5c65f154702",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a46133d8-d69e-43cd-981b-6823cf9d2901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c03131-49bc-4cb7-b465-f0570a7350dc",
        "cursor": {
          "ref": "8723b0c0-3d93-40a7-ac4a-97a2abc4a354",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "113ffb03-a4ca-4dd3-8341-118ae18ec2d3"
        },
        "item": {
          "id": "d2c03131-49bc-4cb7-b465-f0570a7350dc",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "81a0c061-8975-4305-81c7-162e3987b94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe962e8-3fe7-4c1a-9858-da9b114cc44b",
        "cursor": {
          "ref": "8616317e-ccd5-4524-b385-02c5f6593bbd",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d27c34cd-0f6a-41ea-b55b-c442a8daf55f"
        },
        "item": {
          "id": "afe962e8-3fe7-4c1a-9858-da9b114cc44b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1730b82f-189b-460c-aef1-51505bc37f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11553630-0cc8-47b1-af5b-b65041488cf9",
        "cursor": {
          "ref": "841e3cc7-bb76-45d8-bfca-e15c4a3f7419",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f00dd70b-275c-4c38-aa9f-2cd718ce2182"
        },
        "item": {
          "id": "11553630-0cc8-47b1-af5b-b65041488cf9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ac08a6c7-d885-4b3c-9bc0-d6fa88e30896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b560b3f-c8e8-4998-ac9c-7a9a47477fd1",
        "cursor": {
          "ref": "19b49e28-93e4-4654-bb4d-801e4d0266f4",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "747f9d94-1222-4c29-8ef2-2280e3cb9b4e"
        },
        "item": {
          "id": "4b560b3f-c8e8-4998-ac9c-7a9a47477fd1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "25ff462f-e88b-4c35-b73a-1c49f3081ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6513eea-6847-4e3f-a301-d5855bc5f28b",
        "cursor": {
          "ref": "1b57d91b-adad-4c5d-a938-a75124875934",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5e0b3d1b-f4e0-4f7f-9246-bac282ff3376"
        },
        "item": {
          "id": "d6513eea-6847-4e3f-a301-d5855bc5f28b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "19d60ed5-e6e3-47b1-aeaa-1f1a316ccb9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eefc57d-454e-4b8c-b095-1ebd5a78f964",
        "cursor": {
          "ref": "7e6f62f6-2182-4ce3-9cf3-0c231542b690",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d056b067-2ea4-40a2-852e-9e28f33df78a"
        },
        "item": {
          "id": "6eefc57d-454e-4b8c-b095-1ebd5a78f964",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3a37db0e-d202-4271-b5db-64e2dddafae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e4cd51-344d-48c2-a64e-3c2c42137886",
        "cursor": {
          "ref": "6817b373-292d-490b-9fca-3d786c8dd2fa",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b763565f-a15e-48cf-889b-7176e82ed720"
        },
        "item": {
          "id": "58e4cd51-344d-48c2-a64e-3c2c42137886",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5668d7ad-d4a7-4467-9a8b-341ae03c19a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33328930-d340-445c-924c-f020e11fa537",
        "cursor": {
          "ref": "bd396884-47b5-4691-bdab-8cd5eeb11440",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "26b48071-6da8-4149-b0f0-cc350221f4dd"
        },
        "item": {
          "id": "33328930-d340-445c-924c-f020e11fa537",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2f8f1a60-57a2-4266-b597-99b9e47cf211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9859f22-b2ff-4c82-a337-01ba17dfa09c",
        "cursor": {
          "ref": "d6f04fec-e90f-4a40-b72f-11ad3dd887b8",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2f4c572c-4630-4524-a913-021972a992e8"
        },
        "item": {
          "id": "b9859f22-b2ff-4c82-a337-01ba17dfa09c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f86aa7a2-c073-458d-81ec-60836787df8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2902f5-dcb6-4cae-b87b-a0491702b719",
        "cursor": {
          "ref": "a7864ebc-4082-456f-8c42-5e2fadefe5f6",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c64cc2cd-454a-46b2-8425-0bfe893e9c3d"
        },
        "item": {
          "id": "3f2902f5-dcb6-4cae-b87b-a0491702b719",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fba5205a-4d99-41de-acfa-a42f67ac8969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21e13d3-2a0c-4675-aed7-6cf49a46f5eb",
        "cursor": {
          "ref": "fde8f024-a376-428c-b8f9-1746e8d4cfcc",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9d182db1-5c35-411b-a49d-1d4889cf7822"
        },
        "item": {
          "id": "e21e13d3-2a0c-4675-aed7-6cf49a46f5eb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b2ce0d61-74ed-4408-a6f0-0712f9a0ae06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d577221f-3682-4bd9-b55b-c3711f7b5bab",
        "cursor": {
          "ref": "a1cc0767-05f1-4040-95c2-5dd67e3598c5",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "863c1a6e-f77c-4227-927e-37c095d0705f"
        },
        "item": {
          "id": "d577221f-3682-4bd9-b55b-c3711f7b5bab",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7333161f-afb7-4719-b743-be8dc3dd88a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c450b7-fc0b-4e23-923a-edcae08f220f",
        "cursor": {
          "ref": "d6ab6a71-7046-4adc-a101-d641eba3aaa7",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a5051742-33c9-445f-aa3a-2ca79f6bc396"
        },
        "item": {
          "id": "a5c450b7-fc0b-4e23-923a-edcae08f220f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bc0a069b-cf80-40bb-a763-52dbffcf2ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccfa11e-f7ba-40cd-a9d6-39f85e16b0c9",
        "cursor": {
          "ref": "2dbd8e7f-88b6-4488-a54f-0735351dd5ab",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "20f92e24-21d9-41ce-a202-ca70459324dd"
        },
        "item": {
          "id": "5ccfa11e-f7ba-40cd-a9d6-39f85e16b0c9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7ee28325-9510-4ffd-b1d9-21e70031476d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3feb8b9-3086-45f8-b80b-849aa3db11a1",
        "cursor": {
          "ref": "775992fa-c27a-465b-b647-9c79ce2a7475",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "fd7e6788-ba67-4a88-9f2c-dfa0b52137a9"
        },
        "item": {
          "id": "c3feb8b9-3086-45f8-b80b-849aa3db11a1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1cfaefc1-ead7-4047-85a1-dbfd58a9d698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bef078-5d4d-4100-bc69-97228a0a3d9e",
        "cursor": {
          "ref": "c2780562-d080-4c33-a986-7ca3ed63de20",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "62b79eda-e971-44dc-b6e1-a034684f260e"
        },
        "item": {
          "id": "f1bef078-5d4d-4100-bc69-97228a0a3d9e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e99615b2-47ee-4683-a745-1f3fad05ea65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce64fb10-67eb-45c4-acf5-a2dc94df4565",
        "cursor": {
          "ref": "588be473-d847-47c5-acdc-c3d3fad619d8",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d1a45084-0718-448f-9ef6-5d7438af4fc2"
        },
        "item": {
          "id": "ce64fb10-67eb-45c4-acf5-a2dc94df4565",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d994056b-407b-41e1-b61e-a686a9849e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a0cfcd-ea70-4026-9dc2-7470a6a76e78",
        "cursor": {
          "ref": "e7530c00-35c0-497c-9294-354f22f102e0",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f3ea7d06-e877-49d1-bd65-19a41394ce0b"
        },
        "item": {
          "id": "76a0cfcd-ea70-4026-9dc2-7470a6a76e78",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "de3dd7fa-68f8-4ed3-9e42-d600d1908aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3bcd1c1-ecaa-43be-91d8-5ebae180080c",
        "cursor": {
          "ref": "a1bf0378-5b29-4474-bd2d-ac44e19e8496",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "43c22432-d39e-4022-92e7-bd21dc2a4d9d"
        },
        "item": {
          "id": "d3bcd1c1-ecaa-43be-91d8-5ebae180080c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9e71da18-0fa3-4f09-aae9-c63282301bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44c181f-8574-4912-9ae4-769d191ea967",
        "cursor": {
          "ref": "f4546787-d3e2-46e0-b728-aa1c309caa38",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "08629c75-a448-4a45-b0db-3059fa406387"
        },
        "item": {
          "id": "a44c181f-8574-4912-9ae4-769d191ea967",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a2bbbf3b-1bcb-4bda-b15e-c9f6a741cb26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20970072-1f34-4ce5-915d-28224ab53732",
        "cursor": {
          "ref": "18ecab1d-8faf-44f3-b768-9ef9f102a283",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "50678763-e90f-4955-b81c-dfe2b208bfff"
        },
        "item": {
          "id": "20970072-1f34-4ce5-915d-28224ab53732",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e8cb8a12-7531-493a-809a-81bc00fbc21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b660d8d-20a4-4945-943f-08cf70fd77f4",
        "cursor": {
          "ref": "6823fc59-7bef-43dc-9105-3390b4d8ecf2",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7c32716d-06b7-4f48-8500-454b0f2bdfd9"
        },
        "item": {
          "id": "7b660d8d-20a4-4945-943f-08cf70fd77f4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ad870c2c-846f-4317-a510-cdf9b3b9d554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e2ade4-69f4-4cae-98a1-b216de81b701",
        "cursor": {
          "ref": "07160ff8-780d-40ad-be68-6a638d3ceeae",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2c5e77e7-04df-4cde-a782-0715c6afacab"
        },
        "item": {
          "id": "46e2ade4-69f4-4cae-98a1-b216de81b701",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8b2c8f17-c022-4648-a560-5122b951cd3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0883ab4d-2d58-432a-b328-f8e61eee8746",
        "cursor": {
          "ref": "fca34049-ebb2-4b63-9c19-24208abf21b5",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "450bf5dd-2d34-4821-a4a3-75c09edaa3c2"
        },
        "item": {
          "id": "0883ab4d-2d58-432a-b328-f8e61eee8746",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7a12b7b6-1379-430b-9e34-3386f9eb05c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b1e4af-00fa-409a-b426-639459fec1ec",
        "cursor": {
          "ref": "d1d9b945-e8c4-4faa-b59f-937dcd80c6e4",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9c770c44-913c-4bb8-ad36-abf3f14fa435"
        },
        "item": {
          "id": "c2b1e4af-00fa-409a-b426-639459fec1ec",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a91ae199-e36d-4e4b-bb41-05448933a8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29fe808-78c4-438a-8b95-6ce928f2d346",
        "cursor": {
          "ref": "30006bbd-0faf-4523-8d35-c1471ed3e71b",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4801ce86-2210-4265-ab3f-d1a42b0ff9f5"
        },
        "item": {
          "id": "e29fe808-78c4-438a-8b95-6ce928f2d346",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3ba5ce25-fd8b-4b5e-81d6-a16aeb3c1495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bc7cff-7e81-4ee1-b3f6-91515cd265d0",
        "cursor": {
          "ref": "3f6ff8eb-882c-4574-b8be-25b8fbf9bc99",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "fcd2e7ab-a3a0-42c2-bca0-e3207b12bab3"
        },
        "item": {
          "id": "d5bc7cff-7e81-4ee1-b3f6-91515cd265d0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7adfbc34-741f-4402-b1aa-c1972aad5fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3789742d-3156-43af-91bd-dd509b391f57",
        "cursor": {
          "ref": "c4bc6a10-7353-44a8-bfb8-52cb6fc91c97",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "86c31539-02cc-4e97-8579-2b73ab8dfa98"
        },
        "item": {
          "id": "3789742d-3156-43af-91bd-dd509b391f57",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8d82cf16-eb5b-4009-93e5-4aa51fa19527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c93a49f-9fd6-4de0-9f74-a3cf47b3c567",
        "cursor": {
          "ref": "9ae2db83-ae85-41a5-942d-df6711de0150",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e38232fb-e1a0-4170-b765-c94e045336ab"
        },
        "item": {
          "id": "9c93a49f-9fd6-4de0-9f74-a3cf47b3c567",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "06db84c0-7384-4cf4-97c5-3acaf3d4039e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c4a6b6-72d4-46d5-abc7-65bd22553482",
        "cursor": {
          "ref": "138869ad-e71c-46f4-ac41-86b5d382a69a",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c746f7e2-1ea2-4e74-bb1f-5b8d1a52bfbf"
        },
        "item": {
          "id": "76c4a6b6-72d4-46d5-abc7-65bd22553482",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6d5ead16-1846-45d2-9e69-4a1a2f96eb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b456d7-5870-44a2-9bf6-0febb1cf6d28",
        "cursor": {
          "ref": "2cf3770e-b621-4e9d-ac3b-ed626ad09b42",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e591e5e0-65d2-49c3-b385-f7ce6a835204"
        },
        "item": {
          "id": "f7b456d7-5870-44a2-9bf6-0febb1cf6d28",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b5773367-c2c7-4e98-bdfa-4e3aec3bf0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5249891-d756-4324-ab52-7c6c67e2b107",
        "cursor": {
          "ref": "a63a5f23-bcbd-4a9b-bc06-346db6412340",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d1ddb000-5016-4e19-94b7-a1f6dcb588b6"
        },
        "item": {
          "id": "e5249891-d756-4324-ab52-7c6c67e2b107",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b3053d58-48c7-4214-bf57-04e3b4e8fe46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720cc7e3-bdcd-4c41-b5b5-e7f3458b2570",
        "cursor": {
          "ref": "7d9b2f29-6a77-448c-9b83-b9d8fa3549a0",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7ae923e5-1fc8-4031-abd2-6bc2ad4d0e65"
        },
        "item": {
          "id": "720cc7e3-bdcd-4c41-b5b5-e7f3458b2570",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "64ab2e89-d48e-4b8f-aa91-1dc1d13a06e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b673bb-25e3-4a1c-817f-fdfb388ea8ad",
        "cursor": {
          "ref": "9cf12d24-cfe7-49f5-ac8c-7347c7a8df86",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "419ccb65-f45a-4c23-847a-8641ae7ca354"
        },
        "item": {
          "id": "f9b673bb-25e3-4a1c-817f-fdfb388ea8ad",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "001c491f-25a9-497f-a461-83b42cc41670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6d06b3-5e24-45c3-aac0-8781faa0ada5",
        "cursor": {
          "ref": "8e259398-4525-4e46-bab7-55640caec5b3",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "89dbe2fc-8663-4a4e-a0a9-7734b533e5f1"
        },
        "item": {
          "id": "cf6d06b3-5e24-45c3-aac0-8781faa0ada5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ad076419-88cc-4875-a737-db194172b604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661e6a0d-6deb-4ade-a8e0-204389069414",
        "cursor": {
          "ref": "f34a763f-109a-4af6-b460-3f22f4804800",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "11143f38-2cd5-45e8-b536-a7a84de9c61d"
        },
        "item": {
          "id": "661e6a0d-6deb-4ade-a8e0-204389069414",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a76f274d-3bab-4a89-92c8-793bbf5cf2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33765913-4f4e-413f-b314-57e3626af9e6",
        "cursor": {
          "ref": "3e720af9-ddad-4beb-a8a4-6ed094d9d4e5",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d08ffe7b-e407-493f-ad0c-8a6f72332815"
        },
        "item": {
          "id": "33765913-4f4e-413f-b314-57e3626af9e6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "be64e967-bf4a-405e-9d12-505dcdcc5b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b811c0d1-d4b0-4275-a874-c7b638472090",
        "cursor": {
          "ref": "74e94829-80a3-45b2-b436-b3a5d3d85a47",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "ddeffbd5-67d4-42d1-ad25-263e352fedf3"
        },
        "item": {
          "id": "b811c0d1-d4b0-4275-a874-c7b638472090",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d8732407-0b95-47e1-864c-20e43c67ac66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94b3d37-409e-451d-ae32-215b54234137",
        "cursor": {
          "ref": "67a2da01-1c00-442c-a468-adb9ea2d72d2",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b673b149-8f7f-491c-807e-011fff345910"
        },
        "item": {
          "id": "c94b3d37-409e-451d-ae32-215b54234137",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "90748dda-66fe-453e-936c-f06e8c760c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d22ec4-3970-45ae-b407-acc01080bcb7",
        "cursor": {
          "ref": "d172d8c4-e5e4-497f-9b8a-698d9da63700",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "bf8d7629-bddd-47f8-8c4a-097a6b1c2b06"
        },
        "item": {
          "id": "d5d22ec4-3970-45ae-b407-acc01080bcb7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "eef124f6-6355-4b15-b689-02b789c3c715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c757edbf-4e83-4a53-81f8-2a40a496de76",
        "cursor": {
          "ref": "dafac788-63ec-4606-891d-fafdfc0ac263",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "044a4e19-9a45-4a8b-9f62-2cd36d5c894d"
        },
        "item": {
          "id": "c757edbf-4e83-4a53-81f8-2a40a496de76",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "813ac96b-c040-474b-a93c-63a0dd1e811f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a651cad-6c0e-422d-9cf4-724fbcc78b63",
        "cursor": {
          "ref": "ca5ae1ef-c7f7-4ffc-bc58-e039da579e2e",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "84a5df38-962e-41ba-8899-8cd560ca3457"
        },
        "item": {
          "id": "4a651cad-6c0e-422d-9cf4-724fbcc78b63",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4d79dcfe-a833-41a8-8844-bff20c58bd78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfbbf8a-e5f4-48f6-9907-7b65bd193576",
        "cursor": {
          "ref": "0c1256e6-7c34-4a71-9985-39aa8579cd50",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "ad9c9994-d281-42ee-9b8b-db0e13ea0821"
        },
        "item": {
          "id": "bdfbbf8a-e5f4-48f6-9907-7b65bd193576",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "449f6810-ef1e-4aa3-97bc-53bd3ac6c528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1f5764-4a5d-4c02-bb24-69ab441124bb",
        "cursor": {
          "ref": "62cd1d99-f1bd-4533-a5b8-fed45dd079e7",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e8392852-9ccd-46e5-a027-7fa2a106ffe9"
        },
        "item": {
          "id": "2f1f5764-4a5d-4c02-bb24-69ab441124bb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "29ef3665-c66b-4704-9c3c-2ae520385e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83f5990-934a-451e-8638-105db9142c1c",
        "cursor": {
          "ref": "6033d369-71a6-41dd-a0f4-851ef3bccd6c",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "89e2cced-17e6-47a2-9951-0b90ecb1d808"
        },
        "item": {
          "id": "f83f5990-934a-451e-8638-105db9142c1c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "05109695-10ee-4ae8-9d77-90c6cb74f218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e244f7c-4ec3-4ad1-95fa-ec8593c3b412",
        "cursor": {
          "ref": "b32654c2-97b9-4b52-b121-2d67121fbd21",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "39f17316-3ed2-4f13-bec7-ade1f742ed78"
        },
        "item": {
          "id": "0e244f7c-4ec3-4ad1-95fa-ec8593c3b412",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c2c6ccc8-1b39-4b24-ab9d-5e95c166a650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37033f4d-0864-40b5-a346-ed825d554608",
        "cursor": {
          "ref": "0b1079cb-ffc2-4897-81b3-61f3d74381e8",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "73859988-e03d-40f7-b1ef-32ad77831e88"
        },
        "item": {
          "id": "37033f4d-0864-40b5-a346-ed825d554608",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5cd028ae-ce13-4002-81ae-a7d8aa6fb4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ad08ff-e961-4031-ba63-1ba3a3927aea",
        "cursor": {
          "ref": "f2d2c87d-a31e-48f6-835e-fd66c211611b",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "adf5eec9-0203-42e0-8a31-7813697c83cc"
        },
        "item": {
          "id": "08ad08ff-e961-4031-ba63-1ba3a3927aea",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "77e1b168-9d91-4ff3-8f8e-d23dd2a02cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ecc047-0c18-4616-bf11-2e9473467047",
        "cursor": {
          "ref": "715994f0-5189-4a45-b3fb-cf0010d888e9",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "e48f74de-87cc-4582-b9f3-d2feb557e73f"
        },
        "item": {
          "id": "f5ecc047-0c18-4616-bf11-2e9473467047",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9f773cae-633c-4ab2-a30f-06b4b420a7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1148437a-4d56-40b4-b1c7-6167d1de6b27",
        "cursor": {
          "ref": "13badcf2-c17a-4976-9599-57e3629416d2",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "99875ea2-1c85-4ce1-ad2f-0606e536f127"
        },
        "item": {
          "id": "1148437a-4d56-40b4-b1c7-6167d1de6b27",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "31f62f52-23f9-411e-85ff-3af5a5aff4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491ab762-797b-45e0-9392-95d8bd16e490",
        "cursor": {
          "ref": "2c19ef74-106f-460c-8caf-7b1960b93bec",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "169132dd-9e4e-43cc-86d9-432a36fde1cc"
        },
        "item": {
          "id": "491ab762-797b-45e0-9392-95d8bd16e490",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4256fe70-10cb-4620-a0c2-75aa831a5a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d95bdbd-a6d4-4f6b-8126-4207a219a5d8",
        "cursor": {
          "ref": "ca2a5e91-b458-4f83-af9b-1a20287c0f97",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "2a281c41-9b8c-4b2c-8b0d-4692e21130a3"
        },
        "item": {
          "id": "0d95bdbd-a6d4-4f6b-8126-4207a219a5d8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "82a25c9f-da94-4d78-b15f-8378e10e3831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b3d6f4-d77c-4046-aac6-41606d66bba0",
        "cursor": {
          "ref": "0d26c60d-9229-4293-a43b-2f5255db6b45",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "3fc2e85e-b30a-4ae2-8d89-ee119c3d76b7"
        },
        "item": {
          "id": "98b3d6f4-d77c-4046-aac6-41606d66bba0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "490f8207-2cd9-4a9d-b056-215bc3724ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd52f82-d093-45c5-8e4b-047b36baf00f",
        "cursor": {
          "ref": "5679762f-05bd-4f7d-9670-3b23117a448b",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8c000602-9163-463a-8b10-1321259fc95d"
        },
        "item": {
          "id": "ffd52f82-d093-45c5-8e4b-047b36baf00f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fe99f648-5c38-4136-81c9-bf7a5b0fa0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15368d2-e524-4f94-83d7-259a4ff37fd7",
        "cursor": {
          "ref": "bee33ca5-4fdb-400d-99e2-63d153d77d0b",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "10578ea9-31dc-4cbd-b11b-fecbd34f8b3a"
        },
        "item": {
          "id": "a15368d2-e524-4f94-83d7-259a4ff37fd7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8124a630-78a8-4199-9f77-b9839eb5e511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c59ce2d-40d7-42f9-abff-bcdc6bc2aa09",
        "cursor": {
          "ref": "9961eae4-8d66-4cfd-b99c-813f86f8fbfe",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b710b7e6-5cf9-4a58-92cf-08694baf6b61"
        },
        "item": {
          "id": "9c59ce2d-40d7-42f9-abff-bcdc6bc2aa09",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ddb44e73-dd1d-4f71-9be5-04260a2138f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7553efff-d729-44a8-b4d3-60a1c0a335a2",
        "cursor": {
          "ref": "9b59dcb7-01ea-4b23-b64d-795840dfd612",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "fa2e7540-6a9b-456f-8066-c4f14bb75baa"
        },
        "item": {
          "id": "7553efff-d729-44a8-b4d3-60a1c0a335a2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "da115e45-d8a9-409e-853a-68f3af1e52d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24414703-7e8a-43b8-a000-e468e1d5a396",
        "cursor": {
          "ref": "bd6f1805-161c-45e9-b0e7-37e158dbf71d",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "2ab658a9-2f19-4e2c-91f4-0a2d5d1ebf7f"
        },
        "item": {
          "id": "24414703-7e8a-43b8-a000-e468e1d5a396",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9ba61c3d-79b9-48ae-bebe-e2e480371b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee97770b-6fc1-4d62-898c-ffcc8e263eb0",
        "cursor": {
          "ref": "2ae36d67-087b-40d0-88d0-d4a0ca511f07",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "61a8e767-6271-42bf-b079-d6e643f64c03"
        },
        "item": {
          "id": "ee97770b-6fc1-4d62-898c-ffcc8e263eb0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ff4809b3-1aeb-475b-9239-85e319dc20c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c22cd6-a434-46e3-b530-0967ec59c023",
        "cursor": {
          "ref": "63b728e9-c091-48e0-9448-8bff6e4516a1",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "563cfe58-4c13-4274-84f1-48bcf26f8bbb"
        },
        "item": {
          "id": "59c22cd6-a434-46e3-b530-0967ec59c023",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7164d01c-1638-4a0e-84a6-dddb8b134877",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d79c40-f8f2-496b-8100-984569b59e06",
        "cursor": {
          "ref": "ff2b19cd-85c7-457f-bd77-f6fd0aa01412",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "5f1aa591-30e7-456d-8a08-ef141db7d232"
        },
        "item": {
          "id": "42d79c40-f8f2-496b-8100-984569b59e06",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7133dfc7-607f-4666-a000-de02b02dcf0b",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "319048b6-91eb-4fae-8c56-63a3bf120050",
        "cursor": {
          "ref": "9c2a2d34-b188-4221-becf-421b4cc1b567",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f6a88607-b664-429c-9e6a-c9a27039e35c"
        },
        "item": {
          "id": "319048b6-91eb-4fae-8c56-63a3bf120050",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f796b9c1-aaa5-4608-8fe1-660ab0d22fd9",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fb8398-2fa2-4657-8df8-d0aa47d66821",
        "cursor": {
          "ref": "79148ba3-f65c-4ce4-861f-de54bb6318c4",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "64065450-b2d1-48e9-ae60-b080ed5d73e2"
        },
        "item": {
          "id": "c4fb8398-2fa2-4657-8df8-d0aa47d66821",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2f1897c4-212f-4493-9370-c12abfc16bf6",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae3b91f-1f3c-4669-805f-0881a3f673d8",
        "cursor": {
          "ref": "5d4fe787-6398-4fed-b3cc-aa2e1caa6323",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "fa4d2521-3fef-4806-8cf0-df28e7ac4eef"
        },
        "item": {
          "id": "aae3b91f-1f3c-4669-805f-0881a3f673d8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b220ed25-0b13-4d31-9211-86795bfebe08",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae3b91f-1f3c-4669-805f-0881a3f673d8",
        "cursor": {
          "ref": "5d4fe787-6398-4fed-b3cc-aa2e1caa6323",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "fa4d2521-3fef-4806-8cf0-df28e7ac4eef"
        },
        "item": {
          "id": "aae3b91f-1f3c-4669-805f-0881a3f673d8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b220ed25-0b13-4d31-9211-86795bfebe08",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213453b0-3712-4018-b4b5-697addf616a1",
        "cursor": {
          "ref": "a3c25426-6202-4074-a60f-c348c841c106",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "592f9218-724a-4544-a983-744c2b2cb6a5"
        },
        "item": {
          "id": "213453b0-3712-4018-b4b5-697addf616a1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "bb6ce137-b261-47de-8aa8-66fcbf2462f2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e8345b-b9e2-45cc-84f1-234b6e925046",
        "cursor": {
          "ref": "1daf046f-8b54-42ef-85b3-c1d458a39b38",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "455f8fde-5174-4993-8282-a9b5d9e7e832"
        },
        "item": {
          "id": "56e8345b-b9e2-45cc-84f1-234b6e925046",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a7829a3e-5b6b-4e09-a541-af0bff0b8e4f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}