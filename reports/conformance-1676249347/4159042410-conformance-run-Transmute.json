{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c7ec14d6-4992-45b3-89ca-c08dfc22faff",
        "name": "Clear Cache",
        "item": [
          {
            "id": "833b71f2-9661-4569-8b85-bfb0bb6de863",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "93828ce7-9d5d-4926-a909-2707003186f5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d504b90c-b757-4447-9642-eb87a80cf6b7"
                }
              }
            ]
          },
          {
            "id": "c79bd5bc-3f9f-41cb-b567-dd04e164ae89",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0b2675c9-a3e8-484e-9db1-5f2953ce3cf7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1555beca-9a2b-42d2-b1be-3fc4bb3d700b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c887c875-d8d0-4d05-94a2-4c54718c19eb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "803533f7-5aff-4470-8455-ea9200879422",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e1836ee4-0c9f-4871-bd18-4833878c1c16",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c7e4838-214e-4518-857c-477fc29c7ae6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e34139f9-d931-4a92-8477-6c684e54e520"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0f6d3a7b-6539-4461-8bdc-7ca0f10ecbe0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3315ab17-887a-4ac9-b339-29a7ab71ab31"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "33ba51e4-ceec-47f0-894d-74044681f3e1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6e6ca84a-6cfe-42f5-8f81-c2f3fee70eba"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0d54fdc-c1bf-4884-81c3-2282321ceaab",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "577861de-632b-4c3d-a3cb-9310acc5460b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0bf6e608-5e7c-426b-80fb-2417809f69e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "938e664f-2023-4dca-9257-13cede6560d3"
            }
          }
        ]
      },
      {
        "id": "cade8ebe-96ac-49bb-97bd-7e729240d6b0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "dfb127f2-02e1-4d79-92fd-88318c4b440d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df905c54-52e0-4437-80f0-c56ed6ac2080",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bd842fc3-a83e-4af0-aa3a-5e29c5e3e022",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e9b11f-41e7-4993-b7f9-b5854ebebf7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9430da8b-5270-4ef6-b8a9-65abde30a9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c915b864-6fd6-4b82-b549-33e50d5fdf54",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "238423ea-563d-4af9-a70c-97b0cf737edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "682f7288-bc5f-45d1-83e9-bfc22a78597e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f40f536-36e8-408c-a276-769026ce57ed",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb024c6-f488-475d-b471-0f3f444d90e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "891afd80-b24d-424d-9088-effc0a541140"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ec78e7d9-52d4-49ba-93fb-060060a7c1c6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "23c1c1e6-157d-48a5-96b7-799e56a03d92",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f26f3b1-bc9f-41ba-9ab1-523afe0997f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "beaa3946-72bc-4950-a553-0a112b5166ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9ee4da-56ca-4806-a9e3-f1c56dabbb28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec96c229-4d7e-491b-a1a0-d9e13ddf7781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1495e00a-06ce-40cb-a701-7c789354e9dc",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e19b69-86d1-4415-b778-52a45041c70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2f83228-69fc-42db-a9ab-b99e95805fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc711fe-aa47-44a0-be34-6f87ed02cd63",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "b3680ff9-2d69-45ed-a53c-5848d8e8afda"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f296a94a-5517-4926-b892-ef734c228087",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a1dff253-fafe-490c-808a-4779533eb854",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3409c8c0-3bdb-4737-b5bc-1cdf98c96b70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fc8f7b7e-29a6-4835-9b42-ec10320c0684"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4022d8d9-c78d-4869-b259-4355cb8ffe60",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "708c6cdc-6c3a-44a3-9c31-74e4eb4fb463"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "029c0132-dbd2-48ee-9186-2ee28fcf567e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4c795b0-b6da-42ef-8428-3aa5d3bacb1e"
            }
          }
        ]
      },
      {
        "id": "c414f79a-543b-472b-9a02-e10ef48f0f60",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7b6caa21-edfe-44bd-abfd-3c38e67689e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dc1c34f4-a122-4565-9517-b87d125c3401",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "846a5216-235d-44d3-812d-4cbcc4bcb5cf",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6240c3-d9b8-45d9-82dc-9f2baf071caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae131e1-04f8-437d-9f34-187f17f14231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbd9b66-b63a-4c4e-90a8-32584cf43a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5194871b-3e2e-46d2-b737-96cef4d3bdc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96768087-f437-481f-92da-284e38aa35a7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa841e6-55bc-4f23-80d5-c6c731dd0900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678e1846-247f-47f6-a85f-f6be7d29b847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e16cf52-f1f7-42af-934d-387ecda21e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53411fdf-241f-4226-8be4-85d9b30b6d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c080ca1-46d0-4405-8ceb-d72ffc5f07a4",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66ffa4b-d276-4f7e-9c78-46e2a68c8b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fac1045-6b9e-4bda-95e4-2f9c1beaff16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00742463-08af-4160-bf2d-4cfd77a277d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5558f7b9-9027-40d5-b022-d1833df71d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488c8ea3-89fe-4986-9d24-f3d6c44508eb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885bf454-85b2-42f8-af92-95ca88c54652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43def964-373d-4a9c-8002-cd880122f712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddec8110-4873-4d06-b658-8b4b64d7b74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fa31a95-6411-4578-8c9a-4c5a19679af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9be4d3-e738-4f96-96d9-ebe2c02d0d34",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7297b0-05ab-4158-af54-4b53ab9c5e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11f9e81-b1f9-415f-8ed9-290faff173dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70feb96c-3b29-4bed-a786-4d80bf388b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2fd2fcf-2283-4ab3-af7d-2dba56d5ddfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab4de06-1d43-42f1-a6d8-79ab532e8a1f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96cce023-c872-4e31-9013-c8034f5e9b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1deb7f1-ef4e-4ae7-be37-35874c011a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65bc8384-feed-45f5-bb14-d82706b3f26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44fb648b-b96a-4fd0-ab45-074e8b690b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7afd8b64-d1cd-4c66-84ab-bc5a1392cffb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4680e8a6-9e74-4017-a9d1-02ac883c655f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf18690d-09d8-4d62-ae39-f1e9ca46778b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6999b0-e9a2-405c-a452-05af86a61006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3af5e85-7cca-4322-8f4c-cd4275045fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ee5aeb-5462-4c3c-90ba-907aa0c4d56a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfcbd9c-0412-473d-a1da-3a7434542b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4cf70e3-f18a-423d-9366-fe12eb612fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab01e66e-5be8-4e16-a7b4-83e21cd2e83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58f32f93-272b-4a47-9c57-8e6b4546a837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80a5536-97c9-4a68-bbda-3c39a8cf26ca",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e247f0de-80c3-420a-9fa4-dfbc0cbaf7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793c3cc1-3848-4a02-93b0-0722fea17ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf52cb0-0ea9-4f2b-91e5-8bb7a2462ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "788ab1a7-f378-46f4-aebe-59867e5544aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6dd0669-c165-4f01-a6c9-bf7891dc52a0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acbd81c-32e0-4f67-9f71-a17ebbec94f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca20523c-41a8-4ef2-ac8a-752c56bc5c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bfeedda-26f0-4a9f-8429-d83667346615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "254df773-48a6-44d1-a7a8-1fe86ab19bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec33016a-8199-4dbc-8f56-33341a205cee",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d793a4-ea19-49c9-8215-9ebe0dfaa1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e726ee-dae1-42b1-88d7-d2f2f21948eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e49a39-9ef6-4456-aef2-48ca93433930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "387661fc-c024-4ab2-81bd-c55e861a4073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43186d3e-7427-4b42-a78f-1d15b066f831",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bdd14c-4e33-4174-9513-2d5ba791f97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9913f420-460c-4cb6-adbd-293fa203c612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2d421f-3006-44c3-b33f-85636987c8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab4af06a-2e38-4131-a9d3-13e64b32cb5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566011ba-1e20-437d-81a1-83442d03d8bf",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cc7e6f-c6f7-4f4a-aa2e-52827e86ce35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc25160-7258-418e-865e-d8d716af9465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03de2176-0886-42d2-b91b-6ae6a54e20ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d33dc3da-5ef7-4b57-ab42-97121c52e5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25183a6a-2be5-42e5-80b5-83f9700ffeb4",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27de562-0aba-4bb8-99db-e13542244e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b054400-2d9e-4b23-9ca9-4059851ac2fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3922904-1490-4143-8b29-5f7c5f512acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "15190b5b-db59-482b-8bdb-ada322acc2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ef471e-206f-4fa5-a02e-1df235be13b0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5be9171-ed88-4de5-af4e-4c69f4ee71b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f555bf7f-5db7-458d-b78d-4fc8d04f63b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b6045c-a3f2-4801-aca3-fcd3559c5478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bd32f6d-3748-4800-b68a-1b04a2191482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda75d00-f744-4451-a162-1015fbb91be0",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6939eed9-a80a-447e-9903-1449c1edbf1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f80c1c-f67b-47bc-aa10-e1700ed8b805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64615e8e-a19a-4b64-ac42-3652482acbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fec9c840-98b5-46b4-a52f-9c2bbd649f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22775687-185f-43f4-bbe8-5abdad33ec48",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "085ac17c-eda8-4fc2-857d-4e3da8112bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3cb498f-14e3-4ba4-b995-01c7d5049bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283e5a70-9481-4f16-8c6d-bd9905d7564b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca1d841e-78ae-45da-8faf-bc9540bddf90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487c46a8-6b3c-471c-a5d5-d723ab480fcc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7287717-c922-4904-bc27-0a6a6e902683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6024216f-8172-4098-afcd-60b1866159d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87cb73c-d20a-4274-9c52-f9786db6ff08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be8f0a29-d18c-4735-95d7-1e4f15fcea58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01725f5e-9689-4c04-a895-b3f4f244c4b9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0daa7c-d49a-4d52-b068-a39f243e13ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1894d284-c938-41db-819a-a3fad80869a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275d3397-ebdd-4a33-b9b4-64bb47ce6436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40464e26-9750-49d8-97fb-5547305c6261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d559a442-ae85-4e29-8f4e-12cf9a4acf87",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bba7e04-77b8-4984-a003-c0daf9f880ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28187644-9478-48f8-b75d-481c8dda70b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a411a19-7927-4389-9f60-1db694eadc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9d3c914-dbbd-4310-9af9-c416e8fd4022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81506df2-eb9f-4204-b822-cb213e6abc8d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c4230f-2947-4a53-a2fc-6d86bd690ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "518e180f-a3ba-47a9-baa3-825977ccfbc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6305899e-6632-4887-8fba-0a74433593b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd7e1fb9-86ae-44db-8c6b-f75072190029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae11f4c2-c315-4983-9194-358c880bacc3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7f9ce5-0357-4fac-8371-83032942b683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e6dc4ad-41a4-4fd9-8e3e-1947557e637e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd9db26-4212-4ef6-8735-f2a80f81f5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42e11c84-4b44-4f32-a44b-b7abf6cbb93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34dddd4d-78f8-4c01-a102-e6eee590c403",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3696882-0b46-4800-a522-422d6bd177b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6adf91fa-72df-4b3f-895f-5a38fc01e6b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9e9737-05ab-4a19-95ee-bf61d8ded3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62050686-367d-4f0e-b1b7-d5d5b44f316a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbd1708-8546-45f0-971c-a089de937a6f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c46b85-e44a-4402-ac24-58c6ab727e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5b829b1-d631-47fa-b858-41fdd8cbcc52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693f4bcc-3530-4ae4-9f82-b1d41a9ae870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "721bbd97-c95e-4a34-b596-355768a05672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe37683-2502-4c7b-8c8b-60cea499c14e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbe1b18-02f5-495e-a669-96f517a761a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d5bb61-d1ca-494d-8c09-a37cd7ede825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3a64cc-8995-425c-ad49-d2818d31f8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03d6a309-2453-459f-95a9-56974ad0874a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f29c346-64a7-42ce-9d1f-7313008d7f3c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb153dad-57bf-42e9-bc60-6ab2377a1504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb2de8ab-5745-404b-988f-55110078a35d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34dc564f-edc8-42e1-8bae-84d6ca77b28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e9f00a9-01a5-43dc-90aa-df17c2e13f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d729313-1966-4bc0-9525-ff698ec689d9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7cd923-6595-4f7e-88bc-80cdae1c42bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30cf2aed-2312-42bd-96ed-ce9bdd86b497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140f3105-c2e7-46a6-8b86-1e0e756d4b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dda0502-e05a-4d76-aedb-a55255100bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12c86b7-c7c3-4efa-96e9-2a6bda7ea5f9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2444d810-19c8-4e6c-8e53-53c133cbef9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bed0018-8ddc-416d-b8c0-1cde639ef0ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77782809-164c-4902-90dc-e56e5b0c96fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5dbaecc-8282-4ce9-aa3c-165d814222c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2856c541-7d37-4ee7-9ff7-041524aca84d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b32e261-502a-4bdb-ad91-a75572f7587d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6afa55a1-2ee3-4742-82dc-fc5cca5b84ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f712a7c2-50c6-450e-ab87-9aa28058918f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "145f14a9-33b7-4d0a-9cbb-841158b7bd9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21545a16-c7ca-4973-9585-c738b663406c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8113468-a3e9-425d-9137-ff10baae158d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3ce3397-44f4-4590-87b7-350f809dec9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec006ab5-34eb-42a5-aad4-eeb907dac28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "60721f86-5d21-4cf8-9404-a4a7b82c0783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97e3f10-7818-4f29-8320-96e23a47d7bb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a537310-5c3a-44a9-91cc-7eb9d6d94084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17747891-9402-4244-aef8-6f9d04a53b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f00e3d-1be4-4961-9994-9378cc050f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b2c2c86-8884-4310-8067-0c983fa2c414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5068b5eb-ecbd-4a84-8477-d9dd51996547",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af003aa-4529-47cd-add5-dc2aeba45255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2889447-f358-4380-8462-2dc390ded681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739dd702-2ca6-4783-b7a5-40ee40d68739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca4dd72-9ad7-469e-8650-bcb863895176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a8527b-1750-42d7-85e4-2c6303a9be68",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d0c466-2025-4081-a158-d1508549756e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2982c957-5f3c-4469-be79-7a4ca56c0094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6a50b3-0237-4155-987e-a64bc119ea8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a15ebddc-1505-4a68-aba4-8682be4e8535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8928d5-9a6d-4d75-921f-8a1fa926a783",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c3cc9c-b3ef-44ec-8ae3-8d7eb38a9a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "502ec90b-c8d2-443f-8df0-35db6ccda252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4840cd24-e4b3-4690-a4d2-f38512cdd075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b092ef87-d2ea-4e13-ad57-0617e176b97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b74eae3-a230-4ec8-acbd-752c86e54a7a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a038bb70-0402-473a-a45b-8cf24547d5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb0a1ef-1bcf-4fd6-a4bd-c5ec09654c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97cf4e15-17b3-4f61-b341-b624f0511903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "767a088d-6214-4948-ac99-1070cbc202a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8bfbc4f-181b-426f-a781-06bca56e5eb6",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3b574f-8346-42c5-b7b6-4e9b75e10a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff7aa06-f013-4d10-b58c-429a2c69d184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd1538b-64ef-4e02-8bd0-4ad5c2fff7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8c5c95-055b-416b-adbc-4319420bd86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3069a2f0-6968-4188-b981-9d3eca263092",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab872b50-b20e-48df-b721-a7624e48baf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b082893-c9db-45d2-85b3-a624d8a9655a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c96f1a2-f3a3-48f3-b22d-ef4c811f6e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "191b51f2-2874-4aae-bb8b-40fea1624b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c4cf75-f217-4344-95bc-cc9cc0232cd4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180d8150-4ef4-4423-8737-307e0c65ec97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd2758cf-5636-4d6b-9f94-5c5033e24615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4229b614-d956-496e-b215-311a84a59c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a74fa6-8e6e-42d3-92f7-75be6cb6f18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e992d6b-be9b-4af4-8795-1b1d030001d0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccdc7062-571d-4868-b004-0fd204e84539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f1eb2c-aaab-4c7b-afc9-5367352a9089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b47282d-6df4-467b-8886-eff236c07bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c8e29b-7699-49c2-963c-b21845c338b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fe5656-dd84-4dae-9d43-3bf2c9bcf5e5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d319de-990d-4834-8bf3-62c56ee84d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8b577fb-fce4-413b-897d-b1d5b386689a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b9c8d0-4293-4a44-9951-d19c7be090c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "92e2feec-05a6-4fe5-a780-900ee4716e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13c8350-5117-4484-a56d-0602763ab15e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577bb44d-e053-42e0-b383-4f7fe30382a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7474b447-48b4-4b7a-a0e4-389608990f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9682502c-6c6d-4a40-98da-e1f8398b0353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "533c1109-0e7f-4cd7-93bf-2dc167e91ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1651955f-5190-485f-856d-c4b83b41407a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fcc8bd-9988-446d-803a-448f5a76a419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e6f591-4b16-424d-b08b-7b8718470b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564824c7-4c04-4515-97f1-1898eee49781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7953c9-48cd-4037-a497-69c1f6350b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f9502d-5914-4825-9f2d-9e46fd2ea6f6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ed849f-356a-44f1-880c-fc5153d9d8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66ffa18-5d3b-4a0f-bfb5-aeb6ecdf9dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edfcc08-7356-49b4-b14e-fc341ab96ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf23d4b-a40f-4c71-a096-1d4de40dd2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5514f016-578e-4526-a1b7-703013575b1c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3bfd7f-4e5f-4f17-ac5d-7174db94e5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ab5f88-a32a-448f-96b4-5306cf6e21ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46bbe1a1-cee1-4384-9a0b-8331a419fd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1b587aeb-a7ab-488c-b246-b1ad6215f00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef1bb78-86ed-48de-b91f-5279e9a947f7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf2e0be-6c18-4d38-b11a-48c0483e61f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469a750e-6cad-4add-b530-c227c209877d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c037b6a-e636-4946-afb0-d3ce7547f9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8b440e-84f8-4313-b53e-62ca7869320f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e92c5d4-994e-47d3-91bb-6155c2f1dbf7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d127a1b-4bd8-4c6b-8e07-b423dd5d5090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9568d89-1ad3-412a-81a5-37b468a4b28a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7567d3-a98d-4c55-ae0c-f642b6292e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae7027c-c922-4ddb-a41c-ee33347d2b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088f88c3-a365-42ea-b170-b80505e28da1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83fbc7d-7564-45b5-bc6b-e57d2c203ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c114ce73-fc19-4c49-89d1-b3b9189eaf82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcaba49-79ee-425e-9fea-b1fe90cdea7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4aa7a20-c9cc-4c2f-9277-db55f1c9230e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9294cc3-5a02-4fda-8a99-5bab5a9de24f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f3eaec-6779-47bd-85d9-472ee5519c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93720bd-43b2-452f-82f1-e5c594e9fbb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28462b41-bd74-42a9-ab62-bd5f1a468822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f70a6fd-3b30-4c75-b809-5bfb5d0bba9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4c630b-e94d-45fc-a385-be99e15997a1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fed635-1073-47df-bcf9-9179f807d1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ef58375-1a5e-425f-8574-bb625a5002e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678685bf-a4f6-4361-8000-313619c62af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5dfbb01-bc62-45e0-bd51-cb07425d86ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e463be7b-1874-4599-a40e-adbdb9d4696a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d40d720-cc00-4b0e-a0b8-9df1b0a711b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30deecc1-94f8-408b-82ba-dc50bac3a3db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd5baaa-40c0-41fb-a967-a9ef15050423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc6db73-32d1-4753-9cd2-ebbb4e2da69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c3da41-49a5-4b94-b35d-9ecd61b6b7b3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360072ad-1122-4475-bfca-acab719bfd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d0f9b6-7933-41c7-9140-4b25011efec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04eea96-eaeb-4a81-88bf-a49110942433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "28b428b8-c491-40df-a64f-621ad0a2965e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c619e9a-3f3c-4dab-95f0-79462a7945f8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edbee64-d576-41d5-a9dc-8331e5130fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b499d8ca-c105-42fb-9894-38473f3c26d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e96a6d8-371c-43e4-b7b5-870e0bac8764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e2dad01-6259-411e-a8b8-1edeb58e5f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d810a4-4835-4ad7-b7f0-93d9487e7b3f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be55b77f-5cc9-4ea1-a3c5-abc8cd0f0167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d649c2d-4b76-40a7-a29d-3f3e98b119b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b4ec01-59a0-4c97-b66f-e7facb536ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "031ccf1e-aaa8-4561-bf8f-ac3e8efb8506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c868bd5b-480a-4115-8be1-6cfe54a7d51e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef574ff-a5db-47fc-8182-ec8248f43a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "543e1c18-d99e-45d6-9608-37cb6092b6dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acc07e1-76ea-424d-a43c-12e9778b206a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecbe2b64-0e88-46b7-975a-02d382d6f02d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70734fd-f1ef-4d01-9105-02673afa6c2f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed1a389-6805-4784-82b7-eedbf7343d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0781e3d7-cd89-42e2-b081-892687af4fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef53f0fe-da17-47d0-9106-19146a605c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30a4ce4f-85b9-4cf0-a80c-cb38a6e64144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef1151f-f413-4ba7-9932-16cdafe5f8d9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b457b589-19df-46c8-a316-8a553f53a4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ebc1d6e-fe64-4f3f-8ce6-394dbd517a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedb9eb8-21f5-4611-bb52-4ba7098fbbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7171e64c-d510-4d0c-8b0e-e195d695561a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12efee6b-d912-4bff-8c58-f9fed873db19",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77d9cf5-8081-4195-be50-fcd72570c0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f8a344a-3b02-43da-b0f9-3fedbf75b11a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16360b32-8a67-4451-aabb-c00579d87beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4af973fe-270c-4d05-bc6c-75f7dcd3cd58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4505efcb-723b-4350-bdca-f76ed26c5ec5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6c30c2-2456-47a5-87e8-ed42990c22d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c4af75-c13b-4869-b9a1-2177f98dee88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952d4aec-71a5-482e-a936-22dc3e6fe91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "aa45c833-231f-446b-8b9f-39b5a46a8143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b07ad2-474b-4d16-99fc-8469ed805c12",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707dd18b-3c08-49d9-bb1c-c6638f97d23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab37741-62df-4313-9f19-7bc7646a7c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25dd64b4-0c55-4e2e-9318-88a4468445b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "89fa7b02-536f-4676-8760-570c9c01848b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538f434e-5fc3-41ff-93e4-8fd55a8be2d4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9687ee5a-8199-416b-94c9-07270e246aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0429f09-f360-47dd-8576-032741aff4c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af026b19-f439-4f05-ba78-7787ead89b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0729d1-5516-4661-befb-30d6fdd146f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b33d98f-04bc-4eed-82c8-1e365f913160",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c0b5f3-266c-4b3d-a3d9-414df0bd5492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f080bb-7095-440b-81c6-265231856669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38dc11ca-7058-4ee7-8707-b345c8371741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "482f768a-0b87-4700-90e1-1773242bf7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72cec250-3d16-454c-9b70-7fce0fe28ee4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794d7d6f-5fc6-46ab-858a-a63176d88548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c044df19-04f6-4c20-b253-38d49d306d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18a60d1-4e10-4125-96a2-12a41b0d02c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "73aa4364-3748-4677-9ad8-68727cd27c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17ddb31-3620-4459-a771-d6467789717b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945f26ed-95d9-43fc-ad1f-615f7c295318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aecf2220-4a58-4295-a6e9-29fcc97f8baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31191c7-5965-400f-8782-0b618a2b8f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "24ee18b7-f797-4ab0-a218-13cb04968db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a0ccef-3a15-4e05-8a87-599db6d626c2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc13babc-c0d6-4745-97d2-f144c9eefa81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "235c2940-be4e-4a35-becb-4e0e7df3c521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50d4f71-e6f8-426a-80b3-cdeafc9d7dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1b31ece-3b47-4004-a996-72a15c6c84d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad284731-69b1-4e93-ba06-7714cb31aad2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aab746b-597b-4b10-b785-098a1d809ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd697f14-0a20-47d2-9e81-6fe157e79c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba187f7c-054d-475e-9275-acf58387a1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5114a012-40b2-413e-9be7-dcef3164f7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f68758-819a-4876-94fa-50473d457959",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c96c0b1-8ecf-4c21-abf0-0aa327e8bb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c9bfe8-7742-4320-94ea-07639d0ccbe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41184707-1776-4f81-9cca-82ce8b43126b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84878cc3-968c-4564-bb2b-a0bdb03c509c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b972c463-3803-456d-b876-36d1c353302a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217599a0-1136-4fa4-8168-5925987b0e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0347b5d8-dd76-4682-a467-ac606fa836d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547d1010-aa99-4b7d-9f9c-032fe2ca3c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a032f636-a323-418e-ba6d-35291a12200d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbe3a18-ba00-4cde-8718-6439468052dd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f033fc8a-ab6d-4350-adba-2e1186e66394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2367e4-5570-4b86-9faa-40e01b0d38e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa07361-95c4-46f9-b676-5e53be0c7d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25ae4759-b076-4ca5-9f36-476def665d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac56e37-8f64-4703-8946-a269a6d3202c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de6c210-e41f-4439-9159-676489e600ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d70fe1-0748-44dd-a650-e7c8367d1622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb4eaba-3ace-45d8-9296-ce91ebe0f007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "90874f3c-a830-4a47-8fcf-c3638fe79f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cf976b-5172-4568-ace8-2c1ef86df2c7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fab484b-b2d7-4cf9-a387-0a8b01fc3c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "025375c2-bef1-4e53-a2a0-6d24792d109f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6acb41f-1fd5-42fa-bee8-1cbf712e7408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9270888b-b2ec-4114-a89a-bc58c63594d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d5c472-88ca-4a5c-befe-faa8025c55f9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33b6ed4-afcc-4830-af5f-6e548d7b612b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb713b38-1d2d-40ff-a7f8-4c9ffda6c39f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376e66a5-9b35-4b3f-8b27-c8569cae8aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e0bb0f3-6ecb-4aaa-8eb3-ba38ac3d5b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b660e8-4329-4795-a2df-5d791d98e655",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff183be-e612-4105-8a2b-c4166b9eea20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60044b1b-642f-43ac-a201-dd9334e1bb18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f84cac-b853-4ab5-a4ec-e1b96b7548e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d08f1512-31cd-492a-b734-6a3a5f6d3960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26830868-1d88-4bd4-9fdc-7d57f30629cd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1788e9-4bbf-47d3-890a-65dcfb14f764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ca07dd-a6e8-4dba-9b7a-9b5017767539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e706b5-be06-4c29-8af5-c705ec34b462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2760efe-f5bf-4cca-8fe2-5f26e59a1694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9631c78-e489-4094-9eb7-5782cc4ed086",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f309ef8a-8e5b-4635-a934-764a36f341bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc129605-b145-4d87-b320-78f2236926f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f063b2-5311-409f-bb22-3331096e0e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6fdb543-566b-41c7-a3cb-d5efdc53c46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba03cb7-c563-4430-afa3-1cdc936afa80",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860cebd9-7f7c-46e5-8179-b379f119b87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004e0d3e-23e6-4d53-a4ae-bd3e1642cf8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3adbf43-3bec-4a2f-9653-da6173c15ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfbc0178-afaf-4696-9bf3-0786dac39962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c221b68-c831-4ff9-86d6-45769029655a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa8c384-a7b6-43e5-b6f7-177c3804f266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d7c1ec7-469d-4e8d-8dee-549d7b7ffdbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792e81ed-1710-4561-86c5-92518a1ae3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "283740ff-94c9-4748-8944-dd9700c3a729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592eafcf-9ea6-4057-a09a-297c474f5baa",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7b3397-9567-4a4d-a827-b6611fdfb89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c73bf82-bd13-4daa-b56a-0fc183882807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6687e2f-f791-4d8d-b39a-576f8061723b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef29748-7d9c-43ef-b0a8-6755975094d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d790a01b-0a36-4085-93ac-ca2682f63de1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2966949d-05b5-4fd5-80c7-b055aa731214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd56038-6f63-4055-ab00-f9b6bf8bb685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361cc748-7f06-40d0-8c1f-98b37e43d6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3efdaa39-eb0d-4696-ace7-58f0042117d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb0f81a-81da-4778-a0b0-98326a2e71fe",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77e5953-af90-41ab-a92c-60d2499a1472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f05e95-9b4f-4d09-b55b-a8261ae2a2c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd573fc7-2b8e-411b-923b-4175253888d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "258232fa-385e-4837-851e-6d4745dcd041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37902eab-ccbb-4d5f-8f0c-331d76866637",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a2a095-a5d4-4ed6-85b5-587aec65175a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d18575dc-b67f-48ec-aa6c-6ed025b93262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43acf191-6bd7-4110-bb1e-33e2fbe306ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4dfea2b-532a-4019-9f0e-c8a4ec93af8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c24eae-c57a-4cef-9b8b-e32589e7fefd",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee211c17-6730-45bb-b579-ca2aaa0c132d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac314d15-b004-4bef-8d58-14822ab748e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b583e156-34fe-4050-8e8d-44ae2021030a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58c41c7e-e1a9-4d72-aa1e-7160411ac376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cb42cd-3798-49c3-a37f-edb95b29ad8c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24bbb81-1e07-4927-b36a-8b34ffafb0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94496e74-1acd-4379-95ac-876a5f09143a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17027be-ab35-4c39-815c-5ae5852a38e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2f99b0b8-fdab-4300-942c-64d89913d79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defe1f52-513a-4e8f-9118-4f464877f77f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0746ba5-f85a-4317-b3bd-0641fedc100d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a04d6e-0cdb-41b5-9bcb-4400e5d314b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd3bf13-b91c-44dd-ba71-9d22f172696b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "db2ba791-b8df-49d0-8f71-e9af762eecc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd597ad6-7672-4f8b-8294-99e715c07c1a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c42eba-8094-4fe5-bc07-9b4ad75c6d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ed265e-879c-4f25-9a91-8ccc940c8e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2363c55b-4b8e-42e8-9659-9adb62064f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6327bcfd-e8ee-466f-bd5e-f52813d30477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a15fa2-bf7f-4e61-9ad1-764e2591732c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2be0c4-7400-496d-8722-6ffeb5d863de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1fea26f-da10-48ba-badf-f67f18187064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2225a74d-e737-4828-95ea-adec6465034a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5495d8cd-4315-4e28-98f7-3303ae6ca5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d066718-6df1-4a7d-8165-02bf2c7c4c7e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba3aad6-19e1-4fd5-bfec-e1a7b1dd8df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd2bc4e-2fa2-4804-a7d7-62f4f0c39119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70352624-14da-44c8-b399-2e4be74ceadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef41125-4892-4455-878b-b44305fcafb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4951117-2ab0-434e-a8fe-45cf9e241387",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd48835-7854-4212-a97d-3c434dc1048c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e97b08-b029-46b4-aa08-607d686aa790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0be19e5-77fe-4f61-a074-0146a9ea6ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "986dde7d-249c-40c1-9f27-ef087d3a9fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5ee8df-2680-428c-b9a8-0d2f3cde95de",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589bf362-7d42-4745-8762-1ea31d0c8d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "658952cb-c06b-4439-a0df-c109e4b9f6bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb53b8f-d90c-4cc4-8663-170907487bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16444406-b4a4-4978-a8d1-fb2de4da1bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ce7d49-b630-4407-b5ef-57cb2f66d2cf",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d84fca1-98a9-468b-940e-7b7829aa8e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28ce859b-4784-48b3-be28-5adba61b69be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1807098-f8d2-45c0-b04f-2ced977f814a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "06b419ff-75cd-4943-bd15-a10484120893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0370002a-16cb-4dd8-be1d-5ffa96ae3f4c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41626a5-cbb3-48d9-96de-a2b6d2e3d0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d68ac75-e972-4437-96af-6a3458a3151f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d395aa3-f38c-4c6c-9d55-538b22548d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe24f653-fc4c-46a3-9944-2648a2f31495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc35aa4-63f8-446f-a99b-ba7fea6abbce",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c2bdc6-12b2-424a-888d-f7d58f5076e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91314a24-55b2-45cd-92ad-6bcbc07fac5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f5f3d2-7f7d-49a9-86a7-adea85943d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c4233ec-6a1c-4dac-acb4-f10a86582998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bdc4b07-63a7-482a-ba58-ae805411ceb5",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c52ebe-80b9-4e06-bcbe-03ec649d1403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36c1bf7-03b8-4d7d-9978-2f6da27c6765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42147bf6-6e1f-47e3-ad67-c5560fe12c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c50e707-fa26-478d-8f20-fcde86619445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf490e8-b255-4a8d-bc79-277d4f5d4014",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58104877-1722-477b-b2b4-06894a608f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dff4284-d525-45ad-9915-edc3fa3db9c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f53afc-fec0-4f20-9e54-f9bb3e22e5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "98e3e632-d57c-4f1c-803d-f92df257d23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c15afe0-d50b-4fd5-9aa4-9114ad9bd4ca",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e0a100-6e60-4fd1-84c7-927a245aa1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bc52b6e5-0b9d-4edc-bd91-5545caa47a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6deea6b-d93a-4154-9538-5796332688a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bacc604-f70a-41db-a74a-2bd2b458751b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3eebbc8c-a2af-4502-a1ac-077d061606fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56c1440a-7ffb-4bf6-ad57-b8797c252d26",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9d3467-364a-4ba9-9d90-c769dd0ba3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d400868-4e31-4e48-a59a-091f328660f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c0af11-ab38-4373-a403-9cdd2fb2a525",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "e6571a01-f3dd-4afd-9257-f6a9362990c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d46d91-cd5e-4535-be92-86bfc16b02c6",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7249eb-658d-4578-bd9e-a8dc6af852a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "315e36b5-b71d-4f96-83fa-d8852f0ad9f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9cc9a3-7e16-4d34-9f41-99f1f1d2d6e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "480b42ca-fb14-4fda-9c13-3aa26f8a065d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5dfecc3-4dc6-4969-9092-56064bf9bf86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29c980b1-d0bb-4d77-8098-2e432414b9c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b763b91-9d32-4845-aa57-df374e998851",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1eafcc01-1975-43a6-ae5f-a5a48aee06d4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dbc486f3-cff7-4160-af97-359c441f4ea6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e1cfeafa-5e01-4aac-baf7-df29f11854a0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8505da7e-7d6a-4871-b080-ad8dfd1eecf3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bf87affc-6d1b-4889-adc0-1134c95e2447"
                }
              }
            ]
          },
          {
            "id": "617103c0-c99e-4519-86db-87b25a865154",
            "name": "Positive Testing",
            "item": [
              {
                "id": "992302ac-9f7f-4505-8927-5475fea38ed3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3864561-f75f-4eb6-be77-8b2f58d016cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fea72ff2-e2cf-427f-8ab2-e839c81b5563"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9957e21a-3400-4eb2-8596-f8421faf74ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2cc013aa-7f3c-4c5d-986d-1b8629cf9e70"
                    }
                  }
                ]
              },
              {
                "id": "2eef8e80-f386-45e1-80d7-22ee8659bce1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e736535-50c4-47df-a4e8-b1478b98bf28",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f03eb698-4074-4f83-ae0f-bf1df0638261"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83b97f88-be9c-4ea1-a94b-8f2e60d4d646",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5cfbc63a-b88b-4771-a1e4-640148d7e084"
                    }
                  }
                ]
              },
              {
                "id": "11374ee8-62c9-430d-bb04-df65de888c3f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e5172f9-d7f3-4602-af26-da7d8f7119a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25e4ebc9-fa43-4df3-8d62-19998f091543"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd17e4ee-bec6-4429-8f4e-3a328d407a39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "43ce6b3a-7d19-416e-8807-629174c1d124"
                    }
                  }
                ]
              },
              {
                "id": "ec94fe39-b407-4a38-b96d-679ae9b11fb0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "191e21cb-8c21-41bf-86c5-24038795f7f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "839f3e5b-21a1-448e-b03e-d56cb73c4e90"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11b5e950-43e5-43eb-9060-b7f8b41dc378",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "338d5bd7-096b-4d11-9038-402a2cdbfc8f"
                    }
                  }
                ]
              },
              {
                "id": "018fb447-3838-4e78-8655-10af5c7eaa65",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a7858d8-9670-4b23-847d-5e5b362d0250",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a1c0360-7ae4-4132-b621-d90737cb4a3e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25c7088c-bad6-4ddd-9d58-6fbf6c7c7f68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3470cf53-2c47-4af9-83b8-6cb591613cb3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "27c6c1d9-0681-4ecc-8607-ab6c7ec2984c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cad6fc9e-5f72-498f-be72-2ed1653862fa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "25cca27f-196a-4f06-8392-a132b51375d1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fbb03087-e3c1-4a52-9919-ff824625b3c0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b22114a8-fd2a-4ac8-9f6e-9c86e5d526e6",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2288e50a-5152-499c-8715-937e099a129d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6288a3a7-6d99-47b7-bc53-29db6c830b1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6be161f0-abbe-4d5c-80e3-85a1596e44b6"
            }
          }
        ]
      },
      {
        "id": "36ba9f77-5b6c-4b89-9f27-00ae45649738",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "03b599e1-1a17-46ae-820a-f63fcfa2c533",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6330891c-1c38-4151-9df8-1432ebc89d71",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5c815aee-8d70-4ac4-ad2f-bbcec574605d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12131d3e-b37a-45f7-925e-1b14414f7f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83518ef-63d3-4674-bfb2-efc6bc2e575f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c26b15-1b8c-4f39-8b36-a95df6f21833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb5879a-6c73-4909-afec-1d6830c17dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b8fc75-73e8-49e6-8b6b-70b1f4cbc696",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f047355-33cb-4227-bef4-e6cb27e149f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2af8e1-3e16-4666-9261-00653544e7b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4aaaa79-bb04-48d4-8b4c-34b71f98db9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "11f728b9-0b9a-46b9-a728-5f8e6140c89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544ff33f-6911-4af6-a14d-7ae0d4e58f12",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eae3320-5d93-40d5-906e-c2fce3743127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b046e1-d2ff-4250-a2ce-7f25f2ca6305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b367ed1-2dd6-4f10-a6e5-bcb099eef6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c96030-da52-492a-98c6-7c38c722a807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6556fe4-4ffc-4059-ad47-f51a80e56a94",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b52c6d5-3d03-4129-92d4-e1914c2eddd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3333d4f3-7f6b-4bce-bbab-24aeba3deb8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d2be6d-96cf-4949-a99f-08c93b8787ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71aec372-5a13-4338-a8b8-62680eeea84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba86da0-0e38-4414-a30c-ac8d21efbf45",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca89373f-a8f5-401b-bc56-d3927d93ef31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35d2d9b0-d106-4e13-9821-bc90a493def5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261baee0-90e5-45a1-9b01-2cfc5c22066f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab842519-910c-4586-83a3-179f1c8b5054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4adbdd8f-3292-4809-b41e-8af6b77f51c3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f770a8f-8adf-4f4d-ba17-2e4f07da8879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "556499b7-c240-478d-97cd-20813a943dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfb3bb5-31d8-4bd0-8418-00138100a782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3cf1552-f284-4b16-9973-72185dc138c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569843f7-7ff5-4150-a01a-b281ad6877e4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40eb2cd7-580e-4fed-94b1-e7620a6e295d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7b2315-970e-4934-9fe7-ef71b2781e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe233c63-f8b6-450d-a8ab-c4a3818003cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e85c913-63b7-4b46-b17c-9addc77f6e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493a4d54-1623-4f0b-a72d-eace8cf7d499",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ac720e-c383-47f5-ada9-21a8e48cad96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4167e19c-3167-4a66-98ae-8e5c04561d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4fbce63-79da-47b4-9c33-ef4d1b90f0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc0667a-d36f-4cdd-8133-f808a97996c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5d3b11-ffc8-4853-a5e0-96df5214d942",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227b5084-b92c-4d48-bf43-2f0fa1877de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "819844d0-0dd3-40a4-a1b3-7747b73b27a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7acde2b-bd88-49b5-8a46-1a0b33817c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad83be8f-f221-4235-a430-56fcfe816ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfdae85f-c3bf-436e-807f-66386eb67877",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "929f0100-99ff-4b54-98d5-30c64547d8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d221cb-993f-42b7-9549-9bb1ac76ac69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43fd0e9f-f997-4400-839c-126e35a75ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd15aa2-ab4e-48e7-a3d6-9b8cd203312d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d19953b-c8a5-4abf-8656-d58f388bc605",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528fccaa-64a5-478f-a1b5-0dca642621db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009326cf-7d8e-430e-83e5-1bb78dc1ba33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc6206b-208c-4ef5-b90d-aa662fcc8d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "715c1f87-3245-438e-b224-6ba9882686a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73507d63-1069-4c14-8313-cfc17a78745b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11dac8d2-832c-416e-9bfe-7133264babda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ec6b15-6bdf-41d1-8f1a-aa980ec985e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b064c6-6cb3-4314-8cf0-6a0bbbba5c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47d976b6-9383-46dd-bee7-d04e5bbdca18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85072c0d-007b-4f5b-b5b6-02cf1db2149e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2020de1-4f1e-47a2-bdb7-97cc0814371a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d864011e-081b-4da0-a200-b5d104c3f476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc760e47-221c-43be-94a8-56cff9d918fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "efa204ed-6928-4bb6-b298-da950bd0afc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3498fde3-6042-4889-91c3-073b7efbfdb9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382d730b-1f29-4ccb-a9a0-05713cdf03ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac5a60e-b94d-4951-a363-646562c46708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d3caba-70b0-46f9-8b33-15ed1ea50e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "97c0e94c-2397-4d1e-aa70-f8b04cb653c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b5318f-f7fb-4f35-95a4-45a6e3b91b4e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc34db8a-7ff8-4fa1-88bf-963e6eda0bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1218d0d2-aa3e-4f62-bd1a-2a458199cadf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb5d723-35cc-44c4-8b04-73b8c69ed823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e24d54-091f-497c-b85f-0280d3e648c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52278f98-9983-4348-956f-0e038b050baa",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca57d8ed-1c5b-42d2-b7e9-bc7569fdc75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "406df9dd-aa15-4953-aeb4-2b6dc5e699bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e127fd39-bfd5-4317-ad52-f5794303b177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "18e9b423-91a9-468c-82ca-52ece75a1c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b28587-1a5f-4f46-9cf3-979578f6a1bc",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18910918-6799-4b5d-b541-a8755e2a65d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d2ec873-10af-45e6-b80f-f29af43e3984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0509d296-dbe7-4a04-b21b-27379e03136b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "923e9f4d-2649-4c14-abfe-962b89003e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b493fe28-4f11-43c2-9f74-4ab553514de5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de68f4c-5f46-47ec-a740-0c7c1a680441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28433bc8-ee67-4e4c-8505-23befe4a085c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74ed6fe-fc84-4f34-aa66-e31d7a113ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "36a06086-ccf4-428b-bd27-3f3bf348f8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa39f2f-f098-479d-b542-a3e531e6a2ba",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546685d8-1e24-47ac-b9a6-822f88c795c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252f09a3-15bb-4f10-bd30-34958552a595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2f85fd-8dd7-42ba-b774-9edf0010002e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1c7980-9e46-4f4a-b070-52c26e8bb6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9150d98-4c01-475a-abb7-fe428b19337a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3d47ed-289c-4b69-8dd1-c8b66fc2312c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "372eae5d-c70e-483f-97b8-ab340e9bf91b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7566764d-b160-4c69-8271-35cc599b5f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "926b5ff3-68e9-4e27-b13f-0abb89d7671d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c3ad83-6397-451c-b47b-e3c19bd6f350",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0008f559-17a4-41f5-a7fe-d4cfa1bc296a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc91a9b5-93c6-451b-8cdc-28e9d6da3ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cf1b9d-00e2-40a3-8471-6444fe6036eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91919d3e-e929-495c-9dca-b253fa1e404d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58dea7b-de05-486d-884c-880d5da0f142",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd35b4d-33ce-4e51-bf9d-7ed092ba3868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c964d143-56ef-46d6-adb4-0dd2c8311bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a72b9d-94e1-4999-b1d7-afa0e2f5549f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ed86b4-65ab-4ce5-bd95-7e7cea486ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c64cf5-dec6-49f2-b024-219cf3812e60",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2779320c-5110-449e-9787-470d7bd6670a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffcb6cf6-3531-4e85-98c4-c1353ea8f115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6951e0b-2de5-4185-9005-fcceb94eed39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f90ab6e3-1bed-4b61-b31f-93d558d5a02d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e038b303-d095-438a-9170-c6e13de95004",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8358e0f1-edff-4298-bb94-c331cbe3ae3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb93585-9db9-4636-9985-d5caea1cb3a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21cfe536-1d43-4a08-ae90-2ec512681519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c876b76-6f63-40f7-98c7-1765c661d38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e72645-9a7d-4a3d-a60d-741a74f8aea3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf2eeb0-6cba-4157-b592-5b38fb6d5a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11e23b5-3284-49ad-98c6-dcbb57d107e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e06882-487d-4a01-872b-f9a6058da523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d606f8c-2f41-479b-8bd1-c72c4fc9bad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a98da2-413e-49bb-bf0a-bb9dcc00df4a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc927d02-b9ee-4843-b44f-3880b2e2a9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c1c298-630d-420e-bb4f-af5b3b097b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48828098-d0f0-4730-b9c7-d3e070122065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e773717-d40d-455a-8b72-3225f93dcae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95811fb3-b2ff-4973-9008-40fce01bfd0e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bb100e-7444-40e6-98c4-fdc7f551faff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c9f762-c1a7-404c-baca-c1e376146b77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f91f454-9a62-42c7-83de-bfafab457119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2234a2-dc1d-4a4a-a90b-56ce958e279f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba22279-a79d-410b-af44-997bb6c1649b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfa8342-4471-4d9d-96de-9cee49f3eb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9493e9d2-1006-451a-88b4-514e57c7be84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e55870f-8a77-4a51-97d6-28fe3ac50085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e997d180-863b-4bda-8c22-77beebd00537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3d64fe-dcbf-47d1-834b-9db26f78c54c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33072d05-31ef-441b-ba14-3e0845e695be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13baeea1-4f73-49b7-9297-eb9a7cdf7c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4015c17-e5f9-4d28-a6c6-6b6dd92d308a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c70c1882-7bbe-4b43-bcd3-3137d0f1f2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd9fdec-139f-4017-b202-63a17e2366c8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8d81d2-015c-4eb1-92bc-fdb9b565a29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d9a4dc-c1d3-467a-b91f-29021e8b2b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396e401f-bfb8-4951-ab77-71f13917b992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a509ed2-7495-45c2-a899-1d4650f42b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b7c4ae-9ca0-4332-9ee1-f36f7bfc8336",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95c12a5-e232-4cc0-b317-f6c3639d41aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102c5036-628b-4afd-aba9-cf0eed5e63c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40835a74-483e-43fa-b32c-5ceeccc805f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf13fe1d-f962-4ecf-9857-bdd319ca2bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f6adbe-d264-4acb-b522-f9c4b1fb17fb",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b7bb72-be47-4a66-99ef-748d22fae963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d42613f-e365-4a9f-ade0-732e0283ca68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6cd17c-1d30-49c8-b313-a8bc96df1a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca025ef-df07-4c9d-8ed1-ba275d87efe7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "74c2a71c-ca96-468c-a92e-5a9e9680c495",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a1caf4f8-e2fd-40e7-9d13-e130f16f5ee1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c4bc7f-6dd7-42a7-89e9-361e906bdedb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172b80c1-cb26-4fb6-a82b-f5e2f9a7c18c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a12f72-c381-420f-92a7-116d0d5955a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1092bc6d-1ed0-426a-8d15-e5afd77ceea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5f6b54-e2ce-4e07-8efa-6ef7055afd48",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9e837d-ed29-4cbb-a515-22a408b3c357",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "8c0ef238-3dc2-4b96-b806-3ed368e0e392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d9a163-5deb-4d6a-bd73-a30e294b1975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "385c0561-6fde-4e1a-9e16-ee35528fd3d2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c89600d-9dcf-4dd7-8b81-af89ab1cc257",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e98a718c-2e87-4991-a1d6-261eb8d5bd98"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b816ef55-8a34-4c11-8a0a-40384ca17d4b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ddd3ecc-f166-450d-a738-b7fe1f056e12"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00c9187f-65e7-4ede-a6ec-e72ed777157f",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2452be3d-e15f-4138-aa8c-fc805d7f8e29"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0ce3a11-0fbf-4b3c-ac5d-f0713ed6290d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad45449e-5961-4764-9661-680862479393"
            }
          }
        ]
      },
      {
        "id": "5f355b8f-4893-445a-ad23-3793355a7138",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f14fcd05-e944-4c4b-a5b3-f3c43c493117",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6f356ae8-386c-46ba-92cb-3529be856991",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ac229bf0-f6d1-4a5a-9a96-63bddf68f08b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c3ae94-627a-4b56-9cc4-807041f241e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4079106-b714-448d-9801-c606f6e27883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed97c062-35c8-41c4-b1c5-43df84ffef29",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539641d8-9cc6-4b43-b4fc-a7c776013e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aada3e1f-ccb6-46e8-b34e-96b1d5400297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523c9238-44b0-4453-85c3-b80d480afcca",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4edc0f-7039-4c94-8330-fbe3efc2610f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e67f13d-57af-440f-a1cc-1974567f84f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f6fe28-2b0e-45e6-a959-8bbb6377528d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327681cc-76ff-4a80-8a6c-439c7d1bf0b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40cf74c5-1771-454b-a122-f19003d5245a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec19510-391a-4e5b-a946-510e4bc25288",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fcf3648-2f11-4fe3-8154-c3c276da50c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b4bfe18-dc7d-4941-9754-fe5efe118573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a741af5-1701-4ac5-85a4-c9e43c43d733",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6377b047-1e77-4459-a2fb-723723b29229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e92a5633-39d6-449a-a074-6fa109c5c12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976728e2-ca81-4817-87db-6bc334423b80",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19baa72-dca0-448f-92f4-25244c092dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62107f6d-a459-4e20-a919-022826713c15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff4c9f8-becc-4e87-acfb-8ae3266b7a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb274ad-9fe4-4557-a890-9c8a6914ff8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5e5e86-0401-4f58-a33c-ae897f9847c3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074b6239-5103-4644-af80-5ca4874348ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab46549f-8ddb-476e-89f3-c9501ddaed95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feaa6dd8-8603-4ec8-83d4-bddf6b4d97b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c11565-d60c-4edb-8b0b-7dbb073d14b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0edf9b8-88f7-47ad-b33f-623f4940f4ca",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b99627-7ba5-43a3-98b1-feb5fa73c3bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "490f45ea-c8e2-4f19-99d5-c27aa6aa4eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc3ffda-3296-48f9-9c7e-b7b5f2e8c70e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4645c230-47f8-4188-88fe-677f81d8e7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb801c4-dc29-4c0a-bcab-8bd876693540",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb1942e-5609-47bf-baee-12ccbb794c34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3739b7b-b7ae-4b7f-931d-ea6ea92ede71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a114d146-f1d2-4b16-8bf1-668cbfa60a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc605cf2-6fa4-46bf-95f5-6d70eb126432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9acce00-f4bc-4bea-a44d-3f1cf907ce2b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97145248-1638-4097-96ae-c0f1fb038754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c67fe4-6341-4dcb-b986-be2c4fb45f97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7caff0aa-8cae-4290-a66c-b8f244cd8441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f6b2a1-b13b-46b9-8d4b-9c4009a5313f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9dc3acc-b1c1-413a-8229-8271c3ec8ba8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ea4f3d-7436-4f83-91fc-5501106c810d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83be06e8-0ed8-4a7e-bdcb-a26c2437e54f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a9a631-fa60-4641-b8ba-fe36005600fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e8c456-a220-4cab-948c-f2fc26f12872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c094359-4086-46a6-a846-635f5d35b7f1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f44bda-5666-49cb-88a7-fdd82dc4e5c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bad2e4eb-c5ff-48c9-ad1b-35aa55a6eb1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e628f6-fb61-46a8-a7bb-f9f5b491d8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6bf0550-8995-4369-a52b-a1057afa8b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043166fd-b054-4fd7-9f4b-98e8b97c09d1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a905b4b-0fe5-47e0-a915-e60ea3e77eb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b1bfb0c-1fdd-4c3d-af77-165d037ccb4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61fdc55-2bc8-431c-9e68-8f61659260ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203b0236-44e4-45bb-be04-7d1b3653d1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2703d2cf-2e3d-40d8-909e-5a1495fe1a6e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d6d4e6-78ed-4aeb-a5d4-f2384ee48d29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d840a5a3-5881-4f70-a805-6aa42cce6a97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9390de9-26f1-4977-aa49-abdd8d74bf29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18864bec-b832-474d-9351-072fdb648f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e613b52-f5a4-4d89-8000-1f5b1d8dad94",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b51421f-fbac-44ea-b737-fc7206775026",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba736235-1ccd-460f-b2a2-43c10f34ed87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "049a8029-2cb5-431f-a2db-4ba2c94bae4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c02b53bd-510a-43de-8363-db03145ef664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09082c13-96b1-48ab-a9bf-35a70984aec4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47579f93-7950-4e23-bb08-a30b98dcd435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c9ec8b-7000-4b59-8b96-32a5d2c0e50a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27333baf-764a-4c3f-8399-6168de500dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8941e7d-8de5-459a-8f9e-0e0de328e353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58083f66-ade8-472e-a20c-4b7538d77619",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c875ebd-7ea2-42fb-88bb-ddd8fb7c5e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68dd17f-53fa-454a-bd11-a68bbe546b91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b465754-fe2a-476d-a206-a8abefb12be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a18b72-c1b6-4b00-bd5f-2b0cfca76d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0faeef-0da9-49fb-955e-531737c40f43",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f8f3fa-aed3-49a6-9df0-076d724a54c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ff3f51-1054-4fae-b40b-dcd6f8ef22b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6f06ba-5613-481f-8bf8-027180c8916b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b09ec9c2-39f8-4ec6-b7e1-9407802b2621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e3ac21-0dd1-4029-97ee-6708c09dfb2a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afeb846e-cff3-4093-88f0-7c4c2b0ae463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0bda617-9b2f-4abb-8bbd-0487e1bc7e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00e8e65-9c40-410a-abeb-5a05cc073579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3986f29f-5150-41d0-8ad2-c0f192afca63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3966a7ef-0e2f-4c61-8f7c-385fb87c7270",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83dfff9c-015b-4562-9764-76a4ad9f3ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59961825-2773-4471-ba51-564b826458fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3fe82c0-7df4-4d4e-a451-ae5e714b3b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b81f7c-65bf-4d3d-812a-afa46cfe5887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2f1ceb-2674-4e32-866d-b507ec0c7fb5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae5b83f-b326-48f8-94f2-18aed3f87c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e2266f8-3b74-4d43-9e2a-c1aceb0df960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "132e8f37-2ebd-4973-b6a0-e94633a93cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2718d19-9fd6-4bfb-992f-849f9c934887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe3c776-7ad1-4123-ad43-6a8230f45964",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11166e35-23d1-44fa-b1f9-69253ece67b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c917cd-d4d5-41ba-9fcf-0c7c25c278ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96d3e5e-3560-43db-8bb6-f53273288565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd167460-27e1-4f9e-a936-f41335401b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d1d455-9475-4670-93c6-e53bb112ed64",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5352f2-4744-4c20-a9c0-b505f964b85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ec68d8-0fc0-4b53-9275-4fd880c3a03c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e45049f-a5ff-42c0-b6dd-0fe97144e91d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f93f71e9-4f35-4394-bca6-8281a56c7299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c625ed98-7503-4c2c-a119-e027b8384b81",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e5ddea-d49d-43f2-99fa-0e9630e42acf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "934b9ef4-eb84-41ab-9418-6635c79eacf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fdba5a-bcaa-4803-9edb-666d1c01dea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd0e9ea7-394f-450b-b28b-e47695d40cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9de291-4e3b-40a4-a8fc-470f39108b63",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404db310-5ff1-4987-b148-7a95ed6ef9e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e675f186-5084-4c49-8de2-b6358936d660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b3a7ff-702a-4dab-a80a-7b4fb1d46c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d7fd57c-9268-4a15-a30c-80b7a68bddac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b48e8cb-88e6-4ba1-8d6f-2bc72c113546",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feeed3b3-e428-4c34-bcca-217c3ab30266",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ed14566-9dc9-4e9b-a405-f041780d4022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ea94ba-3b94-419f-92c6-7f32e6cf10b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29097f4-3edd-4beb-a817-a6d849ae6ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29edcf68-43d0-4d24-bbb2-a92be5b5dd5f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087cc10e-2d04-46d6-9589-34c0e5ed30c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f978bd6-6ded-4276-a815-c7e21122712e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58583870-9e92-44c9-94df-7e178d3be97c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc38aa3f-c4d5-418c-b579-14dfb99441db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b74a46-6050-490d-a716-29938270952d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd089ab-e182-4554-b950-b907805cc5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed61aea4-c43b-4ea8-8d07-3f21c45042f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5b4c27-78d9-4e22-9bf3-0508f973f4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5745c49-13e8-44ac-a19a-8baefdc2dbee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd35ed0c-a62f-4bc5-ba8c-a852cd739d69",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e7eaad-f1cf-4a51-a257-06f5bca42d83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97c1458d-e601-4815-aa26-1ca9bdb1b6da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cc73d5-840d-4197-86fc-68c14c2cbdd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef43fb97-3fc1-4bfd-8fe9-4ca34bccd95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06814c86-b173-424f-97ea-45df36829623",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23991b2e-71b3-48f5-9a84-75af93a894f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "745eef3c-cbd4-44cd-9ee3-f1045fcbefb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0bcad51-f6b0-4417-aaf0-347b21047a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb3092e-4d08-4b0b-b9bd-208fb0465f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3aa93b4-6539-44a3-870d-5a2cec58a107",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e99e913-d966-4b8b-84e1-52bea2bea69c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92b0adc4-0e68-4d57-a6e5-4ec5b050224a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114b5f19-1dfd-4c18-bc85-6100c9c1a2b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c92376-2b2b-43ba-857d-1120700b2cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d848cf23-4c98-49e5-b60f-75644daaa611",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9376279d-3003-4fd8-a66d-b9334cd0edc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04306fab-2aed-4510-b048-a83b16bf991a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4b3516-8a57-4b33-b971-c313289d5dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d865ba4-351b-459e-99a4-54bf582ff184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9a7d4b-22ee-4441-9718-f61ee15a8b59",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e21311-c3b6-4b1e-afda-16a537b3ce74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83327b4d-f071-48ab-bb4b-86657fd835d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7892ef6-26cf-4ae6-89ea-838f5df208f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "071bc6b0-8c04-4a70-86cc-7cc922302ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d64f40e-a010-45ff-9755-5292723be8bc",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28afd23-0e62-49d3-bc95-c4e55dc2f928",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efc47726-078a-45d9-b419-0cf3d0974b83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e59b15-9af9-4c4a-bc16-b1de42e55948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d00ddcd5-c18c-459d-a183-6b9c7c0a7b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93c4fcf-92aa-4c1f-ac5b-3018e00659cb",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134b49db-1181-4ee7-8ce8-a9f84df10c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b8fc60-659a-41f1-9b5a-dbb095d4e6f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2a78fc-8535-4f76-8182-e9ddfcbc0a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8123ad4-8207-4cf3-9ade-b0c8dcd4dc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915607ef-67d0-4c99-ad51-3a1884cc2984",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016c4bd8-5a73-4178-88ac-c992e1b4a4e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3237301-f401-4799-9098-81fbb8137e0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9843e5f-d97c-4c48-b9ef-201b2d43254e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d201e2-4fe6-410d-afa7-4a56f93c1688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89e59e2-01ae-4551-bf95-c11eeeb1c006",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800014d2-6c59-4f89-a885-62f830dbb40e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a2d10c-62b2-447c-87fc-3fe99ff936cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a07497-a359-49a6-9612-8dda18913632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "573bef37-d343-486b-b3fd-8bf6506d1e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdcde5d4-8456-4808-bd37-0c007fc6a3f0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9f6c65-94d9-40e0-9139-8210eb473977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42ba37a-33d3-4871-a236-08abcf6eaccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b9648b-22aa-49cb-bc3f-c53eb1a9f95e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6284d559-bf2c-42c6-b992-f018ccb25cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebc9007-837a-4abc-a56b-59fb090b92ac",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c66c0e-9575-49e9-b0e8-df82e55cbc33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ffd84d2-9263-4bb9-9abb-90c659c57bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1817478b-034b-47f0-a106-6efe5531925e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e36301e4-337f-4420-9e15-8ec39adfbaa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49db607-9384-43b0-b892-497c4cd0d213",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1baa1214-63f8-4445-a031-442985962296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a51624-eff7-4e83-98f8-7df8e16f701e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c017a5a3-15ab-4786-99cd-b42d3ac1ee98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ceaf74-8441-4a44-866d-4d43fc99f2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd658343-c776-4847-b066-7b733ca17e01",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07943e7-d708-42de-b5a1-72211e3fe497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9f0833a-3814-4b6f-817f-7b51b6265b9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b570ec7c-b855-4585-96cb-9a9c6553bcbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18b17e9-3863-46d0-8d37-f74e4271a238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df75837-35d2-464a-86d9-2c8c12f44555",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9ef4cf-2a66-4689-b075-fca7151ea0b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a5afc23-c265-450c-b057-b7609a99143d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e3478d-215b-4c28-b8be-f32bf88ea0ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ee968b-2d71-4091-91a5-024561395281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10d54bb-b814-4a2f-91c5-e5aa7bb0d60b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d0f7d8-17e1-4c37-b12e-27342efeceda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203a2055-7039-42f7-95fb-e969be928371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3ac00b-907a-43a1-9967-a1bc231aedd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40143397-31b9-4553-91aa-0c636eac1490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fbb787-77ee-47f9-be23-3b35333a7be6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922b00ea-b45b-4cff-9e63-9606b3b006c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba273809-70ce-4c11-8353-b2830b0d05c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebc059e-b7ff-4747-a8c6-bce635a22310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c8d4520-cbbd-4c55-b490-3a990220a8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88ea179-bf1f-4c4a-8750-06b67615b750",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4604584b-23f8-4fec-806b-119c6702ac08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55187836-8d9b-4bc4-b575-d7a61a42c9c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3184b17-bd2d-4fe2-b008-1a08bd9777fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac7aa3f-95af-4f61-b3eb-393bdf8464f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32abad8a-2dd1-4889-bb99-af648d4efa5f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1dc791-539d-4a71-8df3-474eb92bcca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f3f4d9-72c0-457a-a0c3-df7cfd548378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df312d78-5338-4275-be09-de527c62d270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df91522b-0f61-47a5-9488-9b59f51df6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30ad054-849f-4602-8d02-353d3b62385a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af73884-2067-4d16-8ef3-8c9e008e5f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "859e6ff1-f764-47f0-9845-eff7dc49805c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b499a14-173e-4e91-b65d-3b78acd2b05b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf47f56b-ddb3-437d-812b-1657a93845e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1826a6e-72ad-4721-bb53-b07ffe0118ae",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a09dfd0-b43f-4054-bb70-3162d80075f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f246dad-e5fb-4cc4-bed9-9c514523efb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44eb6633-76c6-469c-9d47-b4d6110475cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92657301-efcb-4d09-aedb-c2c2e4b57358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd89d7b5-afa9-4924-bc38-b8130a04621b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd2e8a5-e591-48c3-b93b-8e89afa1f359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74d5cebe-2b49-4c29-80fb-b366edce5f8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b7ec9f-faeb-4bc8-8047-5edfcf3c18e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f941cc09-011e-43bb-b4f6-6f85c11d6297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e7fe95-152e-4600-b549-0d38ed75021f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330209ca-f997-4dda-a3d4-34d1256b5e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "358cb8bf-9422-4111-a370-c393dd87de77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5968b4ea-ecab-48de-872f-fc56ad61f827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de86c148-2f7b-4cff-a88b-d75b5ceaa299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08fd5e40-b450-467b-913b-b70956b6d3dd",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2b5208-36c0-4885-9eef-96d87a92aa78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd21d77-0f0f-40c9-93b6-54616d62e09a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40a8526-c08e-4dec-82a0-f9b4294badf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ed7115-7178-41e0-a094-21ee06666b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5d32f7-2990-4ce0-8d4a-e7fdad9562d0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b281d2c4-fc43-404a-b166-cef05abda379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76cdb0ef-35d9-48d2-a93d-697f6f3e1ce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0dc794-bb93-4d82-b43f-d1082edc8b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb5f295-fcca-4dbb-9de8-ff839b94be4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c40883-2a2b-4027-88cd-2968014d66d5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd22b574-95a2-41ce-bef0-a614a44c2690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a1023a2-0939-454c-bc87-33c4d689a6c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6cdf47e-152b-4a68-a77a-28c1cd972f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4d51f4-d3ec-4ef3-aa95-5e5118114499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9685f671-cf2b-4fd9-824b-c31949c8a586",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3338323-dc71-40dc-982f-296b77704c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f95253-7671-4ab3-81dc-2b0a5df9eb64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4a09cb-6903-4dd7-84e3-aab032b3121d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73bd7ca2-f408-40d0-b4b4-8405cfc06573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68225841-6059-4591-bdd8-bd0f2cadcedc",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b721d21-4d08-42b9-9131-978d952c844f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f998c80-c999-4ec9-9655-6144c626d71d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbe7504-1796-4079-b5b9-8b3483e5312d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b3b2ba-acd9-429f-b77a-6e1a9b2f3ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d111368-faaf-4feb-a09d-7925597edb05",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855b8eca-122a-4289-934b-ec1d5422f88e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cee9712-b9bc-4804-82dd-1367327ef357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37218daf-1f70-4a3b-be3f-2388d32fcde4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad9f2ee-3074-4379-984c-20f1a5a8f094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7590af-dba3-4dca-862a-5c74f59f3694",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3556be52-2473-4cef-ad7e-918a43f7b40a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7887cc5b-cc96-4cce-b82b-c334648ab3ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "288e90f8-baa1-452a-912e-11414656246b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a78d2f49-3555-4720-ba6b-ee4c78b63a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07b58d2-da46-4ba5-b504-7c9de3bc93c4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b7da2c-9fd5-49a4-9d1b-be4371fa8947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4119349-c376-47aa-9af1-bed9e9c3e0af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "147e76d5-a950-4eba-9447-b02c3308b372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c8bb3e-4769-46d2-bfb9-bcfc405a9fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014f4f6a-ab39-4b51-ae06-d6b38356ca6b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb2508b-0a73-49c6-a5a5-06ddf2cbb5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e39ce882-4af5-4cdb-a676-ac413115bb80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b014ae37-8ca9-49d3-a8c5-6c97d67165b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7054d675-a55b-430b-8041-763b88f0ba59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe5bc30-b39c-4d3c-bdf9-cfc7b2361377",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06dcb884-0308-4ea0-92f9-e4a5ca8fa17f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "907a60a1-ec34-4e83-9211-6fcf7c96b85f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c68c812-8565-4835-8901-c1d02a26d877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f83c65b-4ca4-4d43-bfec-d29701ff792b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b8014a-7039-4f99-a7c3-dcf3601763f7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f09f4f7-585c-4d8a-a4e9-51aed5b43cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e648fbf1-a814-4139-9992-04159eb8b6d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c392b51-21d8-4e26-9ec7-09bd57c3b18e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb6639f-8bfd-46da-b8fa-7806d5b42241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa44f30-5eab-4e2d-8e05-5182dd9bec5f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d29dba7-915b-4fb5-9793-f55dbb09f010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8feefdc7-8772-45f6-b55f-29cc0fb4f350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7224df7-d1eb-43bf-af7c-b28b1b1f55c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152e6b73-cfdc-4ed7-a127-179b0b14e4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4032f0f0-0e67-4a82-a614-1059f86a0fd3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2bebadb-43f3-4a97-9706-b846a4b5a082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab4c48d-0507-4439-829a-3a912e980359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e20456-1341-4429-bfc4-adbc91a7863f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e701787-5568-467a-abcc-a11e048b2b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00c1e56-e601-4b36-9165-ff11e716e444",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0992b86-4d77-49f8-85f0-20047863ffc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1180ba9-7c31-4ca9-940c-279bf6cdc620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac08743f-5717-484a-8b3a-2763cc867d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cbc47cd-6337-4f08-a953-7f211975a9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1892e7c9-617c-4569-96ca-7f67c44b38c6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78afeb81-acdd-48e0-b6a1-45d9858eb599",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cbe4fde-92c4-4b38-bfd6-e40bb4d0cefd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0031eb3-b81a-4bde-8a88-38796dfde19f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06ba1d8-93dd-499f-90d8-4a38de2d247d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f29d18-2c8b-4f5f-99de-557143ceb946",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf52364-6c4d-4bff-be1e-63f88e3d832d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "762e7c92-254d-4b7d-a4b0-b48f4b6302ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb56a52a-2fa3-4c1d-bef7-7d8db0e66353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18db1f8-8ef0-4dc4-ac49-b4b903e638ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc0bd45-6ae6-4351-80aa-a65d38c073fb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86fddabc-0b03-44dd-85e4-02a062dbb859",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8f828b4-1fc5-481c-bbed-5b2bbd9cf86a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc601d9-1d18-4882-83ae-bd3673e9f496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "776eb155-c38d-49c2-b490-30df08cc3f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77381e6-19bb-454c-a55b-94a607faa1b3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15dbdd42-40cf-4674-93b8-fd475df51242",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0c5b057-d6ed-43dd-93d9-d5e1b723f059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edcf94d3-1340-48e9-ba51-bb079da0e57d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace1328b-a627-4f19-a896-360d1b7876be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c899246c-a319-46a5-81d0-e7e9249d34b4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd73050-5a71-4127-b0b4-2acb72c96d19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31d5ce73-7e74-4dac-9f6b-df99c23486f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e2bcd5-6cb7-4a73-bcb9-7702e95f2a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62eae84c-3931-418a-82f2-d53fb2624993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4825f8f6-d2e5-48eb-91e4-161a63df9196",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24745185-8af5-4d65-b66a-c6fcba03edae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c00cb571-823b-4a55-86ca-3dc877110c38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e551d5-6d1a-463c-8d31-2a57f72226c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a594f6f-6c6f-4799-8482-0d9d2b793730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47a91eb-cce7-45a0-9bd7-61be5380304f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8422ec43-5fbf-495d-8e19-9480bc4f0f69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91bcb2f6-5ad1-4d08-85ec-ee80cc3dcac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0ed6c2-e6ff-4d64-b92e-4841307d3326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c864843c-ed81-478c-b9e3-22a9f4ae3f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f79280-bf2b-4ab1-b7a2-900695434989",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c118a9-c528-4326-88b7-4fd5a2ee26f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4bf5168-d834-4b79-b629-5874454ada87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43f7341-b64f-48c8-8641-faae438d962c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec4489dc-b3a0-4e81-9929-3e648d41a454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2051e95-37a1-4ca4-82f3-de1eacc11979",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a53424c-f8c5-45d3-8016-9a734e75a21e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cebd1f9-e25c-45b5-b395-09a0b34019ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0891536d-ac2b-4792-98b0-75c86695758e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d12422-210c-45b7-a14e-dd91a1887430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c409471-498b-412b-81bd-5f7b2fc2a1ed",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2234229f-b7f1-450f-bcb2-1a81f740cee4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9380604-ccf9-4f6f-a0a9-12f67bafacb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc18bcfd-09e2-4afb-967f-c6e42f6633a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a3a8c9-18d6-4ba3-a5ad-6faf762e488b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffee688-86f8-45f9-826c-c35a26b33907",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c010e91c-e114-4df6-ba5f-889d85a82bc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b54b982-09da-40b1-a59e-7936179b4dc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf9c316-0b63-459f-a9f2-d8b9f442d94f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "774806d4-cac4-4b29-b5f4-f7cf7f4c7777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56bd4a9-2387-4957-bd6d-7426222c1455",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995c8ed9-8cea-4e2d-826b-2ccc126a4aa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "318e4cb6-d5de-45fa-8e09-d36a61af1ffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a861f1-2e0a-4c8b-bdf9-1a55519696a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4fa7c94-b1db-48e4-8f73-4e391cf5e8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b2c946-00de-4da2-b731-0f5039f17d34",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e775b2b5-6855-4100-9752-4ac47835fd0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31bc4c0f-8457-44d9-9b02-cdebf673297a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2b0265-d75b-45d7-a521-ecf30ef1fcb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff635ff-5259-427d-9836-0da0a0cdde33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d538123a-993c-49b1-bae4-62f41e81f3c7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231bfcb5-539a-4657-aa4d-9c07177e6ded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1575dbec-aa73-4b79-9fce-bb17aa37958f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec361d29-e90f-4060-9846-87fa75ffce4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c50e65c1-d66c-4043-90e6-e9bf0ac97b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ffa04b-a04b-463f-8ce5-3651fc3542a1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb514200-d31b-472e-9b39-3d053d8b40d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22bc24d9-ecc2-4b00-bd82-73b935dca7b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5363e0-dde9-4b2e-83bf-6495afd8ec93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a8fc6ab-cae7-41ac-8629-f598ed783419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a466f2bd-3db9-4821-adac-c6d5d76937f0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7482dcc-ab88-4bdd-a3eb-426f08113014",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "885fcef0-5384-4725-88cf-efe71740a27f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ad0c13-ee51-48a3-8b55-0833118467b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c84cf239-a9a0-4d31-927d-bc291805f21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98499aca-74d1-4ecc-8255-eb5f2feb1166",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14488297-297d-486e-a3a6-a9b82b9d9373",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b10462c-bf71-48c3-a0e6-13e2363102e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a303d69-5f67-42a8-9d92-fb18829ab6d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3eab74c-c186-4b24-a892-a51b51865c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60623cd1-f667-42c9-ab82-85acae761332",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a9d8ae-d92e-490d-9bbc-1c695888831f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0c1b957-2cb1-4234-a530-ef52d30d0a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcea6346-4815-4e22-a5eb-ece483afb556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4833188f-89a7-4596-a8a4-3c06f73bae05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1be261-bd9e-4b4d-bd2c-fad2405539a6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17d6722-f1e7-4355-87b9-26ddec0ffb92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bd36e55-433a-48e0-8467-79b9f6174487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85ceb49-c1de-4094-8c2d-0e12d04d44d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "671ae106-ed32-4a93-aeef-69a29e5fd1f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39dc332f-62cb-4c9a-a73e-455e5c6287b5",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00cf7d3f-f0d6-4c69-bf3f-58fbd41d41e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4db64d66-f22f-4839-9c8e-4b138f4e4a91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d31180b-1abf-4db6-94c2-502ca55d5385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a625277-a760-4614-a792-0be64b74a23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c30395-ad1e-4f90-87ff-ef5b0c338fa1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9652e1-502f-434a-bb7e-ad073e681be0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb534661-d3f8-4be0-b58d-a79dbda191fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1057cc21-61e4-45de-aa7b-a4e946a2e83c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d050e7f9-0ca1-4fbf-b444-1353f2513b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df41f90f-a425-4858-a42c-3fdef1de6719",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4192f69-0d0d-476f-867a-20e7a99c0ed2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74ba06f9-daa6-4b64-ac17-21c26fdca050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8936d862-7308-4ffe-b013-5ce5a5236665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f3cdb44-ca16-41bf-b37e-d363b127622e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f72d790-4ab9-4d26-a6ec-4334d5fc04cb",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5562af61-abdf-42dd-a4f5-662ffed6b4c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de97b7a3-b94e-464e-b07c-d8efc6b09f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc98c3b1-c839-4c96-b8f1-fd6d1e2712ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "886f3d08-7a34-43d2-a767-d736601d12ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac03592-5b7e-4510-9d92-c602463ee4c3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce40347b-a1b4-42c7-8f5b-50fbcfe3bd84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48b9ad8c-1e53-419f-97c2-7e4fa7928ab9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40229ff0-3d6d-4490-9652-50f590256ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bdae216-5426-41ba-9cf9-55a20a825bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e871888-0086-4e0a-b682-5dbd794ce099",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efddbcfc-9b00-47e8-b458-6bca12ed8be6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb2e96cc-8219-4066-96d2-1e85a516c662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07464402-5076-4a66-91f1-f51d1ec9d409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8a08af-e15d-4932-b35b-5a31d751c4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e7cca1-cc37-4f99-a3ac-d4c686d8e39e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc513cde-aa00-46dc-a4fe-28bdb6dd73f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61c999e2-0a73-4b11-873b-420e912f71ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab54a6e3-93e1-4e2a-b41b-7582393bcd46",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8678a8e8-a1df-43db-9df3-973f76f38a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7c727d-62af-4fef-8604-17b9ffbfe552",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b293684-24a9-4c70-b0a9-e86f3cfada72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "233768b2-db77-4c3b-9bd4-8457168dc84d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c788de0-a3e0-4b54-b01a-87ef3d125627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b3470b-e5fc-4a5b-8b6a-edb0a0ab2dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f2942e-b1e3-47b3-9c82-4b7b5608442a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf67c6b0-efe6-4ee6-8e85-1aa062e320c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f5adbd1-2082-4d1e-863c-7831637c4fe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5983c4ad-678f-415c-94bd-4a08b3d86d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07317ebc-9fc0-4964-8507-0a28fec1de24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0685ed66-454e-43ff-bb1f-42ee528cc791",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e1022c-17eb-4bda-96bd-b58a2f2a462b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "843d1666-21ac-4b6e-90c3-47e2a2ad7ead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d0844a-e5e3-46ac-8aa9-98365fa07a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef1a114-7651-4bd7-ad01-b04906b6e147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb5058c-6fc0-4ebd-b53f-4d6a748266e5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6962e926-6743-4c3c-b829-3a56bf8ee518",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccabf575-2a98-4c8a-9486-1b923894bc7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b337cd23-fb6e-4b27-a27d-ebfbd0915152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a2f734-9bb5-4b98-bd79-ab218cc240c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56273ed-935e-417b-a402-1489a314e787",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344142fc-bae0-4e91-8018-a4a55d3600fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e04c19d-c797-49a0-bb98-795d09051747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "839ac766-5968-4769-b6bd-d55d04f7d4b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdfcff66-7fcf-4453-9ff4-fc1d9a5faba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f4a6cf-7c77-4649-bd66-b7fe18c92ccd",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2b1b47-2b7c-435a-be5e-7579ba7fa5e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3782184-b0cb-4422-9750-f1db1c3c505e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c6f2f1-a883-403f-9890-885f7979280a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "668e5c17-e4a9-48b1-b9fe-9411816b4874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21d2822-5365-4f12-8b10-9ae979298394",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfada676-3c06-4468-ac6a-63e14f2628f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9d0ee86-c149-4227-abb5-0b1fd68e897c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3595f2-4e50-4e83-9086-4501898eaaed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec4874a-2b83-4c01-b03d-4f913aa98da2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce787ca9-9a4a-407c-973a-3e4ca246432a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32c3fba6-d0db-48cd-9edb-2438a4bc7d93"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c8ed9e0-ad59-4bf4-8107-04f5b2d6698c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a30e49b-cefd-43d2-ba91-70b8ccef6af2"
                    }
                  }
                ]
              },
              {
                "id": "b81ae511-85df-4a67-8e64-cc7369432368",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d9517326-6597-4f7d-8250-c8d6bea8e864",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20cab06-01b4-4546-9e47-9d979c49a005",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "75a59c34-d70c-4dd1-acbd-adf479a7d2dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b0a323-438a-47c4-8ea3-4d590b4643c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ecaaf40-ad64-4076-978e-92d4c6f5eac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464ede65-29f6-452d-9175-51b696c12f64",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd43cfd-422b-471d-9e2b-5d372f14c2af",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "368d60cf-273c-4269-9e3c-344159ff0ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a24f89-1d5f-42b3-9ff8-aa889dcaf5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d27aa1d-96be-4694-bbbe-6ff2f770c1b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50ad2cf6-0c5e-4313-a1c0-0be21e9c238d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78472eb1-7dc2-46d1-b625-d0dcce986ab8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52e2b8b9-4418-45bf-ab7d-7231f0a54bd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "319a2d77-e3c9-4782-be7d-458b13171400"
                    }
                  }
                ]
              },
              {
                "id": "beb25d79-7b15-4620-977f-494958938f48",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "020b08d9-42fb-4064-995e-fcd22761cbca",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0407bf6-5268-4cbe-8ce1-45cc78866b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e4b5a83d-e047-4887-b3d1-2b52c9874fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed8ffde-59ec-4108-ab25-8836fe947498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "688456ed-c242-4f5b-aceb-62fa30fbc342"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e2db322e-c1fb-425b-b14e-dd7f2a32111f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e3b8febb-0f2c-4c70-b3aa-233ab7fab4fe",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a50b2ca-2663-4a2f-894b-84bab246bda4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7bb4d500-8128-4f37-a7c1-afc85200f82b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03f0b813-2c4d-496a-b7df-5a57e8d61fa7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5e3e029-f8f5-4e14-ae2d-d1087e6f77e5"
                    }
                  }
                ]
              },
              {
                "id": "7940edfe-d9d6-49c7-af46-e6221d9f98e9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0845527d-2156-4163-b0ca-21a8e18bcb4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "49ddf908-7e9d-4272-88cc-28b2effc32b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e113dcb7-2eb9-40a1-8f1a-9ae90726aa62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2213633-6131-4484-a23c-641c0b0eca10"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64f97fda-fbca-4cb2-8cd7-2d799cfddd7e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e3996be2-7edb-49ba-b0d9-42903a84a6c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58e4cec2-f341-4e77-a813-094ab07cf935",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21428a9b-8d17-4524-b62a-b0e4817c3ac4"
            }
          }
        ]
      },
      {
        "id": "47bb27c3-8767-424b-990d-8f1548213e5b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "51fa4d7f-2038-476d-9ba5-d5ba7816d3d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21b5013a-0c2a-4581-aa56-eb90c5fb96be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8fc4c695-2b8a-4ec7-808d-f18976e1c0c5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef41b5b8-faeb-4aeb-b99c-9e58bfb14ce2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7aead96a-ee27-47a9-b473-fa0a00313c06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d05532d-1d9d-4e18-9b56-17109aef76fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0fe15336-db64-4870-bac2-f2754f777c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364bde1d-cd11-4ea7-8fed-9b2699946419",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9869d4bc-ecd3-4047-b70b-849e6f04da08",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d74eb0fc-6aae-4229-957e-0fc4555fca5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada9d4fa-a0b1-4f9f-b147-9a93d978f90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9eaf385e-c449-4239-9263-57e768370350"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7a017a2-7a41-4084-80b9-eb7197b07d03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ceab8df-9614-410b-a76f-08751b2ccc79"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "009e9b7c-2250-4bb4-8995-895e6a7b9b4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db85fc7d-5694-4eba-8ce2-860176dd3c9f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20e2b206-d4b0-4f49-b04a-58b000a0c74c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3a76df77-ad03-4084-b770-1031749032b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee36fade-ea39-4719-94e2-b6001ac33dc4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d98fb86-c1b8-403d-a2f9-c29cde8bd95a"
            }
          }
        ]
      },
      {
        "id": "ef74bbe0-5f78-4502-8af1-379e60b5b06a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d7a9d08f-a2d5-4a5d-b8bc-6a3336ebe558",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cdc2fcd2-89c8-419e-9575-947fc657dbab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fac066bd-bec5-48be-953a-06b15e7e375e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d34efe-705b-4db0-a140-c0d953d571b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "137556f1-d275-4818-bc78-0c619ffda486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0241fb3d-78e3-4400-a1d7-d4bc486af174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59133eec-923d-4086-a92a-7cf7d9106c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f8dda1-18c0-4eeb-a500-58c70e83be13",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84db5436-e4d5-4e0a-a47a-ac7c66b44dd6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "10290e74-514f-4460-9051-d2e6d0026fd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23450e7b-1cb3-400f-ae38-93881b456abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea72860f-6972-49ed-8e21-06947b6f29b0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72a78bcf-9385-410f-b269-a05ac1113259",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0db7f082-6100-4dcd-8af9-5b0d4edd58d8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "830777e0-979b-4a68-a870-e1c020bad60c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b64d6817-8645-4515-b795-d78577e836ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2adbb596-4e5a-4f56-99bf-9a42a64974c5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c4b02b99-6da0-4076-b550-c2374583cc30"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70c2aa0e-0018-4551-95e3-e489db793a85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2615c5b0-5d08-47e0-b614-04c0db0d1d4b"
            }
          }
        ]
      },
      {
        "id": "99241ba4-c603-4726-a70c-b6b8cf0c8f31",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c74f4a9b-e28c-4286-b91f-f27a3074470c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e4a01560-15fc-4d90-bb4b-5f017721ca31",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "053c8d05-5ce7-4f8d-a7f0-0602d8e45a73",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee109ed-885e-4457-8a3d-7e8833ea7d48",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c8326a52-d5a5-49da-ae6f-8f5056042486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f354fd-509a-41b6-a077-03fe48bfa009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd59f6df-1cc7-4611-8de5-234d6ce10540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f60bd6-8ef2-485b-a0ea-3cbbdfcc9864",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e57b93b-2fcc-494b-bdfc-06f2d4cdba67",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "aa802220-6b32-4be4-ab48-1a516985de5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a885a5-5011-42db-af1e-7d5136feeb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62d7d8ca-1b62-4c73-ba22-e04482c5e42a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21025b6d-5b38-475c-a6f2-3a65c85213ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78988427-b07a-4ac8-aceb-af6d5ea3cf66"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "69a9b976-9b97-4d1b-b2ea-82147dd14bf1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d18b493-097d-42c8-a7e6-d6cb4487e25a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8d16e80-29c8-4087-8b09-06760f82f8fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fc58a71f-9cff-4b06-a4cd-7b3de02034cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7a0b6a5-69f8-47e8-8a95-397df120bb5d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "924783d7-92fb-4960-b992-8ebe4783c06a"
            }
          }
        ]
      },
      {
        "id": "16617ce1-3d68-402c-92a5-6d1efeee18b9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2c1a598-935a-42d0-ab11-5340801d8627",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3581c803-a94b-428e-abe3-2edfce1a2e39",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "57de3d1f-0caa-4d06-adea-a5da5e86c456",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50ee39ba-3b7d-4321-93dc-c95117a72407",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72a35c3a-e8bc-47ea-90d5-966f08ca35b7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 28
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 622.5648854961834,
      "responseMin": 10,
      "responseMax": 5924,
      "responseSd": 747.5666285425563,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1676248921708,
      "completed": 1676249095618
    },
    "executions": [
      {
        "id": "833b71f2-9661-4569-8b85-bfb0bb6de863",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "69fe09df-8a9e-41a3-bd33-e6257d7fae8c",
          "httpRequestId": "1114f119-b995-4e5e-8393-915f7160ae85"
        },
        "item": {
          "id": "833b71f2-9661-4569-8b85-bfb0bb6de863",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4e2c7ac9-6aba-4fc2-87d9-7d9d25003177",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "c79bd5bc-3f9f-41cb-b567-dd04e164ae89",
        "cursor": {
          "ref": "0b001611-7439-462e-b326-6f2f2fb4bb76",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fa02e268-0aeb-400e-a564-68a1fa2cf8c4"
        },
        "item": {
          "id": "c79bd5bc-3f9f-41cb-b567-dd04e164ae89",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "641104db-0858-4548-bf53-7f45fd2d77dd",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "e1836ee4-0c9f-4871-bd18-4833878c1c16",
        "cursor": {
          "ref": "eb097660-28c3-41cb-90d4-23d8506110ff",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "324d1553-206e-4e44-8b2c-14d59354f9a6"
        },
        "item": {
          "id": "e1836ee4-0c9f-4871-bd18-4833878c1c16",
          "name": "did_json"
        },
        "response": {
          "id": "07fba823-b276-4686-a446-69e19924e2f0",
          "status": "OK",
          "code": 200,
          "responseTime": 1041,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd842fc3-a83e-4af0-aa3a-5e29c5e3e022",
        "cursor": {
          "ref": "1e505aca-6254-433e-bb5c-3cfd08e89a5a",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "96628262-972e-4c03-883e-7353d6f433b2"
        },
        "item": {
          "id": "bd842fc3-a83e-4af0-aa3a-5e29c5e3e022",
          "name": "did:invalid"
        },
        "response": {
          "id": "7ae67527-9330-403e-b699-6a8aa6cce780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 966,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd842fc3-a83e-4af0-aa3a-5e29c5e3e022",
        "cursor": {
          "ref": "1e505aca-6254-433e-bb5c-3cfd08e89a5a",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "96628262-972e-4c03-883e-7353d6f433b2"
        },
        "item": {
          "id": "bd842fc3-a83e-4af0-aa3a-5e29c5e3e022",
          "name": "did:invalid"
        },
        "response": {
          "id": "7ae67527-9330-403e-b699-6a8aa6cce780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 966,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c915b864-6fd6-4b82-b549-33e50d5fdf54",
        "cursor": {
          "ref": "9311b0b9-5721-4a7b-81fd-0ce0dab3d040",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "231010cc-dcda-42d4-946a-0fdae275ce10"
        },
        "item": {
          "id": "c915b864-6fd6-4b82-b549-33e50d5fdf54",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6eca221c-b918-4141-8eb9-5a450f5a6969",
          "status": "Not Found",
          "code": 404,
          "responseTime": 763,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f40f536-36e8-408c-a276-769026ce57ed",
        "cursor": {
          "ref": "a58a8d13-251c-4680-bb7b-e568b1162cfa",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "205d7804-585c-4e51-b768-0e6da70425d2"
        },
        "item": {
          "id": "9f40f536-36e8-408c-a276-769026ce57ed",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a25ebc9a-c03f-441d-a2fe-9eec3ef63098",
          "status": "Not Found",
          "code": 404,
          "responseTime": 584,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c1c1e6-157d-48a5-96b7-799e56a03d92",
        "cursor": {
          "ref": "3ab042c2-7873-47de-bbd7-9b8fc71b30b0",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a0b29559-4a7d-4eba-b414-d4d9166a3148"
        },
        "item": {
          "id": "23c1c1e6-157d-48a5-96b7-799e56a03d92",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "36a75d6c-5577-4c17-9561-91e4592ed08a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1495e00a-06ce-40cb-a701-7c789354e9dc",
        "cursor": {
          "ref": "934d3cf7-e077-425b-a8b2-af6df5e68d4f",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bc0a1181-adeb-48ab-84af-c255b4dd8028"
        },
        "item": {
          "id": "1495e00a-06ce-40cb-a701-7c789354e9dc",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d9d759ef-35c9-499a-9c2b-84fc9ad66fc6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 981,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1495e00a-06ce-40cb-a701-7c789354e9dc",
        "cursor": {
          "ref": "934d3cf7-e077-425b-a8b2-af6df5e68d4f",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bc0a1181-adeb-48ab-84af-c255b4dd8028"
        },
        "item": {
          "id": "1495e00a-06ce-40cb-a701-7c789354e9dc",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d9d759ef-35c9-499a-9c2b-84fc9ad66fc6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 981,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1dff253-fafe-490c-808a-4779533eb854",
        "cursor": {
          "ref": "edb0add3-6704-4882-93f2-6c702928c291",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "343b7fba-0a56-4570-b049-3571bd937346"
        },
        "item": {
          "id": "a1dff253-fafe-490c-808a-4779533eb854",
          "name": "identifiers"
        },
        "response": {
          "id": "01a4b68a-0175-4e28-8214-24eee549420c",
          "status": "OK",
          "code": 200,
          "responseTime": 1366,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846a5216-235d-44d3-812d-4cbcc4bcb5cf",
        "cursor": {
          "ref": "1823bd29-b39b-4ae7-afc3-dd9af634bbc8",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "160647cc-60e8-4fba-86a8-4b57258cad3f"
        },
        "item": {
          "id": "846a5216-235d-44d3-812d-4cbcc4bcb5cf",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "80869108-8253-4dba-9b0f-a8baf5f505de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846a5216-235d-44d3-812d-4cbcc4bcb5cf",
        "cursor": {
          "ref": "1823bd29-b39b-4ae7-afc3-dd9af634bbc8",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "160647cc-60e8-4fba-86a8-4b57258cad3f"
        },
        "item": {
          "id": "846a5216-235d-44d3-812d-4cbcc4bcb5cf",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "80869108-8253-4dba-9b0f-a8baf5f505de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96768087-f437-481f-92da-284e38aa35a7",
        "cursor": {
          "ref": "4aa078a4-1fea-4586-acad-7510cce51080",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "47ebdbd8-d276-4846-bf2b-8a07bf28aa47"
        },
        "item": {
          "id": "96768087-f437-481f-92da-284e38aa35a7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c7798827-9984-48bf-a630-10d91f834d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c080ca1-46d0-4405-8ceb-d72ffc5f07a4",
        "cursor": {
          "ref": "c01db03b-9fc5-4303-a860-75fd4da04b8a",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5d05111e-ca3c-4e8b-b3b6-5b12bec45ff6"
        },
        "item": {
          "id": "8c080ca1-46d0-4405-8ceb-d72ffc5f07a4",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "a58f8e3b-2c07-4289-afda-e66583e920cd",
          "status": "Created",
          "code": 201,
          "responseTime": 4161,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "488c8ea3-89fe-4986-9d24-f3d6c44508eb",
        "cursor": {
          "ref": "96710d69-b874-4a87-9781-f65f744f9f0f",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "83e871b4-da32-4ddd-a003-e0a2e4c0189f"
        },
        "item": {
          "id": "488c8ea3-89fe-4986-9d24-f3d6c44508eb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d7ef1e5e-6806-4749-8b00-2a33d93c2a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 1117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9be4d3-e738-4f96-96d9-ebe2c02d0d34",
        "cursor": {
          "ref": "b0f98ee0-fa30-4539-aa61-431d02368f17",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a823aecc-685e-49fb-b900-0d762b12bfb3"
        },
        "item": {
          "id": "7a9be4d3-e738-4f96-96d9-ebe2c02d0d34",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c621c968-5f21-4c46-bdcb-c7baf720ac6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 1114
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab4de06-1d43-42f1-a6d8-79ab532e8a1f",
        "cursor": {
          "ref": "f3fe6406-9a51-4af4-aa33-43eb59df4113",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "02791dde-3955-404a-b44a-536473e0b1c2"
        },
        "item": {
          "id": "6ab4de06-1d43-42f1-a6d8-79ab532e8a1f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "25b19a07-f948-4c7f-98b9-eb06d2549db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afd8b64-d1cd-4c66-84ab-bc5a1392cffb",
        "cursor": {
          "ref": "762561ac-f765-46cb-a0a2-17fcea56fd66",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1267cc19-8a48-4094-ba29-4bbf3c1fb7d2"
        },
        "item": {
          "id": "7afd8b64-d1cd-4c66-84ab-bc5a1392cffb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6661a5e0-e11a-427e-a1e8-cf72f8569e6b",
          "status": "Created",
          "code": 201,
          "responseTime": 2922,
          "responseSize": 723
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:16)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:16)"
            }
          }
        ]
      },
      {
        "id": "b3ee5aeb-5462-4c3c-90ba-907aa0c4d56a",
        "cursor": {
          "ref": "14c08188-7793-4322-811d-c10e5a78dbf7",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "86f46590-e580-4473-8900-ba360f6b9fc9"
        },
        "item": {
          "id": "b3ee5aeb-5462-4c3c-90ba-907aa0c4d56a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d5b1465a-a74a-46d2-8a54-0955362e2774",
          "status": "Created",
          "code": 201,
          "responseTime": 2837,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:17)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:17)"
            }
          }
        ]
      },
      {
        "id": "f80a5536-97c9-4a68-bbda-3c39a8cf26ca",
        "cursor": {
          "ref": "4eea389c-ab1e-48f2-a488-88a5935c3936",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8617fcd1-a2df-4a03-8558-554679e82535"
        },
        "item": {
          "id": "f80a5536-97c9-4a68-bbda-3c39a8cf26ca",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4c2717e4-7aac-43a1-b5fa-fd80ca9322f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6dd0669-c165-4f01-a6c9-bf7891dc52a0",
        "cursor": {
          "ref": "716db422-5f20-4d06-a9c8-97f32304322e",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8f8568f2-8653-4a45-932c-583da36defd8"
        },
        "item": {
          "id": "c6dd0669-c165-4f01-a6c9-bf7891dc52a0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6456a724-4d57-4a21-bcef-5307734000d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec33016a-8199-4dbc-8f56-33341a205cee",
        "cursor": {
          "ref": "fba10ce8-1515-4e31-820a-31e7aa1e0011",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c0880d1b-926b-4ea3-937a-e9662615e051"
        },
        "item": {
          "id": "ec33016a-8199-4dbc-8f56-33341a205cee",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5cfaba9d-376f-4579-9541-21b70c2c6ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43186d3e-7427-4b42-a78f-1d15b066f831",
        "cursor": {
          "ref": "3690e37f-b62b-404d-893f-8963a407b8d9",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "28655733-6295-4137-a095-e059d015591b"
        },
        "item": {
          "id": "43186d3e-7427-4b42-a78f-1d15b066f831",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b3d0edd7-ffba-41b3-8285-41ec51aae6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1542
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566011ba-1e20-437d-81a1-83442d03d8bf",
        "cursor": {
          "ref": "4b96cddb-f8c7-49b0-b96c-2bfd79b65c32",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2b70f3ae-43e9-4553-95e1-f41201d7d6ae"
        },
        "item": {
          "id": "566011ba-1e20-437d-81a1-83442d03d8bf",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d6b5c615-cafc-4976-a469-7e0897ac9ef9",
          "status": "Created",
          "code": 201,
          "responseTime": 2701,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "25183a6a-2be5-42e5-80b5-83f9700ffeb4",
        "cursor": {
          "ref": "51be04ab-bc53-4f06-be9a-46e76832561e",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "92fc1417-edb2-4f6d-9483-d3c808654cbd"
        },
        "item": {
          "id": "25183a6a-2be5-42e5-80b5-83f9700ffeb4",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "87f5e2d2-8038-4646-90c5-36e91c80a741",
          "status": "Created",
          "code": 201,
          "responseTime": 4572,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "05ef471e-206f-4fa5-a02e-1df235be13b0",
        "cursor": {
          "ref": "954ad2ad-a717-466c-9069-31be50887b91",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a733951b-f4d7-4dd0-b9a1-9379c8d05ce4"
        },
        "item": {
          "id": "05ef471e-206f-4fa5-a02e-1df235be13b0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ecccc593-ba0c-4686-9430-2a9e67005511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda75d00-f744-4451-a162-1015fbb91be0",
        "cursor": {
          "ref": "56f63a0a-5854-4fb5-9371-ffc537521f24",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f1aa3414-c0e1-4864-8955-aba4e908c393"
        },
        "item": {
          "id": "dda75d00-f744-4451-a162-1015fbb91be0",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4aebc8e6-7ff8-4a96-8ff1-6db609a3fc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22775687-185f-43f4-bbe8-5abdad33ec48",
        "cursor": {
          "ref": "248d8af6-3da4-493b-acd9-bacdf6b69762",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ca7c835e-052e-4117-94f1-d2bdc9f53e76"
        },
        "item": {
          "id": "22775687-185f-43f4-bbe8-5abdad33ec48",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e7415085-4c23-470d-888d-84adf10eb8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 993,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487c46a8-6b3c-471c-a5d5-d723ab480fcc",
        "cursor": {
          "ref": "f648d7a8-2e6f-4d13-ad56-a8ce02a3af22",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "aa00e8a2-8f57-4473-b4b4-b73429366ebb"
        },
        "item": {
          "id": "487c46a8-6b3c-471c-a5d5-d723ab480fcc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f6fa2a4c-1406-4946-b456-71a26afc4e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 916,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01725f5e-9689-4c04-a895-b3f4f244c4b9",
        "cursor": {
          "ref": "895d4757-0df0-4829-bcfc-108a399f0faa",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7c9bf4c6-54f4-424d-a6d4-51f8f5d21c85"
        },
        "item": {
          "id": "01725f5e-9689-4c04-a895-b3f4f244c4b9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "956bc935-8487-4bc0-8af1-df0d903c044b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1054,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d559a442-ae85-4e29-8f4e-12cf9a4acf87",
        "cursor": {
          "ref": "88f1fbe8-8ba6-446d-b862-13a61f20bd3b",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "69987607-4b3c-44a3-8bea-998fec3b475d"
        },
        "item": {
          "id": "d559a442-ae85-4e29-8f4e-12cf9a4acf87",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "50c5032b-822a-4684-9385-f5ae954ceacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81506df2-eb9f-4204-b822-cb213e6abc8d",
        "cursor": {
          "ref": "2448e2a8-f70d-44e5-baea-4ce391dd2b25",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8ce94055-f727-4440-9c77-60a2192eaf17"
        },
        "item": {
          "id": "81506df2-eb9f-4204-b822-cb213e6abc8d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a2552787-8d82-4d65-9bc2-da8b08b22405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae11f4c2-c315-4983-9194-358c880bacc3",
        "cursor": {
          "ref": "5eced54a-82aa-479f-b9bf-2a89efd87d32",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b069a787-c820-43f1-a25a-f680761a13bd"
        },
        "item": {
          "id": "ae11f4c2-c315-4983-9194-358c880bacc3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b7c6d8bf-bc51-4a07-b5cb-e6a2015b3184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34dddd4d-78f8-4c01-a102-e6eee590c403",
        "cursor": {
          "ref": "80e2e027-94a0-4f19-ae57-2bdc42a45d08",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4d5ddc8d-8af3-47c3-93c8-5c683279f337"
        },
        "item": {
          "id": "34dddd4d-78f8-4c01-a102-e6eee590c403",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3aaa8e0e-2438-4d41-9f11-5fad6ad60fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbd1708-8546-45f0-971c-a089de937a6f",
        "cursor": {
          "ref": "f4b3969a-108d-4396-8350-b379fa1f5c98",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9e8192f3-ab51-45ef-902d-7d1cbed673d0"
        },
        "item": {
          "id": "4dbd1708-8546-45f0-971c-a089de937a6f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "09fddc2a-c26d-4707-8a43-fcb5b3c3f7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe37683-2502-4c7b-8c8b-60cea499c14e",
        "cursor": {
          "ref": "424fd20e-e3ee-411f-a788-55899abada1d",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "bbfd2eff-2a91-46d5-9429-bfd8c7054568"
        },
        "item": {
          "id": "bbe37683-2502-4c7b-8c8b-60cea499c14e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "99754bfb-40fc-497b-b92d-024536dcef0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f29c346-64a7-42ce-9d1f-7313008d7f3c",
        "cursor": {
          "ref": "93e848f5-875b-4842-9673-6ce0828457f3",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9532c209-7c99-43b1-80ce-0a2b7619c059"
        },
        "item": {
          "id": "7f29c346-64a7-42ce-9d1f-7313008d7f3c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "dda724e8-1bdb-421e-b527-3c1fa63febc0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2099,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "8d729313-1966-4bc0-9525-ff698ec689d9",
        "cursor": {
          "ref": "e0d08a88-9221-4cf7-98eb-83c3f93e5fd3",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "08b81a88-b9c8-4881-ab6f-03d7aaa7ec69"
        },
        "item": {
          "id": "8d729313-1966-4bc0-9525-ff698ec689d9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "140b4cbc-19f8-4c08-9c6a-2ca09e56c899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12c86b7-c7c3-4efa-96e9-2a6bda7ea5f9",
        "cursor": {
          "ref": "44c743a4-9560-4e9d-9d66-d8abf17e09e3",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3533940b-1ca3-4c2e-bede-2008ec0f5e56"
        },
        "item": {
          "id": "f12c86b7-c7c3-4efa-96e9-2a6bda7ea5f9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bcfdcc9e-6f27-4f0f-b238-fcf6a710cf2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2856c541-7d37-4ee7-9ff7-041524aca84d",
        "cursor": {
          "ref": "61104e9d-f8bd-4672-a7cf-6a5b880e5c06",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e897e596-476f-40b0-b558-4dd1571ca53b"
        },
        "item": {
          "id": "2856c541-7d37-4ee7-9ff7-041524aca84d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4f46b9e5-eea3-4f2c-9cf1-b636ea87cd7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21545a16-c7ca-4973-9585-c738b663406c",
        "cursor": {
          "ref": "38caf2ea-aee4-4ff2-8c0a-f642784a387e",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "bb062fe0-9cb9-4794-a64e-58c4bea32be3"
        },
        "item": {
          "id": "21545a16-c7ca-4973-9585-c738b663406c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5f94bb46-b1ad-400f-be40-e24d98aa93de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97e3f10-7818-4f29-8320-96e23a47d7bb",
        "cursor": {
          "ref": "3bfacf5c-8e68-4746-9ba8-c38675d9c272",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "143a124a-c242-43cb-8c0f-ed79ba25979a"
        },
        "item": {
          "id": "d97e3f10-7818-4f29-8320-96e23a47d7bb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f67f39b3-5a83-4b76-ada9-0db9ed05ad34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5068b5eb-ecbd-4a84-8477-d9dd51996547",
        "cursor": {
          "ref": "68f4c2ee-13e8-41d4-a0bf-2069c0ac78b9",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "07f37ea7-1074-41af-9106-fcfcc1090832"
        },
        "item": {
          "id": "5068b5eb-ecbd-4a84-8477-d9dd51996547",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c8795a2a-5d39-472a-b70f-3a50d68f055f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a8527b-1750-42d7-85e4-2c6303a9be68",
        "cursor": {
          "ref": "1ee8b44c-4556-4866-a572-6583750036e6",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1343c9c2-2365-4bf1-be31-1ac979395c38"
        },
        "item": {
          "id": "e1a8527b-1750-42d7-85e4-2c6303a9be68",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7c2f4553-1167-40a6-8ea8-3d0a7cbe7e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8928d5-9a6d-4d75-921f-8a1fa926a783",
        "cursor": {
          "ref": "f9b23b5f-9d2e-4459-9448-8ff9fe240c8c",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6b2bd627-a9ed-4975-a8c7-686f4d295ad4"
        },
        "item": {
          "id": "1d8928d5-9a6d-4d75-921f-8a1fa926a783",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d1e4b6cf-5d04-4584-ba18-d71db8793612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b74eae3-a230-4ec8-acbd-752c86e54a7a",
        "cursor": {
          "ref": "83e99633-cdb2-47a0-8af0-6a1ec008ab3c",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2acecf42-5e28-4c46-a09c-dba14d111d07"
        },
        "item": {
          "id": "8b74eae3-a230-4ec8-acbd-752c86e54a7a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0950d910-8fe0-483e-aed5-5a2d3d13a1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8bfbc4f-181b-426f-a781-06bca56e5eb6",
        "cursor": {
          "ref": "2e9f3dcd-32c5-4d85-a39a-ea37ef840c96",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "89e83bed-9592-4728-85f0-5705110333f9"
        },
        "item": {
          "id": "a8bfbc4f-181b-426f-a781-06bca56e5eb6",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e282b7ba-e102-4178-8abe-04e0bfc190f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3069a2f0-6968-4188-b981-9d3eca263092",
        "cursor": {
          "ref": "a5daf736-a314-4968-bad1-eb1aa7b0a5a3",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "068281d0-98ef-4dc6-a5a9-08b5feb13ded"
        },
        "item": {
          "id": "3069a2f0-6968-4188-b981-9d3eca263092",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8339ea54-0957-492a-a02a-402696bc9ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c4cf75-f217-4344-95bc-cc9cc0232cd4",
        "cursor": {
          "ref": "e219a21a-4b9c-405b-bdbf-d9f47441211f",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "134d489b-410f-4848-939a-7eeab57c089a"
        },
        "item": {
          "id": "94c4cf75-f217-4344-95bc-cc9cc0232cd4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9b1bb9a3-9af3-4908-bd47-651a48d7860f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 594,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e992d6b-be9b-4af4-8795-1b1d030001d0",
        "cursor": {
          "ref": "6d838bfd-db4a-4feb-93e8-717bd83d75c0",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "84dcfe52-0622-4052-8f82-cb905aee6905"
        },
        "item": {
          "id": "9e992d6b-be9b-4af4-8795-1b1d030001d0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "cedde49e-b4b9-44f5-ace8-27569b4e14f8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 514,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "14fe5656-dd84-4dae-9d43-3bf2c9bcf5e5",
        "cursor": {
          "ref": "14b0de62-6b8d-4cf1-ab95-54d4009ae1cd",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b024a6d1-5508-4a8e-95d0-d5b9d4e8c99d"
        },
        "item": {
          "id": "14fe5656-dd84-4dae-9d43-3bf2c9bcf5e5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bc7a1748-1f18-4902-81d8-55de14f73abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13c8350-5117-4484-a56d-0602763ab15e",
        "cursor": {
          "ref": "ce6a449f-5cd7-4011-9380-feca3a207ebb",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "def57c9c-d24d-4b0d-943a-d10ebd04bcaf"
        },
        "item": {
          "id": "e13c8350-5117-4484-a56d-0602763ab15e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3ff49e96-7611-4f03-a31c-c4be11c313de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1651955f-5190-485f-856d-c4b83b41407a",
        "cursor": {
          "ref": "1f95d4ae-57f2-4ef8-83e9-7802bac4287c",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b7b329cd-5805-4894-8e05-560312b20598"
        },
        "item": {
          "id": "1651955f-5190-485f-856d-c4b83b41407a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5160c787-ed0d-44be-b5a0-ed0a5cb7145e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f9502d-5914-4825-9f2d-9e46fd2ea6f6",
        "cursor": {
          "ref": "33128678-32e2-49e6-ba23-bf61a2a6921b",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "20464c86-f4b7-4efc-a11f-70aa8df6a44a"
        },
        "item": {
          "id": "70f9502d-5914-4825-9f2d-9e46fd2ea6f6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4997cdf6-fd19-436f-9592-ecf9aff4b5e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5514f016-578e-4526-a1b7-703013575b1c",
        "cursor": {
          "ref": "0245d613-dc78-4811-94a0-0f6f2bae72c2",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "96d4866b-4801-4846-bbeb-5269525c7536"
        },
        "item": {
          "id": "5514f016-578e-4526-a1b7-703013575b1c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3c08e046-857c-4097-a01f-4ec9a72925e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef1bb78-86ed-48de-b91f-5279e9a947f7",
        "cursor": {
          "ref": "799a652d-3f9b-4ba5-bb4a-9055ed12db84",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "30ae0b00-e639-4d52-99ec-377f58c756a0"
        },
        "item": {
          "id": "3ef1bb78-86ed-48de-b91f-5279e9a947f7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a1dac189-cc90-4e73-a602-440b799cb6d1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 586,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e92c5d4-994e-47d3-91bb-6155c2f1dbf7",
        "cursor": {
          "ref": "edad4809-8cd3-404f-ba82-eb9ca02cabb2",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d9564d0e-0a70-4a93-a529-5ccda50f45a6"
        },
        "item": {
          "id": "9e92c5d4-994e-47d3-91bb-6155c2f1dbf7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "946bb070-5836-4baa-a759-7bd7cc51c254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088f88c3-a365-42ea-b170-b80505e28da1",
        "cursor": {
          "ref": "ef98c5db-6142-41fb-b244-337ca0aa6e5e",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d9363aac-f54f-4a0b-a237-8328acff3612"
        },
        "item": {
          "id": "088f88c3-a365-42ea-b170-b80505e28da1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b728a7a6-273f-4254-b2a2-1a7af9f1c0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9294cc3-5a02-4fda-8a99-5bab5a9de24f",
        "cursor": {
          "ref": "0f885641-2ab1-4f41-99a4-be7bebbb4c00",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "cfc06e39-0334-4b3d-baa6-ba47b4d0d03a"
        },
        "item": {
          "id": "d9294cc3-5a02-4fda-8a99-5bab5a9de24f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "618cb565-8e67-4f16-b4bd-6c2d8524a12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4c630b-e94d-45fc-a385-be99e15997a1",
        "cursor": {
          "ref": "65776487-515e-46ff-b0c8-6e3df6de23a8",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f0ec206a-1b63-4e7f-a74f-851bbc857da6"
        },
        "item": {
          "id": "ff4c630b-e94d-45fc-a385-be99e15997a1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "24951ac2-b114-425f-93c0-a3dad6ff308f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e463be7b-1874-4599-a40e-adbdb9d4696a",
        "cursor": {
          "ref": "44819bc8-97bf-4015-8117-33cf7d4b6465",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f3c3c623-a17c-43f2-a57f-f92e04c672c2"
        },
        "item": {
          "id": "e463be7b-1874-4599-a40e-adbdb9d4696a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b4c7c85a-dea4-47b5-996b-552f284d5a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c3da41-49a5-4b94-b35d-9ecd61b6b7b3",
        "cursor": {
          "ref": "9dd3e809-0f64-4878-932a-386211bd753f",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cdaa0ec2-c9c4-4c48-8993-dd00cb597a8f"
        },
        "item": {
          "id": "b1c3da41-49a5-4b94-b35d-9ecd61b6b7b3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "440b3ff1-8e0c-4ec7-8539-6cf6faa853c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c619e9a-3f3c-4dab-95f0-79462a7945f8",
        "cursor": {
          "ref": "63e80002-9950-4f62-bd79-966449589b40",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a07e95b2-f9a7-415e-8086-c3b8a676f40e"
        },
        "item": {
          "id": "6c619e9a-3f3c-4dab-95f0-79462a7945f8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b8971dc0-9da1-4278-b19e-3da703f3229a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d810a4-4835-4ad7-b7f0-93d9487e7b3f",
        "cursor": {
          "ref": "ec6f69ad-8e3f-44fc-85fb-c08369df8311",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "cba85482-d1d0-481e-a884-950ffc8724a3"
        },
        "item": {
          "id": "56d810a4-4835-4ad7-b7f0-93d9487e7b3f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ecf34fda-8db1-4fd1-9df6-07135d63e9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c868bd5b-480a-4115-8be1-6cfe54a7d51e",
        "cursor": {
          "ref": "88483150-dc0b-4863-baab-da087afc6e24",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d626e3ff-f10e-4dfc-b851-16a4b09933e4"
        },
        "item": {
          "id": "c868bd5b-480a-4115-8be1-6cfe54a7d51e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7d512899-76e5-46f4-ad52-1edc3130660a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70734fd-f1ef-4d01-9105-02673afa6c2f",
        "cursor": {
          "ref": "c099b24c-a5f3-4733-be7d-6dcd4d3967e8",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "852db5ed-2c9e-4948-bab0-a6393e4f6a4f"
        },
        "item": {
          "id": "e70734fd-f1ef-4d01-9105-02673afa6c2f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9112e317-af92-42c7-b6ae-0707d3c43b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef1151f-f413-4ba7-9932-16cdafe5f8d9",
        "cursor": {
          "ref": "0f243d46-e09e-44d1-af20-c6f037cf54f2",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3e5e5ed3-6e8d-4b26-a622-73e64fe4550f"
        },
        "item": {
          "id": "2ef1151f-f413-4ba7-9932-16cdafe5f8d9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bb34fb0f-ebc5-4b94-8774-3959e1a89f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12efee6b-d912-4bff-8c58-f9fed873db19",
        "cursor": {
          "ref": "606aade5-24b0-4ae5-85cb-177ff0076e6a",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f4e80ca5-04ab-486a-ac55-24d3328cfcbe"
        },
        "item": {
          "id": "12efee6b-d912-4bff-8c58-f9fed873db19",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fb2fe64e-f3db-4028-8877-c17ca82afb3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4505efcb-723b-4350-bdca-f76ed26c5ec5",
        "cursor": {
          "ref": "b42f74ed-9ecd-444c-8b89-3c0e49659010",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2bd2c40b-2287-4b8e-b943-8eb91d441497"
        },
        "item": {
          "id": "4505efcb-723b-4350-bdca-f76ed26c5ec5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8b0235ef-bdc0-43d5-b176-c77c8cd504b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b07ad2-474b-4d16-99fc-8469ed805c12",
        "cursor": {
          "ref": "26f870ad-fcaf-49a9-a1c2-ba2694ed5861",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f8d67e7e-63c1-4a8e-ba57-3ba67a60b1b9"
        },
        "item": {
          "id": "01b07ad2-474b-4d16-99fc-8469ed805c12",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "849c6d03-8337-4b48-b5c0-0e604bc3a7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538f434e-5fc3-41ff-93e4-8fd55a8be2d4",
        "cursor": {
          "ref": "5c37853c-6646-44ba-acab-0c5233acb837",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "71db6bfb-da1f-4e69-82b5-d4e50ddb1320"
        },
        "item": {
          "id": "538f434e-5fc3-41ff-93e4-8fd55a8be2d4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "957287d7-f0cc-40b0-9773-01d096d75d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b33d98f-04bc-4eed-82c8-1e365f913160",
        "cursor": {
          "ref": "e0728ebf-419d-4221-a18e-03121b03dd6a",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4b50bee0-da74-4a52-a650-729138b0f837"
        },
        "item": {
          "id": "9b33d98f-04bc-4eed-82c8-1e365f913160",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fbfbd9db-3e6e-458c-92f8-9349c03f4762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cec250-3d16-454c-9b70-7fce0fe28ee4",
        "cursor": {
          "ref": "ca546550-b359-42e0-b286-24ccfeacf1f6",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f5b411c1-0388-425c-9c12-6cdb7bce5150"
        },
        "item": {
          "id": "72cec250-3d16-454c-9b70-7fce0fe28ee4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9001ac89-cc11-4ff6-b690-926e35a3f050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17ddb31-3620-4459-a771-d6467789717b",
        "cursor": {
          "ref": "42e1ee36-f375-447b-be7b-16ae4b5656f1",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f9e6670b-28ba-4935-9d02-552cc55b719c"
        },
        "item": {
          "id": "d17ddb31-3620-4459-a771-d6467789717b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "163536ab-9df6-4ea2-a1cb-7c367bed07e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a0ccef-3a15-4e05-8a87-599db6d626c2",
        "cursor": {
          "ref": "35cdf496-5854-4b32-9927-714e942f165d",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f96b6f2c-9064-4172-b257-b8f5f9f8bab2"
        },
        "item": {
          "id": "a7a0ccef-3a15-4e05-8a87-599db6d626c2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "41b04120-ccc8-4c57-849c-b6cd967d8422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad284731-69b1-4e93-ba06-7714cb31aad2",
        "cursor": {
          "ref": "7964f747-1968-477e-9805-fd65eb912a92",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9bb5e962-ffa8-406d-a1f5-eb6ea257ba9b"
        },
        "item": {
          "id": "ad284731-69b1-4e93-ba06-7714cb31aad2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9c84199e-3fdf-4759-aa9b-d4f0c45c6c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f68758-819a-4876-94fa-50473d457959",
        "cursor": {
          "ref": "222525e3-f4bc-499b-85eb-0ca9039a15fd",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b5a41bc0-32a5-4a9b-9f9d-4ca177722495"
        },
        "item": {
          "id": "c3f68758-819a-4876-94fa-50473d457959",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "edc53014-d30a-4495-bebc-fbdea2c02f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b972c463-3803-456d-b876-36d1c353302a",
        "cursor": {
          "ref": "8f0c2ce9-2857-4067-b318-c3336ed30b2b",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f2eee8a5-e717-4246-862a-1555a310b9fe"
        },
        "item": {
          "id": "b972c463-3803-456d-b876-36d1c353302a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "07f7e0fc-e218-46bb-bd61-6b6c5eda5342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 905,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbe3a18-ba00-4cde-8718-6439468052dd",
        "cursor": {
          "ref": "c06abb4e-2876-4a2d-beaa-933ccb00df52",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "af6d5815-4ed3-4c8f-82ff-2cb215de2804"
        },
        "item": {
          "id": "7fbe3a18-ba00-4cde-8718-6439468052dd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "614aa30b-356c-4ce3-8b47-47305b668b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1188,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac56e37-8f64-4703-8946-a269a6d3202c",
        "cursor": {
          "ref": "1ede4e04-c4aa-42e0-93cf-2510cdae0d7b",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2a5d959a-a038-4b1d-94ed-b1d854386870"
        },
        "item": {
          "id": "cac56e37-8f64-4703-8946-a269a6d3202c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "34a289cd-9819-42a9-b4cd-d5408b0545c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1156,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cf976b-5172-4568-ace8-2c1ef86df2c7",
        "cursor": {
          "ref": "f4a1a935-d1ad-4237-9213-ac973fd065f4",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1e30fe43-77f3-42a0-b753-229553134c52"
        },
        "item": {
          "id": "40cf976b-5172-4568-ace8-2c1ef86df2c7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "061a1911-ecb3-49af-8481-c77bfae34ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 849,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d5c472-88ca-4a5c-befe-faa8025c55f9",
        "cursor": {
          "ref": "7acb7fe5-d7b9-4f85-b96d-c446912891dd",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6dfb08e3-54db-49cf-b291-ebe4832faa86"
        },
        "item": {
          "id": "36d5c472-88ca-4a5c-befe-faa8025c55f9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "009c4034-5607-465f-a675-675ad66d633a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b660e8-4329-4795-a2df-5d791d98e655",
        "cursor": {
          "ref": "db8d8dff-6154-42c7-b742-b1a07595ee61",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6f9435c0-7146-4690-9f79-de73a8e304eb"
        },
        "item": {
          "id": "e8b660e8-4329-4795-a2df-5d791d98e655",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "743189c6-5649-4fe0-bf35-f0a68baaf4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26830868-1d88-4bd4-9fdc-7d57f30629cd",
        "cursor": {
          "ref": "10fee2cc-26e7-4fe9-937f-1a59aecb48eb",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "06d325fe-914f-4cfb-a4ac-fc915611f5ed"
        },
        "item": {
          "id": "26830868-1d88-4bd4-9fdc-7d57f30629cd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "69780499-a9a7-45e5-afb1-9c2460b15395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9631c78-e489-4094-9eb7-5782cc4ed086",
        "cursor": {
          "ref": "963114cc-3746-44f2-bc87-5e0ffcbcf221",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5f5cf57f-26c5-4e6b-b3f8-1f11cff650a6"
        },
        "item": {
          "id": "c9631c78-e489-4094-9eb7-5782cc4ed086",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "efc14878-3d63-4bbf-8d3d-94fe3d865810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba03cb7-c563-4430-afa3-1cdc936afa80",
        "cursor": {
          "ref": "8b49edb2-236d-49b2-aa39-c3007fe6e8ee",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a01d63d9-c31f-42f5-b1f5-410d773d0bd5"
        },
        "item": {
          "id": "dba03cb7-c563-4430-afa3-1cdc936afa80",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "afd8d468-20cd-4306-9821-8294e8a312c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c221b68-c831-4ff9-86d6-45769029655a",
        "cursor": {
          "ref": "f59b0d82-5066-41d0-a096-109bf838cc71",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "589e9aec-f2af-4add-96d6-d2a9fe5d0461"
        },
        "item": {
          "id": "6c221b68-c831-4ff9-86d6-45769029655a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b0661a35-67c1-4b8a-940c-3aff910cd761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592eafcf-9ea6-4057-a09a-297c474f5baa",
        "cursor": {
          "ref": "6891228f-c554-498a-9d88-96f203da31c4",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "068f4860-f5fd-487d-b7f6-b4305545453e"
        },
        "item": {
          "id": "592eafcf-9ea6-4057-a09a-297c474f5baa",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "72f1d846-6ccd-44ad-8229-15ab1dc5181e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d790a01b-0a36-4085-93ac-ca2682f63de1",
        "cursor": {
          "ref": "052ec705-6a9e-4fff-9c53-37ef2192bfe6",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "dc36bba1-2df4-4559-b743-8988f138ab1b"
        },
        "item": {
          "id": "d790a01b-0a36-4085-93ac-ca2682f63de1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2d869bea-c28f-49c4-9dd3-01fd2db65c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb0f81a-81da-4778-a0b0-98326a2e71fe",
        "cursor": {
          "ref": "546ed667-7a73-4975-afd0-cf36eb80e96f",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f2b3dc2c-d2bd-4481-a766-9054e05abc0e"
        },
        "item": {
          "id": "2cb0f81a-81da-4778-a0b0-98326a2e71fe",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "47550b15-3cae-4da2-acc5-4b914d5dbcf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37902eab-ccbb-4d5f-8f0c-331d76866637",
        "cursor": {
          "ref": "6cf74cc8-0a7f-48a3-ac1b-2f120fef96c8",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0b0215c6-06ec-4737-a8cc-46ff2fe452d1"
        },
        "item": {
          "id": "37902eab-ccbb-4d5f-8f0c-331d76866637",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "53d0c22b-6f07-4f50-a4cf-802ec1f7ac2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c24eae-c57a-4cef-9b8b-e32589e7fefd",
        "cursor": {
          "ref": "de939070-0e20-492d-9750-7b9c4d14ac65",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f143bc8e-7418-4484-a6e8-38ba3d39386f"
        },
        "item": {
          "id": "00c24eae-c57a-4cef-9b8b-e32589e7fefd",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "90bf83dc-105d-4917-b518-e8f84733fefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cb42cd-3798-49c3-a37f-edb95b29ad8c",
        "cursor": {
          "ref": "32ccb915-c57b-47c7-99ff-eb413591b1cd",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5a1e464d-a579-499e-9223-786df2df50cc"
        },
        "item": {
          "id": "c3cb42cd-3798-49c3-a37f-edb95b29ad8c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2697cf3c-e74f-49d9-9229-ba900759b528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defe1f52-513a-4e8f-9118-4f464877f77f",
        "cursor": {
          "ref": "9fd9e057-182e-4369-ae2f-db1881e5d908",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "108a0c03-cf66-4f9a-b78c-11fab0a2944b"
        },
        "item": {
          "id": "defe1f52-513a-4e8f-9118-4f464877f77f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f3afbe5e-f998-4229-8125-510630e1a829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd597ad6-7672-4f8b-8294-99e715c07c1a",
        "cursor": {
          "ref": "f08cb149-6e76-4979-b1e4-f7e802bc1a67",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7af8d1b2-a87c-4001-a8e7-7b7888bbe5db"
        },
        "item": {
          "id": "cd597ad6-7672-4f8b-8294-99e715c07c1a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3d705cdf-c307-4ce8-b0e0-ece2b7836db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a15fa2-bf7f-4e61-9ad1-764e2591732c",
        "cursor": {
          "ref": "0e776203-8da4-4754-8369-a5cb869a84ce",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4441af25-6ad4-4fe5-b8ca-c376746d5621"
        },
        "item": {
          "id": "10a15fa2-bf7f-4e61-9ad1-764e2591732c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ab7ccf6e-cdf3-4254-bd63-92c67bbbb6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d066718-6df1-4a7d-8165-02bf2c7c4c7e",
        "cursor": {
          "ref": "35fed89e-dd4b-42da-bae9-4bb252a57934",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8158dfad-70ce-4c82-9a16-266316b5a63d"
        },
        "item": {
          "id": "3d066718-6df1-4a7d-8165-02bf2c7c4c7e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "18284c6d-7afe-4382-92db-7017217f575e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4951117-2ab0-434e-a8fe-45cf9e241387",
        "cursor": {
          "ref": "cff83413-fedb-44b1-b21a-4e5a86f52c94",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ca7e0f74-bd1c-4344-aacc-1aa9777d2e60"
        },
        "item": {
          "id": "a4951117-2ab0-434e-a8fe-45cf9e241387",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1f28b07f-2e5c-4ae5-a93e-d942a8d2b483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5ee8df-2680-428c-b9a8-0d2f3cde95de",
        "cursor": {
          "ref": "22ad8c38-164b-4f5f-be41-ad1465e37ae3",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "566e1b19-ca47-42bb-8bf5-ce1efae2316a"
        },
        "item": {
          "id": "3b5ee8df-2680-428c-b9a8-0d2f3cde95de",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d4255c73-af7c-42a2-9e94-5efd099b1cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ce7d49-b630-4407-b5ef-57cb2f66d2cf",
        "cursor": {
          "ref": "96a09595-136b-41d4-a13b-57073fa44b3b",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d107d8fb-636f-46da-8934-aae619530890"
        },
        "item": {
          "id": "73ce7d49-b630-4407-b5ef-57cb2f66d2cf",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "60c1e129-5ef4-4985-b527-c17ed722b986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0370002a-16cb-4dd8-be1d-5ffa96ae3f4c",
        "cursor": {
          "ref": "cf30c4a8-f9cd-4995-a0b1-df0de99cb4d6",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "519bf1e9-398f-4b08-bf4f-47cb3bbb06ee"
        },
        "item": {
          "id": "0370002a-16cb-4dd8-be1d-5ffa96ae3f4c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6208328c-0a16-4924-a537-8afffcff3522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc35aa4-63f8-446f-a99b-ba7fea6abbce",
        "cursor": {
          "ref": "ce7be7ae-9047-4d60-8679-52388ec8bba1",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1395e000-cf33-481b-9e91-d95d9d6da355"
        },
        "item": {
          "id": "1bc35aa4-63f8-446f-a99b-ba7fea6abbce",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7532bb01-ce5f-4e65-8605-0d5bcb83cf07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bdc4b07-63a7-482a-ba58-ae805411ceb5",
        "cursor": {
          "ref": "77359154-edc5-4727-8954-1bd0c63b161a",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "77997c4b-80b4-4665-94b7-1356b8d5b8ee"
        },
        "item": {
          "id": "1bdc4b07-63a7-482a-ba58-ae805411ceb5",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "601b67c5-d018-4258-9866-9e741f8d7d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf490e8-b255-4a8d-bc79-277d4f5d4014",
        "cursor": {
          "ref": "a7465786-54c7-4dad-9947-64c7c041de2e",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "294a7e2e-0173-4406-b0a0-c42dc85a6141"
        },
        "item": {
          "id": "dcf490e8-b255-4a8d-bc79-277d4f5d4014",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "78265358-0b62-427a-9efc-bf56c2de7d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c15afe0-d50b-4fd5-9aa4-9114ad9bd4ca",
        "cursor": {
          "ref": "1a3b9a2e-54ca-419c-84d0-fc7f6adb5177",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1b75e7eb-f343-465c-bd03-fb8b5cde5648"
        },
        "item": {
          "id": "0c15afe0-d50b-4fd5-9aa4-9114ad9bd4ca",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "684e1372-f1b1-4e6c-bef7-7a2c7e146cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c1440a-7ffb-4bf6-ad57-b8797c252d26",
        "cursor": {
          "ref": "36d8b304-f39a-489b-97f9-56386174426c",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7f908e6c-f124-40ae-9636-bdeaa13f9474"
        },
        "item": {
          "id": "56c1440a-7ffb-4bf6-ad57-b8797c252d26",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7b81504a-de04-43a9-96e2-f28d3c53eda0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d46d91-cd5e-4535-be92-86bfc16b02c6",
        "cursor": {
          "ref": "ab5873a2-75e2-4130-8b4d-16a9c9e4497d",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0f16bb08-8d44-4521-bc69-3a2daef60dc6"
        },
        "item": {
          "id": "80d46d91-cd5e-4535-be92-86bfc16b02c6",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "374e0ca4-38c4-4beb-9fa2-b3d9c2d130cd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 530,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992302ac-9f7f-4505-8927-5475fea38ed3",
        "cursor": {
          "ref": "0b1b2839-f976-44de-afe3-5b249c639dbe",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "14e4c396-9aa3-4ceb-b0fa-8f5348d6e3ec"
        },
        "item": {
          "id": "992302ac-9f7f-4505-8927-5475fea38ed3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6efb8b80-f14f-46ae-b043-f81dc1fab8b4",
          "status": "Created",
          "code": 201,
          "responseTime": 4148,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eef8e80-f386-45e1-80d7-22ee8659bce1",
        "cursor": {
          "ref": "5f4b1a7d-06a4-47fe-a0c6-bacb9a0037e3",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8a647065-2d82-40ed-a09c-0e541415f2f5"
        },
        "item": {
          "id": "2eef8e80-f386-45e1-80d7-22ee8659bce1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "afe9301a-cc7e-4e38-a4d3-ecf56a566aff",
          "status": "Created",
          "code": 201,
          "responseTime": 4660,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "11374ee8-62c9-430d-bb04-df65de888c3f",
        "cursor": {
          "ref": "98e1f9e1-e06d-4335-beec-eec48d05723d",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "321922f8-4563-40cd-bcc9-cc7dad56561d"
        },
        "item": {
          "id": "11374ee8-62c9-430d-bb04-df65de888c3f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fa100a80-42ef-44a9-b56b-6fb6abc7d226",
          "status": "Created",
          "code": 201,
          "responseTime": 4060,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec94fe39-b407-4a38-b96d-679ae9b11fb0",
        "cursor": {
          "ref": "d1ed6555-cdc9-4dc6-a52b-dcfb3ed14664",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2ebe3245-a4b5-451a-b7cd-6be75a862d27"
        },
        "item": {
          "id": "ec94fe39-b407-4a38-b96d-679ae9b11fb0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "df8c8744-4c5f-4e45-b087-24dd65b16c0b",
          "status": "Created",
          "code": 201,
          "responseTime": 3941,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "018fb447-3838-4e78-8655-10af5c7eaa65",
        "cursor": {
          "ref": "313a3552-9a4a-48d1-a3ff-410329d1e801",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "029e2530-8097-448b-8bdd-7f11ecdd4327"
        },
        "item": {
          "id": "018fb447-3838-4e78-8655-10af5c7eaa65",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "07809a22-e3f7-4b31-b264-e1b04b538990",
          "status": "Created",
          "code": 201,
          "responseTime": 5924,
          "responseSize": 1088
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c815aee-8d70-4ac4-ad2f-bbcec574605d",
        "cursor": {
          "ref": "7a74dc1b-d190-4626-bdb2-7484d9c71157",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "69d9515f-3c6b-4147-b69a-7602b0390f5d"
        },
        "item": {
          "id": "5c815aee-8d70-4ac4-ad2f-bbcec574605d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3f642605-b42d-484f-a688-34e9b88db4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c815aee-8d70-4ac4-ad2f-bbcec574605d",
        "cursor": {
          "ref": "7a74dc1b-d190-4626-bdb2-7484d9c71157",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "69d9515f-3c6b-4147-b69a-7602b0390f5d"
        },
        "item": {
          "id": "5c815aee-8d70-4ac4-ad2f-bbcec574605d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3f642605-b42d-484f-a688-34e9b88db4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b8fc75-73e8-49e6-8b6b-70b1f4cbc696",
        "cursor": {
          "ref": "74cddc4f-4d92-41d8-bb57-8a95fcb24c2a",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "76abb64f-d395-4233-81e2-6313576b053f"
        },
        "item": {
          "id": "38b8fc75-73e8-49e6-8b6b-70b1f4cbc696",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b92436c0-73df-486f-b902-44a6ca0b773d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544ff33f-6911-4af6-a14d-7ae0d4e58f12",
        "cursor": {
          "ref": "5ccc378e-7b1e-4e76-b81a-50c5288b2863",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f9257453-bd9c-4164-9a52-d987b8d12ba1"
        },
        "item": {
          "id": "544ff33f-6911-4af6-a14d-7ae0d4e58f12",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e57369db-3525-4512-8ef4-b681bf4870f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6556fe4-4ffc-4059-ad47-f51a80e56a94",
        "cursor": {
          "ref": "3ba7a20a-d31b-4b50-b9d0-8075f511beb6",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "644071ef-78d9-4f92-afde-20bf327da668"
        },
        "item": {
          "id": "e6556fe4-4ffc-4059-ad47-f51a80e56a94",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d45ea5c2-eb12-4108-a9bb-239d083f6863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba86da0-0e38-4414-a30c-ac8d21efbf45",
        "cursor": {
          "ref": "914ef1db-ac7e-495f-91ec-57ef379e13d7",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "286ba53d-ca78-427d-9e3c-510fa1025675"
        },
        "item": {
          "id": "dba86da0-0e38-4414-a30c-ac8d21efbf45",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c7cccb04-7425-4552-abb1-658604237607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 991,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4adbdd8f-3292-4809-b41e-8af6b77f51c3",
        "cursor": {
          "ref": "f8368c01-6db8-4614-aeec-e4ff39268ea1",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5c065ca9-722e-49de-b707-b3320ab93420"
        },
        "item": {
          "id": "4adbdd8f-3292-4809-b41e-8af6b77f51c3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2cbb3a9c-6c44-4843-9d0e-a80008c54edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569843f7-7ff5-4150-a01a-b281ad6877e4",
        "cursor": {
          "ref": "ced2b4cd-c849-476a-8d54-34410a78ec5f",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4ce78bcc-ba2b-4701-a186-ba4c2af81252"
        },
        "item": {
          "id": "569843f7-7ff5-4150-a01a-b281ad6877e4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b5f6be98-25a9-4bfb-8278-408bbc8ef60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 839,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493a4d54-1623-4f0b-a72d-eace8cf7d499",
        "cursor": {
          "ref": "e8911c5b-1597-4026-bb2c-3b92c0509290",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "27611eaa-f1dd-43c4-9e64-823aff128ac7"
        },
        "item": {
          "id": "493a4d54-1623-4f0b-a72d-eace8cf7d499",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c07c5bfa-2f2e-499b-989d-20380e8fc5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5d3b11-ffc8-4853-a5e0-96df5214d942",
        "cursor": {
          "ref": "72e638e4-5960-496a-b74c-a273ada549d7",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "27489985-df4e-4195-a7e2-8871b683b72a"
        },
        "item": {
          "id": "ca5d3b11-ffc8-4853-a5e0-96df5214d942",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bd1604e3-6cb0-4375-a046-9514c7306b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 871,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfdae85f-c3bf-436e-807f-66386eb67877",
        "cursor": {
          "ref": "e5cdc9a6-89f5-43ce-be36-4aaa99863ebe",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7c87e360-49f3-48a8-b437-ba6bd7c34dc1"
        },
        "item": {
          "id": "bfdae85f-c3bf-436e-807f-66386eb67877",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a48e2138-ef7c-4f97-a629-0669393112a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d19953b-c8a5-4abf-8656-d58f388bc605",
        "cursor": {
          "ref": "4af479c9-77b1-4303-b39e-8250bfbe6364",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c7011884-e080-4ec9-a90c-9ba4916cb9f4"
        },
        "item": {
          "id": "6d19953b-c8a5-4abf-8656-d58f388bc605",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fb2127cd-77f3-469b-89f5-df79ee14bc14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73507d63-1069-4c14-8313-cfc17a78745b",
        "cursor": {
          "ref": "43a1b35b-dc9a-4047-a532-ab5f154bc0d5",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d028fe93-bdb3-4d7b-a61f-ecfb99a2bc4a"
        },
        "item": {
          "id": "73507d63-1069-4c14-8313-cfc17a78745b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "65023071-d0cf-4f15-bea9-7141ea4948f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85072c0d-007b-4f5b-b5b6-02cf1db2149e",
        "cursor": {
          "ref": "768f3a74-ed88-4b3b-ba42-b094371c983e",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "38b128d7-a173-4690-958e-56c20e0e62b1"
        },
        "item": {
          "id": "85072c0d-007b-4f5b-b5b6-02cf1db2149e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "466e33d5-ab64-4824-a71c-31815a369d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3498fde3-6042-4889-91c3-073b7efbfdb9",
        "cursor": {
          "ref": "564ae5c5-b474-4cc5-9ccd-0da224113299",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "433c71a5-9dee-4b92-8d7b-bde88aa4b2b1"
        },
        "item": {
          "id": "3498fde3-6042-4889-91c3-073b7efbfdb9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "250bc374-ce29-4499-aafd-57a46324234f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b5318f-f7fb-4f35-95a4-45a6e3b91b4e",
        "cursor": {
          "ref": "918ba3e3-16fe-49fa-81fa-ff0c1fabf6fe",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "af978651-443a-411d-b95e-e6531ddbd337"
        },
        "item": {
          "id": "e8b5318f-f7fb-4f35-95a4-45a6e3b91b4e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "07040371-1650-4c97-96db-fe3ae865fe9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52278f98-9983-4348-956f-0e038b050baa",
        "cursor": {
          "ref": "36a6a172-5751-42a4-a271-1f9d838948fe",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ab3f392e-7a4e-45c8-bc2c-d9200b334e3b"
        },
        "item": {
          "id": "52278f98-9983-4348-956f-0e038b050baa",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "010cdf4a-17db-4bbd-ab06-e75948a7703a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b28587-1a5f-4f46-9cf3-979578f6a1bc",
        "cursor": {
          "ref": "ec0af317-859b-4d31-a3e4-92717c866632",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "43db35d0-944b-40fc-9999-53c928cdfa44"
        },
        "item": {
          "id": "29b28587-1a5f-4f46-9cf3-979578f6a1bc",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a1bd34c8-b1aa-4d9a-890c-7f56d3255f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b493fe28-4f11-43c2-9f74-4ab553514de5",
        "cursor": {
          "ref": "46c5ef99-2d85-4adb-b0f9-f3182c52f2cf",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "708c9359-c5ff-4c62-ba57-60437d263f9d"
        },
        "item": {
          "id": "b493fe28-4f11-43c2-9f74-4ab553514de5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ef3e4e12-bfe1-43be-8c3e-103c403eaf1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa39f2f-f098-479d-b542-a3e531e6a2ba",
        "cursor": {
          "ref": "fa58d3e5-b83e-4cbf-b595-da05a955b014",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "34395e75-fc52-46b3-8838-4d2bacfcd3c1"
        },
        "item": {
          "id": "7fa39f2f-f098-479d-b542-a3e531e6a2ba",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1f22afa3-adf8-46ac-8be2-56a23bd9d9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9150d98-4c01-475a-abb7-fe428b19337a",
        "cursor": {
          "ref": "2bba75a5-c00f-41ce-9168-e096823575b8",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "477c16a7-42bd-41f6-afd9-645f38b16542"
        },
        "item": {
          "id": "d9150d98-4c01-475a-abb7-fe428b19337a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1f227dd5-7dce-4613-a80a-0343f9936de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c3ad83-6397-451c-b47b-e3c19bd6f350",
        "cursor": {
          "ref": "fe8b0cd2-d905-443d-8721-7315a667f01e",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "fcbf0c59-45c8-495e-a32a-d997f7170c34"
        },
        "item": {
          "id": "33c3ad83-6397-451c-b47b-e3c19bd6f350",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0e026271-e933-4f27-b3d5-af516e8adeb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58dea7b-de05-486d-884c-880d5da0f142",
        "cursor": {
          "ref": "8701b9d6-95fe-42de-a064-058dffff1afc",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1a8b3609-6e8a-432d-a2ba-c1849d8aced9"
        },
        "item": {
          "id": "d58dea7b-de05-486d-884c-880d5da0f142",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fb171a25-cf15-415e-a050-737222615401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c64cf5-dec6-49f2-b024-219cf3812e60",
        "cursor": {
          "ref": "03dabecf-18cc-47c2-97d1-4c58dfc06f67",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "83b022cf-4fbb-4d9d-9af5-d26a88c6670b"
        },
        "item": {
          "id": "e7c64cf5-dec6-49f2-b024-219cf3812e60",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "adf39063-8cbb-4e0e-be54-c9d4e409f98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e038b303-d095-438a-9170-c6e13de95004",
        "cursor": {
          "ref": "0736d565-8f5c-4670-a010-704abf28deb1",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "96c0d64e-772b-4569-b696-b36eec186389"
        },
        "item": {
          "id": "e038b303-d095-438a-9170-c6e13de95004",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "093b5223-2db8-4967-9b7b-ff189bde2944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e72645-9a7d-4a3d-a60d-741a74f8aea3",
        "cursor": {
          "ref": "61b39eda-0d26-4522-a0b2-e409499e6493",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a872324b-e078-4c65-b1ce-fec1c0d028a2"
        },
        "item": {
          "id": "02e72645-9a7d-4a3d-a60d-741a74f8aea3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "37a93a1d-cadb-4a8a-9800-dad311a57541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a98da2-413e-49bb-bf0a-bb9dcc00df4a",
        "cursor": {
          "ref": "c0970b19-752c-442b-ac2d-9fdf109090b2",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d52f4999-2dfa-4e92-8da5-a82762d048d1"
        },
        "item": {
          "id": "c2a98da2-413e-49bb-bf0a-bb9dcc00df4a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4b6fe177-06b5-4f37-9d90-27b0bd479bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95811fb3-b2ff-4973-9008-40fce01bfd0e",
        "cursor": {
          "ref": "6899cbbc-02b5-4cc0-9e25-58684fc77c86",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "479164c5-d1f7-402d-9ee1-835cb9425275"
        },
        "item": {
          "id": "95811fb3-b2ff-4973-9008-40fce01bfd0e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3f04c678-43c2-4598-80c4-5ec48e55f218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba22279-a79d-410b-af44-997bb6c1649b",
        "cursor": {
          "ref": "afdf1b2a-9f34-468b-9801-85c64464b2c3",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "05430855-a8ee-4778-a829-b24ba46b19c2"
        },
        "item": {
          "id": "eba22279-a79d-410b-af44-997bb6c1649b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b5a90a7f-e9c0-4507-90ec-b4c68cf944aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3d64fe-dcbf-47d1-834b-9db26f78c54c",
        "cursor": {
          "ref": "b80f7cb9-8e62-4385-98f7-6386616de560",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "78d1c802-033a-4325-9a91-2321e4a9ae96"
        },
        "item": {
          "id": "fa3d64fe-dcbf-47d1-834b-9db26f78c54c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6c36ae77-0cd9-4d7d-9c7a-bf3d96b3053b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd9fdec-139f-4017-b202-63a17e2366c8",
        "cursor": {
          "ref": "9458aeeb-39f0-4136-ae1f-b9841df09299",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2cfc26fa-75f7-4db2-801f-08021278aaed"
        },
        "item": {
          "id": "8fd9fdec-139f-4017-b202-63a17e2366c8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6fb043cb-c05f-4f02-b449-f2e313b782de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 854,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b7c4ae-9ca0-4332-9ee1-f36f7bfc8336",
        "cursor": {
          "ref": "5245a291-238e-4425-a666-22bb9856649f",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3c535e24-86ff-4116-90e7-2dc854f62d62"
        },
        "item": {
          "id": "84b7c4ae-9ca0-4332-9ee1-f36f7bfc8336",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "05f62d46-ecad-401f-96fe-6dae8fee2fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f6adbe-d264-4acb-b522-f9c4b1fb17fb",
        "cursor": {
          "ref": "1ae0ae96-e3c4-40d2-957f-ba49e8986295",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b1717ef1-29ba-44e9-938a-eb316df2ef52"
        },
        "item": {
          "id": "43f6adbe-d264-4acb-b522-f9c4b1fb17fb",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0fe16f74-77ee-44b9-9f3d-ce1e7ddd8077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1caf4f8-e2fd-40e7-9d13-e130f16f5ee1",
        "cursor": {
          "ref": "abec26f2-4562-4473-bc02-55ee24c81171",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ae17da6e-c661-47f5-bab4-a0b3cd57389e"
        },
        "item": {
          "id": "a1caf4f8-e2fd-40e7-9d13-e130f16f5ee1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f369c99a-7369-470a-91b2-81a77512b99e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5f6b54-e2ce-4e07-8efa-6ef7055afd48",
        "cursor": {
          "ref": "8fbe7bef-bfce-40bc-b565-6d9c119127c9",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ee3afc4c-f46b-4c7a-83f8-6d0b2d4d4c95"
        },
        "item": {
          "id": "9d5f6b54-e2ce-4e07-8efa-6ef7055afd48",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "e2ec235d-a89c-472e-824b-a017e20a9f8e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 542,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac229bf0-f6d1-4a5a-9a96-63bddf68f08b",
        "cursor": {
          "ref": "26fbfceb-1ebd-4af5-8e27-316ac4d7f31d",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2fbcfd15-395f-4bad-9b5b-2a12789a19d2"
        },
        "item": {
          "id": "ac229bf0-f6d1-4a5a-9a96-63bddf68f08b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e38623e3-0cf4-4163-a085-0284efe68b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac229bf0-f6d1-4a5a-9a96-63bddf68f08b",
        "cursor": {
          "ref": "26fbfceb-1ebd-4af5-8e27-316ac4d7f31d",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2fbcfd15-395f-4bad-9b5b-2a12789a19d2"
        },
        "item": {
          "id": "ac229bf0-f6d1-4a5a-9a96-63bddf68f08b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e38623e3-0cf4-4163-a085-0284efe68b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed97c062-35c8-41c4-b1c5-43df84ffef29",
        "cursor": {
          "ref": "a44ae310-c48c-4f32-b9cd-2d1917f4b7d5",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "00bcd696-c038-401d-bc5f-e907515c9ac2"
        },
        "item": {
          "id": "ed97c062-35c8-41c4-b1c5-43df84ffef29",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9a11d7eb-052f-4116-ab90-f4bb3cfc14c7",
          "status": "OK",
          "code": 200,
          "responseTime": 304,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "523c9238-44b0-4453-85c3-b80d480afcca",
        "cursor": {
          "ref": "e7f7ad14-27a6-47a6-a817-1b57fe68a81d",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6c571b4d-24c7-4b15-98ff-3f9cc76ad692"
        },
        "item": {
          "id": "523c9238-44b0-4453-85c3-b80d480afcca",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3e681083-2cbb-4f2b-8bbf-188b714d062c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f6fe28-2b0e-45e6-a959-8bbb6377528d",
        "cursor": {
          "ref": "77fb04ea-4fc3-4ba6-9db2-59eec2c94c31",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4470066a-d67f-4e24-bf48-b52a792db3ce"
        },
        "item": {
          "id": "54f6fe28-2b0e-45e6-a959-8bbb6377528d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "67178807-9dda-44a4-9d18-a2223db49d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec19510-391a-4e5b-a946-510e4bc25288",
        "cursor": {
          "ref": "c164f332-ef72-43d1-bc5d-9e90229f7676",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5187fe6f-2850-40ad-9850-eda6a595c9d8"
        },
        "item": {
          "id": "cec19510-391a-4e5b-a946-510e4bc25288",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7a5a693a-086c-4c87-ba39-66d9931c32ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a741af5-1701-4ac5-85a4-c9e43c43d733",
        "cursor": {
          "ref": "7d7e228d-d6d2-4395-b28b-4face6691d26",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "74164a9a-022f-4be2-bd1a-991cd5f3f190"
        },
        "item": {
          "id": "0a741af5-1701-4ac5-85a4-c9e43c43d733",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0d8016cb-218c-4412-ae5c-0caec70cc708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976728e2-ca81-4817-87db-6bc334423b80",
        "cursor": {
          "ref": "56b61706-afd5-4540-9d55-1264141f2554",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "848cbd33-6ca9-4189-8756-ed61f5b1a3a0"
        },
        "item": {
          "id": "976728e2-ca81-4817-87db-6bc334423b80",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ca1cf0e8-5d83-4ee1-ad15-d1e163e6d33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5e5e86-0401-4f58-a33c-ae897f9847c3",
        "cursor": {
          "ref": "51f8d999-5b43-4655-9f16-c435eba1c647",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "54e4e9b0-5b82-43ab-a9d8-9cf0b32fe36a"
        },
        "item": {
          "id": "6e5e5e86-0401-4f58-a33c-ae897f9847c3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7fc6bc1f-fba1-49c5-b973-13c5f546e26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0edf9b8-88f7-47ad-b33f-623f4940f4ca",
        "cursor": {
          "ref": "c86cb163-90a6-499a-83fc-bb43519a93a3",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b842b208-dff2-4d24-ac2d-f4b59afa313b"
        },
        "item": {
          "id": "c0edf9b8-88f7-47ad-b33f-623f4940f4ca",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "fbe2eecb-ae4b-464a-9702-931402f43174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 2009
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb801c4-dc29-4c0a-bcab-8bd876693540",
        "cursor": {
          "ref": "424c6f93-5475-4b0e-a90e-783735f2d6cf",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4eebb1e9-2286-498a-ae46-369dab8d1421"
        },
        "item": {
          "id": "bfb801c4-dc29-4c0a-bcab-8bd876693540",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ce70ceb7-6723-4b07-9a71-2c8af0bb5b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9acce00-f4bc-4bea-a44d-3f1cf907ce2b",
        "cursor": {
          "ref": "08467a4a-a89d-492d-8785-034e8160250f",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "290dbdc0-9820-4ebe-975b-28cbaf541748"
        },
        "item": {
          "id": "c9acce00-f4bc-4bea-a44d-3f1cf907ce2b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "35952284-82fa-4342-af43-7788d3ac4ff9",
          "status": "OK",
          "code": 200,
          "responseTime": 347,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:155)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:155)"
            }
          }
        ]
      },
      {
        "id": "a9dc3acc-b1c1-413a-8229-8271c3ec8ba8",
        "cursor": {
          "ref": "e0934227-89a8-4fc6-94ee-efbaa21f13f4",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "dd25cb81-5f72-4f04-8808-2e44ba6e54da"
        },
        "item": {
          "id": "a9dc3acc-b1c1-413a-8229-8271c3ec8ba8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a0366822-2986-48e0-a8da-5a666bced3f8",
          "status": "OK",
          "code": 200,
          "responseTime": 344,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:156)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:156)"
            }
          }
        ]
      },
      {
        "id": "7c094359-4086-46a6-a846-635f5d35b7f1",
        "cursor": {
          "ref": "b640c999-ed62-41ea-802e-fc9a12f0bead",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "dab13488-b935-4313-92d1-3f5bd1fd53fa"
        },
        "item": {
          "id": "7c094359-4086-46a6-a846-635f5d35b7f1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1190478d-cad3-4421-a187-ca01bec6fa93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 2466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043166fd-b054-4fd7-9f4b-98e8b97c09d1",
        "cursor": {
          "ref": "f97cab75-c052-4a5c-9328-14dfe5c10f25",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "10031e2d-e2c9-4454-937f-72a1117832e7"
        },
        "item": {
          "id": "043166fd-b054-4fd7-9f4b-98e8b97c09d1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "425a8913-b074-4a3e-ac1f-2e5ae84eab08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2703d2cf-2e3d-40d8-909e-5a1495fe1a6e",
        "cursor": {
          "ref": "69543ea3-3863-4819-b960-30ad0b688fd9",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c0b1fbec-c18e-40a5-b142-a733c5ea60f7"
        },
        "item": {
          "id": "2703d2cf-2e3d-40d8-909e-5a1495fe1a6e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d85e2848-0b9b-40a0-81ac-59730076fa88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 2455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e613b52-f5a4-4d89-8000-1f5b1d8dad94",
        "cursor": {
          "ref": "48d04181-337c-4c9f-a88c-fca9f3a2ec98",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "396c80b8-4b91-4e36-85ff-b38918922c0a"
        },
        "item": {
          "id": "3e613b52-f5a4-4d89-8000-1f5b1d8dad94",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "560fa266-9a2d-4326-b841-58901c80479a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09082c13-96b1-48ab-a9bf-35a70984aec4",
        "cursor": {
          "ref": "3fa32e6e-7577-4285-9bfa-3130b9544a9e",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2c90cf4d-696c-46c6-b3e6-a076572bbf4b"
        },
        "item": {
          "id": "09082c13-96b1-48ab-a9bf-35a70984aec4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a525f4eb-fea6-4506-8fcc-fe357b3117b3",
          "status": "OK",
          "code": 200,
          "responseTime": 408,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:161)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:161)"
            }
          }
        ]
      },
      {
        "id": "58083f66-ade8-472e-a20c-4b7538d77619",
        "cursor": {
          "ref": "a1b6e2d4-5320-4f8c-8736-e3f567fe9952",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b53400a2-f0a8-4d12-878a-c17be9c86760"
        },
        "item": {
          "id": "58083f66-ade8-472e-a20c-4b7538d77619",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "88bb5565-5257-451d-b9af-9469db2b746f",
          "status": "OK",
          "code": 200,
          "responseTime": 2046,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "1a0faeef-0da9-49fb-955e-531737c40f43",
        "cursor": {
          "ref": "85c55e7e-6394-433f-9b5b-4999d535e3ff",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a1bfefaa-6f6c-4592-b981-3b6cd8fef96f"
        },
        "item": {
          "id": "1a0faeef-0da9-49fb-955e-531737c40f43",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "69889ebb-5736-424d-a7dc-a39c64a541ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e3ac21-0dd1-4029-97ee-6708c09dfb2a",
        "cursor": {
          "ref": "02a0136a-ac13-4964-806c-f34aad8f6470",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ee10585b-cf46-4cde-9cd6-5a94938e1b16"
        },
        "item": {
          "id": "01e3ac21-0dd1-4029-97ee-6708c09dfb2a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "21f061a1-f663-4384-a2e1-532e2435f993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3966a7ef-0e2f-4c61-8f7c-385fb87c7270",
        "cursor": {
          "ref": "3275b810-636c-42fa-8ec3-372a15978050",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c4471edc-2316-49f5-b52c-991f0cdc08de"
        },
        "item": {
          "id": "3966a7ef-0e2f-4c61-8f7c-385fb87c7270",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7365172c-f704-4d34-b75e-ac3cc34b326c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2f1ceb-2674-4e32-866d-b507ec0c7fb5",
        "cursor": {
          "ref": "f5e20f49-0b68-46bf-a9f9-aa78feb4bb36",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b259bfec-a4ba-4e54-955e-ce82f266cd58"
        },
        "item": {
          "id": "ea2f1ceb-2674-4e32-866d-b507ec0c7fb5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "76de84ba-0135-40c8-bdee-a517bfcb61f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe3c776-7ad1-4123-ad43-6a8230f45964",
        "cursor": {
          "ref": "2b914d00-0f2b-4ffa-b06d-a456abb40f40",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "74b55314-4737-45b0-b3da-367512e11d71"
        },
        "item": {
          "id": "dfe3c776-7ad1-4123-ad43-6a8230f45964",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "68cc55c6-ed38-4906-b170-8a7ee430ad30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d1d455-9475-4670-93c6-e53bb112ed64",
        "cursor": {
          "ref": "5b9bfcfc-933c-42c5-bc6f-59cc391b43d2",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8788a248-34bb-457b-9498-d7ea884f3c4e"
        },
        "item": {
          "id": "f5d1d455-9475-4670-93c6-e53bb112ed64",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6f2b39b0-c86e-4e46-9a93-e7b967d9660d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c625ed98-7503-4c2c-a119-e027b8384b81",
        "cursor": {
          "ref": "fa183d1c-6380-4371-bf21-baa0878a048c",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8650fb69-0e29-4c90-8705-2a0bff11cdf0"
        },
        "item": {
          "id": "c625ed98-7503-4c2c-a119-e027b8384b81",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "302aa384-550a-4a11-8244-b31e8aa9e787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9de291-4e3b-40a4-a8fc-470f39108b63",
        "cursor": {
          "ref": "36c78e79-62e4-43df-9a4d-f96133cdb641",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5d0a8af9-b635-4eb8-aaa7-ff6b627512d7"
        },
        "item": {
          "id": "4a9de291-4e3b-40a4-a8fc-470f39108b63",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "bb9a02a0-1433-435b-9cd9-f40ae0c3fafa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b48e8cb-88e6-4ba1-8d6f-2bc72c113546",
        "cursor": {
          "ref": "76e0f310-930d-4c19-a0c9-11f13225c8ab",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8f69a5ad-5fc0-4ef6-b1f3-e5c1248336a7"
        },
        "item": {
          "id": "2b48e8cb-88e6-4ba1-8d6f-2bc72c113546",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fa2e5b62-65a5-4393-8790-f8e00e23ba25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29edcf68-43d0-4d24-bbb2-a92be5b5dd5f",
        "cursor": {
          "ref": "4b9a918b-a54d-44ac-81b9-996361f38a4f",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "27f81bcd-b9b1-4208-808b-14c29a48c648"
        },
        "item": {
          "id": "29edcf68-43d0-4d24-bbb2-a92be5b5dd5f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "98674fb6-f150-4a07-a3a8-1682603dcc0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b74a46-6050-490d-a716-29938270952d",
        "cursor": {
          "ref": "f0825a01-a0ed-4919-bad7-8669308ff1e8",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "03f7b2fa-e0ea-42fd-b73a-58051b49bb48"
        },
        "item": {
          "id": "50b74a46-6050-490d-a716-29938270952d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b928daf1-6851-41b1-8d5d-264919be8f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd35ed0c-a62f-4bc5-ba8c-a852cd739d69",
        "cursor": {
          "ref": "9c5679af-df35-417d-82f0-d523a473d858",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1c4ccfcc-3312-4772-95f8-d885c5146787"
        },
        "item": {
          "id": "fd35ed0c-a62f-4bc5-ba8c-a852cd739d69",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "af274d9d-c87a-451b-868d-da3a5e695775",
          "status": "OK",
          "code": 200,
          "responseTime": 302,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "06814c86-b173-424f-97ea-45df36829623",
        "cursor": {
          "ref": "ce58779a-7a29-432c-9c53-201476832d15",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6927f163-42cf-4d5f-8e08-7d168775382d"
        },
        "item": {
          "id": "06814c86-b173-424f-97ea-45df36829623",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d8131941-4d6a-49be-b2af-92ff0f055f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3aa93b4-6539-44a3-870d-5a2cec58a107",
        "cursor": {
          "ref": "17b3b584-7321-4bfe-8cea-9a4070aa1454",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "312c7aa2-d540-44f7-beb4-f2f9521d8680"
        },
        "item": {
          "id": "c3aa93b4-6539-44a3-870d-5a2cec58a107",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6714e7d2-a51c-4d6b-98b0-6884335929d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d848cf23-4c98-49e5-b60f-75644daaa611",
        "cursor": {
          "ref": "ba8ebf01-8add-440d-9916-65b57787f959",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c345bee5-4215-4af8-8357-4e99ff2c8fac"
        },
        "item": {
          "id": "d848cf23-4c98-49e5-b60f-75644daaa611",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "da099078-ab37-40fb-ad5e-743c8fb19e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9a7d4b-22ee-4441-9718-f61ee15a8b59",
        "cursor": {
          "ref": "95a05a6e-59f9-4773-a300-7475555615ef",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "887076e8-98c0-42fa-9a68-8013ed121d2a"
        },
        "item": {
          "id": "da9a7d4b-22ee-4441-9718-f61ee15a8b59",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "90688be2-3f10-44ef-83d0-baac3d77495c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d64f40e-a010-45ff-9755-5292723be8bc",
        "cursor": {
          "ref": "815f2c9e-5bbf-492b-9e69-9b4000deb4de",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "129e41a3-a5fe-41b9-a27c-621cb7712d0c"
        },
        "item": {
          "id": "0d64f40e-a010-45ff-9755-5292723be8bc",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "97c3cbf3-8a65-44de-bdea-7f510edacc08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93c4fcf-92aa-4c1f-ac5b-3018e00659cb",
        "cursor": {
          "ref": "e4f6d71f-3272-4b8c-a96c-c407d8e3aee9",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ac2d0ab6-fac6-4549-9c2c-e2acdf49b7da"
        },
        "item": {
          "id": "d93c4fcf-92aa-4c1f-ac5b-3018e00659cb",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "eaf93895-89a2-4c5d-94ac-90418d58ffc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915607ef-67d0-4c99-ad51-3a1884cc2984",
        "cursor": {
          "ref": "6e49ebe8-1439-4a65-90a3-413a19dfef43",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "bf3163c9-f813-427c-8f9c-6fba5c8e15a6"
        },
        "item": {
          "id": "915607ef-67d0-4c99-ad51-3a1884cc2984",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "52af8729-b98b-4db3-8a51-3ef995b22b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89e59e2-01ae-4551-bf95-c11eeeb1c006",
        "cursor": {
          "ref": "d07402ca-227b-466b-b12e-354acb73f9cd",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5dd659ae-5278-4ad5-8b9e-5c84b4fbb0bf"
        },
        "item": {
          "id": "f89e59e2-01ae-4551-bf95-c11eeeb1c006",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a6959333-9d9c-44c7-89ae-bec3f88d530d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdcde5d4-8456-4808-bd37-0c007fc6a3f0",
        "cursor": {
          "ref": "3a841e6e-10c9-42c2-8cc2-eb76e0595b04",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "416df497-e8c4-4c74-8bc9-0e5bae2ce37d"
        },
        "item": {
          "id": "cdcde5d4-8456-4808-bd37-0c007fc6a3f0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b84f472b-7610-4c78-8a81-be2eb0de9424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebc9007-837a-4abc-a56b-59fb090b92ac",
        "cursor": {
          "ref": "520f1888-8067-4876-a627-c5841db6e1d7",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "99c205bc-f1e1-4905-b516-86d871928776"
        },
        "item": {
          "id": "6ebc9007-837a-4abc-a56b-59fb090b92ac",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5d3fe8b7-a46c-41e7-b78a-edde59adb600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49db607-9384-43b0-b892-497c4cd0d213",
        "cursor": {
          "ref": "be72292e-883b-4725-b912-4b210cf7d03f",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0944c96f-329d-428f-be32-cf7fb9a2f7bc"
        },
        "item": {
          "id": "c49db607-9384-43b0-b892-497c4cd0d213",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b875b0e0-da70-444e-9edf-b07e32551f71",
          "status": "OK",
          "code": 200,
          "responseTime": 313,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "cd658343-c776-4847-b066-7b733ca17e01",
        "cursor": {
          "ref": "bf69f9e2-eee1-44fb-85ec-7fd00b3bab6c",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "495ce94d-1e5d-4ef9-b7b6-62d9e779cc3e"
        },
        "item": {
          "id": "cd658343-c776-4847-b066-7b733ca17e01",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8419244b-9fa9-41e1-b5e6-dceadc0115f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df75837-35d2-464a-86d9-2c8c12f44555",
        "cursor": {
          "ref": "110b2f80-5f3a-48f4-ab85-1ac1a3c9f316",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "cc2af8e0-a6d0-4a32-bda3-1bb76e310a41"
        },
        "item": {
          "id": "8df75837-35d2-464a-86d9-2c8c12f44555",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "504ef950-7e65-4364-9904-6310f4519fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10d54bb-b814-4a2f-91c5-e5aa7bb0d60b",
        "cursor": {
          "ref": "362eeaa3-76f9-46f7-8785-40c2d4d3fa6c",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3db2b00a-7837-47d1-9a19-d6485f0c7880"
        },
        "item": {
          "id": "f10d54bb-b814-4a2f-91c5-e5aa7bb0d60b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b1309623-97f3-4524-b93f-abc87c324579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fbb787-77ee-47f9-be23-3b35333a7be6",
        "cursor": {
          "ref": "0f710f27-e23a-41eb-8e63-6f16e9cdb1f0",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "208c81ad-5555-42c4-badc-c361f3f7fd76"
        },
        "item": {
          "id": "d8fbb787-77ee-47f9-be23-3b35333a7be6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2e1ac3c3-485a-4037-9141-49d83aae2f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88ea179-bf1f-4c4a-8750-06b67615b750",
        "cursor": {
          "ref": "0bfd2d8e-9069-477e-acdc-ce1c0fc9c6b1",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9a8fce5e-4317-463a-a634-94be70460367"
        },
        "item": {
          "id": "f88ea179-bf1f-4c4a-8750-06b67615b750",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "381c0fee-8958-49e5-89af-0bc2d0849c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32abad8a-2dd1-4889-bb99-af648d4efa5f",
        "cursor": {
          "ref": "acfc15c9-6f8f-4536-9ee7-1c04b86414a8",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "79d12853-c284-4809-8b30-4e877538f719"
        },
        "item": {
          "id": "32abad8a-2dd1-4889-bb99-af648d4efa5f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "26632d5a-4c13-4c49-bcae-11521c29454f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30ad054-849f-4602-8d02-353d3b62385a",
        "cursor": {
          "ref": "9f0b8e2e-00d4-43c4-be52-6fcabf162d38",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0fc6ec67-cbae-40be-bce9-20061eb4e731"
        },
        "item": {
          "id": "b30ad054-849f-4602-8d02-353d3b62385a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "be868929-32ad-40f6-87e3-e5e053c0d663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1826a6e-72ad-4721-bb53-b07ffe0118ae",
        "cursor": {
          "ref": "83bcb83f-2e4b-4c9f-9e90-3fd83ffd7498",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "75111553-031f-450e-8e53-a12edf37825e"
        },
        "item": {
          "id": "d1826a6e-72ad-4721-bb53-b07ffe0118ae",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c2ecfb23-e83f-4c14-b640-cbd3fd6a373a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd89d7b5-afa9-4924-bc38-b8130a04621b",
        "cursor": {
          "ref": "526d12e4-f643-4964-be63-664307f4cc36",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "eaba839b-df35-4841-abdc-a3e0f1ae582d"
        },
        "item": {
          "id": "fd89d7b5-afa9-4924-bc38-b8130a04621b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0050a5c1-397c-4d94-bd69-27ed3eacad55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e7fe95-152e-4600-b549-0d38ed75021f",
        "cursor": {
          "ref": "4cff7c2e-8d71-4905-ae9a-f3d828613949",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3cf8265a-3229-46cc-9e40-2472b05fe8d1"
        },
        "item": {
          "id": "52e7fe95-152e-4600-b549-0d38ed75021f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8cecb415-fe06-43e4-9747-0e3e066db605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fd5e40-b450-467b-913b-b70956b6d3dd",
        "cursor": {
          "ref": "423c5047-6e6d-4689-b8a8-c99b61faa4f8",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9f13b401-5b72-4772-adbc-bacd271d28ae"
        },
        "item": {
          "id": "08fd5e40-b450-467b-913b-b70956b6d3dd",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "29c2556b-be1d-4109-8e5d-68352c1467c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5d32f7-2990-4ce0-8d4a-e7fdad9562d0",
        "cursor": {
          "ref": "d28515a2-b10b-40bb-a37b-5839ca042cc1",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b31d9520-53df-4d62-914d-d3a508322d75"
        },
        "item": {
          "id": "dc5d32f7-2990-4ce0-8d4a-e7fdad9562d0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ab9fbaab-b797-4b01-8489-b2d454a6dc01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c40883-2a2b-4027-88cd-2968014d66d5",
        "cursor": {
          "ref": "90b53725-6483-41d7-8615-b6dd23196f13",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f4fc1a99-a3e5-474a-a38c-f93214b73c82"
        },
        "item": {
          "id": "f2c40883-2a2b-4027-88cd-2968014d66d5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d584b032-5cc1-4ccf-b551-76a0af228721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9685f671-cf2b-4fd9-824b-c31949c8a586",
        "cursor": {
          "ref": "339f15f4-4179-41cb-b22f-c7e2fd2ed33c",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3a8f4c3d-6349-4a4b-9cbe-298f08d0b252"
        },
        "item": {
          "id": "9685f671-cf2b-4fd9-824b-c31949c8a586",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f7ca9a74-6ac0-4d71-b819-76e40a596891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68225841-6059-4591-bdd8-bd0f2cadcedc",
        "cursor": {
          "ref": "9636908b-4832-44ed-a044-3ee65ebb1a49",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ae68ea2c-aaed-4834-9737-45cbc1b10978"
        },
        "item": {
          "id": "68225841-6059-4591-bdd8-bd0f2cadcedc",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "68d5b1bc-132e-4af5-abed-802c1083606c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d111368-faaf-4feb-a09d-7925597edb05",
        "cursor": {
          "ref": "05f78797-804a-4d01-bf77-19b9edd6938d",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2e59ca46-6309-441d-97da-50656668f0ae"
        },
        "item": {
          "id": "3d111368-faaf-4feb-a09d-7925597edb05",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d32ed0fa-3e73-4a75-9afa-319ccebe612e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7590af-dba3-4dca-862a-5c74f59f3694",
        "cursor": {
          "ref": "3dd4d3d8-7e0d-44f6-bbaa-db06f65249d6",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7c5523eb-5e8a-4258-877f-8ed0ce7b933e"
        },
        "item": {
          "id": "6d7590af-dba3-4dca-862a-5c74f59f3694",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "501691f3-3045-47a3-874c-b1e6b6f415a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07b58d2-da46-4ba5-b504-7c9de3bc93c4",
        "cursor": {
          "ref": "795d1b52-4c4a-4b96-af44-25650ac4ea09",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f5cc1814-27ff-4938-b7be-d2a5229a4620"
        },
        "item": {
          "id": "e07b58d2-da46-4ba5-b504-7c9de3bc93c4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4ecc3f0a-82d7-4768-88fd-da8b9945a3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014f4f6a-ab39-4b51-ae06-d6b38356ca6b",
        "cursor": {
          "ref": "73e04d1a-5867-4bba-8467-428da146adfc",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "454fc180-83e3-45ed-a6f9-c2583b44fc85"
        },
        "item": {
          "id": "014f4f6a-ab39-4b51-ae06-d6b38356ca6b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7ee01728-b255-4135-bc72-a6dab2d23a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe5bc30-b39c-4d3c-bdf9-cfc7b2361377",
        "cursor": {
          "ref": "c30b11c3-430f-4885-b999-2d5532be8d15",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c3ed1673-290f-44f7-9af9-d7e848f1aa6b"
        },
        "item": {
          "id": "dfe5bc30-b39c-4d3c-bdf9-cfc7b2361377",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2f216303-0a3e-43aa-87cd-461d71fc3d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b8014a-7039-4f99-a7c3-dcf3601763f7",
        "cursor": {
          "ref": "19bd43bd-7251-4758-811e-ce887a950d43",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "54b19658-f755-4b3b-94b8-82237a434984"
        },
        "item": {
          "id": "56b8014a-7039-4f99-a7c3-dcf3601763f7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8f5decbc-9a71-46ea-9eb2-6ca88e9bfdf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa44f30-5eab-4e2d-8e05-5182dd9bec5f",
        "cursor": {
          "ref": "2fa242cc-daae-43a4-8314-8639670e69fa",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "02f17e62-fb17-407b-8a86-ddedb35becf7"
        },
        "item": {
          "id": "1fa44f30-5eab-4e2d-8e05-5182dd9bec5f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "020aa9d5-aa65-42c4-ad2e-7c0ef7b1eda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4032f0f0-0e67-4a82-a614-1059f86a0fd3",
        "cursor": {
          "ref": "f0808a2d-4e42-4be9-9c63-cc738317d974",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6c0a9186-7eb1-4712-b7bc-50ee1d5f3dd3"
        },
        "item": {
          "id": "4032f0f0-0e67-4a82-a614-1059f86a0fd3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "36184ca6-2632-4c78-8900-8c86020c6357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00c1e56-e601-4b36-9165-ff11e716e444",
        "cursor": {
          "ref": "d40c1b1b-c113-4425-ab31-2f6f9cf4a81f",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c5463dab-c0e2-4261-8889-902f047f2f4f"
        },
        "item": {
          "id": "b00c1e56-e601-4b36-9165-ff11e716e444",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f30adad7-3418-41f0-a57c-e598436374db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1892e7c9-617c-4569-96ca-7f67c44b38c6",
        "cursor": {
          "ref": "9c054fed-fd7f-40e4-8396-5d8ff70a9ad5",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d308cb00-3633-4621-a13a-9ec95d75ef04"
        },
        "item": {
          "id": "1892e7c9-617c-4569-96ca-7f67c44b38c6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e35a620b-a8fd-40e3-931f-43152215ee93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f29d18-2c8b-4f5f-99de-557143ceb946",
        "cursor": {
          "ref": "16b0f7d4-f28d-4c51-af38-07cf654d934d",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "53e4ff34-b421-4a17-9ed6-645a9bbfeb5f"
        },
        "item": {
          "id": "99f29d18-2c8b-4f5f-99de-557143ceb946",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "fdf1091a-8d68-4424-9bff-38909430d82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc0bd45-6ae6-4351-80aa-a65d38c073fb",
        "cursor": {
          "ref": "9a659ef2-84da-44fc-b86e-ad7096bf7138",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4cd21112-5a89-4abc-bce8-00b687f77213"
        },
        "item": {
          "id": "ebc0bd45-6ae6-4351-80aa-a65d38c073fb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f79fd1ca-058f-41a3-8096-11cad82bd035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77381e6-19bb-454c-a55b-94a607faa1b3",
        "cursor": {
          "ref": "9f2d53c7-cf0e-4a5e-bfca-aabed627e0df",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9e724f60-9788-4c01-a4d5-f204f6dbb578"
        },
        "item": {
          "id": "f77381e6-19bb-454c-a55b-94a607faa1b3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5341f5d2-5e4e-4505-9267-baa0355f7194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c899246c-a319-46a5-81d0-e7e9249d34b4",
        "cursor": {
          "ref": "50ce5073-c4c2-42fa-8dbe-ea744183ce60",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6c8b733e-8f52-4a35-9c81-2bfb7af15356"
        },
        "item": {
          "id": "c899246c-a319-46a5-81d0-e7e9249d34b4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "38e189ea-8112-4649-9e41-d64a8bb29873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4825f8f6-d2e5-48eb-91e4-161a63df9196",
        "cursor": {
          "ref": "59dfea5a-09d7-4402-823f-d9f82ae895b6",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6740a925-c519-4da6-bdc6-cca7a255fc62"
        },
        "item": {
          "id": "4825f8f6-d2e5-48eb-91e4-161a63df9196",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7c65af8d-0fea-46b2-9cf6-026824dd004d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47a91eb-cce7-45a0-9bd7-61be5380304f",
        "cursor": {
          "ref": "96076595-b990-4196-8388-6b1996cbb2f9",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0e6b2a08-fc53-4268-8048-bbe4ad8f9042"
        },
        "item": {
          "id": "f47a91eb-cce7-45a0-9bd7-61be5380304f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a5e4bdd6-8d9b-4319-a80b-27a429063d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f79280-bf2b-4ab1-b7a2-900695434989",
        "cursor": {
          "ref": "63696d59-91f3-4cd5-b528-87202ed65cd4",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4399fe90-6930-4448-93c2-adc5d57065ce"
        },
        "item": {
          "id": "57f79280-bf2b-4ab1-b7a2-900695434989",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ff5ec2f9-3568-4111-8ebc-e83b4dc6d154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2051e95-37a1-4ca4-82f3-de1eacc11979",
        "cursor": {
          "ref": "36f62cb2-852e-4964-bafe-55bae991e4e9",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "569c7389-235d-4051-84e5-015c42eee317"
        },
        "item": {
          "id": "d2051e95-37a1-4ca4-82f3-de1eacc11979",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0bbb8dd8-031b-4134-abfd-80bd53cc8e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c409471-498b-412b-81bd-5f7b2fc2a1ed",
        "cursor": {
          "ref": "2fcb1010-9906-4cc4-9cd9-a0f43a5fd28d",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "27949d89-8620-4ba8-8d47-70175b2e0338"
        },
        "item": {
          "id": "6c409471-498b-412b-81bd-5f7b2fc2a1ed",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "29de5060-d864-4df5-bd3e-c65daa916bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffee688-86f8-45f9-826c-c35a26b33907",
        "cursor": {
          "ref": "4c38e9b0-a518-4116-99aa-70258f7e451f",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "672f06b9-6c6f-4082-859b-bc8d9b546c8a"
        },
        "item": {
          "id": "4ffee688-86f8-45f9-826c-c35a26b33907",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "88bc7b70-d9c8-43ef-bac6-a4e831d89320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56bd4a9-2387-4957-bd6d-7426222c1455",
        "cursor": {
          "ref": "a4ca2802-d0c0-4029-904d-61f49d44058d",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "79b597dd-edc2-4812-878d-397b5da8ec47"
        },
        "item": {
          "id": "f56bd4a9-2387-4957-bd6d-7426222c1455",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6cde94b7-97aa-4e5a-bbbb-bd7e30ab8fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b2c946-00de-4da2-b731-0f5039f17d34",
        "cursor": {
          "ref": "90f12cf7-efb6-4c7b-b4ca-7821ed696697",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "dcb94456-b012-4de8-9894-07833f6d1a2b"
        },
        "item": {
          "id": "23b2c946-00de-4da2-b731-0f5039f17d34",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1f808cb0-79e5-4637-9850-5eda944d404a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d538123a-993c-49b1-bae4-62f41e81f3c7",
        "cursor": {
          "ref": "f92db30b-90ae-4c62-b6d2-5a7450afd421",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "521d316a-cda8-441d-84dd-c5999499dfb8"
        },
        "item": {
          "id": "d538123a-993c-49b1-bae4-62f41e81f3c7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5e202375-7e16-44c3-8499-262964ab6db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ffa04b-a04b-463f-8ce5-3651fc3542a1",
        "cursor": {
          "ref": "70d3f9e6-b810-4b07-91cb-3affc3742ca0",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "faee752b-f956-459d-bb54-cdb977f4a8a0"
        },
        "item": {
          "id": "44ffa04b-a04b-463f-8ce5-3651fc3542a1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c629563e-4f66-4bb7-a8a1-040144f8b1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a466f2bd-3db9-4821-adac-c6d5d76937f0",
        "cursor": {
          "ref": "ea999c63-858d-4807-9082-33e4c6dc18bc",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "175366d6-79b5-4fb4-9116-dbee50110797"
        },
        "item": {
          "id": "a466f2bd-3db9-4821-adac-c6d5d76937f0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "55ec7329-d4e7-4840-b381-abc3fa4a189c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98499aca-74d1-4ecc-8255-eb5f2feb1166",
        "cursor": {
          "ref": "6998f86e-508b-413a-932a-a4d0d168766c",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8b7a3427-9dc9-4895-bf03-15f56720f04e"
        },
        "item": {
          "id": "98499aca-74d1-4ecc-8255-eb5f2feb1166",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a010b1b8-a081-43a6-9ffe-f9b60834077a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60623cd1-f667-42c9-ab82-85acae761332",
        "cursor": {
          "ref": "ca2cc61b-5f25-4a0d-829a-cd1af7c03c6f",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "20817533-1741-4ec5-bfc5-3570c7d78a27"
        },
        "item": {
          "id": "60623cd1-f667-42c9-ab82-85acae761332",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e9cb7925-b2ca-4e81-9301-11bd38b2a73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1be261-bd9e-4b4d-bd2c-fad2405539a6",
        "cursor": {
          "ref": "db094061-be0c-4f50-9139-b4ee800b9a53",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6acc3535-10cf-49ce-9d80-b3cd0131e5c5"
        },
        "item": {
          "id": "3e1be261-bd9e-4b4d-bd2c-fad2405539a6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f3472459-972f-4990-9224-ff586ef95857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39dc332f-62cb-4c9a-a73e-455e5c6287b5",
        "cursor": {
          "ref": "7b64a544-66cd-4d35-bbb5-8a7df1b152e4",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "741e83e6-ef46-49ec-8cb2-f1757bbe326b"
        },
        "item": {
          "id": "39dc332f-62cb-4c9a-a73e-455e5c6287b5",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c035450c-82a6-49ee-8bf3-44a18aef67d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c30395-ad1e-4f90-87ff-ef5b0c338fa1",
        "cursor": {
          "ref": "d02f789b-84bd-4565-9697-b005dcde1d63",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d827eb19-5b61-4d36-a1f7-0f7e07707190"
        },
        "item": {
          "id": "85c30395-ad1e-4f90-87ff-ef5b0c338fa1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "eb88f941-63d1-4668-a4a4-1b46e9820a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df41f90f-a425-4858-a42c-3fdef1de6719",
        "cursor": {
          "ref": "8d19be86-2642-499b-9662-b0e54c8dbc4d",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3a0def27-597f-40d4-83d4-980f0efc6604"
        },
        "item": {
          "id": "df41f90f-a425-4858-a42c-3fdef1de6719",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3b4a6738-ca78-4074-b57c-ddb8a7777eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f72d790-4ab9-4d26-a6ec-4334d5fc04cb",
        "cursor": {
          "ref": "5628df30-4ac9-4439-a236-12e8d9e8203f",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a8d4a555-c549-4779-90a8-7a19f90ed1c0"
        },
        "item": {
          "id": "6f72d790-4ab9-4d26-a6ec-4334d5fc04cb",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "16899091-c631-4bb6-84db-3e7591e974f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac03592-5b7e-4510-9d92-c602463ee4c3",
        "cursor": {
          "ref": "a73651d9-22da-4fe1-a306-42bcd4a68115",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "62e0a9b0-cdad-4f0f-ac2d-07f16f1de38b"
        },
        "item": {
          "id": "eac03592-5b7e-4510-9d92-c602463ee4c3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "47391334-e22f-4458-be40-ad8a92f981d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e871888-0086-4e0a-b682-5dbd794ce099",
        "cursor": {
          "ref": "838fb225-2f6a-4fe2-992f-731b7e545aaa",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8c3fc6d2-e334-47ac-a931-7760a509c5f8"
        },
        "item": {
          "id": "7e871888-0086-4e0a-b682-5dbd794ce099",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7161daff-795c-4e3c-b4cb-2a983b597807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e7cca1-cc37-4f99-a3ac-d4c686d8e39e",
        "cursor": {
          "ref": "b40043e9-8156-4519-b8d8-ee02dbc2da47",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "43213e7c-c9dd-4627-9eee-4dc53ed3d53e"
        },
        "item": {
          "id": "b8e7cca1-cc37-4f99-a3ac-d4c686d8e39e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2ce0223a-8e1b-4038-9b13-3a28428579be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7c727d-62af-4fef-8604-17b9ffbfe552",
        "cursor": {
          "ref": "8ee10cc8-385c-46d4-ac68-22efeb84ab3d",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5061e00a-14a8-4870-81d1-42aea2d98d30"
        },
        "item": {
          "id": "ac7c727d-62af-4fef-8604-17b9ffbfe552",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a5652c02-229f-443e-9805-de3341c1c969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f2942e-b1e3-47b3-9c82-4b7b5608442a",
        "cursor": {
          "ref": "c62fa775-445c-4c93-b0bd-09c04ef55050",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f17ea382-7deb-445d-9e95-cd4817363b10"
        },
        "item": {
          "id": "55f2942e-b1e3-47b3-9c82-4b7b5608442a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c3e4e08a-768c-476a-a1ab-044e76a993e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0685ed66-454e-43ff-bb1f-42ee528cc791",
        "cursor": {
          "ref": "de43c05d-f31a-4453-b0d8-23b9a4ddacea",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "684e4054-235f-479c-b579-5c032481eec3"
        },
        "item": {
          "id": "0685ed66-454e-43ff-bb1f-42ee528cc791",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5fa1e30a-771c-46a2-a453-6c21b130024e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb5058c-6fc0-4ebd-b53f-4d6a748266e5",
        "cursor": {
          "ref": "62c72ce9-796d-4cec-aacd-7cda642a1b30",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "aba31235-acfe-43a2-a0dd-b9a131b7df18"
        },
        "item": {
          "id": "8cb5058c-6fc0-4ebd-b53f-4d6a748266e5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e93f883f-e1f8-4609-a4f2-15c4abb7d80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56273ed-935e-417b-a402-1489a314e787",
        "cursor": {
          "ref": "aa9f01eb-72d2-41ca-bd4e-6eabf57a7f14",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9d0152c0-ae39-49c0-9ff9-7cbea1336924"
        },
        "item": {
          "id": "f56273ed-935e-417b-a402-1489a314e787",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "50c2ec10-e187-4712-98c1-4d885dc55d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f4a6cf-7c77-4649-bd66-b7fe18c92ccd",
        "cursor": {
          "ref": "c043c97f-9304-418b-9b9e-2d6a1a9fd959",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "24fe1787-96f5-44e3-bc8f-f0ee56c6f1ff"
        },
        "item": {
          "id": "a8f4a6cf-7c77-4649-bd66-b7fe18c92ccd",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e85c0f08-c353-48e1-8abb-9eb6c9139d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21d2822-5365-4f12-8b10-9ae979298394",
        "cursor": {
          "ref": "168a4acd-4f33-499c-bac0-0975fed9a351",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "aefba599-e3fa-4ca3-8661-44521c5de49d"
        },
        "item": {
          "id": "c21d2822-5365-4f12-8b10-9ae979298394",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "68224043-f596-41c2-a468-9c212ff6be41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9517326-6597-4f7d-8250-c8d6bea8e864",
        "cursor": {
          "ref": "7fd8f329-5e02-4e28-8ce9-8d22d99ee603",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "718f840c-2add-4922-8a18-6254545f12d0"
        },
        "item": {
          "id": "d9517326-6597-4f7d-8250-c8d6bea8e864",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d7feadd7-96a8-4bec-b17b-b62926314404",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464ede65-29f6-452d-9175-51b696c12f64",
        "cursor": {
          "ref": "d2c2b2af-8fff-437f-bf91-68db0a607572",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "127d750f-3f7d-4cdf-8937-bbf7d43528c9"
        },
        "item": {
          "id": "464ede65-29f6-452d-9175-51b696c12f64",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "418997c5-8fe3-4ef8-8c8b-ab7e1e4495d4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 301,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020b08d9-42fb-4064-995e-fcd22761cbca",
        "cursor": {
          "ref": "adf7e1f3-1312-4d2b-afd8-97dd6ea74642",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "01d65f38-699a-4191-b0a6-a270e9a76ffc"
        },
        "item": {
          "id": "020b08d9-42fb-4064-995e-fcd22761cbca",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "272cb52e-751c-4df4-90d1-065c02045b11",
          "status": "OK",
          "code": 200,
          "responseTime": 346,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b8febb-0f2c-4c70-b3aa-233ab7fab4fe",
        "cursor": {
          "ref": "6aa0ff07-8b56-4300-bcde-ed5ed314c564",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "620327bb-145d-4aac-b3d6-29b1bd591bfd"
        },
        "item": {
          "id": "e3b8febb-0f2c-4c70-b3aa-233ab7fab4fe",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3a127385-307c-479e-8ed8-8a9aceccbdaf",
          "status": "OK",
          "code": 200,
          "responseTime": 2039,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7940edfe-d9d6-49c7-af46-e6221d9f98e9",
        "cursor": {
          "ref": "3bac11d8-4cac-4e74-854b-9c16ba7aa955",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "debd7b41-c166-4a8b-9c1e-c2847c4fb848"
        },
        "item": {
          "id": "7940edfe-d9d6-49c7-af46-e6221d9f98e9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "cfe075b4-0b2d-4851-ad6d-d0e9a02f7988",
          "status": "OK",
          "code": 200,
          "responseTime": 1742,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc4c695-2b8a-4ec7-808d-f18976e1c0c5",
        "cursor": {
          "ref": "deec2750-fdf3-411e-bc57-3b198cf06733",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5f424260-26fe-4e85-9ebe-04088629161a"
        },
        "item": {
          "id": "8fc4c695-2b8a-4ec7-808d-f18976e1c0c5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e7c54635-3604-43c1-a893-9f54e881761b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc4c695-2b8a-4ec7-808d-f18976e1c0c5",
        "cursor": {
          "ref": "deec2750-fdf3-411e-bc57-3b198cf06733",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5f424260-26fe-4e85-9ebe-04088629161a"
        },
        "item": {
          "id": "8fc4c695-2b8a-4ec7-808d-f18976e1c0c5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e7c54635-3604-43c1-a893-9f54e881761b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc4c695-2b8a-4ec7-808d-f18976e1c0c5",
        "cursor": {
          "ref": "deec2750-fdf3-411e-bc57-3b198cf06733",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5f424260-26fe-4e85-9ebe-04088629161a"
        },
        "item": {
          "id": "8fc4c695-2b8a-4ec7-808d-f18976e1c0c5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e7c54635-3604-43c1-a893-9f54e881761b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364bde1d-cd11-4ea7-8fed-9b2699946419",
        "cursor": {
          "ref": "fe4a46e5-e689-48f3-b298-07831f7bfc12",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "41799007-cb47-457c-a43c-8a44ec0688a5"
        },
        "item": {
          "id": "364bde1d-cd11-4ea7-8fed-9b2699946419",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "d8ad0247-8f2d-47e8-852c-875b1017cf91",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 295,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac066bd-bec5-48be-953a-06b15e7e375e",
        "cursor": {
          "ref": "0c4b975d-e2ee-4009-9a75-30a224e08038",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2ac0f735-dc14-4881-b83a-18d8940534b3"
        },
        "item": {
          "id": "fac066bd-bec5-48be-953a-06b15e7e375e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ca9f53aa-4240-403a-9df4-10b4d4ef92da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac066bd-bec5-48be-953a-06b15e7e375e",
        "cursor": {
          "ref": "0c4b975d-e2ee-4009-9a75-30a224e08038",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2ac0f735-dc14-4881-b83a-18d8940534b3"
        },
        "item": {
          "id": "fac066bd-bec5-48be-953a-06b15e7e375e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ca9f53aa-4240-403a-9df4-10b4d4ef92da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f8dda1-18c0-4eeb-a500-58c70e83be13",
        "cursor": {
          "ref": "f7703889-bd97-481e-9a72-11ecd8131bce",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b025c99c-99a4-4f2e-96ee-0ff12acfd5fb"
        },
        "item": {
          "id": "85f8dda1-18c0-4eeb-a500-58c70e83be13",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "d8a48255-d7e8-4aa9-8688-8773b4dbff33",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 516,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053c8d05-5ce7-4f8d-a7f0-0602d8e45a73",
        "cursor": {
          "ref": "d3bebed3-1052-443f-b949-2a3ee697f457",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6e6bf18d-08e5-4b25-8a54-deb4dccb93cf"
        },
        "item": {
          "id": "053c8d05-5ce7-4f8d-a7f0-0602d8e45a73",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8bb2785d-76ba-4dea-b8d1-14bc40900e56",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053c8d05-5ce7-4f8d-a7f0-0602d8e45a73",
        "cursor": {
          "ref": "d3bebed3-1052-443f-b949-2a3ee697f457",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6e6bf18d-08e5-4b25-8a54-deb4dccb93cf"
        },
        "item": {
          "id": "053c8d05-5ce7-4f8d-a7f0-0602d8e45a73",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8bb2785d-76ba-4dea-b8d1-14bc40900e56",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f60bd6-8ef2-485b-a0ea-3cbbdfcc9864",
        "cursor": {
          "ref": "4cf8726b-eb4f-46b2-8f50-855df487264d",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "21cff16c-d1f4-438a-b536-ddfd7059f0c5"
        },
        "item": {
          "id": "78f60bd6-8ef2-485b-a0ea-3cbbdfcc9864",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "1c5d15e8-8ac3-435c-b9e4-22aadd1c783b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 522,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}