{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7b1b293f-bb67-45e8-b845-abe4f4cdcf10",
        "name": "Clear Cache",
        "item": [
          {
            "id": "615a9db8-693b-4eef-b916-a2a4f8b4f096",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7e4221bc-8c69-4c7a-ac2a-45d929ae5ed4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c65e1d4b-eb3d-4b11-aaf0-526932fc707d"
                }
              }
            ]
          },
          {
            "id": "add70a49-0136-4cfe-be7f-b10d0a772eba",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "36c3d610-51a9-4150-a319-63a606885795",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c738aff9-9aab-48de-8f0c-e6013b3f3a4d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f7946d15-f246-4963-901e-15a9f4ea53ba",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "374f9e30-632a-4b54-a6b6-300c00229e5e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b3df2864-c7c2-4ebe-b799-4224b7be2728",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29bd5727-09c5-4de2-818d-3a1f9b186c9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0534bcdf-39dd-49e7-b364-113f47494ad6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f622e453-586a-47f7-957b-3544f3dd24c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b49dc35d-0c6e-4139-93bb-fe7e278cadf9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a40aab4d-24bf-4ba6-b867-8d6853852f33",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e5627881-1518-4f82-beb9-8bf4b8b4f367"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebce99be-ac3b-4214-b434-57da0af51489",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1eb8ceca-a99d-421f-946f-bf6c646650e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78e6cee8-cd00-4dde-8c16-1301b7ee2b4d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a338bae4-29cf-40d0-a98d-478917449b15"
            }
          }
        ]
      },
      {
        "id": "eaf06805-3962-4185-8b43-7e7a0f35801f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ff815cb9-f8d2-4d75-9c56-7cace090187f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5966efcb-e5cb-4258-9332-c096623f533b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "faeebde8-4656-4002-a473-606a5ea0695c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4404c401-e7bf-4098-b757-eee22dcb0aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abd92689-9505-4132-83d9-122875e3f27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6fed75-d93f-4d4e-aac3-a65bbed36562",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "364cb1c4-a533-4cf3-994f-6bbff3d2fa88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94f8ccd8-9e85-4582-87d3-df73cac64f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9904d9-17bc-42b5-82bc-3f7d72b42f77",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3d8769-d43d-492d-a740-ee01b4208d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6246c69e-2d0d-4a5b-9465-2d82f7281269"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "95836ffb-0508-4c64-8aa5-07a6544b0c05",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "387cfd7b-930c-41a0-8e6d-e886ab877c38",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3edf6f3-4033-43a7-a39f-c6c232748037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76c92309-8db8-4cc2-8cf1-b6e49921db9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf30be5-61fb-49b6-8924-13dff4031f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1eec758-99e0-4957-8eb0-34bc1a6ec89e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7dc70d5b-e729-4ac3-9a3b-34bf0458c9a5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2d2d6fc9-0743-47e9-b6fd-ec75c9084f21",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "463cead2-b856-447c-9ac6-1ec75da3de50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "76f770d7-dbd3-4bfd-9c86-c08100835ed7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4425a60e-14c7-494b-83c2-8ebf6c20707f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8e79c781-941c-476c-9154-2624d8330ce7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb775fb6-33fa-4e9c-9153-563f67669f4f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a0efc489-7259-464a-843a-bca3ae9d536e"
            }
          }
        ]
      },
      {
        "id": "b4cfe499-76f2-4362-8cef-78601291659a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ded68145-4baf-4342-975f-cd7fabc486c8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ed37f550-d0d7-47c3-9d9e-d3b6c4f173b6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "28c67b92-b013-47db-a4f7-be11131399c6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90533f9-cdef-4881-9b7a-13d98d42ca12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d0eea7-4132-489c-83e3-961e5afc7101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe75d819-2a78-4529-bde4-951f34a131d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0919577-0ad0-4424-a72e-05d89be8e966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f94df6-2338-479b-af5f-0c6bb9de75ec",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5302132-2b6e-4ab5-97f1-55ff256976f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85fb74fe-8404-47d1-a9b9-bce043f7ffcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7596e5d-6e01-4e13-8e47-59fa1d80274e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d78220b-e7be-46f9-afe3-0401a3d5fd50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccae8733-6e64-4ad6-bfa9-6392d20371d8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e07d41f-2789-4daf-af92-6f5d6f0c97f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4629fb10-7273-41f6-a59f-aefe884614d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7cd1d90-0219-4a3e-8014-1af1da512a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3eeea006-bfa9-4acb-84a5-5bd44f01dd95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d312016-b875-4de1-aab5-b06a4392a520",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd0bac1-2a7c-4065-a2b9-a6bcfb38d7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a3b2d2-e984-4457-b40b-3e1dcfc35330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b074a40-537a-46a4-a3d2-edc925fa39c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39b506ec-3d1d-4d11-890c-449e17f69157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805d1c64-9b4e-48a4-8688-15b1f5f1f598",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c368a951-50f4-4066-a4a2-c3e14edc54c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6d3b75-1ab4-419a-a1fe-d1df728ed837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820a0ed1-fc33-4731-80b0-d9660080b0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fcc6233-c25c-414a-9499-551fd9bffd04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b31956-189e-4515-b173-7855c7c0d91b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d4f324-cd30-4fd1-b44f-75e18e723582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2a4206-e64d-4e95-bef9-581f655c59d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830e6428-0517-4959-b534-4e81370cc60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efd34bc1-9a66-4484-ad6d-5d688c2c647d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef40d90-59be-4922-9413-f2e08fb6e71a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1658c6-2c7f-49f5-a307-1324f7229625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b6b1c9-1369-4beb-bb44-3f26a8b939a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c367da29-012c-4723-968d-42bb071d8127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be2cdd64-5954-4cad-a3c0-56a4df314803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79dd5934-a1ad-4c68-bcc5-7b20a06f8308",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7488f618-d16e-4713-a61a-10261aeadba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e6208a-e27e-4599-a2fe-f24a7a27e7fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c09345-b5d2-4d8d-b67c-b8eb7d8571b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae8a1fda-d20b-4e91-999c-a09801620f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae75118-6e94-4e40-9ce2-32202f9eff70",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6c57be-35f2-4ad5-ae70-9579db465a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b21ed44-b748-4c93-9b77-9f44791cb48a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c53ea07-3b83-4b98-98f4-ba5c0ae9d35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "491558ad-c29e-443f-90c8-636e61342819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd9d552-369c-4fc0-83e5-eb5888023e57",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3819289b-0172-468a-ae24-fba348c02b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dccac18c-2216-4742-aca8-562b82b0edea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b92d7d6-9717-4bde-b89a-1f56a1e54138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ceb9275-3c89-4254-bb58-22ef5c68c94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc53558e-ff33-4183-b5c7-25dbeda2f0da",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319c8a5f-cd12-4ff0-b21b-c84af45d25bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ee7df6a-bae4-4714-b0c5-af81db2c7e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ae8750-730f-4045-b7fa-6fef437cdc22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f24dfb40-92c2-4af4-8aab-29dc537f1c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caed93db-af9c-4bf6-b65a-a9d69b0a1851",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b69694d-50da-4f91-a2b1-92aac2fc6527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b0d405c-816a-4a37-817a-230394a23011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cd4efc-c4fe-42f2-b2aa-a051e5d1d53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e68fd0ca-b8a3-4fe9-8068-367b9b32c64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db1e366-bc3b-4ffa-818c-6555b73e3bef",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c74bdf-a862-4f4e-8f3f-1eb4769b38cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c2856a-82bf-44cf-96b5-79f674495342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a9385d-6015-4ae4-bfcb-d1fc2e71da7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8a30f51-7e9d-4a83-aa09-adf0d2ce9a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca24dfe5-138f-4063-9d80-2abd345f3433",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc16cf7-f0fc-426a-8c40-79c8142476bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9458176d-0daa-48eb-bf33-a170534709cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58506c8e-6d37-4dc5-8301-8cfafa4a20ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a450c26-ab79-4759-9401-d351a86379a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0ee9fd-7bf2-4421-8cd0-a9ee73ec23ec",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dae9e47-6380-4185-88b7-45ee528e049a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c50c0fb-bfbd-4097-9653-eaaaba558c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64133293-7345-40e5-a829-c7e9c1f6514e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c3b60c7-56b6-4c00-9118-ec3ae9b2571a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba1fc2d-d30b-4345-8644-91de024d7bf0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a177b772-1f34-40e3-b6a1-11876843209a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22d0751-ed54-478e-95aa-713cee0039e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c3e465-065f-4aee-b3ea-6716162be2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1941a39-595a-4c8e-97f0-725847b782be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8af4042-af3c-49ba-a1ef-b98e935c8049",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d34d3ba-cfb5-439e-85e8-f784492541b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155be807-fa1f-4a54-88f7-74226da0f43d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ca575f-78c0-4939-89af-371e0c6feb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80f74e68-2727-4bd0-9bb6-68826a3e9240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e36d355-aaea-4f29-8e82-4ac94d8b110e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f581916-680d-4757-a08d-a6781c7a94fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1620a400-76ea-4151-a658-df3f8117a447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4656b1c-cb44-47a6-9ba7-2db14eacec90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "197fee61-56b8-4a34-8329-af3ae749ef56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c09a634-3b2e-4d18-afa8-d681ceed5ab9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5cde7e-3fdb-452d-92ee-ef646228aab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96858dc4-8b5d-4c01-9a05-c382e0643eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323b67df-af79-4097-b367-baf90bef3e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52f5e01e-0421-4e33-9b4a-0658909fd2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd6106c-28e4-4837-8a49-c9debce64ffb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e36257-ffeb-4451-9206-00df8dc0f121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80efd0e0-7881-414b-aa3f-8721e6a8f5f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da250df9-7b29-4e5a-a1cb-378574b79cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ccb3021-acdc-4fcc-aeb6-10f1fc68a3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb9f724-5ca1-49fc-bf9c-4a76aa50c85c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b43987-230c-4794-962a-2b9e1b50660c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7eabdc-3962-450c-bb2d-407ea48fd62b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58505429-547c-4cd4-bc6e-dbb936b4110a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a70d1eb-bfe3-4cfa-b87e-1ec780d551cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce40cf5-fa4c-4876-98c1-0106cd340ade",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397b0f7c-0004-40b5-a39c-0d84798bb372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4595fcb-012d-4761-8198-3aa49199e252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc67659e-afa2-4e21-9519-9b623fcdc800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "97df6881-a69b-43a7-9e52-e368eba0cdec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178de880-4cf1-45c1-a56e-bb44de50d2b6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed01f040-c7a2-4181-9505-bdbad399ec32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0751cec-0c71-4f3e-8d31-40e8919fd469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37926259-54bf-4b28-a389-a2b1cf08f506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "baf5fb4b-b593-4156-9dcc-8f28c409bd98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce0d86d-d842-4e35-a738-c6c67cf25622",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67594632-85a2-4b44-ba13-27ba18c4dddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a01702df-7b20-49c1-8158-1559ff2ce099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd72732-acdd-4cff-a12f-0fe893618593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba9e6bd-5be5-4365-86a4-ce73e4cb61c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1245245-d049-47dc-a9bb-98f810793677",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65b2fa7-68f9-40ac-b7df-f305e6fc1931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3aadb5f-7371-4d1e-9dfe-da2cf24bc220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3277cdfa-54fe-4434-899d-f516001b90ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "25fa85fe-a598-444b-bdf8-2a7a14dfc801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c045fa71-580f-4745-8471-040ade020c5b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a2f4d5-dfb7-42a9-9607-8d480bafac8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629cb324-9094-4d33-b85b-88357699cf29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbea4408-192e-46bd-aee2-46894a800c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e38e83c-6c66-42a8-b659-7911754e5812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c40be1-754c-4474-92d3-1235dddd84a7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8806ec-8b61-4020-802f-8d1f197cb1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "876c3390-6ce2-494b-a14b-837fb3ee2bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb0bf26-d36b-4ab0-9e6a-f505335f6974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "891c64a6-0234-483b-9796-8df955c20259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d72263-af96-489a-b8a6-d180f1a1b454",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b22eee-517d-47e8-9b6c-0875f5679753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f088545d-1630-48d6-8bdc-9666038a1189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e25de6-d98b-421e-a3ae-1b69b9fd04f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2934ee-ca36-4182-9005-598632878953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895edf01-618b-4cab-acdb-cea6e7e75c70",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176386dc-b4a6-4ff9-bb83-407ade753573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd04b53-2d00-4ffa-a2f0-ccdbcbb9e56d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc55eae-f499-4e19-b575-4f5dd99e6859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff91dc3-1090-46d5-9995-5aff67bf7bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeaba01d-88ca-4e20-99fa-cc49da6ddba2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3a7095-8e13-4055-9fd9-c643d71126d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea2fd4f2-828d-42c2-8e9a-66de3870a518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453660b4-b092-4366-adc4-50ba68b5d391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "54c34122-1f89-463f-80b4-fda5b4dbdd08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1eab02b-f131-4155-b518-ef90fd98327e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "253cfcd8-166f-49b2-ae26-488cac0f5ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc47f43-661e-4e37-aabb-df1fae7db085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f080538-55a7-49b5-9fec-bb80e783df02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6831683e-ecc5-45b0-a1da-f8f9c56ddb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41917caf-17fb-4b67-83da-1ef9813b3eeb",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "680b1e87-9199-4635-8b7b-bffb71271111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "899767d8-9aa1-4c1d-aed0-b87d464ef839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5544394d-90f7-4f4c-8011-00954e46921f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5aea1a6-f7e4-43c1-8302-6fd866a08c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec9fedb-9122-438b-aad0-fabee1820a46",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44fa8d3-5e16-4d29-8402-be918f8c5c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e19bd5-99a0-45fb-9d97-1cc288040442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61568bc-de14-457d-88c6-d81b1aab59f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13615530-eef1-4cc1-984f-e5cd6680d54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ce2c84-38bf-4f07-b606-36a8ff807f1c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9ba5af-0080-4e4f-9863-8e281988ceed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23c502c-b622-4313-b157-2312b0deefcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be945b9f-9544-42c7-9437-e6cd2fa2574b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8ac2b66-de85-4e20-950c-3e68158ceda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c20ee96-f3a9-4819-8a6d-95d4354c05b3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe77a39-9c6f-434a-9aaf-6f452609ba10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fadcbadf-f0dc-4b23-9d2c-a3f81573e653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d21fc81-16fd-4918-8ed4-eda09322b642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0e404a02-56ed-4592-8ead-e2308b03f3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f88c60-42ea-40df-833d-c2cf90d4737e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c044e17-cb16-4455-88f9-c7b7ca6000cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "195b6d26-1f48-405e-a9c5-fec50ce711aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eca278b-2b47-455c-a601-e550224fbdc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bba47c99-6a2e-492f-a96f-b3d0f61310d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a82d00-eba4-419f-aa11-2317c3ae1511",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9358582d-c39c-4b05-9299-5f8149612109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57759578-0c04-442f-9059-480354ce89ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87558b5-b23b-4db3-ae96-4ad78b0d3c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a2ea1d2-4721-4785-9678-e0eabf32b85e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099c8083-756c-485b-bf4f-67982b2eccb8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fa7a5f-469c-4cfc-bda3-535f603459a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c87c7fe-3f44-4a76-a550-2dfe1882494f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740f5fd5-8943-4577-90f5-a5d9f680cb00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2607cc46-1c3b-499b-9079-1093423c1c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9c3970-bed5-43be-aeb0-4ef95f3f61ef",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55c30ad-fced-41f3-b66d-8882ae4abe35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42bb2d67-2f76-48e0-a1ca-671f30956ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0154cf3-9ce3-4d8c-8e97-b61ee763c38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e9b1a78-327f-43b3-9638-7277745ce74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f37303f-ee70-46f6-92e3-c2de5afc9801",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea0f983-9e1c-4d46-88b8-565ff303c684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc314d6-6ffb-4704-bd51-3adc09a8ced5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af16c322-fb1d-4045-b5eb-fe067d834d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca0cf16-bf34-4c73-a6db-bc346ddfb77a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b2904a-cc50-4daf-9810-5638c43d6173",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b1184a-415e-488b-94e8-192f92abe466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f51e7bf2-458b-4e0a-bf8c-797e48f2e66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c29422-ad4e-4573-8e0e-e489fe97e625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "96e2c88f-5131-429b-b1e3-f97cd8edda96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f248b74-64fe-49da-b1df-07bb085825a3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78628f4f-839c-454d-a370-9a3e1fda257b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230a820e-fe1d-4c11-b1a6-5bcb7ae9254b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3abbab5-abd8-46f9-ace1-feb77c1ad7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "92d7b8a1-44fc-41b1-93a2-48ca20c4abaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427d0db9-d3f1-417e-9472-60c922507e78",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f99bec-b18f-4a0c-b842-e9204a07ef46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887fd334-3006-4174-8fda-444281056263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d23fdfd-91c4-4e14-a2da-a6f9bdc76324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a68803-b863-45d4-affd-cd5a65d479fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1e6acb-86ba-4cbf-baeb-bde46e2897ac",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5cd87c2-c243-4da6-bc53-9e48b787e4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fadb84c-9c31-40e8-a71f-9b3f67a57989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed97e2f-f8d1-46f2-b38e-b31cd3783cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f10c98d7-e164-44f3-8066-d746f15c1002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28369d61-3a6a-4465-88d5-9512f13b1bb8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669b1e6a-1048-4822-8cf8-9ce9d30412d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e0e2918-a9c2-44ed-a0c7-d84030d8a090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535b2291-27ee-45c5-a6d3-e87c460cfec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d988444-c2ac-4d6c-82a7-0d630ce95bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8c8542-1721-4f7a-bf81-ef42c0ad9eed",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76576a8f-5672-44c1-88c8-4690bd33597b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca4794a-9911-41f0-82e9-7cd014d85e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85f0356-d059-4746-bd5f-add88d21d233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d85022b-2487-481a-b4bb-4404fdf848dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcb6cbd-4113-4b5d-8f5c-bdb40f1c4fb0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab0102c-c776-486c-9904-bf15bf48a886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03453eb2-77fb-4558-bbcc-70c4b634f84f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437b4f2f-f75f-41ab-aa09-eaa1cffb955b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ed3b9a-6343-4139-a483-c0afe28873b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf2c485-12fd-4416-a9d1-425af623d323",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041cfd75-5b03-48d8-bbb1-43e997099750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4faa3c1e-dc00-440b-a418-d6a53df6f224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1756153a-d1af-454a-8229-15fc54e3507d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a16fc9a7-e13e-4aee-ac5c-5838c37d0c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78273e3-16ed-412d-8458-c3736c4bbd40",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cfb63f-aecf-4f54-9053-cfcd7e7dc1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d246ec4c-81bd-4408-aa91-b179bb2f2a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f967a8-56a7-43fb-89b3-848217e3c238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0f51334-3b75-4883-935e-391ee3cbff0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e40502-7f0b-49ad-9f3c-4787f64d463d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b758228-be7c-4f88-88a9-8cb2c9b66314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f91f8c2c-270d-4bd8-bdad-a90c12a998ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b609cdfd-b03a-42f2-bcb4-641113f73e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "34322326-efcc-4a9d-92dc-545323d8f03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd909c5-6425-42b2-92b9-d28c61ce8712",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74728310-faab-47f7-b1b6-9b15bd9a1671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340bdb2f-bb2e-4c76-ac6f-9b2d11c04a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374e982f-75b6-461a-8b6b-17e20b66ccd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "431f5ad9-7f42-40ee-88d2-b1006031034a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c195b44a-2c70-4cba-95dc-9ad8b47997b5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887e930b-825a-47af-b9c7-1e70e23de609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a682b9e-271b-4a1f-a555-c1bd2c82adc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc083e65-067e-448c-802e-c7d653d37c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a1d880c-a65b-4106-85dc-72aa2e763bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f2a2be-c83c-4f55-a7f7-78094430a874",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec569a4-adf7-4ff3-bc20-7eeefb0cd6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a524b03-84c0-4a88-b1fc-f51090b47b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabcee53-2b2f-4313-a0d4-2f10306d822a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33ec3369-5099-459e-b5f0-4fbe2d05cbbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff21279-b27a-458a-b428-59612896e159",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdd2d84-f778-4269-be32-7d4f79608391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "646b328b-edda-4a1f-9ec6-e36df9977b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02667302-8a78-43b8-ae88-7a6583a00e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da79883d-035f-453f-92f8-2e4d8e6d7f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efe30cd-6a2e-43fc-95c6-37d2f7d1ccae",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3baff3cb-f843-4e96-a475-c5ca135ea124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c3442f8-a942-4ee5-988a-b97d649c3eca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90979ef0-6187-4a27-b6e0-7d15b3783f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c739d7-e41f-4b1a-aab5-9623a2e9dfee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2777d309-1ed5-4061-9403-0e52e5278bda",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a385d443-0f34-41e6-acfb-aee60b76b1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e267c1b7-fa65-4df7-9fe4-6298290dd605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3cf20fd-3bb6-422e-b770-47efb614c1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d1bef092-b27e-4fd4-b5dc-6f14e5dff188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb16883-baea-4c63-aa7d-2050400de561",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cfa4d1-e05e-404d-b88d-751b2e63d679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ca1cb9-cd58-4050-bbd6-11cd9d6b6898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448454de-3277-4c19-96d9-a92d1095a8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac198296-1751-4744-b814-e23a8e8116a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b619a39-29b5-439d-a8e8-891b81b53871",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3d557f-9387-4d12-9cfc-6730c394a6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a693d0f-5190-4052-bbf0-a3fbd62d9ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1bb083-c1ae-464e-aa5f-daa499f0ca1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a562fd96-5c13-4b16-92d9-ddc83490ce41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b96086-8170-4b97-bfea-0cbd75915fcb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d74c52-040c-4e85-8f65-e7a0a1082d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05cf059c-6d2a-490f-b339-d05caf25df0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dafabdb-aae6-463b-afad-e90a9bc55fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "60484128-d369-4e13-87f1-2f9861dcfa9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1585222-aef2-494f-a9da-a6354c2e6e24",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7689e8-bfbd-4e0d-b49b-b3b59bfa311f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc28df3-d804-463e-8ae3-103c179d3c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74e8c52-7559-47d3-aef3-0bd6bc30bcf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "686de213-6e50-4d8a-9a50-6e3876ab3465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eed14dc-6c78-4da7-a1bf-93301c9475a2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121b0fb8-c214-4cf1-a394-1822c26e1615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946b660d-3265-44c0-a0e3-83f0c188b05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a903069-b642-4f26-80ed-e5122ea1a1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8810570-0d43-4493-babd-58792f698619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb579509-5ebd-4370-aa53-6de3a093d638",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b551c9-4197-40c6-949a-710062255db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26710c9-7f41-473c-9dfb-8a8938c5a6bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effdeffe-54cc-470a-9d7e-1499ed25e48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce9eba3d-0fed-4f06-9dd9-c4dc00c89596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0e62df-f649-4c78-996c-da7b219cded6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdda28a2-1d78-4843-9ecf-8f32c71fef0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b38df28-01e3-4174-bef5-7090d6c91a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65f8643-fb0b-409e-a2a0-fd5622b3f39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e73f97fe-1f8b-4a8f-ae9b-376bacde363b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce05024-e7b6-435a-9741-49a30a1ae73d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6dbd00a-a727-436f-8102-8db9a4a9676d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0318fab8-840b-4c4d-a0e9-4baaaf1db4a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e1a052-f80c-4fb1-8a15-3535a7295aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8357f6b-1c41-40f0-9570-5a84cda455c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fea614-3abb-49f6-8211-b677846ce6a1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39810e1-35de-48bc-9795-be5353a77a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ca1f52-586a-4190-aae5-8a8d4d3d70c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780d1edb-a135-4da1-9a2b-84e91fcd3515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "091ae28f-1825-49cd-9224-7e937bdfe8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15573061-30cb-4538-bdd1-2ccd69441f5c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "732ab4b4-8f0e-48ae-89f5-a20703fe43b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36296e94-4442-4d74-aeb9-310b288f7fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ec64a8-626f-489c-bad7-dac116ead89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "674427ba-f4c4-43e2-97c0-1c48a65c8901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65821650-3afa-45c8-a5cf-ba4e57343be3",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f0c2e2-5d56-4cf2-8be3-e3b7b07b0994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d9321b-ed3e-40fb-a8f2-1c5a18fa2127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6988bda-e59b-4ae5-9819-98294a28407b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4eeb711b-8879-4789-83a5-380a56e67657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7359ff51-0083-46a3-bb65-c4c0c547a1cf",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b686186-498b-4c3f-b26c-092e6bf364d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461df2bf-d2ea-4e84-999e-9277062fa48c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2ee4ef-f061-4763-ba5b-2dbfae6dc6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "54c14efb-21ad-49cc-8354-2ec1082cd80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d1d483-6848-4ed5-873b-4c46a662be42",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589f70f3-a58d-4f69-b9bd-8307de8eccaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6faabbaf-062f-4133-9dc1-ae5b0db335c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b0d613-3942-4eb8-af56-04fa926bebaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f9ec2bc-ecc9-402f-9f9f-b72393bcb094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cdb8f91-63f7-45ac-a1ab-72d0d8dfc72c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37447628-1df9-43e4-bdff-fbdc34fd11ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f472f5-69ef-4982-93dc-394631a1f305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7adb098-a45e-4116-829b-525aad418172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54ecb116-ae7e-406e-a08c-0f865e6c7e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed72a02-3e0a-4721-901a-9ed690d0bd02",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51ae2a8-11cb-4d43-8aa6-ac26001baba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e68daeff-a3e6-4886-aa87-dd29a01427cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b23efc-3584-4585-9cd1-448d2c2ad7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9c75920-2d83-49d6-af12-f5df4bdae9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40cc834-ed99-42f8-86b0-d4c813d93583",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "920c6f04-002e-4956-9618-8067523014c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c8709f-cf68-40bb-83d5-c2b0955f61cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7fe0295-cf18-4721-9994-a8e145551430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83850f7e-289f-4685-b3e9-944044052ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c808fc-a84c-4aae-906d-b98d16f7e13b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a736d1d9-8111-41f0-bf4c-27f746429b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f13ff496-41ad-40a3-90c2-bbb198390100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31492593-eb81-4682-a68a-ad7cd586cc50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09f22155-4589-4b16-972a-a305c6fbcb20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b33cdf-48c6-4c78-becc-f04f92c25cfd",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "017c0d07-af1c-424a-bf57-b80e8c73909d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac1b39d1-26a4-4e0b-b19a-7443c7b9815a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0c6a80-62c0-4c4f-b279-3b1d2439c2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0573e0d9-d8e4-4786-85fa-8b8994e9a0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa97a86-f112-4d99-8799-829cb946bbc2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ae4d73-67a6-4196-bee6-08689cb39a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef8701d-7de6-4f77-b739-1616f337d1a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d04b21-5d7c-4dc8-8ec3-58120cd4d2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "40fe6a13-5791-40cc-af90-7b38d14b2df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcff49f-562f-4039-b794-cde00b23c9d4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b1d8bd-24bd-4e5a-afdc-7f0302c29d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff86699-37f6-4e0f-b08d-ecf80e513c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cee2af9-c2b7-4ce8-b2af-27afcb00eca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "71adac7d-dda4-4a62-849f-1aa5543cbc95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc278fa2-aff1-4d3b-ab4b-3df74194011e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47d3eb8-cc4e-46be-9928-8ac4d6daacb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47977a5-c429-4fac-a814-581818613aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be59346b-7bfd-4229-a8b6-ba97d642e494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a842c595-e1b1-4b15-b3a9-896e9fadc6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cff1f1d-0d62-44b3-b316-da1a135426df",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d6cb2c-acb4-4907-83a2-9366c6d007d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310caa82-5dca-4a55-8a6d-0f908fa7691b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f057d8-d7ad-469a-83ec-6767ce95823f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7b0699e-b55d-4cd9-849b-0cef1acfa46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0347db-a1de-4562-9c42-604f6d49adfb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7a46b1-89ab-4311-8617-7bcfd3b073f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5620887-3681-46c0-bc9d-280773889244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065ec208-10ef-4199-a626-92e3fc9ebdc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37819c24-8b55-4f8e-bec3-228640f52c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b9baf1-9da3-4235-b66b-3055fa479537",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33af1a28-8435-4ca5-90b5-3f5f2926f92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5132afcb-5342-4a64-b63f-7910c7014934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3f6f8a-4a4f-4a96-b3df-2061059a7fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3093d149-0daf-4b4d-9136-10cb9c3b562b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1952ef9-6243-4857-a18c-221c25defc37",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c08e3c-3cc7-4137-a411-c47b11d59e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680163a6-39c2-41ff-835b-2157abb5d007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25f4e85-729e-4639-a742-a4ff77cfe258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "887c3596-9627-4a00-8710-cc1414107d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa99ec82-b840-4894-b259-7a7a0312622d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b5ae19-8d30-41af-8607-cee8ac389ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eaabd00-80f1-4b48-b762-05013405ebc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3e816c-0d77-48ee-ba09-047dc2c34587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc0351ec-f698-4e87-b88a-d5075d61cde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8026d991-b83c-418d-883c-62aa6213075b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8b0292-db46-46bf-a56c-4a00adfae724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b732506-ae21-4885-9bc0-948f4f3c4bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6966d62-6925-404e-9fc8-096eff615f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31bc8bc3-c710-4a53-9998-6df719b4fb49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6fbcbe-633d-40c3-89d1-db2f2d83d2cb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2536e15-9fa0-41c1-ba97-90242f2da982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e8de9b8-ab86-4044-8613-59265f2c54df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d803db98-8d9e-4a2f-868f-1ea94f03a797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96ed6d3e-544f-4720-a805-d053f7684b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c2be16-0a1d-4b81-986b-fa89535f9c86",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51b3bbf-7d35-4904-850e-e2cb19e0b614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36356c8-e21f-49ca-a060-f120a1a32f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d036bd-c6f9-44ff-8189-8eca055b45dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aee2c81f-bd32-4fba-94c5-650619b76956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1b13de-53fd-4d86-a5df-a1339f17d5d4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8237d8a2-f44d-47f1-8f12-5a67d4261e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c53f98a-8585-42db-8bdf-f38043048030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a698896a-3a1c-4c4a-9e4c-5a176e1a1233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "57e07480-5d7b-4701-bc74-fe60dc6dc9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef9708b-c5b0-4e47-80af-fd62c7a3c231",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ba7cf4-64ec-47b9-9be9-01a673a8e50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff02bb25-83cf-474a-91a9-e9b66893e93f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f30d93f-86aa-4cc9-82dd-d4bb3fdb8aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c483611-aa3c-4a99-aaed-8adffb03252c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47ae12e-2cc0-42ae-a3de-6d90ada4eea6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c1a022-60b4-49be-adf5-ed705a357a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0a19462-f9d7-4002-8ddd-f227d9ec775a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d79e6d-2ec2-4fc4-ac25-ef56ca9ffa1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7de82deb-4929-4f38-8790-282cd13cb028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0026a2fa-bda4-47cd-970a-67deead456a4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e017c4-6ed4-49c1-b57a-8cc7eb65f3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f9a90e-03e5-4909-b3f5-36bb999372ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f11eff-c0d7-40f0-b457-25d33a034f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "42fa35e3-7ddc-48f5-8be2-efaaf600eea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8073d3-b0a9-47ee-a600-7edeeb079015",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50f80f4-e738-43ed-bf53-721f90e66333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b04051-886b-4301-8b48-9748dc89d769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc41f5a7-d73d-4e3b-bb94-e08a17495a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "af28ab2a-0e03-41db-800b-be96902936f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c40a06c-b07f-4a53-941c-c916f7321f56",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1905066-fe95-4d4d-881e-649cef86d19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b9e3c2-9ae9-472b-9388-f77195cd6413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc21977-9298-4795-ae1d-425bb1398b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "32aebd88-8ea0-45a1-ad30-47194dbabddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ad194e-9292-4307-80e7-036cbfac1947",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c362e14e-259b-43e0-ba95-cb01c12ff734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8b6cf26c-dede-4f7c-b3d8-ee35b8abfc18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c362a81e-d120-45f5-9d5c-ed3f11afbea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "67e6843f-d617-4142-9da5-1e9513a1db67"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7b63799d-fc03-4a19-8d61-f90ccb2ea8e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "219966ef-7330-416e-af2e-2ae3aa21c63a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dac7f15-e99c-4f73-b842-9ada114e34b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7438307-c7d8-4333-b3aa-a737e3ca9b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69b6a85-fb01-4ad3-b67e-da72ef40c23f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb42c7fd-286d-4fb0-9f14-37ce0e651399"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f509a91f-bec1-4b94-a446-bf849f47bc2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "100b6d4e-0259-4c07-a282-f8b836726f6d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d213c6a-a4e5-44a4-9c0e-af9c95eaf579",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5766957b-2050-4728-a8b2-82dae82621d3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae66e5b9-d337-4032-af24-b6ca250a2f46",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "55398a7c-cc85-4143-9237-d1c4d1e28716"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "46745193-1463-4503-a813-36b096a4e443",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e9e0f2dd-0a89-4dbf-874f-aadb3b2a3727"
                }
              }
            ]
          },
          {
            "id": "35768b65-1414-45a8-98d8-ab87a5c21581",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d4e6b2ef-45b6-45ec-a800-ed4f2cad0714",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "03000395-ed68-4ecf-b523-d1ab835e8918",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0b6a46bc-3250-4378-b56b-ca363e976a15"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b9666fc-47e9-4551-af5e-d790681b55f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1a24fc36-bd1b-4141-8c42-4f73a0d9ec81"
                    }
                  }
                ]
              },
              {
                "id": "659a0859-c132-4f20-8780-6b1f23c08a0b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e652255-f587-4d63-8141-2c2cc2b7e2eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "422292a2-7cc3-4c08-969f-11d51b142fae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd89c57b-b76b-453f-ac46-5a2969b33948",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aa0f1cf9-f1bd-4fe1-b31f-356a5ac90498"
                    }
                  }
                ]
              },
              {
                "id": "dd098805-4616-42fd-b4a2-46c575eba3dc",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f848cf32-76f1-412b-9b06-3aecc825482b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc9b520b-af62-4114-8156-f8be50009427"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d425c18c-1fde-4542-98db-cd4550ebd235",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b5534345-df2d-4da9-8310-5d6b4c3b2d19"
                    }
                  }
                ]
              },
              {
                "id": "6faff05a-c601-4a68-a372-2e62413a1312",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ae34349-6995-499f-b961-7cef4e9aefec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "feefb064-4fb8-4a4a-9661-16df5b418c6f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a31ad9a0-212d-4205-8b1e-b144d1cf43d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0727dad9-9456-47bb-8023-61adf1d79587"
                    }
                  }
                ]
              },
              {
                "id": "0da18429-bd88-4b7b-931b-2bfb85300010",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36d895af-13f8-4140-a81b-54636370eeac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e0f55c61-9aad-42e6-9b52-7aef6f47a0d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dff7b2c4-cf6f-4869-a49a-5f262685c8f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0fb23b82-a0ad-486f-8bbc-214683db8d65"
                    }
                  }
                ]
              },
              {
                "id": "013ef225-1182-4357-aefb-9c4e2edfbc65",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb525ddf-a992-4675-9135-08401234b000",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1087ce0-4855-43eb-a396-3d737c0e7644"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32acc30a-f9c5-4320-a76c-4a0cfd54d61f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "80819a2b-52a1-4602-96af-c2154df96597"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "64fd8a61-e227-470e-8990-1dd46de05887",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ece7b526-4423-433e-8ea4-25a161957189"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "03b31259-8a41-4454-bad6-6ecfe366c25f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a8c0714-d3db-46dd-bb61-0bb8944338d6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "55c2216f-f087-4794-8ec8-e92419a78d05",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "bae66d41-c6e5-4367-87a5-564c2afa12b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95b3aa7c-0783-492f-b820-acc4e99fac4b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c103fa32-123c-4486-a04b-7a3ac4898e01"
            }
          }
        ]
      },
      {
        "id": "f2977213-3467-4d99-9d75-aeafd18de05e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "be76ff2a-478a-4454-b082-ba1028ad6b3b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "43316e28-608c-4bd4-a9c8-10fed8a1b152",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a270629c-be72-455b-892e-e2f2b1c5dfe2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed5b710-60b0-4439-89cc-86f124784ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdaeffc7-bf36-468a-921e-291f4036e87b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad38a6b-2fd9-4741-9129-b9965ecbd02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a758a6-16ae-46f2-be91-821d6b62f155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df0de3e-bfef-4c7a-91f6-52581b02c39c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b970b5-e32e-4cc5-9ce7-41b188192623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "557b404f-f6a1-4fe7-aa58-73ed618dab76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64943e9e-5817-4540-b34f-0ee87a79a5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf67b3c4-a190-42d0-8c70-bc45019f9479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa3c383-09a8-4395-95da-a7b782e9be32",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fcd13f-72ae-431a-83ae-1fc0e17c56aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa125da-a2cf-43f3-ad29-5110415803b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d673af-6664-4d17-9771-52caa84b6e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d905f62c-668f-4893-b541-31d8472cb860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614c25c6-ce63-49ec-b493-6e2aa128a0bb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26dfb31d-5fd6-4320-be57-c9f80b35d14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b734124c-f412-4642-9d02-186ecb50d10f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78fefffb-dfb8-4119-bf6d-0f3b087203cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b34f7330-d096-49f0-916d-818200ba1917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e201ff69-f82f-40c2-ae27-a0e1c789b2aa",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980cf4a5-3a35-45a7-9358-105dee55059d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81fa3e13-f90c-46a6-92b1-53c3ed6a7280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3673d3f8-db70-4738-aa7a-728f1684368b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f9142c1-96ab-4736-b9b7-7c133b12efba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1aeef2-234b-4b30-909f-cb67e37c4dbd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b7928a-cb95-47c6-9c8d-df1408fd433c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec694926-4d70-46de-b00b-f3b7e9adc3ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330c39e2-8902-4af3-ab1a-2eb86d5e35f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62c6329b-0532-40eb-a0fc-1197c60344d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f673b1-4ab0-40f8-9dd3-ff1efa2a474d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4095a158-99e6-45b0-9d60-cefeed3ee52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ea8225-76ce-4caa-859f-94e3d57e5d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a40b6d-1597-4aa3-95b7-d63f8f40edf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ce23b2-8157-4236-aae2-ae8280c2f2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe1b1c3-eaa9-4ef4-8d69-664212098e47",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6248d444-4b74-4fea-9428-29e4b16da792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0753451c-4d01-4822-a49d-99a51e10a672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e1eada-8987-4fdd-87c1-c31899b93863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3eaa8ce-e724-4c52-9941-fad1b4402153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8865a9-9971-478b-9158-1ffccba37586",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67f302b-44f4-4cfa-b1b9-21adaa23a0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9a86a0-ac50-422f-b3f1-776ad65a159c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd3cb7d-de12-4bdf-814f-cb88fb02ee96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65cc7239-bc3f-44d1-9458-6d10bc9ea574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7daa01e-f75b-4599-b326-4209e9418059",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c373099a-8065-49db-8481-f5061e0a423f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbc869ff-c729-4dbc-8134-4a39a4f73fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796de221-de0c-4ee3-8013-a1987647e370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b953d0-7189-4fb9-bf71-6a1888f1ab12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c3a557-c841-4e0b-a691-af21a8bd34c3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf5ac18-4297-4632-ae4f-0f41dbe9d001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dee498f7-d27f-4deb-bb3c-8c45cb4d35c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c80e271-f0e4-4be9-aefe-ebb5fe1a0b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8f56c02f-2bf3-4fc4-84de-da2e70f3d964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab17943-03b9-4687-add6-59b33966a7b9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287241e2-f577-4733-96f5-de51a4a64a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f1ae942-47ec-49c5-9277-bb2d08e3b655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6e4fcc-b9db-4200-912d-86808a47418d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d23aa110-334a-456e-b2d0-7cabcbdde7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0008b55e-c325-451e-87a2-c5700b7f8619",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18a3eb8-43b6-405d-bf66-7976b891e242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c3b2ac-6416-4e5a-abab-014fd9e5e3a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59771a8e-0099-45ee-a2c3-73d87ef0d866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b76d84-5453-44d3-950c-2a54155668e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b27c01-918b-4be5-ab62-4ee8b856b373",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9698d75-ac9f-4086-a25f-3c166dd3c63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb69b65-fb4c-4e14-8046-50da8f7f4b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fbc115-0e0c-4a05-8fdd-8204d0342455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6031ac45-0275-4414-b75d-d2fca221c8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6e5372-6ae2-42d5-835e-e9baf1fcf670",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df792e82-67f7-4002-b429-ad741730c68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c3e37c-8106-49c8-8b47-db2406eff950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c290c582-eba7-4cbe-b9db-c1561463e4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1db67ef4-3dbb-4d85-aade-d56d18175d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e7f901-149c-4a52-952d-36a4a9ea575e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed71710-f56f-4f64-b669-e6bbdf5d308d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ad2c58-1e6a-4856-b287-7bb3a0499e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bfa7f2-21d9-42cf-9fc1-f92f50dcb197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "149149f1-1056-4765-b355-09b0f7e86fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1e0ff7-4c3d-4a59-95cc-d0572e099545",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a950eb22-effb-4fe5-8858-79c7156c3473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d89e60-fcd3-4ec2-9759-7023dec0576f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9a1200-919f-4706-bf71-28200111d27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "80cba15c-d659-42e0-878f-77f173555da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554c1c7f-342b-444a-8d27-2b3550e12c13",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7549bd-34ad-4794-8c44-2ab58dedc1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c27268b-10c0-4b7a-bace-1c88359aafe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc77b51-c6f7-457e-999c-1c32f753a005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd6ee7b-822e-4b56-ac3a-3733effe73a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44dabe2e-1dc9-4f3c-95bc-f53ef94ef83f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b2d644-8cd0-4d0c-936e-351f6a259433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0493f1a0-223d-4216-8802-f5d756efb07b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9912b038-aca2-42b7-8bd1-85ad0ec040fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14231fcd-68b0-464c-a3df-ed223c5e593d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b884b745-8d38-40e5-a348-36e54c96463f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d84051-95c5-4a99-ac85-8564d4fc47fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a658ac1-6be6-4ea9-b887-dcda793c0afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef6d12d-4165-4eaf-bfbf-2958d91396e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75848c20-984d-42e2-a4e2-3d58cfc80f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e36d1f8-c156-4ab9-81e3-f63d404f1e3b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac936b29-a360-4d35-b671-43cf2ad45fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ebbccf-9bf7-4dd3-b8fa-8d865bbe7b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99634391-7ca6-49fb-82ec-b2c006513deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "615dd12a-5af4-4192-a46d-5339aa108d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b0f469-be3a-4b06-bfe2-00b9a4ad4aa0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef9d5c4-a201-4f5c-a7b3-128456b2d60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5644cc-8e04-4c33-8d9a-d387dd78967e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb42f99-0adb-4c6c-9666-8e5fb02f9843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e13314b3-7e2d-4e77-9e98-26cd76ea2b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab79dc9e-2100-455e-9fde-fe0310568d30",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5f2a4a-f4bc-4f1d-8a63-8507385315ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35979f5a-4542-4fa7-aac5-567d467b68d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf16ccbe-8951-4fd7-b7cb-ede09b2e4a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6c13d92-85bc-4712-9f3a-394430fc7fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdb76dc-b594-4e7a-acb0-a2eed5bfcdd5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc8eb53-8af8-4fb1-b370-1f964445f534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f9679b-4ec4-4cf4-bc88-405b871fee72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59fd5a71-8aab-4c1c-bc6b-21362711354d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0cb7e63-dc19-4165-90b0-a802c28fb5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ed7f55-2dca-4dbc-b9b0-45836c30d34d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdca25f4-6404-421b-88c3-9e3e1b692474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0935faca-09f8-45e5-955d-1bf607113960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bd3fe7-1dff-4e63-bedf-26b827803b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e0745b2-b41a-4349-a55e-47853e39a035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7a645c-8af2-457b-a951-83b2a0c76716",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5661daeb-26bb-4e7a-97b9-a04d63722b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fde9d46-ab36-4403-8772-37714008bc29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363499db-7243-4a1d-b4b2-b00992bc6f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "405bf914-d5d3-417b-8997-efb09257b84b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa11779c-e583-4f73-bffc-1ad6f435b365",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dba1e7d-5e9d-4e66-ac77-feb1b98cb52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52549cd8-0bf4-49a0-986e-bb62c2dc1946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac421ef-f705-4741-afa7-a36db4ef6973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "452122ad-a1f8-45a2-a52a-37f6c7f4741b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8a3551-7ca8-40af-90f1-8a30fe04b6dc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39932705-690a-440f-9706-e289235ee076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2e2db8-e123-4dd8-bece-fd0b80eb2810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5808cdd-69b1-44fc-8803-08802fd84e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8e120e-9638-4326-88ce-2c8266708c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991df412-1eb7-4cbe-84a9-36646ed93cdb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c21cad2-0b1b-40c8-b9a6-8cb2aafd6fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeaaee8e-fc7e-49cc-b6c1-8d85cc9a0d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4642c7-71f3-4a80-893d-c7ecf5825c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee3df662-da76-430a-aa56-01e65908c285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd3fb67-7c4b-46f6-80e5-cbbe3ce73af6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db82635-fadf-4700-b373-46120510b8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa0fc22-5b98-40cc-a3f5-c8f9bba9155d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3e93a8-ad59-48f0-8c47-f5b9a89f42a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e046871-2786-41f8-818a-95bc977db79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24278f9b-8d07-4cc1-b5d0-7848b8e3b60e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "929d5dbe-b22a-4e40-8255-f66babbca53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c6b74f4-040a-4219-8d0f-79733bb2a67d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3944488f-e868-4e68-9e2c-d28cef85f2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ffe0889-6695-4bb3-9f71-7018f6d741ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9615e041-790c-4bf6-8076-dcffbde97bb2",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a84cea-263a-4e65-9edc-0cac27cdbe5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b675a4-2001-40f8-b236-e4c451e338f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a5f034-ebaa-420d-9869-7d3516e13308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f91a011-6ff8-4eb5-9b06-d5c0fa13569a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8ff5261a-a846-42bc-8875-5166462d8e7e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c4f9a23f-8962-40d0-87d5-c6119cc463ab",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1faa93f-7865-4a16-9c17-fa651f96eace",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f255de2e-77fe-4a1b-b616-8dd291393307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0712234a-de71-4c98-ae62-98d1311eac52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a5abefb-767f-4ba2-8391-6efcd9227af7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15af9828-ab9d-44e1-b47e-d975cc81882e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71358f68-ceea-443d-9017-601fd326ef2d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93a90674-537b-4f74-a98f-a6415fd936ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "854391eb-9ea1-4270-ba6d-8a6c76865dcf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49c52ad5-2106-4fd8-b798-f003985de7b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a4d8daa1-63ed-420e-b0c8-6dbae023f654"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b4a40f4-a770-4968-833a-13c3c8063df1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b1703e6-9084-4a98-a3ab-21e13b072c0e"
            }
          }
        ]
      },
      {
        "id": "b3ce5710-e445-4910-b06c-eb5ab1ae3842",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d5fa7526-776c-4bb9-8fa6-183d7f00f8f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0772507a-e10e-4683-8f7d-24787fea260d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "15fe69af-0c97-4585-8ec8-90769f59d52e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebb6c04-5909-4acc-be5e-f99b234068ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c794cd8-1d45-4462-b0e7-9f56b1114bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049c6ef5-1cdc-442e-9c73-2ce470968ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec823805-b1ed-41fd-8925-bf26853a5e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b2db32-58ff-4887-b0ad-46bba1d6401f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00722eb1-37cf-434e-aecd-ab33a587b933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ba8b53-6e19-4416-9c10-fda28a236eca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee3925c-b4ae-48d5-a5e1-76ffc790c895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e918aee6-16aa-4ed0-a29a-19fd25c3e28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9808798-90b1-45db-9e54-6ab74dec4ae3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4dc90e-424b-453c-8021-7e3036eeb700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6061cbf-7996-4f39-a170-04ecb54761c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f8ba31-8b3e-469a-b7d2-e3cba5b93ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f2b528-a455-41d4-8f9e-bb4068954a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d9bc04-a0b2-4c76-8787-13e8af0d1230",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc471e1e-486e-47db-ae2e-7734fbe2d3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "226cc014-8844-4cd3-964f-3e71e826157f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4adb75-2683-45b0-aebe-047e0e631ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "138b3d14-7c8b-489a-98f2-9472ccbc6b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57fc52d-9cf1-4bab-87af-8268686da757",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42015646-7dbc-4487-ad99-951a8a4cbf1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c362f04-878a-4ce2-ad2f-eb4c6b0d7f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abb5408-31ab-4a88-b89f-81d28dc543cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c16d2153-7d22-491a-81f9-77be1aad999e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6fcf8f1-e014-450b-80e2-2212605315f7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1fbde2-b7e9-4725-933e-52709683ee55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe24e76-99e7-4f2c-8b9b-e87af3229a64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f927240-f958-479f-a04e-645e0461acd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b2ecdd-81ab-4adf-988b-f734aac0390d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4cda7a-b23d-4179-bb9b-7c67c1f9a4cc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bbf83e-bcf4-49cf-bd13-8ba149f8f4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b21c8f-5967-46b9-b92c-0176ccea15ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf33453-ffcd-4178-8bc0-7ae126800532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "989ca6ca-b3b8-4cf6-90d2-0bb2d44649c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc00320-4401-4c55-9a49-9fb8c60a0270",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecee845-bdbd-4166-ba9b-6ba23af0ba71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5fc5a2-92a5-4690-9bf8-1ab4b2c307f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3927b367-8f1f-4796-984c-5ef62d86ab9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "132dc7d9-1b49-4305-8367-2bfe5c146c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7fa127c-fe0f-4861-a3b8-99eafa8b55e0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7453fb0-c320-4449-b0ad-5bbcf4bb2772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb2d9939-0001-406c-9111-2426be7cf4e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3127c20-e8a2-43c9-b0df-de3c3a4131fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc543c12-52ba-4b2c-961e-07b6916431a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff22a1e-6f27-49a4-8a8e-753cc154f19f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91f91dd-3f54-4866-9055-3532acdac622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc92203-7ec2-4db9-9430-d7ee5ac3b854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6903748d-f83e-41b0-973d-5ea4a17981d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "743045c3-aa00-488c-881b-5528a2b2e2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de757b0-8436-43d3-a3f8-7a77de7e405a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd2b9b9-c28e-4d33-a3b3-c67b45aa2c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f511ec70-e0e6-4c06-b90a-8e847ec1df40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5c7b7c-6f93-4f3e-9b3d-3f46209941a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "66c09f78-eec9-471c-979c-9f1143120dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34381069-86ed-48f7-b6ae-10c5ce9dea60",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd19a5f8-3ef2-4dbf-b9df-ff06deb7db4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0772c4-0954-45b4-b73c-51a6fa5a9660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1c0432-397f-4aec-958b-c1cf944c9687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "769868ec-8a37-4637-a8f6-c7b10371f39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f89a3e8-6fc1-4f2f-9e77-d1126753fc30",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ec41df-78b5-4f36-863f-5368bc8ea92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b8c0cf-2859-4733-a6a8-17034e2db891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e8fe2c-0de7-46e6-ba5e-c90784985f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fce8619-a8ae-41f1-876d-dcad958fdb01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15eb6f69-4b53-4445-aec8-8aea3031cdec",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5e0a17-ae40-4e4a-a31e-629f5ddd18aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7a797d-02bf-42b6-aab3-3b7dac9fc44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d6c2e4-da2b-43b6-b861-403839545a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea30a42a-426b-467e-a6fe-072d95c531ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06dee9b4-b06e-480c-a1ff-f917cab24055",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa085585-6278-446e-a48f-ae7726720f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3187473f-5fe6-4e8e-a982-563eff2e875e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0850e39f-9a76-4e60-8612-1ab3cec12839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "97aad40c-56d1-44f1-8649-211c57646b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ed9cf9-1982-4fbf-be4f-a48f356bd152",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12ba071-1f2c-4f8a-a7d9-f71748da292b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b6b9744-2d8b-4df9-9a90-622013b79fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ac4e23-120b-437d-a20b-9a7f32bd73df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e64ec661-5cd6-4a57-8d2a-1c1ffc904124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e7e19f-8807-4fa1-ad23-a80008d2a372",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a8661b-d7e3-4344-b250-8029ea2174bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca29e63-c46c-4657-bf41-f1f228a8fcc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7480eab9-bc43-404a-bcef-b19c989d4af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d95aea67-baae-4f96-a40a-639ff10f8775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e37c3f-bf27-4a0d-8624-3c5ddc28d106",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e562e905-f182-4dfd-9996-4a4a5c96c653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57101f95-4bc9-45fb-9edb-7aa7c252acc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6385c803-f9af-46dc-8ee8-0daac962a4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e39372dd-c922-4849-88f1-fdbf3c23240d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2a90ce-c612-43b1-9d03-469feddfa200",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc320a5-e62f-404b-b009-24b5bd81e649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "512e68dc-e81b-4f22-b93c-ae1edfc5ed5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f86cce1-0024-4ff3-9652-278e11c9095c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88e342a9-6be5-4116-a595-38de8bc7139f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5c5d62-fa39-4a29-92e0-c09772b9183e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5696a09e-f933-4e26-ac9c-c0797256ccfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b86d047-4424-4683-848a-b753020dadd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3379332-b9fc-4da0-b382-e4e2b8877cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "986562de-269e-465f-abb0-229a1ae4eba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e0d875-c440-4527-8119-1aa632aa4b62",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14f990b-f4b3-4512-bc18-d14b7ae4e0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca974708-8bf6-464a-b7df-b2f0b260e566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333fe47e-b6f1-4b47-89d2-8e66fc2891f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a544d5f2-5b6d-499e-bf53-d6178a35517a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1437d43f-b805-4a7d-b006-dd90a5d213e2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b0463a-8505-4c1e-b895-f340fb98ba32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0bed0e-959e-40e9-9c32-e67351db0f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b821caa3-c5d9-44c4-9ec5-fc6c36e6d981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f42d09e-f803-4dc2-b641-f162a50f68f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612fa8e4-a7c4-4793-8a27-43339370848b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9ab2a9-bf93-4928-b20b-bee8e102848a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd623e88-2f1a-4697-aada-29c7fcb8fd8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79676b4-07fe-43e1-adc6-38c10ff188f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b54639-0988-4705-9e10-8c62c15b447c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3fd705-02a1-4805-9cad-76da637a573f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eece99d-0403-459f-88e1-bf3ebefe4fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fe7565d-6c3b-4d56-8924-d31925431c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e741e425-555f-4e9b-b2b7-ef62272db3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e4881d5-3535-4f97-b3b1-8d44a35e3858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77f1501-8883-4574-8c62-efc0cd4a94cf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e197772-0fb3-4c3a-b9da-dfa0230ae9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e9ea3bb-478f-4c50-845f-b944df83fe40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22baf28b-bed6-4597-9fc4-0dc170705db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e8be83-c980-4f9c-9a73-0141cbb75a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ad41b0-d15c-4815-8da5-4c3fd3214144",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a18e4d-146c-4132-ae84-de14ecd2533f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db5d2bb-4462-45fe-a899-313e917120c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d666a5-d576-4fa0-83cd-e7fe8b82ba84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85b5403b-0041-496c-b319-894073427b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dfc66d4-6c92-4de4-b0aa-d82eaba893bc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ff483f-1c15-4c5c-b27d-acd2d1d0e240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cebe3c40-3f72-4ae8-819b-4c652243be94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4829e87e-78db-4eec-89b9-f4affdcdd440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31f21481-92e4-45d3-828d-3b4048d8e861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644e022e-3e29-48be-8f98-c8029ceba1fb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff0dd16-9386-4933-89ca-418d081c4aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b03eef-b7b7-4779-92d9-d8b4afc37da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff0a323-6e30-4dfa-bd0d-b0ff64312635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec298f02-3733-47a4-91e2-fba8f7cc8ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ff13da-edd0-4984-bb94-4776b2105e4e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c34eba4-5352-4b85-83bb-46ebb88a3757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d360df5e-e3ad-46a3-b050-bd211b156870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c9067d-db62-406e-b5e3-8fce553acdea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be6e0597-3c67-41db-a37b-01a316fb526e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39caa449-6cdf-4647-a8d7-fa9110d34988",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00bafa2-c21f-42f4-b794-25a6fdd5e712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d9b549-7cce-426e-b2de-1d2d50f0256e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ac92b4-f2e0-4f68-b04b-3864ce1b44d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0364b39f-9220-4320-80f7-5749c0c697bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e389a17b-0ecc-49d4-b85a-4a620206c446",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c4e861-74f3-410e-b467-15b452e63280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29805448-fb71-41cd-b289-f80a48574023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4593790f-5174-4fbd-973b-eff68ad46735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a716c3a7-ff78-46be-ac14-35bea7186e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3698f5da-6151-41b8-a313-2563704e0463",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33191cdc-29da-49dd-8f54-d5473eaa3500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c032c3-5440-4db2-bc3d-fc3e8caff087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb9bfc6-3d83-4b95-bd7b-a511a8ee1105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97291b71-064e-4843-b660-eb95b2cfb265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf43c9a-2b7e-41ba-882f-d1d56dd74203",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64da1ba8-4fce-423d-809b-d0733ab0f44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91cc7ccd-adbe-4cd5-92c8-22a24ca6b86c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606f9c29-86a8-48bd-81e9-b96cf92a657c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c64d01-f419-402f-a6c9-60ae26e9536e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549d1556-8a3c-462a-b9a0-82d21ffbe13f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677dd139-d5b9-44f5-b8e1-d9d8410d82b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be94183-8909-494f-b23e-6437e06f53b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95554c4-96a9-487f-a641-fa841109e6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "091f4c3c-12c5-48d0-90a4-bdb67159f301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c1eba8-cb98-4277-8b59-833942340346",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113303bf-a359-4f6a-b534-713699214766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7f9223-b6ad-45e4-9abc-b9e6b1b26187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d68f158-6e03-446d-8091-babf6e60372f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df4afb91-5788-41cc-8e73-3bee66743ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45abad54-eb02-4a95-903c-60ae4fda2e9a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebb0b6d-144b-4262-b387-50d4f5eca1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20884890-b7db-43fb-8d60-f66876c5a53b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b335c9-5568-4415-85be-8c5f45b21a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87b49ca0-7376-43bc-8336-4744bb5d91f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37978c91-34b0-4ade-9164-57a2ce7777dc",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20a968d-f8da-4a7a-8914-c83fdb3a3af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a054444-dff7-42d1-ab98-ebfdd925c7a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210acd47-1268-401b-aaf4-adaf53f7d29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe0f611-274d-4aa1-8761-dcd8e2a4d56e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9d27cc07-2bf7-4bb9-bda5-ca82c78d3824",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c91984ca-3638-4bdf-b6a9-9b2cb0dd3283",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56ec725-d9df-4f61-947b-5f75956e85c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5a2dc301-d4b9-4ac2-9dde-63e1c6f8df80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6088dbaf-5132-4809-9145-7150a4aa1cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad62e988-2ebc-4656-aa73-13244e159f5d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4840695d-a434-484e-be08-f70d45d56f0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f544832-f631-404b-9c53-7911b341063a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7faedd36-721f-4c20-a175-0662c399fb1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9268d18a-51f1-4f1e-979f-aa4552bbfdba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25fc9e68-8add-4d28-b036-bd2e96dfb0ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "700429aa-9ee8-4013-90c7-3e42af72841d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a172c3f-456e-40e3-9a85-437ac61bc0ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c0584b5-923e-4ff8-8da3-38cef95b388d"
            }
          }
        ]
      },
      {
        "id": "ce3fadbb-4f29-457a-a47b-dd2c2e6c7ddc",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cca3356a-cab4-4853-b932-6490e1cb0c90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ae147ac1-a1f9-483d-a81f-8b8c955e0702",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1a155d0f-889e-42d0-a9c5-a5ae9c8aac6a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3879ee09-20c8-4d7a-841f-98af4ecee3c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "338db16c-ba6a-4201-bc47-777ca39c70b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a703d2e-3543-43ad-9b43-dbb07c1b9f0e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6b2900-b8e8-440b-ac06-8b744220d2cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6290844f-c4a1-4c51-b6d9-4b98ba4dc783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c8f4e0-8b7a-42eb-b008-23a1eec2e805",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56f718a-14ce-4a7a-bd23-975176ac500a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7945d439-76e6-4df8-8534-ecdf00385cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b9644d-c1cc-4e56-9d79-9fe6138157cd",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a0948c-a356-4fe9-9659-bdf188c510ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a746b84d-5ada-4c70-a84d-730d27672b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0abc4e4-2bfd-48b9-9777-26a9262c2b74",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddabdbc9-c26f-4377-89ba-0e583da67864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c89a47-33d8-4cdf-a744-13ef057a76f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1912693b-917b-4665-b864-bdcee422811f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f33c0e9-3a06-4ac8-9c34-4271dfb5b8cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffaa2c5d-248f-4d67-9590-07c5c340994e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f256d1c-3c43-4557-ac82-4b66ab13daf8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9432f0d5-ca2d-46e9-b289-01ce3c0664a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5920ba53-a6b8-4c2b-a813-74a700332644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fab227-283e-4c3c-9bed-3d82e0514ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb3ded0-1a53-409d-9eb4-1266c30bdd25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617f9fce-9e41-4d16-84a1-a8c55abde79f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0210b0d-8217-4520-a867-ccd107db5d51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeca3f05-1367-40ae-ad26-62bf95c2899f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52dd15f1-5f22-4219-9491-b64be6d572eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681b8412-6468-49ef-84de-655c47322408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4b22d1-38ba-4133-8b8b-c9485d043b31",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b704a5-d3fb-455a-a17d-871f4aa42155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f98d2ef-38e6-41cd-a4ac-e6db74419a79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e352b0-f44d-4412-a394-f21d4d34be04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "764301a5-6433-4140-98c4-0b7d7f6792bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5242c28-3b45-47f5-bc50-043f83da6013",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761cac6e-fa95-433e-a8b1-3255504130de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2f0a6ba-9e40-4c5b-be60-d8952f7281cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1626ec5-f7db-478e-8a4e-f483ab75a704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb16fc7-f367-4097-8baa-411b86a7d283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88fe2f2-793a-4702-8043-b16970b61857",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9454dfab-879c-4660-8b5f-c661f063474e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f8b9d7-9dcc-42eb-8789-a5e9565b9b1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4abfc9-97c9-427d-8a03-4ce619a08f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e236bd-e0c2-4002-9314-7260d3f0c811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe11b99a-da0e-4e56-8b4f-1c04c3c746c3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c3595b-8243-42c5-abec-754402915bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "615512b0-759d-4f0a-bd5e-18a8cfc975dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba14f5dc-bf41-4ffb-a85c-a322fde5a757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7edc6a6-d23a-45a6-a73c-ed71156e4dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f11de5-ac76-4024-ab66-36d8dad8e188",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a07cbbd-d23a-497b-9cbf-7ff81541a2a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4884208-8caa-4937-92b6-4be7e3ae8208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b931859-5410-4d54-90ba-43055b1e66b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c511caa8-3f05-46ff-a6ba-b4b3879bd202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ea5183-d6eb-4f3c-9730-098c203cf3bd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd9fa20-39fa-4b6c-8663-c2faafb2d7e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f69ffd6-5211-4694-9c5a-64b0da830f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c05aac6-2212-4f5a-a98b-67df37a9faf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59634217-ecc4-4dd3-a196-4b8e3a2e992c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403f3e04-8c99-4b5e-8fe1-62c019b08fef",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bc999d-222a-4006-a008-bf152892f2b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "364c1b4b-bce6-446e-8b12-f7f3f17669c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "690539ef-75d0-42da-9b74-69c72049986a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8929999-ef49-4d48-b350-83ce8752df0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cfd18a-be72-414b-88a8-cee3ab569ec9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f212fc06-6cc3-4115-b286-d885c8f61550",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f2d87f6-c61a-46fb-9d1a-039ba4dac88b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df50bf7-cf60-415a-b1aa-6a14c5778e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f45c912d-a7e4-4569-81a7-3e6b8005f8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747fb5ab-3433-4e88-84e7-5a7b87c124ac",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020e1a72-4246-4365-9a21-f8de66bf8e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5089538b-1874-42a0-9fc5-7b9c82b09cb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef32d068-e59d-4d50-a84e-6f6ea14d2208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c86e5c0-6987-4ae7-994f-34dbdafb06f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be12983e-5296-4d1f-a605-174bcbaaaccf",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e22faa3-cd97-4c15-8151-0608caa7a012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec8b596-ab0e-41af-93f4-4345e3d3f348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f50066b-b49f-4294-8ac5-5a472c399b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b4ee597-502e-4ab4-a78a-a9a633f36c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5adc448e-5e40-458f-8284-a8a76c0d42db",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f61dbb6a-7d5c-48a0-9129-a880aae910cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d02dbd7f-c943-4715-ae89-1a3221d1b439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82eee22-2c7c-44a7-b0ca-a058edf90208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c164c25c-1ef1-44fb-ad55-c07eac76c7c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a082b803-4106-407d-93cd-cc019381ecb8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31957e1e-dd21-4622-9a9a-67515be0a389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf346230-b528-482a-8d2a-1a71fbcb13d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0642d54-fed1-4d0b-9da4-e964a0460feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b4c3aa-060c-4d0b-a562-7852d57670fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e57e8d-5fa3-4897-a05a-15f09eb6f729",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43f381f-df0f-4d38-8082-7885865ce069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b51e40f-edf1-484c-8a12-bf03956dbe0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df3c04d-5425-4fe9-9c19-db71296e980d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81adefb-361e-41c5-82aa-01a6f583ad0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f843f6d5-96b9-4724-b720-d278b96fe548",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf2551c-9f7d-44b5-b7a2-38d3e7348806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee26ff2-b2a4-4478-aa95-b568058adde5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26eae60-a7be-407a-8568-4aa38528a29b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf904e58-af18-4e2c-b5c6-5b8f5435d000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1483f7-815d-4070-a671-a99386e9a8e1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0655146-19d5-44e9-b87a-37c1c8188cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de56152-3737-4905-9a27-6e8d843a9df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44f9bca-9545-4616-b2a9-f5613cba109f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6a0052-ea45-4765-90a2-9d6f29740204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f472ebd-c98a-43cc-8ccf-1b4bbbb80a46",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37667401-8de5-4211-b779-65a3204e2621",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d72f9d1a-3ec5-4ca1-ac5a-8726728a7ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f7ca14-5d76-4d65-ae90-c7e5dc2f1abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c26952-2558-4d49-90ef-1da8839cbe33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772cc8c8-04b7-45d7-9f73-57d7b83750ba",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b288f07-84ef-434a-be99-52be3170ac27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f250c309-34a4-46d5-9c02-6bf86d7d4b3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4712dcf5-e865-4818-b88d-ff7cc5826721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c275e1-3807-42ea-932c-463f8eac9534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940076ad-074b-4079-aa75-aa0f6a42bdab",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b077d16-46a6-41e3-9a71-6116f5795f09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd0848ce-25de-4875-ae57-a8d8c0a7acee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cace0bc-a54f-4fdc-bf4b-bbb2d8336932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44c5c3ad-7a42-4878-aab8-aca4c9c02d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f559ab3-5e00-46db-8c45-df80fb09eeac",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe5a81a-250c-4d2a-b353-eb0bfdf7a293",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26ee441c-5153-4b02-b4df-ea1b36dd11d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3e978d-fbdf-4b78-8205-385bf854fefe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd5a92a3-c78d-4959-9947-2aca8a50a169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb7ce0a-c802-4cc1-b0e5-4023f3c9bc8e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f2072c-d1b4-442d-b19e-e6788278c44a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88878c9d-83ef-40d2-9ffa-1a86356778c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "149cfb0b-f8ea-40eb-b8c7-3f12428c3975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "405899c8-eeff-4cff-9b5f-9e4474e45f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94dab2bf-f71a-4e2a-bb44-85f4086b8245",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb96bc3-bf79-48fc-ba02-6e30df70f3a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0a6fb2b-39f3-44ef-b5a0-511cb27ddd72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca81f208-b11c-4957-a4cd-02d3b63ec093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f31ed9c-fe0f-445b-a1a4-3e4168420101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1b3599-654e-42ce-b334-22b7c051ab0e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d6e10a-47e3-4df3-ba0e-ad7b55e81f6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef077c49-9a35-47e6-a11e-43c554a6cf00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91e7a87-a10c-4974-98c5-fc3dc527ad79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c32004-7ced-41f9-8ce7-813f847065ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907ceb04-4b11-40b4-b0d6-a1f079df0d90",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96408b89-ba9a-4f5b-9532-6a1b6626793d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56074acc-7c36-4cd4-b217-070bf58a010a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b21534-c533-45dd-9554-8f7b2ff39de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162e37e4-5c22-4e42-aec0-d6cffc58265f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81ed892-61ac-44d1-8779-dfe1fd098cbf",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3b9df3-673e-42d7-9834-920c8023e8b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c1e2b29-1d8d-4a6a-b8df-8f7bee6eb315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37b0236-12c3-4e54-8a85-ae6f7b389dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c90e18-851e-4290-8b1b-6a83247d934d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750487fd-57c6-462f-8b4c-3b0a08821275",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e33fbb0-a25d-4a55-bc99-a69d8da99ae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b74e3b78-8c8f-49c0-a252-7ca0ba60da1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e008948a-76de-400b-afe0-413e43dc73bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d32f774-7a7c-4f84-9fa0-1bfe2455aa7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043ed332-9bac-45fa-ac8b-a24ea8feb806",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d301fa25-8aed-4e4f-a928-d3f54c5e7cc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d790b7b-cbe3-4633-847a-50e64dd852f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1520f0e4-fbcf-4787-9fc1-e254b41a53ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4bca9bf-c3ad-4a60-80a9-7ba455b9b594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f354a570-42af-4299-9297-66364f5da0b6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0073b711-06a6-4812-9ff8-ae01dfac1b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db239aca-147d-4280-b497-86f6e5a50c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa9f2e4-46bb-4328-adf5-3c6d01ef5c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b08762-27aa-4875-ad30-de39d745a36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfb730b-04fa-4157-bcac-3b0d80ae380a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae95cc2-31e0-48e5-87cd-1372d7f2481b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf8feb2-2e6b-402b-be61-5d5593f92357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80e0839-ab4f-47de-beb2-5be56f317e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e43212-ecad-4e84-b074-74ef0053ac4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d569b3dc-ea18-4701-baed-0f9b8ec25875",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01528913-e4af-4858-bce7-076fe31ffd20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffd5101d-3cbb-4f74-b37d-8c005643d245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ed9a54-2c6b-4687-959a-c6ea0671210d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d31264-7344-4bf3-a299-4044b27bba88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38857295-b773-41b5-8616-39d0a89acf5a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8063c04-9014-49fd-9998-bbf82ee6b299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9995ffe-8812-4ea6-98d0-7604ff98ebec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eccb84e5-852f-48b0-8a53-dd6b20434305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bbbdb8c-52ef-4caf-a3db-54f5f9e292c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32bc6385-1746-4413-bb79-ce3f02f2a354",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9035fbd-8302-4eb3-a45f-bd7e447e9c86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c872898d-0270-414b-abbb-7769be3d612b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d204ac-baed-47a4-b39f-16a8989ec2aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d875b34-edf3-4114-968b-537239d92c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c610af3-eafe-44e1-b97d-770505e4e031",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1e9ca7-d01c-4e60-8af5-60e2e4c12ebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526a4c13-ba2b-4a6c-a6d6-84c4907064f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8133ef7-783b-4e62-833b-8dcc7318d268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c16408d-65ed-42ca-829e-7ca42fca6d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38950252-6341-44b5-90d0-8e029d8a295c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488c3730-bdf0-4622-a5c3-f723fdddc83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0b8694b-fbf3-411b-86f6-0852222d395c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86698a8-a7af-40a7-8c09-57a3b1cda669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb67fcba-4f04-4550-b6d9-6e0885060d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ca82f9-60a0-4d8b-9a3b-46f176b07111",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062649d2-6574-4c43-a7c6-9c158c038353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf148c28-37b8-4c07-9d2b-e6e13283bed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "091bd406-6eca-4012-a32e-fc61feed57df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b0deff-0688-4d2c-8a9d-21e11ed87951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a64db8a-2666-4204-8088-7eee030e4ace",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a611d9-715c-4728-bd41-2cbc4614bc17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d45021c0-fd36-4865-997d-8e8259989e57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b7130c-1e97-4237-a74a-61970c60564d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2286a099-2a9a-43fe-95d0-a116e6f6524f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e737e8f-7de8-4a5a-a84a-2fa2467832fc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763124ab-5b3e-44cc-8572-3f01c8e50c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4665b811-e2ea-4b5d-8642-811c8c757572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98fe2f94-5c3a-48d4-9005-072d2f91978d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f0a823-78e7-40cc-b826-888defa7b317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6758da06-c577-41c3-8218-af2a79904049",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c52045d-afdb-406a-949d-5bba7e4f1a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6ad32e-9f13-4f37-9279-246248c97a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ba61a6-f0c9-4ccd-967d-bc78fbc300e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470d5593-67c9-4cd8-8d33-fc76c2ae208a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e39728-0052-4d60-9221-1df8587628d8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323ec1fd-df84-4c02-9a5e-0f9b36853296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f66789-b8c2-4e29-aad3-c166336086e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dba7c98-39e8-4377-b4c2-900e12f22ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "761406c0-f775-4489-9490-78f8199555fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a4d0d9-256e-4bbe-b6b7-58f6acffe5f6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c315fe2-a31f-4ac1-ac67-70f81b3bfa83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "698ec871-f02e-4855-980c-cea36f2e1e9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24112113-5727-4d59-a1f7-5d85c027c4ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d250812-9f6f-4794-9766-8fc5f43394f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac90d38-e017-4e4c-84a6-0d1201cf8a52",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cab5dd5-9d29-42aa-ba7c-aefd03debc81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315fb4b5-0c41-410f-9e9c-30917dab6b3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30751437-85eb-4c90-9ccb-f718147a63a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d134000c-d73c-464d-a08d-563be52f222e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a488a5-7c65-423d-a280-9b9c7e2c7c0e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ae0740-53e9-4b8a-ae31-dfacedb284b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd634aa1-9af4-4b84-870f-1a48b27db56e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dee4447-b2a4-427d-8e0f-ee880414f794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b3ec62-14cd-46f2-82c0-24af92553a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23367516-543e-4fb0-be0e-46ebc5d89677",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46987d0-6388-4d48-ae07-402018e483de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b97c4dd8-cb4f-4b93-bbf7-aba4c6577f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67da1318-3299-4cc6-8efc-574fc7fd4a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a69f5b-c47b-423f-a3e4-574ec5db573f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f87404-e952-4f73-a9e5-edeadf9589f7",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2d6e81-e5f3-42f7-9250-cb8d521bce69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da7cf530-7d78-4347-a379-3065d07d94b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f247883-c1a5-4ad3-a461-f11247eeae95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e50a623-9029-4cb3-bb0d-d6107d27376b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d099ba-9e7b-4c0d-9a16-6da36cc7d779",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17cd1c4-b349-4701-a0c9-727b8a9fe736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d9aa880-2c71-480a-9c91-e771b0bc7cdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c575c85f-0838-4717-abd8-ac2183eebbcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e50ce70-2da9-436d-9c3f-82f9dc470a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6595d1-3d2a-4f8f-86f2-00e484210c4f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3715ee14-dddc-4c7a-81e9-18f6b4981d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "775b9ed1-49f4-4061-a552-d4ee3628806a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2fbc0a-be9d-4edd-b9d3-4cc65e434c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aea02dc-e1e0-4c0c-8123-eece03d6a03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587ba019-ca6b-4e84-872e-50ff6189c2af",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9e57b5-589d-4b14-8aff-abef84060a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e570183-bbf3-4fe8-86b6-3f5b042191f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6f9f62-1370-495b-9319-e9490d4e6df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12dcc24d-5155-4d37-ab1c-ae1e7393753a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91de7c7f-e8a6-459a-b6f1-e213a78c04d1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2edb07b-8178-4e9f-b793-ca5a1c7383d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea10d0eb-ba25-45ec-a031-179466438100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31896e22-e960-43cc-8732-98ccdd69bdd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e28985e2-506b-4379-8286-1c8acae51e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ef8add-871f-4f68-9a7e-9a080ec84936",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64eb93d5-69cc-4eac-bfe3-90ee063d619e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c446a925-1116-4631-b2f1-ab57161f6344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5922525b-fd72-4502-9d5a-75bf532b9046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f181a47d-85e4-4594-92f4-99aab3a29882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3271b8-5a20-4563-be0a-129f67dc3189",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5d7d61-994c-456e-8b70-148bd5eb3bac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a382d29-3c1d-4ea8-8142-de33170ae5f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "956ce592-5cfa-4946-af5e-c3ac43e19852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef7dea6-9472-4532-8602-288be9a872c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb8abbc-eb79-49c7-82c1-acc6227b202d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fddff774-1fb7-4c44-b518-a7901cc0d9cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33de7c59-977c-4678-a0e0-8a4c212bd2c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "155b016e-c7b3-44d0-9484-4639632d5d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20deb9dd-986f-41d8-9dcc-98e65c8addfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19931f0-a46e-44b1-b8cf-4d09e1cfc301",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687a76bb-4c1c-4ae0-b44c-9084d897ccc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d9dcdb-e6fd-48cd-a441-9a68a1d36464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "530ded0a-9e66-4a5d-98dd-a571d4b14dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f8247ca-f249-478b-b4e6-0512524985db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51df9877-4c37-4f21-8589-6276423ba3d6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd6c99d-2b41-4c36-bacc-eae8c3334790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbedcb42-3c84-482c-9243-1a6a33eba9e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ccf0991-9552-4f65-a6bd-3c978f5c4dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26beac61-ccba-4733-98a2-60c9d8e654cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba73120-2b28-43bb-af0c-cfc0397c4636",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589c494a-4182-40b8-85a9-4a64e3fd57bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9ea8b8-1bf5-40b0-8bb1-daecb7832efb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03ea4c9-31ce-4531-bd17-db33bae16063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f05c21b-e24e-4a1c-8210-ced8693395b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9baa8be-5247-4c14-b278-32e71586c367",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92467aa-7a23-4f74-b34c-97cce40693c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949ab05d-fb1d-4304-a425-35c7c36a0c80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed18a363-6bc5-444e-a441-d27ddf90630b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "827dae39-ead3-4cf1-a25e-b75ab4031633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9b69d7-3b8a-44b9-890c-93655f0391fe",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def10d41-d5e9-4c7c-a16a-7b436f9a0dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d66e7c0b-33c7-4bbf-a516-4e932a1e5640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05876abd-af41-4408-9bba-3f4454df9d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d5fbcd-b3dc-4fb8-aff4-10d59832c8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f511c49-54ca-42bd-ae80-b479b2d3fad8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbcc694-93a4-4d8a-8c0b-5b176d3ceb27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "919b5cf8-27dd-4a6b-850d-0c6aaa6cf5b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ba71ad-0742-463a-b07b-93229573d340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372baf8d-1bfc-4352-ab41-fc4d7e9fb426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbd802b-1aec-48e1-be9a-85eccc889dfa",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8862743b-8288-487b-8fb7-ddf571489a0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57eaaff1-4a2e-4b6f-9ab5-55142f45b40a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db363e3-c0c5-4501-8eab-b660dd1fe405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e047a3-7a62-4a09-8f8a-5b2262af4126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1130bf8-08bf-42f2-a4ce-07c9ea7049b7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6a3e19-049f-4c7c-a094-4dc370fc3220",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05f32aa8-3413-4f1d-a7f9-c89c035609de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d378d268-385c-4f1f-b1f7-cbedaf5b872f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab3d6cd6-38d4-4709-b189-1cc887997383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00faad7-d93b-4d1d-94ff-bdc6d7183408",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1280f05-2e0f-4202-b29b-2b8b5ea56f23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf4e46c4-b5cf-466c-855b-3611d9a9203b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45dfeed-99ae-458f-9822-c0f4aa2c6d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8731a9fa-7962-4706-8ad9-05966b0bf5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b7c294-8b14-441d-ab8b-9e02fb65d14e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d9b565-2f87-43ba-a8b1-61332a3d4bd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d9447f9-cc9d-4014-a5fa-73d6c49b43cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71409184-cfd3-47b7-ad5b-411f9e0d47b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad1a9a7-f843-49e6-9e48-11780769596e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c185ca6-fd80-4b23-8e25-947846cee40d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6cc128-f603-4465-b54f-2fb14ad69992",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b74e7d8-401c-44a7-a267-c0168543dbb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a20809-fb98-479a-b624-7b952f8dc3a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9ba2b42-a7eb-45f4-b874-88b27ec2238b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053838e7-da75-4b1f-8054-2c2793412af4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d1c42c-bb26-4f7d-aa98-b221dfe790af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa936eb8-a1fd-40d4-a4ac-0afc762a6da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "218b9ddd-099c-47e5-b771-01b878e5a62e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e7c19f-400b-4ddf-b7aa-d19c5bbfd738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaffbebc-fcc8-4ea4-81a4-cf6ed0e61cba",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1463b520-b3b1-4e64-87e1-91e05c8b9f52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10ddcd6e-54e6-4037-8c07-db2f0d3a182a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07808368-4ac9-4d31-91b1-28326cfdb746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1df020cd-f2d2-4ece-9a63-a30ac3891fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0ace64-4f05-459d-b092-932680643637",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2a7687-ea31-4789-a112-ed967ff0ef7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "257bc10f-8a23-48b3-afab-bc4279250991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d673364c-6f52-4ac5-9fae-3cea1ba15d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc9a1b5-0411-475f-8cbb-5d24b52fabff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdea195-f95b-4557-8055-415d6f86c95c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0577e70-8090-4bac-ab27-2b03b61a6d00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec7cc414-cbe2-4bda-90e5-1ed204c6d88e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f62de4-e999-4d47-8c08-163d9963a3fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf8ce77-6088-402a-b0db-a8244b3ddf99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a8639c-5e60-4da2-ab4e-0ef2762c8091",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642061d2-da61-40cc-9b6f-b68f6362ee59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6584caa-3082-400b-a6aa-621db5a5fc33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e8ff67-7de9-4256-a2f4-1bdbf8de86a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb2c5f36-3dca-4abc-af2c-65ec519044f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354bd926-91db-4a94-b314-8ef81200621e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3eb3991-5446-4ddd-aedc-05f7c0583774",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df035de0-5a64-4819-9acb-eea6c0bb9928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98119420-d343-461e-8fe7-7369ec66e68a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1cadd14-9c56-4cf3-8755-cfcfaed9b47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8819d8c0-4732-473b-b15b-858a9532db6a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37f5e92-a2d7-4f99-9f30-582805951543",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70aa7754-e117-4c0c-aa3e-56cd44171646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49677f26-ca41-4fa3-937b-931bbc0caba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7492fd-5fc4-4e00-a8f3-c80730a9f00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ddf700-dccd-4393-8867-2a8b1f51aea6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e9c738-fe46-43e6-999e-6a6027ea32f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "270732b4-7e44-4636-be6a-81114f78bfc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae4f1fb-44ff-46b5-95f7-e00e702ce96a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6282b83c-e101-4951-a963-1b0a5a6c984d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33548c76-3a1c-4c4c-92c2-c47606b76e45",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd81d75b-fa81-4ee3-a502-0806ad04744d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4423bf69-aa76-4568-a338-d00a193959c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c1adae-332a-4adc-b961-2664f215b792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341e2aad-3d5a-40c5-bfe3-e396258f436f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebec67b-8cf8-4f96-b561-0346181c9227",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5236cc2b-e96d-455b-b8d7-42519bb6dd31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fa723cd-9474-48be-bf95-11b283a9abf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1113e481-7705-4e27-8be0-d8d7ba121253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26dfb8c-c2f3-4f61-8e29-cf595d6bd807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edc5ac3-1780-44da-b14e-3f28454a4624",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57339ad4-72da-45fa-b422-1fef78109d28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f9a5da4-108a-4c06-b80a-2850b93875b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1cc0ff-87ea-4087-ae60-440c03885cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6680aa6-832b-4a2e-97ec-d824082a20e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846fdd61-659c-44d0-93a0-ab0be71d32e0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea85244e-6bde-474a-905a-466a0789db09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55296a04-6df8-40a7-9d1a-9d0f0dd55e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6db1a52-f53e-4e8e-97f1-ea9eb69b7dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8aeccca-9f07-44c1-b78c-71d5595bc4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b946a4-d66a-4ab9-8595-d9498645ceb8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1b62fa-51da-4022-a042-06a8ec10ae8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ea2f38f-aea6-47ce-9248-666a0cb7b24d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4668b050-cefa-4a26-a522-071fd2b4d239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839d9f46-2dd2-454f-8bb8-c90742d9708c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff811d0-3b3d-42ac-ab53-ee40209b589b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bab11e-54f1-46e2-a2f8-23616432be89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5e10eae-d791-42c7-8804-3e5166c24ea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9315d6c9-73d5-48c0-967a-454cb79b89d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4edf8bd-f418-4d4f-ac3d-ac27ae710cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550c4147-d462-4395-affe-4339664307bf",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4200784f-6054-44ac-8b1a-eabaffd289a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17115598-705c-495e-b681-a64a4aa7ab54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b4d57d-2813-42b3-aeaa-f3904f4dca5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d67e01-bf6b-431e-b6ee-2897b081ae63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e923b90-59c7-4eb6-923f-c13ba855f4a7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9b880a-6057-4cdc-89be-ef4d5821acb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66af898e-4ed3-4a7d-abc5-8637711095be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2beff53-5f7f-4c66-82f4-c74e7c52910c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "240dbf9b-f9d0-44d9-8547-cdd270eab4b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4818d122-9d70-42a0-9634-243f08c115b4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce5a114-4c08-4416-a2bd-db852d8d9410",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c685d9d4-b5d9-4704-8c2d-3ee511200dcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c49131-52bc-4bda-8659-7f51240f4365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6786e041-3f42-4354-990a-a3d101cc2e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b4ea9a-b2c0-47ec-8cc0-ff60c8e2f048",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f4e276-a525-4238-a39a-aaf56423f08f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "531750d9-48b7-4b13-a5ec-b5d765dc6ddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b079f28-72b7-4fe1-bf14-8cf451cbc8e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce6add94-b6a6-4ea3-930d-db267da51653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89f7d6f-f0ca-4a73-9e4e-1845358d849e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7ce3b0-155c-461d-9c99-5f3bddcaa8bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c93627ee-2e3d-4db0-9866-b721412c6af6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b94223-a4ee-493d-8c88-2cd1615967e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d49fd3-fb3d-45ee-87d6-6d0cef93a9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d94b109-9ec3-463b-ac81-1a79bbe09d96",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25a1c1f-b6b8-4b0f-84bc-ec2ef1042d37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb62e267-6821-452f-b7c3-791730193247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0766b64-5944-44e7-be34-a4531c3741c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f556e5-4150-4c59-942c-043a2807c367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09bdaf95-ce15-414b-bf8d-7aafa61a7d11",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ffe381c-b9d9-47de-92e7-b8c87f6489ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63ad5976-a13a-4dfa-8db3-ae4d336eb720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81fddeb2-eb76-4af4-bb15-8f1230f6e255",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dada7f5-53f1-454f-b997-785dd522f38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8de61c-448d-4215-bfa4-0b94c47eba5b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453445a6-e802-4546-8f20-aead64a67664",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20d9d18a-9829-402e-ad46-7141863be9f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "670faeec-3d69-4d34-a623-a010385f65e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0139079-e9e9-4812-9417-d0cfc953a75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5c244f-d895-4229-8d78-71c3c288ff59",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8647a806-42d7-4bad-9829-5078c13c42a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67907c6c-e3f8-413d-8560-1af8719188dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "086cde0f-f577-4eb9-bdba-7f8fcebdf8e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecfb81be-81ee-4e72-ae4d-ba280a3a070e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73721ffd-37dc-4019-b118-863d36c41917",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66a5bdd-6b58-4ca5-b7e0-74fdb20f1746",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8fa9b02-18d3-42b6-b2a4-fc0a1a8723d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7fc642-b345-4be2-b910-e6ad975c24d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c9321a-4a45-437f-a001-b1329ce8810a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c872512e-32c0-431d-976d-263ebdcf1ff8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fb2d29-0720-4941-b121-d0b7d19d52d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d375495-4893-458d-9a4e-25491e22e6cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e8e4f6-3117-4e0a-bd5b-20c7409ec28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fba2c23-f3cd-46bc-9cfc-b63a98471bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7223bd4d-9cc0-40fa-9016-b9c39c8015ea",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a912b428-e1f2-4050-8838-3b844261d0aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0f195bc-b591-4c98-a9ec-b4c6b9afb9da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc1ed0a-0055-4d04-93e0-371c7064003f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb3e9f6-9662-4719-93e6-9a701796d0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35abff9a-bd54-426f-bb6b-6ba1395f8c2b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8868607e-ffdc-4a7a-9359-33882d0420f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed3527bc-4af8-4fb2-8a97-aa85c73da225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "584d57b8-5be0-4e8a-b464-4082c1dbd629",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "806708bd-f9a8-4a56-b450-89d872411f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c1cf0b-2d90-48ce-8b19-0674cf4e8803",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c7fe00-12d8-464a-8946-2a806dd2b41a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74a9895f-c8ea-47d3-a547-f18c206d0403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65bcd9c-9aeb-4085-96ae-953c6658386b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a9d951-c672-4218-a952-9fc9d8df4f9e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b73a528-d453-426d-885e-f3e0152c9003",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3aaf33a9-b75b-4d97-8398-733cc8ad7f8a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "19cfdaef-0a8f-4624-9aab-f5d1de4065d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "29ad18a2-304d-4442-bf0f-e2bb02641283"
                    }
                  }
                ]
              },
              {
                "id": "d1c8aa8c-cd66-4bf5-ab44-e50ad0043954",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ff8afea4-4dd2-4ceb-b692-340688105640",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac786be1-a7f7-4b06-ad35-b12772718576",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9b891048-8b16-4ecf-adbc-1583c4211d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2406220-5d2a-4179-816e-69920855b848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3b8caad-61d3-42c2-ba30-4689e0efe365"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29fc4ed9-964e-4f59-81ed-7ce9cbffb071",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9dcac48-dfec-4aba-a14a-9f7aab089f2d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2efd163-a2e5-4faa-b741-16b8b8df97d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc4a4b2a-0b47-49ca-ad7f-fc7d7e994ca5"
                    }
                  }
                ]
              },
              {
                "id": "2ff79ef4-47ca-4d18-b10e-a0b0f71d1f66",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1236d6b3-b94b-47e6-a5ab-b20a70f998fc",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b997ac1-69eb-4e05-99b3-405bdaeef190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8bd0d235-22ff-48e6-9a29-ff7e54b90ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64dc0c4-6dfd-4ce4-a174-3bf3b93d143c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbdde5e0-103e-4f02-bc40-ccd0c6ab652f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "075dfab7-44c1-4701-b9da-4cb7c51cc4ea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ed2f3d15-f416-45de-a9f7-b6b075dcf3f7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96f8f4d0-f5d2-4845-a4ce-80e5e956a3bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9f416904-6bb2-4229-8d48-dad9b9ceb174"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2efaa3bf-bb64-4522-a33f-bc2d56c449d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cddc1cf0-40c9-443f-a429-e164a8d8ec09"
                    }
                  }
                ]
              },
              {
                "id": "829c149c-2397-4a74-821a-a137d605e1b8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf59e9aa-ab16-4d4f-9056-0739f5a726fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0a1be4d1-211c-4941-845b-4d8c343f6738"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5efcf0f7-a1ea-4ebb-a698-a72fb4324df6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af5c92a5-e67c-42ff-89ff-67bb2ccb926e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "493a435f-dce5-4b92-8b2b-00a4d0c2b6eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "08228024-a049-4c5e-a150-6987917ebbea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a3e2b70-8ec0-498e-9afb-d7fda4130555",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "234d5e8e-d3f7-4843-aeb7-5f1c07f5773f"
            }
          }
        ]
      },
      {
        "id": "f18a8465-e738-4fe5-bc14-84324e541378",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8e8f8b3c-0e78-4c0d-a6ee-6d28fd6d374b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4fa3eb9d-d1d2-4204-bbcf-86068727016a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dd85d126-f6cc-4073-be96-c4080ef22ca8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b654d7f1-3983-4d11-b726-9c0e75b06026",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "75f854af-b656-456b-bf06-3a3153408738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06911a5-7bd6-4b6a-9a94-db571c561577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1bba0bf6-63e1-4884-a35f-974aec3a2fa8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80955e19-0b23-447e-80fa-003a124225ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7faf12c9-d95d-4190-96fd-c5fd4a4ac524"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "06965c5b-a592-46f3-bea2-1bfd132ea8d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a785ee01-83cc-4b86-af2c-7b520ef870aa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b77ee8d-0273-4409-bfe5-38b426f09a9b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "325261f9-26fa-4f84-a756-a9e318fe368e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a366469d-ba0d-4386-94fe-34d0a5a8312a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c34af7fa-055b-4a5b-bb87-0f54619d979c"
            }
          }
        ]
      },
      {
        "id": "3bddf522-a542-44c9-b26f-010570c8076b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2355af32-41ed-4a52-bc9f-bafbd4f0b1ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8dae17c1-543d-4f3c-bbe1-42f26528217b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a651207-f555-44e3-b818-acf192052b06",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bde8cee-3011-4304-8cca-ff11e8533872",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c85899a9-a170-429f-a92f-32b5e33671e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcffaddb-8c0e-406e-884b-6c71ce090ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18cfb05f-1511-42e3-a9a1-1a927f601af9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "667e2cf0-934f-47e3-81e8-b432c791fb5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ee63eb4-32ff-4919-be1f-df5560f5f474"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc6e2e51-b016-48c4-a2df-7ea982fa01d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d456a1e-471c-40dd-a5ee-73671b2a845d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b93c6033-1ce2-4ab9-9bcf-1bc1268edf71",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "df8bf970-78e4-4316-8413-7aaa4b246996"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5465dc38-da39-4617-9957-8a28a0ff6eee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13cf36dd-516a-46ae-9f6c-ba974ad0f277"
            }
          }
        ]
      },
      {
        "id": "c8e6847c-b584-407c-8b0b-807c283d7d48",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e629c89e-b26c-43dd-b61f-8c3237a35440",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27c68b0c-e171-43b3-88d1-59e2f0b5b183",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e96705e9-dd39-4619-9d6b-8e150c7f6aba",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5415a3a-2709-4b1b-9390-f02e6ba3e4f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "acb26421-25cc-4645-84a1-76c95564dc21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b547aeca-f0d8-44e5-8635-40f637c45021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa719d76-b14a-4fdb-a4df-09151f265074"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1639afc3-addc-40c3-aa36-ba5a4c35bd0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0ba2f22-ad22-4626-a787-e14e05c91b1e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b812e32d-30cc-40fe-a6d4-d60b760fa0b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c71033b4-cdee-4a22-a84c-3f9d9f96191a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "516c4c0d-0326-4e73-a5bc-fd91df00bf76",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5da00d4e-1294-469d-a66b-c830ef33eda4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96022c4e-b0da-41ea-8bf7-2b53e05536f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d7b599c-14d3-4859-b667-116754285ac1"
            }
          }
        ]
      },
      {
        "id": "a70177fe-81b2-4d16-bd9d-32fdefe6c756",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "473bc01c-93ca-44a9-8924-4f3fe48ec918",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c9248ca-7090-434c-a74d-b264237f0b0e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f3a5f0a1-6b51-4588-9af5-75ccbb742c8c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c024d542-f5bd-470a-be72-d465c8a81de5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "985f2902-13e2-4f64-8c08-775cf383e61c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 67.54225352112675,
      "responseMin": 13,
      "responseMax": 262,
      "responseSd": 18.850457923767472,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1688345429781,
      "completed": 1688345464334
    },
    "executions": [
      {
        "id": "615a9db8-693b-4eef-b916-a2a4f8b4f096",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7e156f61-a92a-499a-8f79-54fd3069af7c",
          "httpRequestId": "94232b9e-259b-4223-be77-9ea9b9fe693d"
        },
        "item": {
          "id": "615a9db8-693b-4eef-b916-a2a4f8b4f096",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2b4442c2-cb03-499d-8aaa-31bde918aea4",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 0
        }
      },
      {
        "id": "add70a49-0136-4cfe-be7f-b10d0a772eba",
        "cursor": {
          "ref": "d7fb8cc2-2d72-4027-9859-cf0f1d879159",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2210921f-8d02-4c3c-acb6-09d103458a77"
        },
        "item": {
          "id": "add70a49-0136-4cfe-be7f-b10d0a772eba",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0bef3b48-6cc6-49d5-ab68-4dfca783a69e",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "b3df2864-c7c2-4ebe-b799-4224b7be2728",
        "cursor": {
          "ref": "0d80e5b1-a410-4638-8fbc-b0b87f40f453",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "77f14055-e5c2-4a11-b889-b24884c112e4"
        },
        "item": {
          "id": "b3df2864-c7c2-4ebe-b799-4224b7be2728",
          "name": "did_json"
        },
        "response": {
          "id": "5d889b5f-218b-4142-a13a-a6f1fbf3a5f8",
          "status": "OK",
          "code": 200,
          "responseTime": 208,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faeebde8-4656-4002-a473-606a5ea0695c",
        "cursor": {
          "ref": "b57e0cdd-7f5a-4b5f-858d-f7857aa7b973",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b22c2691-d273-4bf0-9eba-6a76c0a5664c"
        },
        "item": {
          "id": "faeebde8-4656-4002-a473-606a5ea0695c",
          "name": "did:invalid"
        },
        "response": {
          "id": "c1607f04-50d6-4106-ae1b-32b3a2d414da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faeebde8-4656-4002-a473-606a5ea0695c",
        "cursor": {
          "ref": "b57e0cdd-7f5a-4b5f-858d-f7857aa7b973",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b22c2691-d273-4bf0-9eba-6a76c0a5664c"
        },
        "item": {
          "id": "faeebde8-4656-4002-a473-606a5ea0695c",
          "name": "did:invalid"
        },
        "response": {
          "id": "c1607f04-50d6-4106-ae1b-32b3a2d414da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6fed75-d93f-4d4e-aac3-a65bbed36562",
        "cursor": {
          "ref": "44c48756-b368-42f6-9aac-0e3a98214439",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6022742d-c269-47ce-8e88-3fdc97685e7d"
        },
        "item": {
          "id": "6c6fed75-d93f-4d4e-aac3-a65bbed36562",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1bec3395-2613-4e8e-a894-83611c870914",
          "status": "Not Found",
          "code": 404,
          "responseTime": 109,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9904d9-17bc-42b5-82bc-3f7d72b42f77",
        "cursor": {
          "ref": "3cdf2c94-66a3-4636-8724-35034992c31f",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "63452cca-acc6-4acd-8ccc-0137b5419db9"
        },
        "item": {
          "id": "ff9904d9-17bc-42b5-82bc-3f7d72b42f77",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "343229b5-e469-45f9-8e53-bfcd426314cd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387cfd7b-930c-41a0-8e6d-e886ab877c38",
        "cursor": {
          "ref": "9f2dc845-1586-4a0f-8c44-ae338cf36b77",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "dec528fd-f1b1-495f-a1c1-9929cc01c33e"
        },
        "item": {
          "id": "387cfd7b-930c-41a0-8e6d-e886ab877c38",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "10820015-8e73-40f5-a0c7-4ce08cbb2c85",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2d6fc9-0743-47e9-b6fd-ec75c9084f21",
        "cursor": {
          "ref": "b986aff1-6e85-4c06-8268-c94795f2adcc",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c5e49d63-5a79-4110-a4ca-aa892ed9f81e"
        },
        "item": {
          "id": "2d2d6fc9-0743-47e9-b6fd-ec75c9084f21",
          "name": "identifiers"
        },
        "response": {
          "id": "3fa7d569-7298-4fe7-b69f-7b3509d6183c",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c67b92-b013-47db-a4f7-be11131399c6",
        "cursor": {
          "ref": "34fda2f2-07b0-45ea-b819-b9dad9326e7d",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "952756ef-d702-4593-b0ef-1885d1496b2e"
        },
        "item": {
          "id": "28c67b92-b013-47db-a4f7-be11131399c6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "46b2b8a4-7e31-4d4c-b52c-2f5599560f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f94df6-2338-479b-af5f-0c6bb9de75ec",
        "cursor": {
          "ref": "31ced9af-bd05-4be5-b64d-9926f18370ec",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5d9662f5-0912-489f-b2d9-90b48aabda6e"
        },
        "item": {
          "id": "f9f94df6-2338-479b-af5f-0c6bb9de75ec",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1ae6e130-6da4-485f-9877-d0d3d513f6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccae8733-6e64-4ad6-bfa9-6392d20371d8",
        "cursor": {
          "ref": "3eb57aa0-22e1-439f-96ac-ad5fb83d73f1",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b509e239-9464-4cca-90d2-6a2a7ca43f72"
        },
        "item": {
          "id": "ccae8733-6e64-4ad6-bfa9-6392d20371d8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "55873f67-3932-49fc-9596-c5e40cafba5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d312016-b875-4de1-aab5-b06a4392a520",
        "cursor": {
          "ref": "467e71c6-59a0-4081-a0a0-f1bf213c3595",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "03830534-444b-4cf9-8900-8c4810e2ac4f"
        },
        "item": {
          "id": "1d312016-b875-4de1-aab5-b06a4392a520",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c54afe03-8e23-41c5-9533-693ed0956d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805d1c64-9b4e-48a4-8688-15b1f5f1f598",
        "cursor": {
          "ref": "e2ba6bd7-d063-44f3-bc68-fa0664ee2f53",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2af925e3-e4ba-4696-9a67-5151a755504f"
        },
        "item": {
          "id": "805d1c64-9b4e-48a4-8688-15b1f5f1f598",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "31225a39-0ab2-4eca-809e-a1c166659b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b31956-189e-4515-b173-7855c7c0d91b",
        "cursor": {
          "ref": "fbe196a2-9cd4-47e9-b732-9fd9cca8ca30",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d78b74ff-7179-4885-96dc-43ccfd910afd"
        },
        "item": {
          "id": "73b31956-189e-4515-b173-7855c7c0d91b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bf6fa797-c7cc-45bd-8c8c-49efd24fb688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef40d90-59be-4922-9413-f2e08fb6e71a",
        "cursor": {
          "ref": "d8f80d5a-ee50-4b3d-93e3-0cfa50482432",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9627762c-fc70-494d-b5f6-4ff0b6d1b1a3"
        },
        "item": {
          "id": "5ef40d90-59be-4922-9413-f2e08fb6e71a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7984ce31-89af-441e-bfe7-5285ca5a96db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79dd5934-a1ad-4c68-bcc5-7b20a06f8308",
        "cursor": {
          "ref": "be16b066-75d6-4486-9555-4f6b37393a69",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8da54003-7368-40b1-bbd0-88f655c1d668"
        },
        "item": {
          "id": "79dd5934-a1ad-4c68-bcc5-7b20a06f8308",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "df33662e-515c-4d2b-a4a7-5c0262002321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae75118-6e94-4e40-9ce2-32202f9eff70",
        "cursor": {
          "ref": "e454fd69-bdb1-418b-815c-10336cf6161f",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fcbbfb64-7239-46a1-af71-fa269af71b6e"
        },
        "item": {
          "id": "3ae75118-6e94-4e40-9ce2-32202f9eff70",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "45707987-6ac5-442a-ace2-c942494b778e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd9d552-369c-4fc0-83e5-eb5888023e57",
        "cursor": {
          "ref": "bff4689d-17f5-43d1-af86-a2fff85e72dc",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d05633c0-814a-49b6-bbc2-4b78e2bf41c2"
        },
        "item": {
          "id": "7fd9d552-369c-4fc0-83e5-eb5888023e57",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c2e03d90-93ce-46d5-8781-f194efefd58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc53558e-ff33-4183-b5c7-25dbeda2f0da",
        "cursor": {
          "ref": "90d343b8-c838-49fb-a5ab-350098eea136",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "22c43d19-caa9-49a2-9086-52f749b3676d"
        },
        "item": {
          "id": "bc53558e-ff33-4183-b5c7-25dbeda2f0da",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c539ff42-bf98-4d26-8c5a-5342bb0924c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caed93db-af9c-4bf6-b65a-a9d69b0a1851",
        "cursor": {
          "ref": "4625639a-b0f6-4180-a7f6-293771e42e41",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "dde8edf5-78c2-4fd7-8641-c18e67c4f620"
        },
        "item": {
          "id": "caed93db-af9c-4bf6-b65a-a9d69b0a1851",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "980f5d32-1d85-4548-9d26-6b876738ee0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db1e366-bc3b-4ffa-818c-6555b73e3bef",
        "cursor": {
          "ref": "cdaed346-0a61-4190-b438-1405a480aa92",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2b5507fa-b59a-4bba-9a3c-ef825d3569c1"
        },
        "item": {
          "id": "1db1e366-bc3b-4ffa-818c-6555b73e3bef",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3f156d9a-b5bd-4ce9-a351-85bb2a531c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca24dfe5-138f-4063-9d80-2abd345f3433",
        "cursor": {
          "ref": "8f696248-2005-4105-a5d2-ec9c3deff7ef",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "91593f98-ec97-430c-b67e-dec3539103f5"
        },
        "item": {
          "id": "ca24dfe5-138f-4063-9d80-2abd345f3433",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ead779f2-4a86-49d6-8ca4-9088c21ffc92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0ee9fd-7bf2-4421-8cd0-a9ee73ec23ec",
        "cursor": {
          "ref": "56d6def8-0873-4955-8334-02c1fbb92761",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5c8d3b24-dc1b-4cc8-9034-ebf35f5d5f0b"
        },
        "item": {
          "id": "cf0ee9fd-7bf2-4421-8cd0-a9ee73ec23ec",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "95525f53-6d89-4443-b17d-ddd9c8c76fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba1fc2d-d30b-4345-8644-91de024d7bf0",
        "cursor": {
          "ref": "00428b4e-9067-40a2-a2c7-c7cae1f1152b",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "fb1a9f97-0e7f-4bf0-8f07-5713dbf5b539"
        },
        "item": {
          "id": "3ba1fc2d-d30b-4345-8644-91de024d7bf0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "afbddbb7-315b-436d-b607-3d9ee091cdc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8af4042-af3c-49ba-a1ef-b98e935c8049",
        "cursor": {
          "ref": "b3b95195-e3d7-498c-be0e-381ddf8d18e3",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e29fd227-98a7-4d62-8a0a-21020756af46"
        },
        "item": {
          "id": "a8af4042-af3c-49ba-a1ef-b98e935c8049",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "66f0471e-3b42-48c3-8548-1f20857ceda8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e36d355-aaea-4f29-8e82-4ac94d8b110e",
        "cursor": {
          "ref": "f07b048b-939c-4bc0-aabf-1e55bb77f60f",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "607fa7b2-8752-4d1f-9093-2630b26fee2d"
        },
        "item": {
          "id": "7e36d355-aaea-4f29-8e82-4ac94d8b110e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8c03ab99-a7e9-41b7-9ba1-9e540c8f7230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c09a634-3b2e-4d18-afa8-d681ceed5ab9",
        "cursor": {
          "ref": "ed66af51-4f5b-4e49-8529-6c61e72cb039",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6ab32949-ff9c-4ab0-8071-728ab23b5edb"
        },
        "item": {
          "id": "4c09a634-3b2e-4d18-afa8-d681ceed5ab9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d3af21d2-9fd1-433a-b964-51323a93c2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd6106c-28e4-4837-8a49-c9debce64ffb",
        "cursor": {
          "ref": "7e191f3e-9ce5-43a1-849e-9b7c9cece1ba",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9c8b8aa4-1f2d-4326-936b-a0e34fd61f34"
        },
        "item": {
          "id": "abd6106c-28e4-4837-8a49-c9debce64ffb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e622ebb4-911a-48a4-a362-3f493148a168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb9f724-5ca1-49fc-bf9c-4a76aa50c85c",
        "cursor": {
          "ref": "8e8c24aa-dbd5-41a5-84b7-fd6a77aee7ac",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "908a6b4b-d6ed-4f2a-915e-5a946ca18c40"
        },
        "item": {
          "id": "ddb9f724-5ca1-49fc-bf9c-4a76aa50c85c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ef90ba98-1dab-4f45-bcef-c80155855864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce40cf5-fa4c-4876-98c1-0106cd340ade",
        "cursor": {
          "ref": "f773f4df-553d-4f58-80ab-1d6208c5abf2",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2a62a3a4-e5b0-4e7b-b28d-f6ea74be2e54"
        },
        "item": {
          "id": "9ce40cf5-fa4c-4876-98c1-0106cd340ade",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8e9b4c2c-8553-4e45-a544-940ac308e75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178de880-4cf1-45c1-a56e-bb44de50d2b6",
        "cursor": {
          "ref": "e16ced2c-50bf-474d-b3c5-91097fa06571",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9c407046-f54f-424b-a8b8-e975bb0081b4"
        },
        "item": {
          "id": "178de880-4cf1-45c1-a56e-bb44de50d2b6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0d033704-95ec-4276-b79f-06cd3ac1baf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce0d86d-d842-4e35-a738-c6c67cf25622",
        "cursor": {
          "ref": "7b313b46-b1ef-41b3-920f-bade383bf4ca",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bec97b37-bb97-4b67-ab03-8a6c7a28dd41"
        },
        "item": {
          "id": "6ce0d86d-d842-4e35-a738-c6c67cf25622",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "18379d7a-9b6c-463d-a9db-9f4c6b88c2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1245245-d049-47dc-a9bb-98f810793677",
        "cursor": {
          "ref": "5c90e075-c2d4-4ee5-812b-472dcb5d47d2",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bb7a5109-ba79-4188-ae6c-91dc6b78d64a"
        },
        "item": {
          "id": "b1245245-d049-47dc-a9bb-98f810793677",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "935d6ded-3b3f-4e1e-9773-3215087c30b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c045fa71-580f-4745-8471-040ade020c5b",
        "cursor": {
          "ref": "7c7bbb9f-e27a-4d3a-880b-4690d0d43396",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "646bae4f-5d2b-4260-8fb8-05bb420c467a"
        },
        "item": {
          "id": "c045fa71-580f-4745-8471-040ade020c5b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "12b435b6-6886-484b-b714-00c50644b633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c40be1-754c-4474-92d3-1235dddd84a7",
        "cursor": {
          "ref": "34817371-02d5-4bce-96a4-43c349d09e70",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7c460a19-01a3-4ca2-a0d9-993d0deca3f6"
        },
        "item": {
          "id": "84c40be1-754c-4474-92d3-1235dddd84a7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8d63cd16-0973-4b2b-b749-a74168d6b521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d72263-af96-489a-b8a6-d180f1a1b454",
        "cursor": {
          "ref": "ddb41134-b8b9-4326-93a4-1c8a9e1e7ecb",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3da20406-0b4a-46b7-8a2f-2b5166730aff"
        },
        "item": {
          "id": "e4d72263-af96-489a-b8a6-d180f1a1b454",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ee3cf514-51f5-4cfd-8801-c51600c3fe0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895edf01-618b-4cab-acdb-cea6e7e75c70",
        "cursor": {
          "ref": "100090bf-3d29-417d-af33-f236f988d065",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "274c5326-4604-4785-a7f9-a328856c044d"
        },
        "item": {
          "id": "895edf01-618b-4cab-acdb-cea6e7e75c70",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8d34a357-691d-4c96-b234-84978e7ee88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeaba01d-88ca-4e20-99fa-cc49da6ddba2",
        "cursor": {
          "ref": "dceea563-f3b7-4ee3-abf5-2b86ed9d118b",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ca0a98c3-47b3-4c9a-ba23-9c60e811130a"
        },
        "item": {
          "id": "eeaba01d-88ca-4e20-99fa-cc49da6ddba2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8354b010-b770-4c9b-bf33-3c7394a383c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1eab02b-f131-4155-b518-ef90fd98327e",
        "cursor": {
          "ref": "8ff1118d-2541-4391-b593-9ef737ae4ad9",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6533aa36-39c1-4827-a1ea-6c9bc4623541"
        },
        "item": {
          "id": "e1eab02b-f131-4155-b518-ef90fd98327e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c5934b58-8de9-4b88-ac1c-9463ab1b50bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41917caf-17fb-4b67-83da-1ef9813b3eeb",
        "cursor": {
          "ref": "135affd2-a212-4b83-8edd-5c4692df7250",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "54eeff60-74bc-434e-a435-5be424a82a8c"
        },
        "item": {
          "id": "41917caf-17fb-4b67-83da-1ef9813b3eeb",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "09c9c71a-a6e1-4a24-af31-4c876da4a9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec9fedb-9122-438b-aad0-fabee1820a46",
        "cursor": {
          "ref": "3d90daf3-4638-4780-aabc-956f63206451",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "50326001-ad8e-46cd-8b52-953836bfcd94"
        },
        "item": {
          "id": "3ec9fedb-9122-438b-aad0-fabee1820a46",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fd3af1e5-ac6e-43a8-8e90-96d7eabca263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ce2c84-38bf-4f07-b606-36a8ff807f1c",
        "cursor": {
          "ref": "aa395b55-a3f5-4fcd-920c-42298926c59d",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "90f107ab-eeaf-4092-a11b-9c739cf66343"
        },
        "item": {
          "id": "26ce2c84-38bf-4f07-b606-36a8ff807f1c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6724a9ad-e964-473d-98a8-9a7ffdef0871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c20ee96-f3a9-4819-8a6d-95d4354c05b3",
        "cursor": {
          "ref": "9f57c51b-5da2-4573-a2fc-d3a3c7fd3c55",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "59b42cf7-9c9d-4fba-95f9-20775a9d7d02"
        },
        "item": {
          "id": "1c20ee96-f3a9-4819-8a6d-95d4354c05b3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fd412d2e-ff25-408a-baea-2d35a78c4496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f88c60-42ea-40df-833d-c2cf90d4737e",
        "cursor": {
          "ref": "d50cbda8-8bc9-4a68-be96-9160e0e4ae20",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a216cbe7-6a39-412d-987c-7dd0798f35bf"
        },
        "item": {
          "id": "b7f88c60-42ea-40df-833d-c2cf90d4737e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "32dd43a4-1895-4409-980d-33b57a5b8e5c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a82d00-eba4-419f-aa11-2317c3ae1511",
        "cursor": {
          "ref": "c2ed9d58-d904-4f37-957d-766c9d17a190",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2d37501c-d5a0-4a7f-9a26-cce39b176c10"
        },
        "item": {
          "id": "f0a82d00-eba4-419f-aa11-2317c3ae1511",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f1cf6c04-659c-40d3-927d-9a90eebfb4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099c8083-756c-485b-bf4f-67982b2eccb8",
        "cursor": {
          "ref": "c39cc5f5-6a44-4d01-9589-c02ac4c23ac0",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "00c99322-9055-4d4c-b295-770eb959b25e"
        },
        "item": {
          "id": "099c8083-756c-485b-bf4f-67982b2eccb8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "755ccd2b-8f73-4f6d-8ad1-5a92c3592cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9c3970-bed5-43be-aeb0-4ef95f3f61ef",
        "cursor": {
          "ref": "ffebe4d8-c87b-441f-973f-51c49fd5f81e",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d2b6a21e-d955-4ab3-ab55-e24df9aea6dd"
        },
        "item": {
          "id": "8e9c3970-bed5-43be-aeb0-4ef95f3f61ef",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ea4acb4b-56cc-40cc-a3a9-067606230794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f37303f-ee70-46f6-92e3-c2de5afc9801",
        "cursor": {
          "ref": "1fa2ddbd-c94f-43ae-8e85-09f04d8c5a34",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ed61c2dd-2517-4ad0-9025-283aefe943dc"
        },
        "item": {
          "id": "8f37303f-ee70-46f6-92e3-c2de5afc9801",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "89074295-6de3-41d4-bbb5-a1a9fe7803a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b2904a-cc50-4daf-9810-5638c43d6173",
        "cursor": {
          "ref": "f6ba344d-59e2-4f43-9812-bea5e6b1ddf4",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "15178afa-a32b-4143-9031-7a05a6ff4296"
        },
        "item": {
          "id": "35b2904a-cc50-4daf-9810-5638c43d6173",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7cceab31-3559-4076-89f6-5b6b290d159e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f248b74-64fe-49da-b1df-07bb085825a3",
        "cursor": {
          "ref": "f707417e-1588-4240-9640-441caac2ef98",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9cdc802e-e4cd-4b16-9952-839670dbbe62"
        },
        "item": {
          "id": "4f248b74-64fe-49da-b1df-07bb085825a3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "079af4b5-1c38-476a-9f6a-7b202d25d86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427d0db9-d3f1-417e-9472-60c922507e78",
        "cursor": {
          "ref": "83fe4720-01e3-43b3-9330-e1b9e81f85df",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0b75eb12-cee1-4d9b-a415-75e183e6e22f"
        },
        "item": {
          "id": "427d0db9-d3f1-417e-9472-60c922507e78",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b92b0c04-2aa2-4c47-972e-b62b00ed9d4b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 72,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1e6acb-86ba-4cbf-baeb-bde46e2897ac",
        "cursor": {
          "ref": "7e884391-ec9d-4f03-a9e9-9d8ad281481b",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "08eb4308-8c7f-4abf-88b1-7073b9f395bc"
        },
        "item": {
          "id": "2f1e6acb-86ba-4cbf-baeb-bde46e2897ac",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "092fe545-f3b4-47db-a785-34527d3343fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28369d61-3a6a-4465-88d5-9512f13b1bb8",
        "cursor": {
          "ref": "18707f46-f1f5-44bf-86b0-82ddb3a015bb",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "69bc87cc-1e28-4a69-a551-4ec5543bc7e2"
        },
        "item": {
          "id": "28369d61-3a6a-4465-88d5-9512f13b1bb8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "42aaac16-6e75-4ffd-ae6d-b0f6b98809a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8c8542-1721-4f7a-bf81-ef42c0ad9eed",
        "cursor": {
          "ref": "0067c9cd-c617-4836-9f3b-84a8ba41ed23",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4b2a08cd-587f-4efb-bfb5-d9eec8862d4e"
        },
        "item": {
          "id": "af8c8542-1721-4f7a-bf81-ef42c0ad9eed",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5b878f40-2b59-42db-ad5c-5cafee6ef9b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcb6cbd-4113-4b5d-8f5c-bdb40f1c4fb0",
        "cursor": {
          "ref": "fca907be-d7ca-4875-8077-d10d384158c9",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a5af4149-4bf5-4c14-989b-04575a4f44bf"
        },
        "item": {
          "id": "5fcb6cbd-4113-4b5d-8f5c-bdb40f1c4fb0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "883ccc7c-a77f-4064-9a86-ac81ccd07fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf2c485-12fd-4416-a9d1-425af623d323",
        "cursor": {
          "ref": "91ed18f6-5f63-4eaf-bf69-f5401c2d6989",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fc8ec019-3b34-409b-ba81-68891feaf740"
        },
        "item": {
          "id": "fdf2c485-12fd-4416-a9d1-425af623d323",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4cdc24e5-6499-4f30-8178-01f8bc133f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78273e3-16ed-412d-8458-c3736c4bbd40",
        "cursor": {
          "ref": "2ffef312-1ce7-4223-a11c-f4322be7e6bd",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "dd0000f4-ebd4-408c-8351-4314c4376f1f"
        },
        "item": {
          "id": "e78273e3-16ed-412d-8458-c3736c4bbd40",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "339962a8-d11f-4af8-afbc-e4239d16f710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e40502-7f0b-49ad-9f3c-4787f64d463d",
        "cursor": {
          "ref": "8363b078-65a6-435b-a052-02ad0294e18e",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8df4041e-30f4-4326-ab53-0e25f80daf81"
        },
        "item": {
          "id": "54e40502-7f0b-49ad-9f3c-4787f64d463d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "debd8cd4-19b8-45a4-89dd-aa276b3b7144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd909c5-6425-42b2-92b9-d28c61ce8712",
        "cursor": {
          "ref": "aaea12f4-8fda-4eeb-9b3d-beae8ecc8d2b",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "057bbdc8-0787-4f1f-976f-34df975d6ea4"
        },
        "item": {
          "id": "1cd909c5-6425-42b2-92b9-d28c61ce8712",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f8555d3f-0052-4327-afc0-fc49977391cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c195b44a-2c70-4cba-95dc-9ad8b47997b5",
        "cursor": {
          "ref": "d3f0f125-6080-4fc9-b5e9-13804b416b6b",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1e2c27d4-556c-4b0e-aa6c-1de6b86a77a7"
        },
        "item": {
          "id": "c195b44a-2c70-4cba-95dc-9ad8b47997b5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b67b65a0-38f6-4546-ba5f-dedaaf0619c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f2a2be-c83c-4f55-a7f7-78094430a874",
        "cursor": {
          "ref": "43a51215-ad15-431f-94cb-34f6b0498306",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e45286df-1c65-43fd-b4dd-45bd6ad19897"
        },
        "item": {
          "id": "74f2a2be-c83c-4f55-a7f7-78094430a874",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f890f4f8-0fe4-4aec-96b3-ba2b3dc5c27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff21279-b27a-458a-b428-59612896e159",
        "cursor": {
          "ref": "4e7346be-79f9-4e2c-99a1-5630d2314a91",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "01902355-5b22-4573-a3a9-a5342a8c4277"
        },
        "item": {
          "id": "fff21279-b27a-458a-b428-59612896e159",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2e8de522-ebac-4ffc-9b41-76efe2716ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efe30cd-6a2e-43fc-95c6-37d2f7d1ccae",
        "cursor": {
          "ref": "275cf600-3bc4-46c0-8542-7c414c590a5c",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2c96e487-2296-429c-848f-c00966eac0b2"
        },
        "item": {
          "id": "2efe30cd-6a2e-43fc-95c6-37d2f7d1ccae",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3cbfd791-ca4d-4a0f-bdb1-52594b88b55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2777d309-1ed5-4061-9403-0e52e5278bda",
        "cursor": {
          "ref": "01c1d67b-8884-4a8a-858a-7491b1c4c43d",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b0fcdde7-53cd-4f05-b836-cebbed8965d9"
        },
        "item": {
          "id": "2777d309-1ed5-4061-9403-0e52e5278bda",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9a5d30aa-000a-4a91-bb38-fd233582755a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb16883-baea-4c63-aa7d-2050400de561",
        "cursor": {
          "ref": "c54964ae-ef14-45a8-b90f-579a47d5666a",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bb24d616-b992-4516-b96a-cc048b2f6148"
        },
        "item": {
          "id": "3fb16883-baea-4c63-aa7d-2050400de561",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a109daf9-4b8a-406d-8410-4550fbea89ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b619a39-29b5-439d-a8e8-891b81b53871",
        "cursor": {
          "ref": "9271709a-7748-42c1-b69c-e9713e5d8c53",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "23c4a3e2-6a1e-4e8a-89fc-8b41f69ff821"
        },
        "item": {
          "id": "5b619a39-29b5-439d-a8e8-891b81b53871",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3a0d9fe4-e92f-4125-91f1-17c2b2f805d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b96086-8170-4b97-bfea-0cbd75915fcb",
        "cursor": {
          "ref": "d6a78467-02a9-4b14-8e74-4da48d7d4302",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4a87f385-62e4-4ac8-b82f-5d76618843bb"
        },
        "item": {
          "id": "e5b96086-8170-4b97-bfea-0cbd75915fcb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9ae5be01-4d72-483b-a21e-292b7decfdf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1585222-aef2-494f-a9da-a6354c2e6e24",
        "cursor": {
          "ref": "061a8e88-2597-4576-af13-6c462c2e6301",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6f5882f6-2361-4ea2-a1bd-6a0169ae2dd7"
        },
        "item": {
          "id": "d1585222-aef2-494f-a9da-a6354c2e6e24",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "75520985-5bcf-4954-9729-41e1a56a6ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eed14dc-6c78-4da7-a1bf-93301c9475a2",
        "cursor": {
          "ref": "b523ec67-20be-43ca-99d2-b712fe20c500",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ee62af76-fe5e-4a5d-aef3-853567a6d1c5"
        },
        "item": {
          "id": "5eed14dc-6c78-4da7-a1bf-93301c9475a2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b95fabcf-da59-4d98-8e7e-648475f37384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb579509-5ebd-4370-aa53-6de3a093d638",
        "cursor": {
          "ref": "bde29f20-9d0d-4d77-a577-e6b7479090fd",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "27b147a6-bfb2-4890-b8b7-e0dbbac3fa5c"
        },
        "item": {
          "id": "eb579509-5ebd-4370-aa53-6de3a093d638",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b198852b-813c-4a33-92f4-deea94efcdfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0e62df-f649-4c78-996c-da7b219cded6",
        "cursor": {
          "ref": "36852543-4ee4-4012-8f7e-4e99513f555f",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e0fdfb02-73cc-4718-99ee-9f54163c7b61"
        },
        "item": {
          "id": "3b0e62df-f649-4c78-996c-da7b219cded6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "841a85e5-dc8f-449c-bdcc-833b5d7baf11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce05024-e7b6-435a-9741-49a30a1ae73d",
        "cursor": {
          "ref": "b81f962d-9565-4aa0-bce2-704e102a2bee",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "dfee98d3-b8e0-4b2a-ae48-8dd7032f89eb"
        },
        "item": {
          "id": "6ce05024-e7b6-435a-9741-49a30a1ae73d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fad1e78e-acd8-4afe-852f-d836038d56ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fea614-3abb-49f6-8211-b677846ce6a1",
        "cursor": {
          "ref": "14727d9b-c022-4354-86d4-260613cc92b5",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "75034ebe-430c-4257-8f14-ef69a80284ad"
        },
        "item": {
          "id": "59fea614-3abb-49f6-8211-b677846ce6a1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6ee0ced3-d4df-4e59-8a98-816c485f2bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15573061-30cb-4538-bdd1-2ccd69441f5c",
        "cursor": {
          "ref": "7ed8b637-ce3d-4031-abfd-397518fe058c",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4006b564-57bf-4c89-a6aa-657d4a22c51c"
        },
        "item": {
          "id": "15573061-30cb-4538-bdd1-2ccd69441f5c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "76158063-638d-45fe-b9e8-12e2a863e32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65821650-3afa-45c8-a5cf-ba4e57343be3",
        "cursor": {
          "ref": "27949574-4673-4ff1-a9ae-3c8b65dbd0ac",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9b606a72-c632-437d-84ed-353700785285"
        },
        "item": {
          "id": "65821650-3afa-45c8-a5cf-ba4e57343be3",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8c36db64-40a7-42a9-842c-3291964b3b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7359ff51-0083-46a3-bb65-c4c0c547a1cf",
        "cursor": {
          "ref": "cdc38ed3-61db-4e83-b6c3-1c278caef2d7",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "064775d7-7d54-473b-ba0e-8634377f486c"
        },
        "item": {
          "id": "7359ff51-0083-46a3-bb65-c4c0c547a1cf",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bf5b4945-3bc8-4dc9-9f3e-42e6e9ed775e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d1d483-6848-4ed5-873b-4c46a662be42",
        "cursor": {
          "ref": "92ce759b-95c1-4666-8883-f7483efd7551",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0134f3df-9a2b-4516-a927-5deb8bed06f2"
        },
        "item": {
          "id": "d9d1d483-6848-4ed5-873b-4c46a662be42",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "fcac7b81-aae4-4110-887c-4b96cfd282b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cdb8f91-63f7-45ac-a1ab-72d0d8dfc72c",
        "cursor": {
          "ref": "b571b2c2-45c1-4cf1-b33d-e701758b2db1",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0ac66c9b-1c8c-47bd-a2fc-ddf107c6d953"
        },
        "item": {
          "id": "9cdb8f91-63f7-45ac-a1ab-72d0d8dfc72c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8f47ef60-465e-4523-a2a7-107b46d37b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed72a02-3e0a-4721-901a-9ed690d0bd02",
        "cursor": {
          "ref": "fd4b5960-633a-4d5a-9155-b41ef9dd9a6c",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "af99d871-bb35-4b2e-8fa8-50947d2c4189"
        },
        "item": {
          "id": "1ed72a02-3e0a-4721-901a-9ed690d0bd02",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4c190a92-82ba-4215-acae-f795b23dd40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40cc834-ed99-42f8-86b0-d4c813d93583",
        "cursor": {
          "ref": "9e0a92e9-012a-4675-bb27-5f1cac086d3a",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e05b78d1-d4eb-430e-b044-420bce4c7d18"
        },
        "item": {
          "id": "f40cc834-ed99-42f8-86b0-d4c813d93583",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "97b849d1-b819-4cb6-8c3c-cdf64969043b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c808fc-a84c-4aae-906d-b98d16f7e13b",
        "cursor": {
          "ref": "2a3ee382-83d8-4886-8146-193e1481cef0",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c135cafe-d913-45f1-831c-b8dfc6ee8780"
        },
        "item": {
          "id": "06c808fc-a84c-4aae-906d-b98d16f7e13b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "76a61038-06e9-41d3-9b9c-d465f99a0e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b33cdf-48c6-4c78-becc-f04f92c25cfd",
        "cursor": {
          "ref": "33d8e7e3-252c-4715-856c-13f7c10e46fa",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4d2b957b-0882-45b2-9b58-98191ab7cc18"
        },
        "item": {
          "id": "42b33cdf-48c6-4c78-becc-f04f92c25cfd",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8ff1d419-8543-46e4-a97b-15fcb867462f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa97a86-f112-4d99-8799-829cb946bbc2",
        "cursor": {
          "ref": "a17dd406-6c3e-4d71-ac03-25f4065bf988",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d77b7448-47b2-4f78-ae45-f8e4a1668b26"
        },
        "item": {
          "id": "5aa97a86-f112-4d99-8799-829cb946bbc2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "75168d04-9bc0-41fc-a589-62561a0c46e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcff49f-562f-4039-b794-cde00b23c9d4",
        "cursor": {
          "ref": "f0c02794-bd67-49e5-a135-efba7e96eaec",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "93eee146-7dd6-49f4-9efd-14ecac294fb1"
        },
        "item": {
          "id": "ffcff49f-562f-4039-b794-cde00b23c9d4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "cc72150b-5360-4d3a-8717-95a1c2df592f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc278fa2-aff1-4d3b-ab4b-3df74194011e",
        "cursor": {
          "ref": "dbbe1958-224c-40ef-9bba-a49fc8253dda",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e793c683-4203-4b90-b891-5aa27e245807"
        },
        "item": {
          "id": "bc278fa2-aff1-4d3b-ab4b-3df74194011e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "aef740c3-ff83-40a0-9db3-8abc5f71c4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cff1f1d-0d62-44b3-b316-da1a135426df",
        "cursor": {
          "ref": "9bc2724a-855e-4806-b402-703359cbdc11",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "780fae5f-b27c-4200-a483-b2fb83460694"
        },
        "item": {
          "id": "6cff1f1d-0d62-44b3-b316-da1a135426df",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1ae1d085-381f-47f3-aa2c-acde68bd22b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0347db-a1de-4562-9c42-604f6d49adfb",
        "cursor": {
          "ref": "4c491fc9-ce88-4d11-98e2-b0a35917c1d5",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c58cb3d7-b454-41b5-8b5b-cab4a702272f"
        },
        "item": {
          "id": "2b0347db-a1de-4562-9c42-604f6d49adfb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fd7a23a8-203f-4d38-a9bb-1f2d7fa536d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b9baf1-9da3-4235-b66b-3055fa479537",
        "cursor": {
          "ref": "7bd726db-9ae7-45a8-bdbf-3cad7af2f88b",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "98193599-1097-431d-891a-2b3aa2cc281a"
        },
        "item": {
          "id": "01b9baf1-9da3-4235-b66b-3055fa479537",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b1eb5741-4790-4e6c-b237-e1e7e6327ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1952ef9-6243-4857-a18c-221c25defc37",
        "cursor": {
          "ref": "c9ba8125-7070-4977-a3b8-18f14bb796ba",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e3a76b26-7c80-41b3-94a8-0d0eecdad5e6"
        },
        "item": {
          "id": "a1952ef9-6243-4857-a18c-221c25defc37",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "717b005a-8b1f-425c-9656-0ec8bc2242c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa99ec82-b840-4894-b259-7a7a0312622d",
        "cursor": {
          "ref": "ed4485d1-3b59-4359-b2b0-a05618f9b560",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e23bfb0b-f251-4ad7-aff1-9da2eb7fa86e"
        },
        "item": {
          "id": "fa99ec82-b840-4894-b259-7a7a0312622d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d6992d1b-967a-47ac-9280-ec7aa6da8c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8026d991-b83c-418d-883c-62aa6213075b",
        "cursor": {
          "ref": "2ae386f7-78b8-49b1-97c0-f0e7e0892b48",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "562f4f66-2a98-41b2-ae45-5b592f12809a"
        },
        "item": {
          "id": "8026d991-b83c-418d-883c-62aa6213075b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8c5c4b17-6c24-4834-aa4a-4bcaa13a1af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6fbcbe-633d-40c3-89d1-db2f2d83d2cb",
        "cursor": {
          "ref": "f493ec40-48e4-4202-a74e-bacb2bddf018",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d393eec5-965f-4c8d-8762-393ac9f18b7e"
        },
        "item": {
          "id": "9f6fbcbe-633d-40c3-89d1-db2f2d83d2cb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0a1f6a84-a4cd-4235-9997-5fa49d794916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c2be16-0a1d-4b81-986b-fa89535f9c86",
        "cursor": {
          "ref": "855a8cf1-cee8-402e-8b89-5ad69345b9f0",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0d67572b-4a6d-4969-8e54-4e4e09c80597"
        },
        "item": {
          "id": "55c2be16-0a1d-4b81-986b-fa89535f9c86",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b5f08f4d-0dfc-4fce-99ce-1da3f1f3ab0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1b13de-53fd-4d86-a5df-a1339f17d5d4",
        "cursor": {
          "ref": "10455cea-0e19-43a3-92ba-cbe76a77b3ba",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7dcfb003-b85a-4f71-b891-1044d64ddf24"
        },
        "item": {
          "id": "fb1b13de-53fd-4d86-a5df-a1339f17d5d4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4134bedf-2880-4ebc-ba3c-b1cf8a9b0dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef9708b-c5b0-4e47-80af-fd62c7a3c231",
        "cursor": {
          "ref": "3585d4c5-b0be-4232-a678-95c91a7076a8",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "069c6770-a38d-4efd-a8b9-e00293f25235"
        },
        "item": {
          "id": "5ef9708b-c5b0-4e47-80af-fd62c7a3c231",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "408bb005-f363-42d5-9b30-5a021f2a46d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47ae12e-2cc0-42ae-a3de-6d90ada4eea6",
        "cursor": {
          "ref": "97dbd13e-fcdd-4860-bd2f-3a9a66b6bde4",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7267407c-6547-4869-a5ca-b6f102013ff6"
        },
        "item": {
          "id": "c47ae12e-2cc0-42ae-a3de-6d90ada4eea6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c698ba8a-382a-497e-9eb5-e0b756028033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0026a2fa-bda4-47cd-970a-67deead456a4",
        "cursor": {
          "ref": "c55638e4-daf4-401c-a2a5-48196c005434",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "79b7f121-e31f-4b44-9bce-7e903c0eb63d"
        },
        "item": {
          "id": "0026a2fa-bda4-47cd-970a-67deead456a4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9579bb83-ee3d-43d8-8c97-be6409d95736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8073d3-b0a9-47ee-a600-7edeeb079015",
        "cursor": {
          "ref": "263a65cd-af7d-4ebd-a4bd-b6a7b805f9db",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8916b015-cf72-4beb-a185-b02ba99a01b1"
        },
        "item": {
          "id": "8f8073d3-b0a9-47ee-a600-7edeeb079015",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "05b95f63-7952-448e-8a3c-f63e6d9106e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c40a06c-b07f-4a53-941c-c916f7321f56",
        "cursor": {
          "ref": "d4834a9b-834f-43a5-bd52-3b51c1982285",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "aa60a59f-16d6-480a-89bb-ce8a9ab6d7f0"
        },
        "item": {
          "id": "4c40a06c-b07f-4a53-941c-c916f7321f56",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d9b02a7b-e4d9-4b22-a86f-942760cd2ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ad194e-9292-4307-80e7-036cbfac1947",
        "cursor": {
          "ref": "435a7713-9003-4852-bf5f-55116ceaa7f7",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1f4b7b9b-b0fe-4cd0-8c92-4ef594ecf872"
        },
        "item": {
          "id": "30ad194e-9292-4307-80e7-036cbfac1947",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a0ea58bb-9f21-481f-85bb-ab27d84277cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219966ef-7330-416e-af2e-2ae3aa21c63a",
        "cursor": {
          "ref": "ca37662e-55bf-476e-afeb-8c9c68604431",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bd114cb1-799b-4dd1-8f12-0c27bb62eba7"
        },
        "item": {
          "id": "219966ef-7330-416e-af2e-2ae3aa21c63a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "cd00eea0-a985-4f4b-bcd8-f39ff5670df8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e6b2ef-45b6-45ec-a800-ed4f2cad0714",
        "cursor": {
          "ref": "db900663-fa02-40b2-b456-567b7567f150",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f074d093-e8b6-4832-9242-571e5d6d38b1"
        },
        "item": {
          "id": "d4e6b2ef-45b6-45ec-a800-ed4f2cad0714",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9f699e4b-1200-4a83-9975-032cdcf8541a",
          "status": "Created",
          "code": 201,
          "responseTime": 87,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "659a0859-c132-4f20-8780-6b1f23c08a0b",
        "cursor": {
          "ref": "19d8c1cd-c224-432f-a2f3-04df40fe788a",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "95e27c17-d874-42a0-90e7-336fd546e9f1"
        },
        "item": {
          "id": "659a0859-c132-4f20-8780-6b1f23c08a0b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ea37eecd-50a3-42a8-8d44-47e1209cb8b8",
          "status": "Created",
          "code": 201,
          "responseTime": 262,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd098805-4616-42fd-b4a2-46c575eba3dc",
        "cursor": {
          "ref": "5a0d39f7-117f-4b7c-97bc-704a40fb941a",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2d11081a-1908-4ebd-9c37-413df1e15239"
        },
        "item": {
          "id": "dd098805-4616-42fd-b4a2-46c575eba3dc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ebc2b3ce-e2aa-42d4-862c-8edb649a1086",
          "status": "Created",
          "code": 201,
          "responseTime": 84,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6faff05a-c601-4a68-a372-2e62413a1312",
        "cursor": {
          "ref": "6fa8d8f0-05ef-4a4b-87d2-87c9a7126948",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d255c15d-e3b5-488f-9e8d-cf9c29c37dda"
        },
        "item": {
          "id": "6faff05a-c601-4a68-a372-2e62413a1312",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "42e6355c-fdd6-4066-8f1a-70b4004ebffe",
          "status": "Created",
          "code": 201,
          "responseTime": 85,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da18429-bd88-4b7b-931b-2bfb85300010",
        "cursor": {
          "ref": "a68a7382-7cc2-49ec-89cf-8074ba42ad4b",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b7c6c349-5b39-426d-9810-b9f26b60c9f5"
        },
        "item": {
          "id": "0da18429-bd88-4b7b-931b-2bfb85300010",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6001b7c0-5c35-462e-be81-f23bc1809647",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "013ef225-1182-4357-aefb-9c4e2edfbc65",
        "cursor": {
          "ref": "0f7ba8ba-ad62-4253-b294-d349e44e2322",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "894862b1-530e-479f-b7e2-3bf9dda6a1d3"
        },
        "item": {
          "id": "013ef225-1182-4357-aefb-9c4e2edfbc65",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d39c2a98-78d4-4a52-adf9-1f4ed71f97b8",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a270629c-be72-455b-892e-e2f2b1c5dfe2",
        "cursor": {
          "ref": "12bbc6e6-b281-47a9-aba8-dd2e03a17f10",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "59d90658-3383-4118-aa34-1e1f00eb06d7"
        },
        "item": {
          "id": "a270629c-be72-455b-892e-e2f2b1c5dfe2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fdb306a0-6a91-4598-bab9-d6b7c6a4fbdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df0de3e-bfef-4c7a-91f6-52581b02c39c",
        "cursor": {
          "ref": "263379f7-a7d7-4d55-b221-209a13e5ebb2",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f8bd6552-dbeb-4a5b-b82e-120e925ab345"
        },
        "item": {
          "id": "4df0de3e-bfef-4c7a-91f6-52581b02c39c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c0c45850-c62e-480a-b295-a4f2884904da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa3c383-09a8-4395-95da-a7b782e9be32",
        "cursor": {
          "ref": "038cb2d3-bfb2-4f36-95e4-3b044d9d6606",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a2c917ee-8fe7-48fa-9fac-98c77a490db0"
        },
        "item": {
          "id": "6aa3c383-09a8-4395-95da-a7b782e9be32",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d9a00fba-2f6f-4a9d-ba4c-af05310affd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614c25c6-ce63-49ec-b493-6e2aa128a0bb",
        "cursor": {
          "ref": "9a6ee66d-6b8b-4880-ba54-ccbd139bdac7",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "511e8763-c5a3-4f31-98db-66b8cd02c512"
        },
        "item": {
          "id": "614c25c6-ce63-49ec-b493-6e2aa128a0bb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "345b615d-4b41-4b0f-8be6-68178fd4b0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e201ff69-f82f-40c2-ae27-a0e1c789b2aa",
        "cursor": {
          "ref": "55415ab7-5ae5-435f-9b5a-fce38ef9c5b3",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "349c5e72-9036-4ed7-aa24-0d61e3eede19"
        },
        "item": {
          "id": "e201ff69-f82f-40c2-ae27-a0e1c789b2aa",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "49ce8738-3569-4291-af5a-9a74a067c1cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1aeef2-234b-4b30-909f-cb67e37c4dbd",
        "cursor": {
          "ref": "b160c313-d02b-45be-a66a-3bfb72390355",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f7399eae-47c4-40d7-9602-82bd21a604dd"
        },
        "item": {
          "id": "ff1aeef2-234b-4b30-909f-cb67e37c4dbd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "39322550-3682-4565-a5e7-df23d04b2619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f673b1-4ab0-40f8-9dd3-ff1efa2a474d",
        "cursor": {
          "ref": "20099de3-9bce-4476-ab3a-10f4b5ec631a",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d5cc6eec-8144-4ef1-8c7f-6dbba95a8a29"
        },
        "item": {
          "id": "05f673b1-4ab0-40f8-9dd3-ff1efa2a474d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "67f13f8b-a110-411e-b414-bff89681f922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe1b1c3-eaa9-4ef4-8d69-664212098e47",
        "cursor": {
          "ref": "8953fe4c-0d83-4567-94ad-2972c3acbf27",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "dcd6710c-ad4b-473c-a947-7f8ede1d46c9"
        },
        "item": {
          "id": "8fe1b1c3-eaa9-4ef4-8d69-664212098e47",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "db6aa9a6-ab1e-4cf9-bb20-ac6c72be35a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8865a9-9971-478b-9158-1ffccba37586",
        "cursor": {
          "ref": "e67db8d5-9d12-4e75-80b1-cbd0d035f810",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fb673ee3-8a48-41b5-82fe-0026f9cb4022"
        },
        "item": {
          "id": "9f8865a9-9971-478b-9158-1ffccba37586",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "086845d2-edd4-450a-b0c0-a6baa9036a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7daa01e-f75b-4599-b326-4209e9418059",
        "cursor": {
          "ref": "ce0dfc1c-3b17-4982-82f2-132afb1c0265",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "313d6f13-0aa9-454d-9604-985f3684c854"
        },
        "item": {
          "id": "d7daa01e-f75b-4599-b326-4209e9418059",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "df06345c-cc3a-42e3-9773-14ace220aea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c3a557-c841-4e0b-a691-af21a8bd34c3",
        "cursor": {
          "ref": "2f071dfc-7c56-4da2-bc3f-1f4be896e4ff",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "55a03fc8-2b98-494e-a89a-c06bb7a038ff"
        },
        "item": {
          "id": "d7c3a557-c841-4e0b-a691-af21a8bd34c3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3c78e011-f70f-4043-9b33-d3150ea92715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab17943-03b9-4687-add6-59b33966a7b9",
        "cursor": {
          "ref": "1535781e-8da4-4da4-b90a-a94b3eb1353e",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "11d70d6b-c91a-41c0-a76c-e69711297ff9"
        },
        "item": {
          "id": "dab17943-03b9-4687-add6-59b33966a7b9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b269e77d-a97e-4b01-8dbf-0800e7e4dfe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0008b55e-c325-451e-87a2-c5700b7f8619",
        "cursor": {
          "ref": "bae78014-db11-41e2-9308-8edea396cc0c",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9e15f280-a9f1-4c8f-ba51-e4b3ccd49df1"
        },
        "item": {
          "id": "0008b55e-c325-451e-87a2-c5700b7f8619",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e1825496-917b-47e2-abc6-8fbec668224e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b27c01-918b-4be5-ab62-4ee8b856b373",
        "cursor": {
          "ref": "b3917a70-3fa6-4587-9d48-1afb85ba2f94",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8fba733a-3909-4720-b53e-8d918c5cad33"
        },
        "item": {
          "id": "54b27c01-918b-4be5-ab62-4ee8b856b373",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d94a446c-fbec-4299-9647-1827443a73a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6e5372-6ae2-42d5-835e-e9baf1fcf670",
        "cursor": {
          "ref": "5eabf9b1-272f-4d89-a6e1-25c429390b78",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1ac0e961-f39f-4fb7-b86d-e145fda5692c"
        },
        "item": {
          "id": "ee6e5372-6ae2-42d5-835e-e9baf1fcf670",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ca1f570f-4666-46ef-9073-2c08f8cb2092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e7f901-149c-4a52-952d-36a4a9ea575e",
        "cursor": {
          "ref": "248313a7-fa3a-499a-b2d3-520081fb4fb6",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c45d1d7d-0e7c-4c48-999a-7bec84147e8e"
        },
        "item": {
          "id": "37e7f901-149c-4a52-952d-36a4a9ea575e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0e403f65-4e07-48c9-a204-35a6ee11c691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1e0ff7-4c3d-4a59-95cc-d0572e099545",
        "cursor": {
          "ref": "084f64f3-ed07-43c5-ac0a-d4e70461a1ea",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "596f257f-8c16-4819-bf78-fba477b162c5"
        },
        "item": {
          "id": "6c1e0ff7-4c3d-4a59-95cc-d0572e099545",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f6025e47-abc5-4493-a190-69b5d2f4537b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554c1c7f-342b-444a-8d27-2b3550e12c13",
        "cursor": {
          "ref": "3421851b-a809-4133-be7d-bf8e4a5f2cb9",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "67c9718d-d437-439b-a1e2-621668e8edeb"
        },
        "item": {
          "id": "554c1c7f-342b-444a-8d27-2b3550e12c13",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "efcb5136-71f7-4f95-885f-14ff8a523e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44dabe2e-1dc9-4f3c-95bc-f53ef94ef83f",
        "cursor": {
          "ref": "30173680-8a8b-404a-8f37-eade9a5713b2",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f3391cdf-47ee-47a7-bc50-6543e7ae0e12"
        },
        "item": {
          "id": "44dabe2e-1dc9-4f3c-95bc-f53ef94ef83f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "868bb83c-5551-45f8-b389-12caadc9e7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b884b745-8d38-40e5-a348-36e54c96463f",
        "cursor": {
          "ref": "0b48aecc-78b6-4be4-aa81-3883855e7500",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "eef0fbf2-8735-4e3c-b56c-2e8e730481fc"
        },
        "item": {
          "id": "b884b745-8d38-40e5-a348-36e54c96463f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "51d2ffdd-20be-4cc7-9158-640a9454976d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e36d1f8-c156-4ab9-81e3-f63d404f1e3b",
        "cursor": {
          "ref": "cc72e745-2eda-43d5-a1e8-2d86b8249972",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "78ff220e-7c94-4d6b-9c90-f8df8bc7563a"
        },
        "item": {
          "id": "7e36d1f8-c156-4ab9-81e3-f63d404f1e3b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cf931e07-8a2e-4906-8114-d496e2f2ec31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b0f469-be3a-4b06-bfe2-00b9a4ad4aa0",
        "cursor": {
          "ref": "60130cc4-2f3e-415d-879c-4f3a8927eb8d",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f83f147c-da94-40fb-b740-507eb84a9744"
        },
        "item": {
          "id": "c1b0f469-be3a-4b06-bfe2-00b9a4ad4aa0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "624e5f55-9802-4da8-b99f-d03335610f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab79dc9e-2100-455e-9fde-fe0310568d30",
        "cursor": {
          "ref": "5cbe60e7-84a0-47e8-b7e9-2347c5dfc506",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0fb407c9-e979-41bb-b2b6-1d900adf4317"
        },
        "item": {
          "id": "ab79dc9e-2100-455e-9fde-fe0310568d30",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "41271fb9-f3b2-49be-92f9-aac8713d72c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdb76dc-b594-4e7a-acb0-a2eed5bfcdd5",
        "cursor": {
          "ref": "95e03aff-1dca-44f0-923a-fd36e9943a9b",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "26051aa9-599e-4470-a6a9-55e7d5e3940e"
        },
        "item": {
          "id": "3cdb76dc-b594-4e7a-acb0-a2eed5bfcdd5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "196f8565-cc96-487b-a3e6-baf5b91827c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ed7f55-2dca-4dbc-b9b0-45836c30d34d",
        "cursor": {
          "ref": "d468057a-9d9d-4e96-b623-935f9cebcd52",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "fe1e9a74-5d50-40b5-b309-dc15f89a7063"
        },
        "item": {
          "id": "43ed7f55-2dca-4dbc-b9b0-45836c30d34d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "20531cc1-6b95-4fc6-924e-197cc1ece21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7a645c-8af2-457b-a951-83b2a0c76716",
        "cursor": {
          "ref": "6c7a5f39-103b-4740-b1ac-b0da54960a29",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b1705988-195c-4736-adf1-7b52f8e65e41"
        },
        "item": {
          "id": "cd7a645c-8af2-457b-a951-83b2a0c76716",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "85797879-ff55-470a-8edc-e138ccf75d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa11779c-e583-4f73-bffc-1ad6f435b365",
        "cursor": {
          "ref": "3b5a2d04-5f7b-43e9-9539-992807211bb1",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6e25c6a8-9075-41c3-9ac3-8ae934d55da4"
        },
        "item": {
          "id": "aa11779c-e583-4f73-bffc-1ad6f435b365",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9b61cf82-67ac-47c6-972b-694af5e2008e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8a3551-7ca8-40af-90f1-8a30fe04b6dc",
        "cursor": {
          "ref": "c979c6fb-46ed-4074-9ee9-211c6c321684",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "94e63bc3-1d32-4420-9f8e-f2a13eae6b32"
        },
        "item": {
          "id": "be8a3551-7ca8-40af-90f1-8a30fe04b6dc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "eee5fa37-b1bb-431c-befa-eebad95929fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991df412-1eb7-4cbe-84a9-36646ed93cdb",
        "cursor": {
          "ref": "be3e350b-b638-46fe-a26b-5ffa28e1a22f",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d7155e15-d970-4e61-aaa0-0feee68dbde3"
        },
        "item": {
          "id": "991df412-1eb7-4cbe-84a9-36646ed93cdb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "afe290f3-2aef-4d7f-9466-cd3b2d0b9397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd3fb67-7c4b-46f6-80e5-cbbe3ce73af6",
        "cursor": {
          "ref": "0bebcfcf-b8a4-44e3-acc3-58195f92e79a",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "776ca603-2870-4916-a07f-dac3a53b20b0"
        },
        "item": {
          "id": "3dd3fb67-7c4b-46f6-80e5-cbbe3ce73af6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "74b2ee63-a34f-4637-920c-186c1e3fe712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24278f9b-8d07-4cc1-b5d0-7848b8e3b60e",
        "cursor": {
          "ref": "7e38a9b3-4666-48e7-9fea-ffd840374178",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "86b30d44-9055-4e0c-aa45-5eaf43713e08"
        },
        "item": {
          "id": "24278f9b-8d07-4cc1-b5d0-7848b8e3b60e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "aedd992a-9c05-4201-8d6d-52390b53bf26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9615e041-790c-4bf6-8076-dcffbde97bb2",
        "cursor": {
          "ref": "5d5abdcb-4b61-4b3e-9b12-868ff99a8b41",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8097eb8d-7c76-4c8f-828f-efdf5bcacdd7"
        },
        "item": {
          "id": "9615e041-790c-4bf6-8076-dcffbde97bb2",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "828f6205-5dd8-481d-babe-d10294011eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f9a23f-8962-40d0-87d5-c6119cc463ab",
        "cursor": {
          "ref": "78aec2f6-7698-415d-a565-5cc7fd1122c8",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "21d5a4ad-0e13-46d1-ba8e-9342d76046a7"
        },
        "item": {
          "id": "c4f9a23f-8962-40d0-87d5-c6119cc463ab",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6950c1d2-b475-45d1-b7a1-05af7b9db5f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fe69af-0c97-4585-8ec8-90769f59d52e",
        "cursor": {
          "ref": "07e6ef40-6e43-4ad6-b430-45a62711ca72",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a7dbb76c-fad0-4d56-b0c8-206ffb049bbf"
        },
        "item": {
          "id": "15fe69af-0c97-4585-8ec8-90769f59d52e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b28d9103-f233-4065-aa7f-6971f3fa52af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b2db32-58ff-4887-b0ad-46bba1d6401f",
        "cursor": {
          "ref": "2e53e7d9-3966-42ab-ac88-98be83ab2c11",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "106d3276-9795-49f2-abee-fe21c65f6fad"
        },
        "item": {
          "id": "21b2db32-58ff-4887-b0ad-46bba1d6401f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ad23a6c4-19e5-4d11-a041-473dd19cd0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9808798-90b1-45db-9e54-6ab74dec4ae3",
        "cursor": {
          "ref": "645c372d-59e2-4ef3-88a1-16abf346a74a",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "12a83e94-8126-4e2b-8e58-62d9954a72f5"
        },
        "item": {
          "id": "d9808798-90b1-45db-9e54-6ab74dec4ae3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8160ca79-2ee0-4895-b3f8-6324db878a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d9bc04-a0b2-4c76-8787-13e8af0d1230",
        "cursor": {
          "ref": "394b91cf-55bf-438d-aa5d-0e36057427a1",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "47bdee6e-f748-40c9-bb0c-bfb265fbcf49"
        },
        "item": {
          "id": "73d9bc04-a0b2-4c76-8787-13e8af0d1230",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3a7ccc25-0e2e-47e1-a06a-e45a19606f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57fc52d-9cf1-4bab-87af-8268686da757",
        "cursor": {
          "ref": "77f95ace-4231-4eff-a242-e12ae820ce7a",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3a02159c-b0c1-4b53-ad13-662d2336a159"
        },
        "item": {
          "id": "d57fc52d-9cf1-4bab-87af-8268686da757",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7ebf2f22-f7c1-4628-a81e-6ad208c027ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6fcf8f1-e014-450b-80e2-2212605315f7",
        "cursor": {
          "ref": "060a394c-0059-4580-ad78-ca76f84c4258",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7f5abc13-f6e6-4aab-b341-b6a818dd446a"
        },
        "item": {
          "id": "b6fcf8f1-e014-450b-80e2-2212605315f7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "acb6c1d8-63f2-40bc-8f3e-3b34c6e6b194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4cda7a-b23d-4179-bb9b-7c67c1f9a4cc",
        "cursor": {
          "ref": "19c35eab-f020-4391-9544-30cc18997975",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fd94d441-4b78-4d9d-8f8a-db3a6899e4c7"
        },
        "item": {
          "id": "6d4cda7a-b23d-4179-bb9b-7c67c1f9a4cc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ed7be776-8fcb-4aa5-815b-bc80c320a59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc00320-4401-4c55-9a49-9fb8c60a0270",
        "cursor": {
          "ref": "6793b93e-7d56-4268-900a-060aa5273606",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "928a4514-358c-4bab-95e1-8f60366b6ef5"
        },
        "item": {
          "id": "8bc00320-4401-4c55-9a49-9fb8c60a0270",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c903391b-eae8-45b3-a58a-681c9c83663f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7fa127c-fe0f-4861-a3b8-99eafa8b55e0",
        "cursor": {
          "ref": "b965016c-1cab-4b37-8c05-b4f2c57265d0",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a3817eff-570d-408f-a2c0-9679cbedcf59"
        },
        "item": {
          "id": "a7fa127c-fe0f-4861-a3b8-99eafa8b55e0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5fb4888b-2159-4b2e-85d7-edbcb9f4e25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff22a1e-6f27-49a4-8a8e-753cc154f19f",
        "cursor": {
          "ref": "0fc4e10e-86d4-408e-b01c-1f977418f678",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2a3bae37-ac75-4314-bc03-172c07e85bf0"
        },
        "item": {
          "id": "dff22a1e-6f27-49a4-8a8e-753cc154f19f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a60e2729-ee97-473c-a50d-b968385a0375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de757b0-8436-43d3-a3f8-7a77de7e405a",
        "cursor": {
          "ref": "3809c2f0-3729-4590-bafb-1740cd0bc469",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6c9900f7-4759-4277-8907-772863a3aa09"
        },
        "item": {
          "id": "8de757b0-8436-43d3-a3f8-7a77de7e405a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "572e503c-8392-4669-bfe7-cc41a4198363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34381069-86ed-48f7-b6ae-10c5ce9dea60",
        "cursor": {
          "ref": "1dde27ad-3e0e-49b6-8971-0fe81ea30688",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "59845f54-5f97-450c-b3c2-bd4cb000a9ae"
        },
        "item": {
          "id": "34381069-86ed-48f7-b6ae-10c5ce9dea60",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ab08885a-4540-4b84-bfb7-48f763c2f150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f89a3e8-6fc1-4f2f-9e77-d1126753fc30",
        "cursor": {
          "ref": "e37d9ffc-7079-47da-9d38-7a1d339795fc",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5a272c4a-d9a3-4bf5-a260-78678a90caeb"
        },
        "item": {
          "id": "0f89a3e8-6fc1-4f2f-9e77-d1126753fc30",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "665b04f4-8d9d-4780-8706-c64fe22c0c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15eb6f69-4b53-4445-aec8-8aea3031cdec",
        "cursor": {
          "ref": "6c0e4e0f-7dab-40c6-a7e4-89059456641f",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a3f4cac4-51c2-4909-a3d4-40090b788a02"
        },
        "item": {
          "id": "15eb6f69-4b53-4445-aec8-8aea3031cdec",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3dc1cf48-b86e-4937-900b-7450fcfa063c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06dee9b4-b06e-480c-a1ff-f917cab24055",
        "cursor": {
          "ref": "2267d803-0299-47ce-8f99-c2cc615dd6e4",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "cd398049-a242-497d-a5b2-e77acea2909a"
        },
        "item": {
          "id": "06dee9b4-b06e-480c-a1ff-f917cab24055",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "68e53e26-29b2-43e8-a6ce-b6cea9818764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ed9cf9-1982-4fbf-be4f-a48f356bd152",
        "cursor": {
          "ref": "6e418af6-f6db-4fb8-9918-f5f3103df097",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "726af109-75ab-496a-9b00-b307a1c9b8ed"
        },
        "item": {
          "id": "45ed9cf9-1982-4fbf-be4f-a48f356bd152",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "43cffc77-7189-4ebc-bd4b-3a63a0b835d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e7e19f-8807-4fa1-ad23-a80008d2a372",
        "cursor": {
          "ref": "4b3503d0-2c27-491b-867e-89ac910a55ec",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "44a8e2c2-262c-4bd7-97a5-3fad9e95aa4b"
        },
        "item": {
          "id": "12e7e19f-8807-4fa1-ad23-a80008d2a372",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "06bb8451-8902-4cad-ac83-7c2583743bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e37c3f-bf27-4a0d-8624-3c5ddc28d106",
        "cursor": {
          "ref": "c5e1d32e-5b3e-4102-a8b4-554129f8dc8c",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c9dfe48b-2574-40f6-964b-dd3865455d62"
        },
        "item": {
          "id": "d9e37c3f-bf27-4a0d-8624-3c5ddc28d106",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cf54c541-969d-4bbd-a83e-9afd07259171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2a90ce-c612-43b1-9d03-469feddfa200",
        "cursor": {
          "ref": "d41d5559-11e5-44ce-a995-1cdb91f9ac18",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fa872a11-5bd3-40ea-9a61-3dde7269149a"
        },
        "item": {
          "id": "3c2a90ce-c612-43b1-9d03-469feddfa200",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5cc2bf2e-73b6-4ee5-bc3c-6d97f2e44ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5c5d62-fa39-4a29-92e0-c09772b9183e",
        "cursor": {
          "ref": "ce370e5c-08d9-4911-ba98-6fca7520dba1",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "494500e8-9a15-432a-9bac-a706658940b8"
        },
        "item": {
          "id": "6c5c5d62-fa39-4a29-92e0-c09772b9183e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9bc14dde-b9c6-458a-966d-26d0a0d37389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e0d875-c440-4527-8119-1aa632aa4b62",
        "cursor": {
          "ref": "c4035e96-e8a1-4b16-92fb-532c5ee30175",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "22bd6116-ce84-4cea-8602-aa7f919f2231"
        },
        "item": {
          "id": "62e0d875-c440-4527-8119-1aa632aa4b62",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1d1c0bef-7d17-4b43-80d8-57c2ce0c0061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1437d43f-b805-4a7d-b006-dd90a5d213e2",
        "cursor": {
          "ref": "8e08ce45-db2e-47d8-9dcd-626e946d79aa",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "541a77f6-d8ac-4623-9d10-ef15cef0767a"
        },
        "item": {
          "id": "1437d43f-b805-4a7d-b006-dd90a5d213e2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f3f03907-f06f-4ca9-8051-82deb35fb778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612fa8e4-a7c4-4793-8a27-43339370848b",
        "cursor": {
          "ref": "995997f4-ff59-4027-a4c1-8605b3f3c4df",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2816195c-a806-4629-ba2d-bf438fb2aacc"
        },
        "item": {
          "id": "612fa8e4-a7c4-4793-8a27-43339370848b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b65f37d4-dcbe-42c4-abf5-957fb1bdd4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3fd705-02a1-4805-9cad-76da637a573f",
        "cursor": {
          "ref": "d8a6faa4-cc5a-412f-a118-25cbc9ae6c56",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "aeac5339-eb67-4293-9317-b5bca1d1e7c5"
        },
        "item": {
          "id": "6f3fd705-02a1-4805-9cad-76da637a573f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1ca00368-9eea-40ac-83e0-2c8736b71a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77f1501-8883-4574-8c62-efc0cd4a94cf",
        "cursor": {
          "ref": "43f58375-6663-4c2c-8bf7-f26c77163bed",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "235c231a-22ae-496a-b0b1-a45fdf478145"
        },
        "item": {
          "id": "a77f1501-8883-4574-8c62-efc0cd4a94cf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f32d78af-e32d-445d-b8d3-5f238c0c19cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ad41b0-d15c-4815-8da5-4c3fd3214144",
        "cursor": {
          "ref": "bc206d00-76b5-4cf3-9a08-c003234710a2",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0fdd1eff-a036-42e3-a3fe-e51d7ad2e38b"
        },
        "item": {
          "id": "97ad41b0-d15c-4815-8da5-4c3fd3214144",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bb9be2e5-7cde-44d9-92bd-c3b33f36b5c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dfc66d4-6c92-4de4-b0aa-d82eaba893bc",
        "cursor": {
          "ref": "81416796-0630-45b0-87ce-9c3766d9b4e9",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fe364eae-2404-41b0-9a37-43ae8ec75843"
        },
        "item": {
          "id": "6dfc66d4-6c92-4de4-b0aa-d82eaba893bc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0dbaf19f-fa45-4c16-9ab2-e6a3903d51d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644e022e-3e29-48be-8f98-c8029ceba1fb",
        "cursor": {
          "ref": "0ce03309-d0c3-41ab-9a9e-4f390bcf779b",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3af14d21-afc5-4379-a98a-704915916246"
        },
        "item": {
          "id": "644e022e-3e29-48be-8f98-c8029ceba1fb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "43dc2e54-5f48-4739-acef-1b804af4ca31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ff13da-edd0-4984-bb94-4776b2105e4e",
        "cursor": {
          "ref": "c44c2303-8a31-4caa-af38-615841e61f89",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "dd8ec4e2-4a69-41bf-b2ee-12cb63422ea3"
        },
        "item": {
          "id": "13ff13da-edd0-4984-bb94-4776b2105e4e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "afde3cca-f5c0-4b7d-a999-6c687f8e13fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39caa449-6cdf-4647-a8d7-fa9110d34988",
        "cursor": {
          "ref": "a573b8a8-5da0-415f-8283-ccb169d15310",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9ef2e06c-5d0f-4b83-9e48-13ee16b88b6c"
        },
        "item": {
          "id": "39caa449-6cdf-4647-a8d7-fa9110d34988",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "49feca48-7ac9-4338-9f75-0e7616b6679e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e389a17b-0ecc-49d4-b85a-4a620206c446",
        "cursor": {
          "ref": "ea9165b4-c7cc-4e98-abb7-38b7f24c3545",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "79c2ddfe-0e75-448b-8fe4-eeb69e3c9e14"
        },
        "item": {
          "id": "e389a17b-0ecc-49d4-b85a-4a620206c446",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f3f3c40a-84a2-4cff-977d-10529335e53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3698f5da-6151-41b8-a313-2563704e0463",
        "cursor": {
          "ref": "49bae1bd-526a-4699-9fa3-4f79c3438b95",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4369e308-4d93-4c58-922e-14f3ef2c4671"
        },
        "item": {
          "id": "3698f5da-6151-41b8-a313-2563704e0463",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f2853c26-fa43-4216-9910-bbec3636611b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf43c9a-2b7e-41ba-882f-d1d56dd74203",
        "cursor": {
          "ref": "3f514fb3-7e13-4d64-a325-bc2d6f48fdd7",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "687a1a5b-42a8-4fe5-adf6-8ef6a169953b"
        },
        "item": {
          "id": "edf43c9a-2b7e-41ba-882f-d1d56dd74203",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "da02a7b4-543e-447f-9d41-f44514b38957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549d1556-8a3c-462a-b9a0-82d21ffbe13f",
        "cursor": {
          "ref": "e45e3df3-75b0-425a-ab0e-2c3006e67705",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b3d4bbd6-42a0-41ec-89c5-079130033fab"
        },
        "item": {
          "id": "549d1556-8a3c-462a-b9a0-82d21ffbe13f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c57ace42-9543-4b57-9324-211806224e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c1eba8-cb98-4277-8b59-833942340346",
        "cursor": {
          "ref": "0a4dec94-455c-4b95-9334-c86a7bb09fa0",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2f1e4ac9-081d-49ed-90f8-ae7f11fa5cd7"
        },
        "item": {
          "id": "c9c1eba8-cb98-4277-8b59-833942340346",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "dc780278-e95d-4d77-b498-49c404c6add7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45abad54-eb02-4a95-903c-60ae4fda2e9a",
        "cursor": {
          "ref": "e468bc83-f17a-46b3-8575-a0cc15dab887",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "65361c71-38c0-4191-9481-184fdec02207"
        },
        "item": {
          "id": "45abad54-eb02-4a95-903c-60ae4fda2e9a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0cc07888-cb29-4737-a0d9-8976d62557c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37978c91-34b0-4ade-9164-57a2ce7777dc",
        "cursor": {
          "ref": "65c30c8c-fea8-4dff-9481-e24f841e56ad",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "95050387-2c56-4b5c-b26c-5f50e6bb53ce"
        },
        "item": {
          "id": "37978c91-34b0-4ade-9164-57a2ce7777dc",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "adced778-05f4-4e90-9451-c1d22a00c4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91984ca-3638-4bdf-b6a9-9b2cb0dd3283",
        "cursor": {
          "ref": "7f1cace2-8afe-4c6c-a26b-77608197a352",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b18f1c82-6d77-448f-8325-63500fbb75dd"
        },
        "item": {
          "id": "c91984ca-3638-4bdf-b6a9-9b2cb0dd3283",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b92fb7a7-bceb-4ffb-aab4-4df829ece6a6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a155d0f-889e-42d0-a9c5-a5ae9c8aac6a",
        "cursor": {
          "ref": "a7a71f1c-c41b-44f7-8474-b770c1ad830e",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c52d733d-91c2-4fb3-9c2f-4eb3a3b48188"
        },
        "item": {
          "id": "1a155d0f-889e-42d0-a9c5-a5ae9c8aac6a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "185906b8-b4b2-48a8-93d4-3bc4e6eb6217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a703d2e-3543-43ad-9b43-dbb07c1b9f0e",
        "cursor": {
          "ref": "883ca306-32fe-4a9c-92b1-cde30c89c2d4",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6c5496ed-ff6f-4bb3-9a47-cfbbdf1170d2"
        },
        "item": {
          "id": "3a703d2e-3543-43ad-9b43-dbb07c1b9f0e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "92dd5d48-c07a-4568-98cf-37d1458071b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c8f4e0-8b7a-42eb-b008-23a1eec2e805",
        "cursor": {
          "ref": "ff003dff-a06f-4c33-b2c1-1610bfdc9bcb",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "aba567cd-2132-41f9-a519-922b256fb8c1"
        },
        "item": {
          "id": "a8c8f4e0-8b7a-42eb-b008-23a1eec2e805",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "43cd3820-6741-4c75-8f6c-d82a1cfbd94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b9644d-c1cc-4e56-9d79-9fe6138157cd",
        "cursor": {
          "ref": "7b91d36a-ac91-469e-acef-cda89e5a5a07",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c501c333-2dca-45c9-8a08-e08279e804f5"
        },
        "item": {
          "id": "85b9644d-c1cc-4e56-9d79-9fe6138157cd",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "eec2c03b-e3b4-4036-891c-8624ffb3ddcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0abc4e4-2bfd-48b9-9777-26a9262c2b74",
        "cursor": {
          "ref": "b3e7fe02-b1dd-4014-8c9c-f7f2a1866e0e",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f7fbd45b-60c9-475a-89d6-9f8471d9deae"
        },
        "item": {
          "id": "e0abc4e4-2bfd-48b9-9777-26a9262c2b74",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "76031dc8-2088-45ac-aab7-040479609b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1912693b-917b-4665-b864-bdcee422811f",
        "cursor": {
          "ref": "551fc782-438e-4c92-ae5a-e47aba1888bc",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "46f20873-0973-4fcd-9071-c4121393c32f"
        },
        "item": {
          "id": "1912693b-917b-4665-b864-bdcee422811f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d70219de-c7d6-41e8-8ff7-843630f9833a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f256d1c-3c43-4557-ac82-4b66ab13daf8",
        "cursor": {
          "ref": "e09e4145-6ad3-4d5f-a723-ea988b574c66",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "08a496fd-99db-4914-a7ab-25fc187db969"
        },
        "item": {
          "id": "3f256d1c-3c43-4557-ac82-4b66ab13daf8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "991f0a58-8601-4d9d-95ec-b4c0b9f778ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617f9fce-9e41-4d16-84a1-a8c55abde79f",
        "cursor": {
          "ref": "2ab22aaa-9cab-4cbc-90fa-d94249b5e504",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "57a4f95f-8947-449d-b56d-d493217620b8"
        },
        "item": {
          "id": "617f9fce-9e41-4d16-84a1-a8c55abde79f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d2c74998-45f4-4d33-9d17-466844785aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4b22d1-38ba-4133-8b8b-c9485d043b31",
        "cursor": {
          "ref": "53c3ad42-0469-4fb1-9da8-a95d439f55d5",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "81f69ccb-18bb-45b3-b217-db906165f4fd"
        },
        "item": {
          "id": "1e4b22d1-38ba-4133-8b8b-c9485d043b31",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c4451c48-1040-469e-a609-5b12d579dd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5242c28-3b45-47f5-bc50-043f83da6013",
        "cursor": {
          "ref": "7a607dde-53d7-4559-8e29-65ea71900a02",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "381be9b8-c665-423c-bd16-04607779bd61"
        },
        "item": {
          "id": "e5242c28-3b45-47f5-bc50-043f83da6013",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "aaf50156-216f-44b5-9973-5b8d0608acdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88fe2f2-793a-4702-8043-b16970b61857",
        "cursor": {
          "ref": "209bca1b-f931-431f-9fa6-2c0a3a2e35b9",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "534a22d9-3964-404f-839d-b8ea8b151b64"
        },
        "item": {
          "id": "a88fe2f2-793a-4702-8043-b16970b61857",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d411a206-ef77-46ba-89c3-3cb130b536a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe11b99a-da0e-4e56-8b4f-1c04c3c746c3",
        "cursor": {
          "ref": "a721d460-984d-4255-91bc-9392adb2b80f",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e43a65ff-ae1b-402d-a17e-634f9f00b3cf"
        },
        "item": {
          "id": "fe11b99a-da0e-4e56-8b4f-1c04c3c746c3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ac77279f-7044-4553-9d76-9e6810bad4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f11de5-ac76-4024-ab66-36d8dad8e188",
        "cursor": {
          "ref": "eca2f139-8c5b-4f98-8b44-93e12af25c83",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b9563a2e-95ea-45d8-bd2b-78f6136566e7"
        },
        "item": {
          "id": "b9f11de5-ac76-4024-ab66-36d8dad8e188",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a9bba11a-086f-4554-b166-00517e949fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ea5183-d6eb-4f3c-9730-098c203cf3bd",
        "cursor": {
          "ref": "0a4a3e11-a674-48fe-a5a4-5a39d207383a",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b569223a-a43b-42e6-a5e4-1023c1568767"
        },
        "item": {
          "id": "15ea5183-d6eb-4f3c-9730-098c203cf3bd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d2a31102-11cf-47e4-835f-d61834063444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403f3e04-8c99-4b5e-8fe1-62c019b08fef",
        "cursor": {
          "ref": "af8252c4-5a7b-4301-99eb-13e4f51f1e5f",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5dcb5145-9194-4689-9115-984c2f27f898"
        },
        "item": {
          "id": "403f3e04-8c99-4b5e-8fe1-62c019b08fef",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8280024a-1c6f-4881-a5ce-39dbf6846b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cfd18a-be72-414b-88a8-cee3ab569ec9",
        "cursor": {
          "ref": "b4e31699-0c15-4bdc-88ef-4dffb3b14f06",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9b2d5c04-4e62-4ffe-ac45-657d49c27af4"
        },
        "item": {
          "id": "22cfd18a-be72-414b-88a8-cee3ab569ec9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "79595ba9-b17f-4748-bb2b-2761220effbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747fb5ab-3433-4e88-84e7-5a7b87c124ac",
        "cursor": {
          "ref": "faa975d3-2620-446a-8d0e-e10828cbebe2",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "abfd70f5-6699-44e2-bcf9-09c4387021e2"
        },
        "item": {
          "id": "747fb5ab-3433-4e88-84e7-5a7b87c124ac",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1bf58736-90bc-4b1a-b3a4-1881d1ce6f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be12983e-5296-4d1f-a605-174bcbaaaccf",
        "cursor": {
          "ref": "061e64ee-a209-4118-921d-81ddf96d64c7",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "704e06bb-94e4-4a5a-a679-b4dcd0bd9777"
        },
        "item": {
          "id": "be12983e-5296-4d1f-a605-174bcbaaaccf",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e38588af-8a61-48f3-9a86-cf9ee450d199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5adc448e-5e40-458f-8284-a8a76c0d42db",
        "cursor": {
          "ref": "049abf3b-7dd5-486a-922d-d1773f60db39",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ebbd8165-9f7c-42c1-9852-c4c365aedc86"
        },
        "item": {
          "id": "5adc448e-5e40-458f-8284-a8a76c0d42db",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "63d7ff1b-af1d-4fc7-9ca0-c390ec54fd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a082b803-4106-407d-93cd-cc019381ecb8",
        "cursor": {
          "ref": "0e93bf3f-1e06-4770-a7a5-f63d53eb6adb",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9a668a64-f3c9-4855-94bc-1b19480f97d4"
        },
        "item": {
          "id": "a082b803-4106-407d-93cd-cc019381ecb8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "bd87c37c-8963-463d-bec0-eba0e176cddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e57e8d-5fa3-4897-a05a-15f09eb6f729",
        "cursor": {
          "ref": "f4b99e1a-fc4a-4243-9197-c9421b780f24",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "216d53b4-5c17-4772-a11e-c65a5a73d3ef"
        },
        "item": {
          "id": "43e57e8d-5fa3-4897-a05a-15f09eb6f729",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "174057e8-5727-4a7b-804b-5f96689568b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f843f6d5-96b9-4724-b720-d278b96fe548",
        "cursor": {
          "ref": "a4762977-5a57-4dcb-beb6-77e5e64c1670",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "413e95bc-f87b-4ae8-b09d-849a544c89a4"
        },
        "item": {
          "id": "f843f6d5-96b9-4724-b720-d278b96fe548",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "dddea88e-7a94-40ca-8416-92e2f4b9dfcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1483f7-815d-4070-a671-a99386e9a8e1",
        "cursor": {
          "ref": "a006f5ce-e467-4ae0-94c1-3ab283ecc9bd",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e7fb1e13-ae03-44a4-9316-03f920ffb199"
        },
        "item": {
          "id": "fe1483f7-815d-4070-a671-a99386e9a8e1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1f0758ce-7c55-40f7-9625-391230b16ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f472ebd-c98a-43cc-8ccf-1b4bbbb80a46",
        "cursor": {
          "ref": "a9ab5de6-b370-46bc-a54d-8b6a9b360cfe",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7a710fbd-2145-4d79-9603-1819e936ddbc"
        },
        "item": {
          "id": "9f472ebd-c98a-43cc-8ccf-1b4bbbb80a46",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ed49c69e-996f-4f01-aae4-34f2d03b3590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772cc8c8-04b7-45d7-9f73-57d7b83750ba",
        "cursor": {
          "ref": "492d95ea-5577-4f60-b1cc-7a37527cf94c",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "397e926d-42aa-4607-991f-e524c01d010e"
        },
        "item": {
          "id": "772cc8c8-04b7-45d7-9f73-57d7b83750ba",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d66e3b8b-c5b0-44a5-8a00-ce719ce79dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940076ad-074b-4079-aa75-aa0f6a42bdab",
        "cursor": {
          "ref": "64d8dab8-c509-4ae5-b89c-e7ed8b03b166",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f9b95fb8-6095-4ddc-92bb-dc86fcac1d2a"
        },
        "item": {
          "id": "940076ad-074b-4079-aa75-aa0f6a42bdab",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a8468446-597d-4dc9-a993-e1b444e5dcb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f559ab3-5e00-46db-8c45-df80fb09eeac",
        "cursor": {
          "ref": "90ef039e-d00e-4e60-bd27-607af41dc28d",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "eb8b09c7-ddd9-4146-a66d-47180d251805"
        },
        "item": {
          "id": "2f559ab3-5e00-46db-8c45-df80fb09eeac",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f060cb24-18d4-447a-9812-803d0ce5a706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb7ce0a-c802-4cc1-b0e5-4023f3c9bc8e",
        "cursor": {
          "ref": "4545ed9c-1be4-431e-a9e0-fe3b2fb96067",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f6948a47-5f6a-49cc-ac68-73d5ade568b6"
        },
        "item": {
          "id": "6eb7ce0a-c802-4cc1-b0e5-4023f3c9bc8e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "97e73beb-9066-48ac-9b26-e234b24ead18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94dab2bf-f71a-4e2a-bb44-85f4086b8245",
        "cursor": {
          "ref": "d0f046d0-b7e5-4b27-949c-27c0ed7cc393",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b94314c1-3913-49b3-a6d2-e18428cd9a63"
        },
        "item": {
          "id": "94dab2bf-f71a-4e2a-bb44-85f4086b8245",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "dab65609-84db-44c8-8c83-9db09644f41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1b3599-654e-42ce-b334-22b7c051ab0e",
        "cursor": {
          "ref": "95302940-5b07-4f41-be8b-5710144c92ab",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "447bd976-138f-4b8c-ab24-39c5990d8ded"
        },
        "item": {
          "id": "5b1b3599-654e-42ce-b334-22b7c051ab0e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1d7f37ed-62d9-4b36-9f82-df06cfc442cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907ceb04-4b11-40b4-b0d6-a1f079df0d90",
        "cursor": {
          "ref": "008f20a5-5827-464e-81cb-6502e69477ca",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "696e7a53-ed5c-4bae-ba36-20c4aeec55c7"
        },
        "item": {
          "id": "907ceb04-4b11-40b4-b0d6-a1f079df0d90",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "479a884d-018c-4480-b0b7-dbca7bd36f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81ed892-61ac-44d1-8779-dfe1fd098cbf",
        "cursor": {
          "ref": "bc92df3d-4edf-4820-b906-4c72303b9dad",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "03df95ad-ec5e-4833-b1f4-2c95cfcec240"
        },
        "item": {
          "id": "e81ed892-61ac-44d1-8779-dfe1fd098cbf",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8d2c8b79-00aa-4eff-8c1e-47c8bb518e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750487fd-57c6-462f-8b4c-3b0a08821275",
        "cursor": {
          "ref": "1e77ddcb-6cd8-4a2c-b087-f91abc30b056",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "79a0f87c-4b2a-46b3-9b89-16f79c5e3b45"
        },
        "item": {
          "id": "750487fd-57c6-462f-8b4c-3b0a08821275",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "89acc980-ded8-47ad-ad6b-d44b2ce7fc21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043ed332-9bac-45fa-ac8b-a24ea8feb806",
        "cursor": {
          "ref": "a6644434-08ac-47d4-9f93-139c5c4b24f8",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1b797d37-28c6-4050-a07e-1db5f9c3f175"
        },
        "item": {
          "id": "043ed332-9bac-45fa-ac8b-a24ea8feb806",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "45057ead-af37-4bf3-9e77-809de3f5d478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f354a570-42af-4299-9297-66364f5da0b6",
        "cursor": {
          "ref": "a6aa1af3-24fb-4838-a0e2-78246709abaf",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "96295f53-c5fb-4ff2-a0b4-58ea96640cc7"
        },
        "item": {
          "id": "f354a570-42af-4299-9297-66364f5da0b6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b56709e3-5713-42ac-9092-1b957c2cc379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfb730b-04fa-4157-bcac-3b0d80ae380a",
        "cursor": {
          "ref": "3b6a3ac2-87fc-4ca4-b7b8-a78ba2b6a9b2",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "252fdb4e-526f-4008-a720-3116efcc6efd"
        },
        "item": {
          "id": "3cfb730b-04fa-4157-bcac-3b0d80ae380a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e8df383a-f423-4107-b2af-1364dc340e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d569b3dc-ea18-4701-baed-0f9b8ec25875",
        "cursor": {
          "ref": "4e8f2712-e650-47a9-8447-faaa46283f8d",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6c2853d9-a0ea-40ad-b7e1-fe2d3a892f0d"
        },
        "item": {
          "id": "d569b3dc-ea18-4701-baed-0f9b8ec25875",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d1d3454c-edf0-43af-a9e9-f77981ec63c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38857295-b773-41b5-8616-39d0a89acf5a",
        "cursor": {
          "ref": "7c377768-d2d2-4468-b777-676c9db63833",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c584d2ed-3292-423d-8b3f-087eab20f7cc"
        },
        "item": {
          "id": "38857295-b773-41b5-8616-39d0a89acf5a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "248f830a-8a19-40b7-b104-0c01fa5f850f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32bc6385-1746-4413-bb79-ce3f02f2a354",
        "cursor": {
          "ref": "36233e41-b1b4-4200-859f-97e165b79563",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fe1c7dfe-a86f-4101-b9d7-927743570e86"
        },
        "item": {
          "id": "32bc6385-1746-4413-bb79-ce3f02f2a354",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8f579778-0925-4981-8a21-b01945b2196f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c610af3-eafe-44e1-b97d-770505e4e031",
        "cursor": {
          "ref": "3722ed19-3bd6-456a-b2d5-b77aadc7f866",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d6bdb2ed-bc08-4860-93b9-b0ed53e89213"
        },
        "item": {
          "id": "5c610af3-eafe-44e1-b97d-770505e4e031",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c07c1725-1bfd-4b9c-9606-ac40ce118e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38950252-6341-44b5-90d0-8e029d8a295c",
        "cursor": {
          "ref": "c6ada94f-686e-49bd-8dbb-d3d97e194a4e",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d3b733b2-80b4-4a5e-8686-5322e4ce5024"
        },
        "item": {
          "id": "38950252-6341-44b5-90d0-8e029d8a295c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bbf84fcb-ab10-4bf9-8f7e-d818e01c3a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ca82f9-60a0-4d8b-9a3b-46f176b07111",
        "cursor": {
          "ref": "bd594ce1-abdc-4fcf-9c77-5bd00c312c47",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "048ea9fc-b348-4b59-ace1-cb520f537a36"
        },
        "item": {
          "id": "13ca82f9-60a0-4d8b-9a3b-46f176b07111",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0bda29c7-9014-449c-b8a2-dd8f17f50d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a64db8a-2666-4204-8088-7eee030e4ace",
        "cursor": {
          "ref": "fc3b4440-228b-4bed-a098-9cf0300bcb1a",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d5477267-40ca-4910-afe2-aa5d2a7941d8"
        },
        "item": {
          "id": "5a64db8a-2666-4204-8088-7eee030e4ace",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4922b30d-ee38-45b3-8727-e7de26a9bed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e737e8f-7de8-4a5a-a84a-2fa2467832fc",
        "cursor": {
          "ref": "600246a1-ea01-485a-8d9c-6825a8e8ded8",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "134b5a86-b64a-41e8-a42a-fedf0b28d861"
        },
        "item": {
          "id": "8e737e8f-7de8-4a5a-a84a-2fa2467832fc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5ef6eab1-492d-4320-bc8c-ca752f58ef93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6758da06-c577-41c3-8218-af2a79904049",
        "cursor": {
          "ref": "306b0d74-ce34-4830-8fc4-74c1c072c8d8",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b5e23702-8168-438f-b2e4-007d811171d9"
        },
        "item": {
          "id": "6758da06-c577-41c3-8218-af2a79904049",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8d7b1d58-73f1-4075-b0bf-8e9e6ce0ed28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e39728-0052-4d60-9221-1df8587628d8",
        "cursor": {
          "ref": "7f116ecb-30a0-486f-b23c-31d81de36c0a",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6ee3380e-25c7-4335-91a4-72a1778276b5"
        },
        "item": {
          "id": "44e39728-0052-4d60-9221-1df8587628d8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9589c6e5-6d43-4299-862e-ab7a00cdb61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a4d0d9-256e-4bbe-b6b7-58f6acffe5f6",
        "cursor": {
          "ref": "df8bec5f-4177-4705-8ea9-776721b4ed20",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "069d37b6-c40c-4b9e-a259-4d303c1ecaed"
        },
        "item": {
          "id": "25a4d0d9-256e-4bbe-b6b7-58f6acffe5f6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "981417a6-7fe1-4a76-b78c-1b6828ba9981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac90d38-e017-4e4c-84a6-0d1201cf8a52",
        "cursor": {
          "ref": "fdc7fe67-f50d-4423-9a1b-81d114089105",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "11caacb4-d0ff-4ba3-8fbf-f4c4317efe10"
        },
        "item": {
          "id": "5ac90d38-e017-4e4c-84a6-0d1201cf8a52",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8d625168-6abb-49cc-935d-c83931d07cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a488a5-7c65-423d-a280-9b9c7e2c7c0e",
        "cursor": {
          "ref": "bed8c1d2-ee47-4034-a5c0-9bf5b6dad68d",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3b8b5acf-cbd2-45b2-aba2-fba0404dc39f"
        },
        "item": {
          "id": "b1a488a5-7c65-423d-a280-9b9c7e2c7c0e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a248e5c8-c25c-4471-95dc-a4d8c3434cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23367516-543e-4fb0-be0e-46ebc5d89677",
        "cursor": {
          "ref": "f6357571-8680-4817-bf84-eb959401e332",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "02400415-65b9-4bb2-9c47-312674243d4a"
        },
        "item": {
          "id": "23367516-543e-4fb0-be0e-46ebc5d89677",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c826eeff-4d75-4110-a85e-39078d40ad7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f87404-e952-4f73-a9e5-edeadf9589f7",
        "cursor": {
          "ref": "d0d0ecd3-4457-4dc4-a88d-b18d3761b874",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5138219e-6940-4f9b-858c-8fa6598aa440"
        },
        "item": {
          "id": "94f87404-e952-4f73-a9e5-edeadf9589f7",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0c40834c-f5a9-4480-8af6-550301b57e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d099ba-9e7b-4c0d-9a16-6da36cc7d779",
        "cursor": {
          "ref": "4dc0ebc0-1849-49ef-9240-62f9f542065c",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f4766d52-18ad-4f75-a200-2e00e87af6d7"
        },
        "item": {
          "id": "09d099ba-9e7b-4c0d-9a16-6da36cc7d779",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9cb7ca1c-f7d6-45c0-b905-afef55459c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6595d1-3d2a-4f8f-86f2-00e484210c4f",
        "cursor": {
          "ref": "c64ac46f-9a3e-4db1-bde4-54e4f6992369",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f18aba15-ce4f-404f-96cc-b42ad36b774c"
        },
        "item": {
          "id": "6e6595d1-3d2a-4f8f-86f2-00e484210c4f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fcfc1778-7e36-45e5-804f-3163e059f9e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587ba019-ca6b-4e84-872e-50ff6189c2af",
        "cursor": {
          "ref": "e8b40234-773d-4302-8847-f6088a68fc42",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "064be14c-eb76-47b1-b6e9-392a523f90e1"
        },
        "item": {
          "id": "587ba019-ca6b-4e84-872e-50ff6189c2af",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "37c2548e-a787-4f77-93b3-d83891972a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91de7c7f-e8a6-459a-b6f1-e213a78c04d1",
        "cursor": {
          "ref": "cc0d47f8-4f16-4011-8113-fc0b097752fe",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8fc353ae-99db-400a-b73f-504d01579156"
        },
        "item": {
          "id": "91de7c7f-e8a6-459a-b6f1-e213a78c04d1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c8fadca5-db88-4834-880f-1e5afb80d98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ef8add-871f-4f68-9a7e-9a080ec84936",
        "cursor": {
          "ref": "255f50f9-63e2-4aab-bcae-5886d0cfd8a2",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7b7d7d4c-ad3a-448f-b271-ceb33f65811e"
        },
        "item": {
          "id": "f2ef8add-871f-4f68-9a7e-9a080ec84936",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "14a4fb2d-73fd-481b-86c4-99c57f91a7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3271b8-5a20-4563-be0a-129f67dc3189",
        "cursor": {
          "ref": "f1091058-acc5-46e2-9bee-6dccb9733aa1",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "02ec06dd-71fe-49f3-b7c4-f62fea3ff9eb"
        },
        "item": {
          "id": "df3271b8-5a20-4563-be0a-129f67dc3189",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fe605716-4406-4637-8e5d-13b465a6b1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb8abbc-eb79-49c7-82c1-acc6227b202d",
        "cursor": {
          "ref": "066a1e88-6d3a-40c2-98bf-293b083dd64e",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bcdae186-58b4-4e98-8da6-d40b00cbc95e"
        },
        "item": {
          "id": "6eb8abbc-eb79-49c7-82c1-acc6227b202d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "826241f1-88b6-46ae-985b-4ff00ac17e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19931f0-a46e-44b1-b8cf-4d09e1cfc301",
        "cursor": {
          "ref": "5880e35d-acbd-4d6b-905b-b9848ba21fb2",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e91c1bf2-b22f-4ce5-b4b8-13489b18d126"
        },
        "item": {
          "id": "a19931f0-a46e-44b1-b8cf-4d09e1cfc301",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5602d814-d492-4989-98dd-8f0e7a2d0d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51df9877-4c37-4f21-8589-6276423ba3d6",
        "cursor": {
          "ref": "1d832e1d-bc89-4973-b222-f89901753a90",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8e9ca0fb-67c8-424a-b481-f1fcc3a88af2"
        },
        "item": {
          "id": "51df9877-4c37-4f21-8589-6276423ba3d6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ade765f3-5076-4285-acdc-be64dc07d53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba73120-2b28-43bb-af0c-cfc0397c4636",
        "cursor": {
          "ref": "f10fea32-4488-4c0a-ad1a-95c18001d3e0",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a6278db5-0718-4d60-8dd7-3ec1fc2260ae"
        },
        "item": {
          "id": "1ba73120-2b28-43bb-af0c-cfc0397c4636",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1057bd6d-9a5e-44b9-ad79-21538111f19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9baa8be-5247-4c14-b278-32e71586c367",
        "cursor": {
          "ref": "bb8d2682-ba24-4f80-944d-67d75c95a64f",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e5ad6510-4ee7-4386-9827-e4d664067d7f"
        },
        "item": {
          "id": "e9baa8be-5247-4c14-b278-32e71586c367",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f13e00d7-ae58-49ff-93f4-68da0b2e716a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9b69d7-3b8a-44b9-890c-93655f0391fe",
        "cursor": {
          "ref": "f54673f4-e830-4d9d-b795-de17eb7c1802",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c682583d-b79f-45ae-9637-06285a559886"
        },
        "item": {
          "id": "3a9b69d7-3b8a-44b9-890c-93655f0391fe",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9608caa4-a6c8-479f-9d2f-55914dfcdeb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f511c49-54ca-42bd-ae80-b479b2d3fad8",
        "cursor": {
          "ref": "4c1296ac-610d-4cd7-b96c-fb97f3c86aca",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "92372540-5447-4c42-abee-e3e44f3b7950"
        },
        "item": {
          "id": "0f511c49-54ca-42bd-ae80-b479b2d3fad8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "946f9660-f4fb-4713-a404-6c89ad0d6806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbd802b-1aec-48e1-be9a-85eccc889dfa",
        "cursor": {
          "ref": "4f6abf09-25bf-4923-a1b8-e84864bc0c30",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5b2207f4-54a6-483d-ba64-f44f510be36c"
        },
        "item": {
          "id": "adbd802b-1aec-48e1-be9a-85eccc889dfa",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9b4b98cf-a557-46af-a712-4f37e8226ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1130bf8-08bf-42f2-a4ce-07c9ea7049b7",
        "cursor": {
          "ref": "54cebadc-bb63-4b65-a5e6-046b4492b676",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1c2d23d6-8afe-45dc-8b4d-4fd0df8d5b13"
        },
        "item": {
          "id": "d1130bf8-08bf-42f2-a4ce-07c9ea7049b7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "47793bf0-0888-4ca1-b141-328173dc23ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00faad7-d93b-4d1d-94ff-bdc6d7183408",
        "cursor": {
          "ref": "e156a0e4-c627-4c09-acdd-34a9b7eb79da",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7a5475ce-786f-4a0f-a368-1d7532aacc7b"
        },
        "item": {
          "id": "f00faad7-d93b-4d1d-94ff-bdc6d7183408",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "704c00c9-eae7-43cc-8873-016793e53bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b7c294-8b14-441d-ab8b-9e02fb65d14e",
        "cursor": {
          "ref": "88080e08-7e65-4079-9828-2bfdff3f91f5",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2c2768d8-b4fb-4087-9e1e-9f0afdcdf096"
        },
        "item": {
          "id": "a8b7c294-8b14-441d-ab8b-9e02fb65d14e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0981630f-fa80-4352-a9fe-d98e95dabb9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c185ca6-fd80-4b23-8e25-947846cee40d",
        "cursor": {
          "ref": "027216fb-d85a-4b75-921d-7566fb848885",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "97483624-f06d-4a68-b535-af673d20164d"
        },
        "item": {
          "id": "0c185ca6-fd80-4b23-8e25-947846cee40d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "96b6fc79-1235-45d5-8a85-3e6504e973c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053838e7-da75-4b1f-8054-2c2793412af4",
        "cursor": {
          "ref": "a22afe15-da14-4275-b123-397ed0233731",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b8b6538a-6851-4bc2-9fb3-a78be03506c0"
        },
        "item": {
          "id": "053838e7-da75-4b1f-8054-2c2793412af4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "842e7e03-c870-4ac4-9048-fb52947399d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaffbebc-fcc8-4ea4-81a4-cf6ed0e61cba",
        "cursor": {
          "ref": "53ddfad0-a5e5-4750-b8a4-e0131f08db8a",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2cc685ab-a973-445e-90d7-a64c10048f57"
        },
        "item": {
          "id": "aaffbebc-fcc8-4ea4-81a4-cf6ed0e61cba",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d49a3af1-7d73-4285-9c3e-d63ae1091376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0ace64-4f05-459d-b092-932680643637",
        "cursor": {
          "ref": "f854412d-d02b-4cd4-80f4-c3d74eaf1612",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "17b6c509-065c-42bf-8a75-46202cada73d"
        },
        "item": {
          "id": "3b0ace64-4f05-459d-b092-932680643637",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2608516b-f389-4459-9b1e-2b4999d8c1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdea195-f95b-4557-8055-415d6f86c95c",
        "cursor": {
          "ref": "6d7e4f97-91fe-46ef-b383-930e0f8c7c03",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3609cc87-2381-4259-8316-c234027659ef"
        },
        "item": {
          "id": "1cdea195-f95b-4557-8055-415d6f86c95c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "aafcca08-8d73-45e3-81b0-43bac7bb9f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a8639c-5e60-4da2-ab4e-0ef2762c8091",
        "cursor": {
          "ref": "3a427edb-7b00-41ea-84e0-0b3a9cd872f4",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c65138a4-0628-4a38-b698-871a03f95e45"
        },
        "item": {
          "id": "23a8639c-5e60-4da2-ab4e-0ef2762c8091",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "934e4152-061a-4cda-a8ca-e8b788bbf6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354bd926-91db-4a94-b314-8ef81200621e",
        "cursor": {
          "ref": "552264c1-1d49-49b9-aa4f-e4c6c511fb1e",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0c311d36-74d2-43ed-aec4-c85f8d72da06"
        },
        "item": {
          "id": "354bd926-91db-4a94-b314-8ef81200621e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1b2447e9-690a-4870-8a90-ddad885a9a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8819d8c0-4732-473b-b15b-858a9532db6a",
        "cursor": {
          "ref": "f4d933e8-822f-4bb3-b3d3-e692ad174e6f",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2906273a-8c5d-404f-a41b-d96c61ba0f01"
        },
        "item": {
          "id": "8819d8c0-4732-473b-b15b-858a9532db6a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1a3fdf23-1fcd-4d4b-9d81-5fc92f8c1d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ddf700-dccd-4393-8867-2a8b1f51aea6",
        "cursor": {
          "ref": "ba7a313f-1cd5-4c90-876a-c9e2d723c10a",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "aaedb8ac-c547-494c-9ebe-5b1c6045a239"
        },
        "item": {
          "id": "d3ddf700-dccd-4393-8867-2a8b1f51aea6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bc4babcf-d07c-497c-8761-459d87cace0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33548c76-3a1c-4c4c-92c2-c47606b76e45",
        "cursor": {
          "ref": "73f6c849-ad46-442d-b971-21239728571f",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "299c80f5-6eb2-4ee7-b403-2cefe5ef2d96"
        },
        "item": {
          "id": "33548c76-3a1c-4c4c-92c2-c47606b76e45",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "86d13662-deef-4bd8-802c-e0602d8e412f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebec67b-8cf8-4f96-b561-0346181c9227",
        "cursor": {
          "ref": "23b257da-8596-4710-97d9-154399aaea65",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "93aae9a8-224c-492d-9de9-5d46dc8a5700"
        },
        "item": {
          "id": "8ebec67b-8cf8-4f96-b561-0346181c9227",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2067e759-e720-4530-b795-db58b13a22b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edc5ac3-1780-44da-b14e-3f28454a4624",
        "cursor": {
          "ref": "1c786615-34fd-430f-8cb7-113df32b7d59",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "426a8398-5009-4d09-b0e5-fc9d41ef3cdc"
        },
        "item": {
          "id": "4edc5ac3-1780-44da-b14e-3f28454a4624",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b0163f13-46ff-42a9-b8d4-f688ed72f9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846fdd61-659c-44d0-93a0-ab0be71d32e0",
        "cursor": {
          "ref": "9d336909-389e-44d5-8011-cd9568ed09b2",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "85b5d518-c836-4a6f-8f8b-852ea504ec7e"
        },
        "item": {
          "id": "846fdd61-659c-44d0-93a0-ab0be71d32e0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ba90be62-79e4-4945-976e-f1556b379980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b946a4-d66a-4ab9-8595-d9498645ceb8",
        "cursor": {
          "ref": "ed4bba1c-d36c-47e0-9d1c-90715790bbb1",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "6ef2bf13-e9b6-4aa5-96e0-1daffedbeddb"
        },
        "item": {
          "id": "e3b946a4-d66a-4ab9-8595-d9498645ceb8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "af18642a-f3a2-4ed5-841e-3a324d802722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff811d0-3b3d-42ac-ab53-ee40209b589b",
        "cursor": {
          "ref": "1b4ca963-ae8f-4c2e-b8cf-87d0757c9222",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "16f5d1bd-cba9-46a8-ac9f-05cec5d83041"
        },
        "item": {
          "id": "aff811d0-3b3d-42ac-ab53-ee40209b589b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "014f977f-59a2-4e17-847e-7e11066e73dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550c4147-d462-4395-affe-4339664307bf",
        "cursor": {
          "ref": "38896b49-14d2-41b0-a0c2-67cc352b3165",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9835a78d-0e1e-469b-9749-2df24bc44c0f"
        },
        "item": {
          "id": "550c4147-d462-4395-affe-4339664307bf",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0a7810a5-429b-4c4b-b528-18fcc2361552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e923b90-59c7-4eb6-923f-c13ba855f4a7",
        "cursor": {
          "ref": "6a857233-481c-4c85-b149-1804ccb09a4a",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6900b0dd-3662-4fcb-91f9-d0283e2fa7ed"
        },
        "item": {
          "id": "0e923b90-59c7-4eb6-923f-c13ba855f4a7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3f9f3cb1-c427-40c5-8e35-b56434e07ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4818d122-9d70-42a0-9634-243f08c115b4",
        "cursor": {
          "ref": "d9f97b82-bbfc-4daf-822e-b5c7a27784b7",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ae958b9b-3f33-42b2-a361-05132e1328d7"
        },
        "item": {
          "id": "4818d122-9d70-42a0-9634-243f08c115b4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7a515f3a-02fb-4419-8309-3196793bf957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b4ea9a-b2c0-47ec-8cc0-ff60c8e2f048",
        "cursor": {
          "ref": "5c6d84cd-c482-4d6f-adfa-c88cf8b2b19d",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b164df52-603c-4504-a4e0-31edb369f224"
        },
        "item": {
          "id": "b4b4ea9a-b2c0-47ec-8cc0-ff60c8e2f048",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b833f2fe-3e0c-436b-8d21-35a34340188c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89f7d6f-f0ca-4a73-9e4e-1845358d849e",
        "cursor": {
          "ref": "6f70b6ea-84d9-4998-bc86-aeacc38724c5",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "bc48e003-32d3-4580-a866-a6867fa25a6c"
        },
        "item": {
          "id": "d89f7d6f-f0ca-4a73-9e4e-1845358d849e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "25c757b0-1328-4be8-b2aa-4a4c89336ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d94b109-9ec3-463b-ac81-1a79bbe09d96",
        "cursor": {
          "ref": "03682a46-c0a1-4f33-b87c-4ce4a224bb7d",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "34215bf2-26f0-42d4-98c3-a2cb0314563d"
        },
        "item": {
          "id": "5d94b109-9ec3-463b-ac81-1a79bbe09d96",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3c4198d9-88dd-41a2-8b23-4d779cafdd0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09bdaf95-ce15-414b-bf8d-7aafa61a7d11",
        "cursor": {
          "ref": "726289b7-d576-4932-9ce6-bf8f33a54430",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "de7754bb-5045-47b5-aabc-c96d2ea66cc9"
        },
        "item": {
          "id": "09bdaf95-ce15-414b-bf8d-7aafa61a7d11",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1401b55a-9a45-4838-b657-102f4ccf45e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8de61c-448d-4215-bfa4-0b94c47eba5b",
        "cursor": {
          "ref": "b97a6921-ee11-4a23-a36e-34e76db140c8",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e01c38eb-eb60-4021-8dce-71cbdcbaed19"
        },
        "item": {
          "id": "4c8de61c-448d-4215-bfa4-0b94c47eba5b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "872d5f91-f4b6-4201-8e5e-42ee6a00bff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5c244f-d895-4229-8d78-71c3c288ff59",
        "cursor": {
          "ref": "ff2e2579-0649-4cec-872e-68a1689f8afc",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d9172a6b-b96c-4fec-b357-16740b63e47f"
        },
        "item": {
          "id": "3f5c244f-d895-4229-8d78-71c3c288ff59",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fdfaee49-99ed-44a7-90c4-95d46653be4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73721ffd-37dc-4019-b118-863d36c41917",
        "cursor": {
          "ref": "d8274f0e-9e16-486a-b7c9-c318355f97f1",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "7b90d249-7a36-4eb6-b2f2-da1094df0158"
        },
        "item": {
          "id": "73721ffd-37dc-4019-b118-863d36c41917",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ba3f747d-0f5d-40ec-a70c-93b2eab552fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c872512e-32c0-431d-976d-263ebdcf1ff8",
        "cursor": {
          "ref": "af5c760b-3b3d-4843-8925-0f62c5b97224",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "7f016487-7338-432f-8c4a-5b02d6c414ae"
        },
        "item": {
          "id": "c872512e-32c0-431d-976d-263ebdcf1ff8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "42b0fc84-79a0-4ec2-b1a0-ef7638eb5b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7223bd4d-9cc0-40fa-9016-b9c39c8015ea",
        "cursor": {
          "ref": "c6340d87-9fd4-43b3-8130-6bf54e5eccfb",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f1d791f0-f3a7-429b-adec-26b88e28edef"
        },
        "item": {
          "id": "7223bd4d-9cc0-40fa-9016-b9c39c8015ea",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d7b36a60-999c-459d-813b-621bf2c37652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35abff9a-bd54-426f-bb6b-6ba1395f8c2b",
        "cursor": {
          "ref": "52a9c6a0-03d5-49eb-892a-f1fa7fd3c570",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8958c971-a177-4116-ae6c-c5d2ff82318f"
        },
        "item": {
          "id": "35abff9a-bd54-426f-bb6b-6ba1395f8c2b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "331ae612-e529-4180-8f0c-e90410fc0950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c1cf0b-2d90-48ce-8b19-0674cf4e8803",
        "cursor": {
          "ref": "3ff0f384-dba5-451f-b998-11cb90979aa4",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "47ddff7f-e058-4a1f-9eb9-3f7cef0aa46f"
        },
        "item": {
          "id": "e0c1cf0b-2d90-48ce-8b19-0674cf4e8803",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "354951c9-4253-4214-9813-34ae8dfd0e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8afea4-4dd2-4ceb-b692-340688105640",
        "cursor": {
          "ref": "df9e0196-6146-4def-8c4b-f0b8f49fe6ec",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5c36d838-b3a0-45b9-9296-bfaa2508e630"
        },
        "item": {
          "id": "ff8afea4-4dd2-4ceb-b692-340688105640",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0dd80ebf-3416-4f09-b661-2b01018f2eb5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1236d6b3-b94b-47e6-a5ab-b20a70f998fc",
        "cursor": {
          "ref": "36bf6517-d64a-40d6-a972-aa0cab0dbb84",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "1e3830fd-ab0a-4454-b486-64a66ac51d84"
        },
        "item": {
          "id": "1236d6b3-b94b-47e6-a5ab-b20a70f998fc",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "805daa83-9338-4bc4-9ca6-ba7a256b260a",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2f3d15-f416-45de-a9f7-b6b075dcf3f7",
        "cursor": {
          "ref": "22128839-4fdc-4270-bcd5-4788d7b16082",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d4b98743-d209-4c8b-9c32-361f84b5fba7"
        },
        "item": {
          "id": "ed2f3d15-f416-45de-a9f7-b6b075dcf3f7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3dc95cff-903b-4df5-a00f-2d65ae64e7ec",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "829c149c-2397-4a74-821a-a137d605e1b8",
        "cursor": {
          "ref": "86bdefcc-566a-4a75-bcde-d41692ea20b5",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "51f4eb64-7067-4144-915f-2a5476973f8d"
        },
        "item": {
          "id": "829c149c-2397-4a74-821a-a137d605e1b8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "296ce26f-0876-4f92-bf4c-29c824c148b6",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd85d126-f6cc-4073-be96-c4080ef22ca8",
        "cursor": {
          "ref": "abbbb8fb-62ec-4a69-b773-d21f00e4e92a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "bce5a553-37b2-41f0-86d1-5f9a5b74f847"
        },
        "item": {
          "id": "dd85d126-f6cc-4073-be96-c4080ef22ca8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8accb681-7a36-4eb1-a6f3-a7d7b74072d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd85d126-f6cc-4073-be96-c4080ef22ca8",
        "cursor": {
          "ref": "abbbb8fb-62ec-4a69-b773-d21f00e4e92a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "bce5a553-37b2-41f0-86d1-5f9a5b74f847"
        },
        "item": {
          "id": "dd85d126-f6cc-4073-be96-c4080ef22ca8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8accb681-7a36-4eb1-a6f3-a7d7b74072d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a651207-f555-44e3-b818-acf192052b06",
        "cursor": {
          "ref": "eff6c989-93b5-473c-936d-e827c85fa75c",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "8897ca54-34bb-4143-bbd2-2cd6489aa286"
        },
        "item": {
          "id": "2a651207-f555-44e3-b818-acf192052b06",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "de0bbadf-e8c9-487b-a1af-0602b8a55b2f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96705e9-dd39-4619-9d6b-8e150c7f6aba",
        "cursor": {
          "ref": "3212c77a-3974-4e0b-9a79-be753671c9b1",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "d24a34e2-8969-48f5-939f-84a5d52f9ebe"
        },
        "item": {
          "id": "e96705e9-dd39-4619-9d6b-8e150c7f6aba",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cb4f4a3c-f91f-4496-bf65-3501d01a0b3f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}