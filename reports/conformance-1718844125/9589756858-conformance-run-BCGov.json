{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "09801ec8-1945-4bc8-a300-85e35d6145d7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "61752fc1-4f6d-415f-890d-eacb6a08a1fa",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5bf9912b-81e1-4f66-a527-af48a56cb562",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1528a943-9692-4e16-b4b1-ce31cec080b7"
                }
              }
            ]
          },
          {
            "id": "19476a7c-f7e4-480a-925d-840c41ebbd57",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "416c78d1-4f0b-462f-9b74-2d0f33f76584",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "697500d6-7d20-4410-ba33-86d42c2055e4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "36c237a2-1eee-456f-88eb-ea37d447f573",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f73f237e-e3e0-4839-84c1-06f94ed6caac",
            "name": "Positive Testing",
            "item": [
              {
                "id": "669abeae-ea63-49b4-9edb-2ab62d87c9f3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41b1b3fb-ad49-47d3-a70b-98cd5c008482",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f64520b-0754-4409-8e83-eefb09d1c2eb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5804963a-7378-4fdf-a6aa-490e04ad4772",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8e71455c-7cee-4a37-9688-b894dbacac50"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "72d33e5a-a517-414c-813c-d7473ed5cf45",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "680e5eba-214e-489e-b6c7-b8ae6aad66fb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b937ac61-cd58-41f9-b005-3067effa0935",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a82a56b8-55eb-4691-8122-16a7be757635"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7fe6923-1443-4a38-888e-4475d94c8ae7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f442996c-a162-4c89-866e-1dce04c8afbe"
            }
          }
        ]
      },
      {
        "id": "41574a6c-bb13-451f-9bc3-4a99f34fbaa1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "dddd50ac-25c6-4a7f-8a8e-c2ac946c9679",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e25bda65-1e1b-4d78-b4b8-451da9d3f905",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "50efce4a-6762-4441-8a54-78af730af0de",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0265de-dcb6-4f11-8172-168b598d5720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f54ace32-675f-465a-b4cd-5c48c09cec8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ea22f1-4c72-4c64-b991-1bfb287bf4b2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6352dfe4-dd50-4fcf-95e3-5aa5a6d5d507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acef5752-a96e-4429-ae94-aa63460684ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b285385-8de5-4e1b-94ba-f6943d198ed7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add981b2-c29d-4df0-9303-a89f27aef713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "742c66d9-9a67-4380-9dce-61ab105096d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "04af6594-807d-4a9f-afa9-d6492b6db61e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50cebcb4-7b8f-4b92-8043-6b26f1e2717f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7566ffe3-9951-48dd-83b1-c5e1515db957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ecba95c9-04e8-424b-9eec-375e18076bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b5012e-9af4-4d85-9e4a-2a6fe5eac76c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c871104e-ea92-4e9a-9732-122444801b98"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "31450f4a-51e5-4754-a1ea-2467cf5efa64",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4fa9c3e2-0b0c-4625-8926-ab53670825f2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "281837dd-3682-455d-a762-fce47f81c756",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "560f45f0-a568-42d8-8c17-280edd5c3781"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "982b5a89-ecfc-4adc-b629-6cc19c7c4e2b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d83cc2cc-29e8-4d05-b741-ab1820994ac6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "686a7dd8-126d-4a0d-b29e-580587b9cdae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c012c91-4875-4aef-99ca-7533d818ef00"
            }
          }
        ]
      },
      {
        "id": "51bd2c01-8ff0-4c7a-a236-3eea8aa604e9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b01fa5af-e18c-4a4b-9e0a-a83997eb2799",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eb203185-2e85-42c3-a6a4-aec2fe8df27b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6aeda170-0519-4a0b-a431-621bde592666",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3b529e-1fb0-439f-b655-e3b8bf5dc195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a1832bf-b95d-4910-b401-727dc21b2953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07afdd8-0a26-49b7-ba10-f778eb016768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "677900de-9276-4ad3-9758-9b4892e74a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab799c7e-0e56-433e-b27f-ddc2b8c0df09",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15dd535-1adc-4e37-981f-711a4fb7bbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "109b142c-3d31-4b89-bb75-7845c70532d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d9c6cf-06fc-4625-be25-29e2b169df12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec37127f-41c2-4f5e-9005-a5867bcb17ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076c9157-8840-4ca5-a97e-a72de6d48ca3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53bf73f0-8bd3-4fa1-90f5-56664147aeb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51837ead-1d26-4440-b22e-cb39d94d222f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3586e715-619f-44cc-a380-e2bf8a0bf075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1e531ae-517e-44d1-ae7f-d28399c50eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3950b750-9041-4d17-a4c1-bd95365d6f70",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13832bea-8f43-46ab-ba2a-177a1724a0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2320966-2ee0-4311-84ce-ef68bf487b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8b51ea-6bb3-49bd-927d-d797bb462d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e280f58-1576-443a-ab07-ab4195dd56e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae1c0da-9576-48a1-9b1d-afe5d837f204",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd793bd-2754-450b-a114-9eb25cd683c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f331a1-c564-47a5-8f5f-cfcd3d5c6cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3509c1f9-3b86-462f-a83c-fa9e268900e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c740b26e-161b-4686-984f-0bfc5e41580f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0eda3d-5577-4395-b5fe-a0931de15707",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb6c508-4ee5-49c5-a842-f4aa206db0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f9e496-02e8-4150-8892-d91716200625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47bb9b53-0722-4aaf-b7e7-de7e782627fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6039ead5-d3f4-4ab2-b985-597e64df63c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360f8235-6f88-4783-9b42-e871ea3e493a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915a2a3a-087d-45c8-9227-883b37c9ce50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "704d1c65-d1e4-4a97-94a9-944b487c966e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce74a4d5-0235-4d12-8917-160ffcb4b2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3269a8a4-bfb8-4e17-bf47-3079074d5abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52451cd0-8095-48cc-b9eb-f7a2cd5e747b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c7529a-4333-4aa5-a03f-66386033e7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2932eb37-9784-40b3-83dd-56f2309a5427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc26281-b76a-4ee8-b4a1-d299e6fb0aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd58fe28-2c88-49d3-a648-bca0ff223ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9648c8ca-e0a9-4d9a-9b59-a215b19261cd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab9058d-2a48-4aee-bd71-45a930d2fc14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b4925c5-3fe8-4dd2-ac17-a507836f1c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d56c6e4-d4ca-4ee1-be14-73e82ef1502f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3862305a-6bf6-4171-9334-1e082fe2367a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357c8e02-f4dc-4c36-a016-c184b52df467",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f403ea9-2b56-4389-b5e5-5aca2e92028f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6fcdee4-99ce-4585-a042-53fc651446ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afe08d0-5004-4d5c-a8af-7ee2c13a86bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f37cba0c-71a9-4e50-a0e7-8c16836c4c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a04ae1-b3af-420a-a086-77794ecd1fdf",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568138ea-51d2-464b-9a2d-d69f00329a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59980002-a77f-431b-be5b-9b2c074c2462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb0ec46-5e5d-4970-9417-80bca7cd0a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b61883e0-f12e-417e-9ae6-98495c6df2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21f210e-dd7f-4dff-8d3f-d064880a3e69",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2098d9a6-0676-4bef-8301-ce93b1f04ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9e209f-3c95-4f3e-8d32-2f09f63fd512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ccd47d9-18e2-495c-8d32-718887e841bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec68633c-2a68-42d7-b318-a52d930efb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3d862e-f249-4d58-bc55-b5a142a7d4a5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff95f9c-97ba-443a-8a25-756065a5f07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d052eb64-8fb7-440d-a5cb-e9b94c53389d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e2c8bb-95e9-494a-8b23-0705dacbba68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1546e17b-caac-4fb1-b42a-dd3529b7623c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7249db6-229b-4110-9ba7-7fb12b6139b4",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de79775-e755-4cc9-ab40-fe96944ce853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f41d51fa-23d0-4e30-a0b6-2fa6c33aeab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c488f402-2444-4c96-8e5d-8766b5428aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "758a41cd-85f8-4828-aa39-729d15ca09fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b5bc75-57c1-4ea7-b9b1-ade71f91f867",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4bef82-ec38-46b4-ac59-2f675d615233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2504841f-5cd6-41b9-ad5b-62091be661d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc28b3e-ba96-4b90-a2be-c33e002227e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50c6fb7c-0f2b-4096-a6f6-b5af0f9b3f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec1f2ab-fa69-4162-8be9-ce8687af92df",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6c5396-5d42-49e1-bc36-fc702ce3c57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d250282-05e8-44be-8554-528dbcf83cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa52a98a-14bc-45f0-b87b-fd77957a8330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d13122ff-de33-4b49-b9bc-8546c994c817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0d57ab-7488-4e25-94cc-8536cd7c4579",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b010792c-3a86-4164-8574-a599f73157c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ed514c-fec9-4dcd-9977-c52e7ba1489d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095dc477-80c2-44d2-a4ed-d80496bae9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e907b464-4439-440c-bbbe-a9f573aef822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76cfbd2-51de-4745-b3c2-65984de3f28e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af29fda-168b-458f-919f-6942a8626911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "704a2877-5289-402e-b2a3-72cef8e12723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b08365-fa06-4f8e-8c52-762362f0fef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc8475e-1168-41c5-bd19-cdc92bc75370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4c6c67-5f0c-4461-864c-1bd071b3879f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002c598f-6180-4211-b411-d57aa875f70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aebe9ca4-212e-4863-9f46-157c27fbbd4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e07374-68f4-467f-a9a2-80a82ef9905b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32a0e745-987e-46ab-a4f7-a6c9859ae0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d0d6fc-e9a6-4211-8918-72d4d40028c9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64f65cc-9921-46ec-b24a-3e0efe3392a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f72ea5-a96a-4941-8229-d08cdf5f6873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42e4e68-f66d-44f9-8cf0-c5664270e087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad8a400-c17b-4e3a-8898-b9499b0b4d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215edf6c-1617-4381-a202-9d50cdf67f49",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae228b78-b3f9-46a3-926d-fb2c933294fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ab68fc-3a33-4a25-a3c4-cf0dc390cd1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4885319f-c75e-46bf-9a38-f05486387446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bafa155-d281-4300-929b-b9daae9bb177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c9b41d-3330-4203-9eab-e626cbe85675",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c084402d-caeb-48a2-a46a-b2971d4225f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6961f6-8f62-4e9d-b3b8-e86f742d03bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187bdb46-5ae4-4382-8e1c-6611dc65bd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d19f4b-bcc9-415a-ae93-d737fee6d0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268f1467-9090-412e-99e1-b8842d9a838f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc87b8b0-4de0-439f-9502-6274d5336fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0309e53c-af8c-478a-bf78-1da969892ff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a246af-4816-4347-ae31-bd050fc1fb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "479337a3-3aec-4355-9700-457763063727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782493ca-a6f0-4058-a693-472412f4863c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2ee0d3-442a-406a-84e2-7e8498b149ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "981b7965-81da-4b39-9718-c890f32ca00f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947419db-1d4d-4a26-b189-38ba2ef7f54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "100d10f9-43c6-4873-a490-6147c43f259a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e106c2-35ef-4ba8-abdf-5652fcad3447",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87992cda-43c4-478f-90b4-b18f40a7b5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8612c3fb-fb63-415e-8bc6-e4cecd6f5175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603551f6-83a1-4147-a0a3-104424307c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "63873b79-d86b-40bb-924e-2d6a6aca29c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f405f5-b6f2-4ec6-aac3-d68184ea7382",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ee5f30-dcc6-4a98-974d-21895f31e808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa60595-f019-4905-8916-560df414fbd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4caa08-e91b-4b6a-8c2a-8218092396d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4528cbe-f6e6-4c57-8ece-ce9d252ef35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff368d4a-812a-411d-b4b5-1fe6f4faf414",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e78fc2-70f2-4a6b-b9d7-50bdfaf7ad9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2a630c2-71e2-4ea2-8ceb-4c48b88d3d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434a4747-53f3-452d-bed3-a36eb59cc0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca840700-cd98-4e7d-8b00-8cca87cf752d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b97c32-ff62-46a1-91aa-8e884c6fb5d6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c28faa5-f2cc-40de-8d17-e03e02b4c6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b1f273-9274-47e6-b06c-cd41ecb88460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df849617-1370-42d2-86dc-d394729710ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eea29a55-d793-4e7d-9388-ad49ca1d575a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb776597-5632-4dd2-b804-a3b35274d608",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70358e1-9b7c-48b2-bc29-cfaffc3ddfe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd42d4c-900c-47cb-a5f3-2e74cee2ac6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dadf68d-45ed-4c6a-bb37-7ff32d6cd8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c84a6f3-f04d-4053-b5a0-afc64d57ffef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3286d920-b78f-46db-a736-3d4815d7adaa",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cac91a2-713c-4bde-ad2c-2cf2d1bca277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79dd7de-0baf-45c4-b750-0ee4ee6d342d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46d8f9d-e12e-4539-8b55-2812e5914edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d91a93ed-8502-48c2-a128-60448c0231f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ce276a-1874-4f96-8611-019dbeb155a7",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6620f649-ddd1-4523-9919-f991fbc82ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a66fd2b-846f-465f-82cd-3da39520de93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c7a8f5-919a-4dc4-ab80-07b3c428079b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "21bfb004-14e9-4280-b189-dc270512b621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5406d4-e638-4807-8505-ce62b8f71de5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c890a59-ca50-4423-b011-d8a695ef9607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe51953-a4b3-4d32-af86-cea1daf467fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22c0b7e-b91b-4449-9219-e2ff7461b3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a01cf656-f829-42c7-836d-379212419f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4038e192-bcff-49e8-861b-69f3c41e16fe",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ccfb39-c081-4938-a686-da73dc1fbbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edbea8f0-78c7-4919-9be2-f510245bda6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1f6213-94ef-4d83-ae28-33911d91b60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93763286-e0c2-46b8-8a4f-a01a789eeb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c780454b-5ef2-4c61-a799-13b1b0c9aa68",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab01d818-7120-4829-81e5-3af64b5e33d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55888114-3f2e-4e53-afb3-56da513bedbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64b0770-6e2c-4b43-8aa4-cf39182bf0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b37e527-b6c3-43cc-9610-b423332aed57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c3e5fc-9b27-42a0-8fd9-f9cc1a92c96b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4fdc49b-e752-49b0-9d68-b873086c48a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f1ab045-a9e9-4b71-aeeb-888a4cb16f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad0a960-36a8-4a9f-bea4-6c55c85fae69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9e936937-3b38-4c2b-baef-07b95210d3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b8e92e-390b-4d3b-a8cb-b8bad02369fc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2572f7-ac8a-436b-b38c-ed6ca43dcf1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f7ae178-c0ea-44c4-8255-37b4220374c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a74ad1b-9807-48e0-b49c-e95030233ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "870d0501-4f72-4eb1-b2f0-b1ca04847259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe9d706-0a69-4aac-b194-a8dbe35e2943",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27df6fc-9eba-4a7d-b625-1bd6762285f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc72a8a2-eb62-4d6e-835c-1e12b9d9d883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a94eb9-296f-4fb8-9dca-ec989f9ca9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a39f1a48-c278-4233-b8ab-ee996dc54fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2400a0-cce6-49f2-adbf-db07ff9bad67",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77fcfc3-3201-4845-843a-8e9b3079790b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e900e2-e750-4ac0-bbb5-20c37f28bd33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d115bb-d5bf-4689-8dd8-3bd51b7f9177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccac4995-a6a3-4d3b-9d03-88af536a39aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53c707e-7c03-42b8-9170-f0400f508f88",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce071b8-8d51-449d-9d8a-a1255922dbe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ced92f-0ea4-45a0-9f93-1eef38b10b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ae010d-b927-47a4-a6e0-3c234460728a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "46cd6252-883c-4c70-8361-38fc77d5fb20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce43cd8-bd8f-4e41-8d82-51b833ce244b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bba6a2d-176d-4be9-a746-37d3cecc475b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa5ea31-83da-4d2a-b948-d21ab976c0ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc68f19-2599-4bd8-8070-c302a28af406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c94e75e1-f25d-485c-883e-ec825eba58b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d0e15a-47b1-4fd7-a6a0-717e37426a31",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbad47a5-1a64-4f9a-83f9-1d05a7ea5d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b554dd5-a22c-406a-9b72-1b5393a50e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db58d22-38fc-4b4a-a507-f67f9377fd22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0674cb0-99d7-45f0-8dc9-a8b670f5bd9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4785e01a-26c8-4af9-b35a-b70cce7c444b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c27dd8e-9a27-40b9-bdbb-507dc460d716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b836b4-478f-49d0-9662-ed6557aaca62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb508c8-c37f-4730-bed8-f0f8bf2b7f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "25a622aa-9983-4e8d-9217-04199a59df8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013f6e12-ccc8-4f47-81e5-04f2af9bac51",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca46339-831e-446d-b333-fb06e723be3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c85c7721-13b7-4cc5-a6f5-b336f30d2cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caddf1cd-35b7-4226-a6a1-f18827fe34f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "33a88b34-a66d-4c38-a297-6f58987b4a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bdd169-95b1-4511-a9e3-a6d0e837a550",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a326740-d210-4c4b-95dc-82a7ff5d3960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "934866b1-682f-42a6-a986-f466a15c4a6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d66c0ef-1c3b-4ba8-9b56-9706b0e4ac7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff338a34-2097-4e61-bab6-ed7a51ecaec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcbba3f5-7ac4-4168-99d0-1ca14c8f9b7c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665c717c-09c3-4c7c-bfb7-81b02149b20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c5aab18-6a42-4b86-bcd1-724eba428e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9e4569-e5aa-4af6-bf0a-52f711865587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4de4da77-e48b-4933-9661-965b2bc7e7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603d2fb8-1a58-4e8d-aa69-52b6e48c4a69",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a6dad8-2351-4f66-9192-15f2ec61dc3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56ba4fe-7e79-425d-a525-25925af7e963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048ac361-8898-423b-8847-54ceb159bc2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac963cd6-6a61-45a1-ae8a-4239173b76aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13228fb-f008-4b0f-af00-6fbd4ec34384",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d526fd4-573a-494b-a583-c480cb094a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f978e9-e7ae-4159-89ab-a699df8d1801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ff87ec-1747-495a-a136-09aea3cbdb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d494ebc-bbe4-4aa7-9eec-f468f0cedc07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0f43da-acae-4eb1-b221-70df5f670f58",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13fce5c3-0006-4973-a8e9-ea104dc197c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca64761-4f38-4cf9-9102-71a8f4f3d231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8220074-9b0c-40f0-be04-3e9f045ee64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1007886-5e12-498c-8347-d764530a7828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9dccbf6-e0d4-4f88-b810-11462877cbc2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11ae8a2-1e82-4e55-8ce4-a32c7c649de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be18c45-5d7f-455f-82f1-b91714aef4fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be1bb76-e229-46ac-b81f-b9a7b7c9fd9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba21f3f4-eca5-4ca3-8b3b-9437c473e829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0bf237-148c-43d9-8a13-2b62142bbb45",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef281ce7-f462-4269-8ced-95fc2159bed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac66b04-2833-4980-828a-abd5cf9a6bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14231d5-538c-4956-b399-639cbde26d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "50ab8cfb-6d3e-49da-9df8-70c26ad98fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4608eca6-5652-4272-99c5-3de7ffd58fff",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25774d88-28ba-4505-b820-f2fec47afe09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c0273c-77d7-464e-9383-f577d13aacdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ad214b-9dc4-4414-bd6b-e9f3faef3d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "588c0fda-bd68-4281-bc06-26c48aaed302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8238582-5626-4b38-b8a5-46a84512b0d9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47fdfb78-d45b-46e8-8d6c-bfe5b2510f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a09aac-2d20-4ded-b9c4-0af4c58210b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9c0d15-fca4-4666-acf6-9685c44a63e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf5fa48-25a1-433c-9652-1845f4bd644e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8de332-152a-408a-a1b7-fffb77b0079c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7244b6-f931-4ea1-973b-2d53b905887e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a5bdce9-4456-48d8-86ec-ee86a4494524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5d483f-0717-4115-9af9-e6dcbde9ac11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b66b1c27-bf6a-4edf-b942-93f3693e5d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a250e0-df32-4c52-8c75-4727eba1d349",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d045210d-9bca-407b-a12c-d72ff3400ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61025fe3-ebcd-457c-8810-959eab0c4a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c01941-ca24-41ce-8022-76be8d0cda14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "94e47f48-cf1e-4fe4-a6e5-0bcd76da72e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d8b62c-63b8-4846-9a2f-0f5f201683cd",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3b4623-40d1-4468-8145-848ac3b1ef1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1b32d83-47ca-40bc-8e3a-af5b8722943b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497982d9-d53a-481d-9e89-a631d5de818a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2acc356e-59ef-4b7e-8d3d-ab6401ecb479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adcf5628-7630-4605-aeab-a95f02d0a88c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3144ccc-390a-46c3-9380-fb02f06680e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76fc7c5f-fee5-4086-ae88-9865d859f06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce841e2-0d33-43c0-8c82-073815011349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "cae636db-1ddc-43ed-95a0-f452d5a6dd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1ee547-1e08-4eb7-abd8-8366e9601d0a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d63df9b-0dfd-4090-bf04-3f8e0f301942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc6ab5e-d296-43f7-9363-3b23031fe1ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ec7b81-583f-46be-aa71-2df3a0b77e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9759409-073a-4f93-bc19-49cf1e97c6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c538a6a-1289-4a6b-b69f-db3720698e04",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464fb197-dac9-4a54-8863-304f064e9dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724a6a09-3de5-4481-a7b9-97ad77383a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d6176c-f028-4cc0-98cd-8abcee44ff35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f22d0d5-6d18-4337-97e8-1b5f49a675ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25689dfa-4e51-49ae-a817-9a75a6c38018",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a39732a-0018-4004-8fcf-072bd5796c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d18293a5-2e94-4b2a-bed6-d612e97ea3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c538d3-cf1c-406f-9145-94190210f2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2421f9b8-01ef-4523-8a9c-93220286c5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8377e4f6-bd2f-4225-beab-7326b7ea2b27",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17127550-1c8b-4cbd-8873-91ae77fc28bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f459e38e-9c15-4a64-b24a-e70ae9732f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a842ea87-42d7-483b-9750-2af2e8bd35ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d6fecc1-6b3d-43db-9ac2-43daafa2a599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09891372-9ff0-4c92-b178-1afee1d4e773",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "971f2d39-a1e3-4103-96a9-16b75899d0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03729398-31f7-4f35-b180-b92d3ea4a366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408fc781-b6fa-41e0-8eb7-fc02327a953c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3849d09-1584-4cfb-a0e1-53d161b5927e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad3c31f-fd15-445f-bd18-ce66a1bb5f16",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f8953f-a244-47c2-b385-d193aa68cd15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f8f9072-751d-4ae6-9765-ea432f8e7bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58179db5-0ff9-4946-bd9a-bcce3fc6ba10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d72119e5-1363-4e6f-aaeb-030d8e86329a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2686da36-5a8d-4190-b12f-ffcd19a08811",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37824a7-c6cf-425e-b110-2f330729118b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec4ea78-4fe5-478f-8fb8-d200673dec16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd868981-e67d-469a-a8d8-0e01fbb4097f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fbb6049-f497-4fbf-bb74-232842232cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e33f4c-dff5-42eb-ba60-79680749f723",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebca99f-6e1c-46a7-80a5-b508a16a837e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c724166-1d2e-404f-80f4-770acb1913f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204a3d2f-68cd-4b40-a4e7-433a682c1287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7eea6ea3-aa92-4e98-9b9e-61e8bf15c831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f2840e-f1a7-4ac1-b599-d07da85f3677",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5107720b-d6ce-4a7f-97eb-79a28c9474ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48e97b1c-e779-4a1a-8365-d0a23c32f81c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb56131-c8d2-4167-8fd3-e785db7f52ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87bb401d-a5d1-4812-86f2-7e263f9f7451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ddbc00-b821-478a-ac44-39d1b2326fc8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade7525d-0b91-4b36-903f-175c401130ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f5f6ce-d83c-4660-a258-7dca3e387fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4006ab-f10a-47ca-a2d4-a564aeccd07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1068fdc-49d8-4e42-aa47-9ccfdbb15c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43fcbba2-0a30-4e5a-9a6b-b812bab6a33b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c71305-bbcf-432a-9d28-e7025730d049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1e4e9f-ddb6-4111-a172-7b98ec5867d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b360aa0-8912-422d-ad66-3d700044f318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1966f1ef-91e1-4d01-bd1e-fe1b73de3b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e5d654-4c1f-4422-bf5f-356b0a77ee13",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "226b47f7-7e5d-4eb9-afca-b0c6848ea647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7440bb7-c09f-4cd4-abad-4a29281c74f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d96d3d2-60a3-4486-a92a-11a093f480fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "df7da548-30af-48d4-85bb-89452a99e011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02151ba4-b791-4640-9d5b-84c6ffe95029",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c98968-6e1d-41fa-9601-42a3aae4631d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6411c7a7-2c68-4543-b59e-ba783936c667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01dab00-7416-4e4e-8704-438264fad37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff84208c-be07-4390-885f-caf04684e7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fc7fc4-6373-49f6-8bb1-7ac33749824d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a97d1c5-bec2-43bb-98a7-86d29785bc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ab8168-9a4b-4067-80f0-b572b8891a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b3d26d-e4d7-4f67-bd9e-c8040caaa5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b90bda57-fe11-4a1b-9d79-32655b7c5e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b723b3-7018-48ca-bb50-4f24d650bf04",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e02d824-db02-459b-b343-2ea82ed40e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "479e1b39-360e-4564-92b7-e6d3af0d6140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0413018d-d2bc-4392-a75c-d20ef1312fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc730d1-c560-4874-a861-aa5e90d71c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c697667c-119f-4661-a6fd-8acfe5136197",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32fe168-f6a6-4d4f-bd26-6dbbadc23be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc9e29dc-0bba-4997-aa64-25cf6730e3ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ebef7d-b952-4d37-9966-92e08843d5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a8a8576-7cc0-432b-90cd-ba5c4b9524c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448b640a-fd59-44fe-8cd0-a013f33e761a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f272a916-6048-44c6-bc51-11e48b31af16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d597ac-7733-4c96-90d3-d736d4b1ff4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15cd15fc-caf7-40ff-9e04-bc17649df2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "83d7d353-7945-4ba2-b565-d22be4340a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6282bca9-280d-43d8-8464-75fdf3571fde",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "674254e1-2333-48d8-9180-ada8efa36e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b20f13-06bd-44ef-b107-47aa9300e1b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f065383e-82d7-44f7-9dc8-5aced2ac1145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2357b582-b2ca-4cc3-ad3a-a7c5de7a4f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20153020-335f-4402-9061-aba86ee321aa",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0d3704-36bc-4470-aa17-8372466684f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f3bc52-5f4b-4b04-91be-0e29910d1c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a02c3817-55eb-4b0f-b8b2-af2dcd166385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "44460d93-c5b6-4033-a217-f14d66c1884b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581ed9e7-6230-4c96-b331-a35b96d5225e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ce9596-df57-42db-9f62-ad8910349162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e698d6e-3615-474e-aa1d-212f6588e0ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d352343-beb9-47b0-90a9-591760cfaaa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c92a0e-2040-4779-aa4b-0c70b41bdbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481f2bc1-1334-47ab-aedd-f3fadb062712",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34762e2-0175-45f0-b043-62f266d5f086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be9ae43-fe9e-45fe-8170-0f07aa69d6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff04a140-8e17-454b-8c3a-4ba9308f7c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6641452a-0f38-4c82-ac4c-93c462bafebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf115c0f-2f40-48d4-a8cd-d5ac452cdec9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9258c110-648b-4093-bf7b-1782fe41470f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eab1abd1-80e0-4305-b367-8469d46a8a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97204b88-81f7-472b-84b7-25ffe66b7333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94da1113-6b9c-46e3-b80d-1d1adbbb42c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8b832d-765f-46fd-b504-f2dac7315b1e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22f41c0-12e0-4c8a-9906-86856c34c7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02aa41c6-ddef-4339-8747-003875db316e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2d70e6-80e9-4151-a49b-49acdfcb45b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "17f19c30-0b0e-403c-beb2-add6c3f8c0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c207d55e-40c0-4d68-97d8-906ccf99a79f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "445bf996-9099-48f5-9123-6072b2e671c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7cd2fc9-f136-4fda-9290-a40661648ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38553df-f68d-471f-a76a-33da2ae2418e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08666669-1a51-4dba-87be-edec318a0e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9dde5c-ffc1-4f12-9ee8-aa3fa86d30ed",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df989f39-71ed-420a-ae87-38b5151df97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b966a632-212d-4b2a-b140-0f2f7da9b13f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0cbd32-4216-456d-bfaf-7ac6fa705d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b95f0973-30dc-4170-add5-3c6a2b370ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4c85d7-11f8-4cc1-b7ea-3db5470028fa",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8640fd-b619-42bb-abd5-8272ee71ad2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a0dfde-0426-4951-a447-a23d3d41584d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948a6026-d31b-4f7e-a8c7-ae959efc69bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13d23b5e-cf8d-4859-84c2-c8e18e2a00b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f968c61-89ed-4a59-b3d9-ac992cc8ebfb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d778fdf8-78a9-49e8-b71e-5fa2d30a35b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "305780fb-9662-44eb-88a6-3b35affb9789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bad83d-4f5f-438e-9828-b0b8e5be76ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dd02610-720c-485b-be8f-23a11f6c82ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa45532f-3a4a-4ae3-ace7-6b273c622839",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854e86a3-435f-4178-ac27-722a31e5a6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e669ba62-931d-4ed6-8897-ca0a4ff6c2ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d6addf-6f85-4028-bfe6-5ea488835963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39943c54-93f2-4e3e-b910-bd24a131878b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d555c5e1-957e-4bd0-aa1f-0a45cb7b060d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f2b88a-9a82-4d01-9cec-5feac9f21b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12050016-73ad-47f2-a129-4743dddef2fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7d82e8-bfa9-4f8a-9f59-a4864e0fd2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd77ed7b-a2f8-4a27-bc24-2c20cfddc517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad97058-033e-4c67-9f12-804ee59b53e3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194fbac9-0a6e-464f-901f-7d42f498a7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa4c674-6578-4d64-8d4a-07e70fd19a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d0670a-1b95-4881-af47-1d2d8668e639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "665cac1a-2c05-4fbc-b470-a3699528d087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4507158d-38b1-4656-b57c-8ffe7002bc1c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c24967-8658-4bb3-ba12-b1aa000eef0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f8d94e-88a3-47a1-b851-61b7bbd97d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80520ee8-29ac-4f50-bec4-6c5eccdb637d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a36a8ffa-233d-4139-afd1-5e7bba1e7b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8920ea-8782-4b5d-b37f-92af90e6da23",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8504bc21-1880-46f0-908d-0a77457e0957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8079c1ef-6ff8-494b-9541-627ae3cb6ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "febaee05-6f9b-46cf-9f6c-b5bc10a06e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3af44bd4-e8ca-4a82-92f8-2814dd71be0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9988ba-2cb6-4ad0-95dc-80c5469d5c32",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b819bd2f-1eff-43d8-a93f-a37ad67c519f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c834ef-3795-4db5-b7f5-8554f38ae6eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d843ab-50da-48ec-90b7-0b81350994f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b458533-87e4-467f-a4b3-427ff4d992f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e332307f-a383-4a39-8f76-97a646e5297f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f252b6-0b58-4de7-91dd-9ab20cd77f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857d6a0f-7e89-4150-9b8a-6d53abe444ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b129b93d-ba5b-4891-acf3-e836822667dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e048801c-7342-4495-8c20-c56fee274b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482ede94-8257-4c0e-a074-a9eaa4c0ec47",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5d0cd0-71bb-479d-b691-e1a2bab733f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1edbca85-f8a3-4302-9f54-a11dfe272dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe7f389-c305-419e-a3e2-48edac2ed1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "561c95f5-abd4-46db-8693-dee4066799f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51402586-dcc4-4220-9b28-1473820704c8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385f23d4-5275-43bd-8c11-9dac60ce28eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9d785eb6-a4c4-4a55-b2f2-f367463123eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379d9634-667c-43c7-bf36-45fa6e5cba9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e42e955-9349-4cb9-aa24-58af7a35ef18"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3110d541-88ed-47d6-b349-a6fe2c3dd3d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0a2770b-ebe1-43d4-92d7-7a0e8c9fc1a4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae7efa0-687f-4f37-ae12-1bfbfb865cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37870f47-e995-4faf-9d3d-43272427eeca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b0c279-892b-4542-8f25-3aed553460f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5528124c-530e-4ae2-87b8-67053f33c108"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e491f13a-affc-42bb-836a-e9758fdf7774",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08c57c14-669b-48b8-b669-b7d2003eb1d6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9909fdc-3f8d-4a8c-a344-921ef029e22b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1269872-a2a0-434f-b874-3139e17d21b9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e7eccb82-a7fb-4749-8bf6-506e9966b3b5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "11246ec1-ee51-4bd8-b446-eb3d19cb0bc6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a7e6c581-7420-4e1c-af29-72378123a356",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "162bd67b-92f9-4751-8dcd-d3226f39646e"
                }
              }
            ]
          },
          {
            "id": "fbb4bddd-13d9-4837-bcc1-8526864f7b50",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8e79f6c4-b85f-437b-b352-86095b001031",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ed1b477c-20ca-4971-bdb9-e7ef71ed3ec7",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b6ae08-54ab-4f73-9cf7-544d62e75474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ce1f953a-48b5-46ef-857b-7ab97777040b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f3500b-9bdc-4d1d-a4c0-be2986a87053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "053b82cb-98ac-443f-9a06-854ac44fdf10"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ddf3aae6-71c9-44ff-8c5f-ae10ac09c91e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2559c0a7-333a-481d-b182-1a02fb4fc4ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1822799e-359e-4b65-b663-b55b34361341"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93fff859-982c-45f6-97d2-2c964855efc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "53ac79b0-e96f-4de0-851b-3369ef9247a2"
                    }
                  }
                ]
              },
              {
                "id": "4df22548-e079-4460-b1d7-932ce02239dc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8eb75982-184d-4153-9a78-762d857712d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6d555869-86b3-47e5-8404-6fdcb19e34c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "291a151f-4e70-4221-a1f9-c0539884a7b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "53e3229f-4032-4b53-ab69-f2bc8037e0b9"
                    }
                  }
                ]
              },
              {
                "id": "50a64e9c-6a08-40cf-8840-7a8b386a7b73",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fda8566-7f2f-4860-9129-065f0c3663f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "990a5dac-af2a-4e62-893f-9ae1b8ef639c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e55412f-42b5-46a1-a009-46f097e0546e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b619e6e9-2d3a-4164-9fb6-7c8f319c908e"
                    }
                  }
                ]
              },
              {
                "id": "38c42590-5ca3-46f5-b439-93b523e7b638",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86c92a24-42fe-4dec-b3bf-ad5599b93766",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "845fa22a-ac12-49e7-b237-711121ae2333"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "581b5adb-1eea-45e1-8849-53eba0bd3edd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b6a17053-3cfd-4f1d-9db5-0308aad55271"
                    }
                  }
                ]
              },
              {
                "id": "b4be27a3-7e03-4ffa-b7b6-4564122786b6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b5f8d1e-3d4c-47d7-910c-b3528fe2d23d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30fbb33f-638d-4cad-b54d-9a5bffe005a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2338edb-9cb8-42f0-b51a-95dc583fd9be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "befda355-c495-41d6-8faf-3ae46cc7ae5b"
                    }
                  }
                ]
              },
              {
                "id": "410065ee-3aed-432b-a3d2-cbbcc027b6ac",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4f34f63-066f-44a0-863f-9d269de71d14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "08e53083-68bc-46f7-86bb-f8410d785f78"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1674c36-42be-4f18-881c-0be7767a0fe2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ff629c8e-f183-4d1f-bc3d-5f3cc7ff1bff"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7e41c673-f4da-4d9f-9fe5-7c9e50e06d97",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a2b92be-8d15-4f70-8ebc-505c92ee7add"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fd555f63-8e3a-4277-be79-52b14e95ed22",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "72a1eda4-6eb1-4b7e-a812-e730f43d2bf6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d4ce145-7a53-428d-b3bf-be1dcb3e3f48",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "bd4f75a9-10b7-4d4d-8290-b6bc7b99c5eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "564440ec-ff36-4384-bfbf-417d130c61cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc9c926c-dd69-45d5-8419-3ec8a39a2cf4"
            }
          }
        ]
      },
      {
        "id": "8713f40e-cb41-4c42-878f-f00a1e67a9dc",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4a70beb8-e684-4e02-9916-def2e44fc6e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f3d1c1fb-5d39-4c8c-a210-ab67bb6be8fa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "06f4c979-60b2-4dd0-9c3f-a8ab4c843ce3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f97f80-545d-42dc-9099-9d97249ad7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e6917c4-01c7-4967-8469-2c0cbeea9953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7503a0b1-91f2-405a-8e34-7c5480d033e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "06588509-767f-4fdb-9784-b7e6f4e6477d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a5abc4-d2ee-40e5-acfc-07f3aaac57b4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589c0c0e-ca50-46fe-aca2-c605da14d62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0a4e96-25a2-435b-ba99-8359dd7b0ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f63881-6527-4e7b-a8e9-ecad3b6a30b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0073c6ed-d47c-4c7e-b7f0-033d3bcb12a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d5e443-4a4c-47b7-94ae-7c162c58048b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e33c45-d0cd-4dad-beab-0d75624bf2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4136739b-fbbd-4e89-b5e4-6af103ff5965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba9bfde-3cde-4384-a9b8-43c34e28a27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "492eb817-be4d-468d-97cb-4f1a0136e376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c429b2-204a-459f-8981-38d35bed5adf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1cb4f5e-9ab5-47b1-95d9-54cb7712d9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd881b9d-0195-4861-8949-2a5995b8a751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59175116-8a12-4f55-93ba-d8be9080f2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a59cdaae-e6c7-4813-a183-ea46da9a5fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026f0fc1-4ce0-4f98-9831-4d5e83bea6aa",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ec5771-6c03-4911-bab1-3921fa416f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad5f6144-8f4e-4239-a988-6980028897e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83230544-d768-4fcf-83c8-522f08137cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5faef202-7b2d-4484-a21e-6f6f918e2b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24df0a8-f917-4263-a1ca-3c6df6bfbf69",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ce6a57-ad35-4c01-9918-f53d5b858d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f595b600-66ec-4861-b6da-72ac867c98be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43cf052b-14dd-40e2-8e5e-5e1bf74124a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a78ad6d0-213b-46a9-82d2-930458ef2fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f45bf2-b9eb-4484-902f-641447d66547",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cdefc2-2294-4af9-a4b7-144e5eb31605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f91e7cf7-5d57-4ffc-bf25-007e2b70c833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6933ef34-53a8-48a0-bd76-e40df3cff10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "58622906-5460-4166-845b-70b792d60b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78bb54f-294e-4c17-b096-6c19ae842617",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b1e38f-ede6-40a3-83ee-3c76147f1986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f23a186-c246-4430-92ea-e06f876690ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78439373-90db-42f6-8d4a-ec926c571fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1220895-58ae-4c48-9c0e-992a1f206e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8e09ae-0db6-4a6c-bef5-a9829e2cf354",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6c268f-6886-4904-a6e2-3ccd79d53d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019167a9-ccdd-4f2a-8f6c-3e0a43d8dfb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d809110-1fa7-4275-a818-9961a29a0272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b658aff-b6bb-431f-aef0-c16f283cd7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6935e9ec-d65e-47ad-97e4-a6b074948516",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92023172-7a08-417c-ae35-096526f40dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90313b11-3911-4e97-85ae-ff35f7165f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b32491-d243-4ce6-a7eb-2b2e5cf94d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4abac2c-7b4d-4b59-b25b-8bc39ce1471f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3cc4060-82ed-4932-afd8-70e653d18223",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3555581-b99a-4c6d-9da5-b8231bb8fd6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca575e7c-513d-4057-8843-0930e30712c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da9b3f9-7969-4630-8aa7-f5af114ae392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "15f06c91-ef4f-46b5-9c99-b703e7c9698e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fefbfa-8dd9-48e4-ad92-c2c085f7fb4b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f83d864-7a4d-4fc1-9279-c86bed75b095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58bc35fe-4e48-4150-bdc0-089a3c391f7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532bafbd-b80f-45fa-95bb-7ecaee1128ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20b39180-b222-4ad5-806c-f65d8f82c0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bab2b2a-3740-49b0-9f97-c45c67d2fc18",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7034cbf8-08a0-4157-8b80-4b43ba9cc5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01695e43-2765-45b1-bbe3-9343d27f3871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1f73de-9046-4bb6-910c-88300ec98305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f183cdbc-7958-4302-91d4-bef4164f34d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac25018-8d9a-4420-aa83-a826168730a6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac24384a-20d3-4b24-9af5-33389643da06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85888fdf-b91f-4d54-8249-cad351d3b83a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7466e106-d44d-4eca-bb76-51b0d843540b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "929edcca-6915-4202-9a94-900e475e8089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80113abb-5e7f-4f41-a711-4798678c8b40",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c9c930-d830-4ced-a04e-814aa2e8792d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa3d1cff-bf6e-4c06-b155-1b67745ebe8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec20d646-7bc9-48cb-9b26-cd73f7f62a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6274ab00-943f-4ebb-8fd6-ce8bea68808f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8698d45c-4101-4b90-acba-1d222300b565",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "202584a9-f60e-42ee-a898-38e89e87add4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb00a133-a3f9-41c3-848a-a2d9507f3157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523c0041-31c2-4aa9-8b1c-191b51423b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "49cda65b-4415-45cb-a512-0cd8e37f8743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bdc4af-0b99-4612-a8f1-a52d892eef95",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc456dc4-ef98-4252-947b-79d1d6be0e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49319c68-dbcd-4e88-bf81-be18597b4f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e11f6ef-8058-4edf-8bb4-2f594e87ac04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9061de1c-ec8f-46ef-aaa1-be4c34681d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46a9b5b-aa2f-4344-a74a-04e0096d781b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d791d3-689e-493a-aa1c-56ea52ed3aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c2937e4-1dfa-4930-b462-f2809b8524dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619eb715-31f6-4eb5-b450-faf9ae63c4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cccf8877-5dff-496a-ba1b-c593b4cd14dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7522ce-4e7a-4c26-8a82-af02d161f3f9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ac358c-3829-4a27-82c3-0ba746f90e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e47aff-0cc6-488e-b755-2d0d329ac8ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682be21b-7f82-441b-9298-bd1c6062d417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2da2f5a9-c78d-4189-aa46-3982a18dd7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97df453-5a01-4bae-8eab-78825b3e0d16",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66009934-bfbf-4076-af47-42eb08cdd738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ef96ce-6b7b-4344-9156-f557956ddd78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af16301-d7a2-4372-90a3-aa4da1fdf49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec9da07-2c99-4fcd-98db-98c626f9a426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b72ce6-0c39-48f6-a6e8-d69b66877b91",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a847d22d-3a04-40c4-9cc1-0daedf257c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57609c22-c0ed-4df9-bebc-f50bdca22055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41621b37-5a00-4127-8d50-9f0839f3fce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e404e1c-c2ce-4829-bcc4-4feff2c977db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd7d76c-2ffd-4898-b8f2-ed34cfc58298",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bb412d-ec89-4b33-94f6-63c3d8059a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eeeb56a-4fe1-4c26-b891-26f8ab6832bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0165258-3606-4de6-9a7f-1ebee99c642d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7291effe-0a21-4195-8c4a-7b602cfb27c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769ab968-6731-4879-a041-7d5853e60d23",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082f8986-7df0-4ce6-a484-b5977fdbdaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc6052e-cd80-4934-b59f-cf7bc3bdd7c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2dfc7f-3c4d-49c5-8d73-9e4ae73ed97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0931ebda-bfed-4a48-9b67-1a93ffd5fa93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a79ef80-3d80-4c01-8b1b-69f26cdf2bce",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911d48cb-7f34-42b4-9e49-59ab0a0b2749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5028e2-f888-4c02-a4a1-80b4429aa0c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa225eb-2445-4c4c-813b-c91922c282cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a25c2ac-b74b-4c18-9668-46b882234485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10963e41-706f-40ea-a439-f6af4145f2fb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d154e3-cce4-4dfb-9c74-2747898a4fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f50a95-cb67-4a70-8a2d-f13cd75845ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9990809a-3511-4777-8e73-f716b200d781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20da3871-f35c-4a9a-8f12-bdeffd5f3a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562c4e5a-946d-40b1-902b-e9270187246f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4fa24f-1bf1-4f90-874a-fac06212363a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb1d257-9462-4e8a-8df2-d70abf0a880e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f2676a-28f6-49f6-b013-033df23b142e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b88dd3b-e918-4090-8773-5435a450512b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e070ae50-55b5-4c19-9b3e-ca6f1a63c26e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc86bff7-1ddd-44ab-97c2-afe38c24b837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ffcdf4-9254-4150-b4e4-ac5f27c0f46b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4ac9a3-4599-4573-b7d4-fb902b1dc2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd748094-7211-489f-824e-2bc09911b00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba829424-f48b-4ca7-bcf5-1baf73c580ee",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8555fd6-a061-4d5c-9ee6-2b83dd7248e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d110a1ff-2e78-4fec-82c5-30002a68361a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a000ee49-67cc-41ef-889a-36e923db3f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a445a8-12ed-40d3-bc83-67f86a400f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308d906d-fbec-4681-9bd5-2940f194caa7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe3a3af-d52b-4638-8609-9e33d388738d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba143d98-f7ce-41ab-a99c-88523064080b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271c3518-0a18-466b-a61c-3c9eea90149b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f44b961c-a3a0-45dc-b55b-df2017008399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd863574-5c5b-43d1-9cfb-eed378a7f452",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a15126f-97da-4e9d-96d3-6b48ba03b789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c60a2002-02e5-42db-ac08-58d6b08ebc42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afda3f3b-cc1c-44e4-b529-078efd547957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed94015-8a25-4cf6-9129-04bef622a5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066cce65-d469-4cdf-adf0-82c1def208fc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413d5a9b-1819-4074-85e6-591ce631fc52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3927fcf-0a37-48dc-b03a-ac3c2da3d095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06f92fa-f626-49ae-ba9a-7f1a5edc15b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7dfa57-8d36-4bad-b75e-8782f2efac9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2ed761-fe7f-4b55-9a8b-729e09a0905d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e51ef4-c00f-4a06-9113-1fcad5ab2923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "388e8814-c34e-42cc-8320-8c311c733846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf4a4cc-fa3e-45ee-a58b-ae751cc3508d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39f6b9e9-3591-41a3-9aa9-e58e852ccc20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4829f87e-0d44-46ba-9773-2326f1f16a6b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a666b06-f6f3-458a-9953-aa634628b740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ba72e3-7c46-426e-8123-5170f0389d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba308762-b275-4fea-a9f8-4b0d35a83ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1633376-b4d1-43c3-accf-46def68d9746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9d99d3-5687-44d6-ba5b-fb5b6d86b98c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d22d80-e454-4f76-b5e9-15a07511144b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db4c888c-45ed-4e66-b17f-29a197e507c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ae9be8-9065-41e0-8ddf-ba33ad0ae70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc7accbe-076e-4f96-9d19-a3cee6ff906a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c947c6db-f7f3-4dff-9529-dbf9e9d89fc8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c6a9b0-ec6b-48fd-a057-41eefafb412c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff77eedc-3507-4f98-a6c1-9a2cedc54f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1de57d-b893-4738-b153-8699ad05708f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb4b15a1-3303-4409-b790-3952f836ad75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3865e8d8-b802-4345-b366-e64e6205d0ff",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3587a20e-3fc8-4061-be41-1f8c401d495c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a686b45a-55a2-4e94-8095-0c202eed0dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee7b613-635e-461e-8684-66f60a5d5c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afdbf31d-48a5-465d-807b-eb647459ea4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fe7800-368d-4a6b-a5af-a2b6e1b92701",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233ffc5c-941f-4055-b61e-748b24822880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b72d4b3-46b6-471c-93f9-421fc56542d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3040d9ca-4c0e-40b3-ba5b-1a5ebb4de581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9771a21f-0860-45ae-9d32-7ffc036d875a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cac3471f-a90f-4f98-a4f1-daecfa61130d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f059c80-ac57-4b2c-ac82-b495557bd29f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af88643d-e952-4640-9114-60cc502ec2bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a56157dd-c0f1-4033-b9c3-88c0dcd6a0e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d886626e-562a-46ec-a183-6b66b7c1c383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eea8e61e-646f-4849-8dd9-5af24d1a0b1d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25c09433-2e83-4cc4-943e-2cff123c0f5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b54fb32b-88c7-4285-ae26-2c83fe73226f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c72547b8-5240-4abe-86ca-b2df7c4bad6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f6bf109-36aa-4bbf-90b0-6a139433c19e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28e61f2d-0d08-4e7b-84a9-a5fdb27823a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1f4b32c7-785e-43e4-8621-233b46d9bc24"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c283946-7ae8-472c-9492-918e1912e2d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "434ce981-5dda-4a9c-b23f-3e3045ad2a1f"
            }
          }
        ]
      },
      {
        "id": "d93ffd3d-5f88-41e8-b2c8-35b864fe166f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "54109eb3-1578-4dcd-b90d-0cc0fdcaad27",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5cffe81c-3842-426e-bb57-0052f1fac9d9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8fc6a312-227b-47a2-86cd-8aa9de7b14b0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2967338d-c4f8-4252-bf89-1c0a89cfa059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d13020b5-e466-490c-8e37-71c74844077e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fad01c4-e8e8-4fe5-bb82-0f7ad6aebd06",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fe7029-7dff-4359-8876-e046196ca204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79db24d9-890d-4332-8fee-0d481fb6421f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6f9700-cd5b-4e8d-b150-998926cb3655",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6c0c2a-6c00-424e-b5ba-ad58609e5c7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c5baf22-18b3-4d7f-962c-b2ff9618c377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5e69fd-bc14-477a-837d-fd4eed40bb53",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9f76ae-bb2e-4b75-88fe-5b7e6afe8905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5fef5c2-e497-4174-a755-3268369d3b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873bcc54-a4f7-4f05-be16-c0bac4f6b740",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "747e0253-55d8-4df3-86cb-2540f248d3c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52de4432-e22a-4ad7-8c31-7ecb1524924d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae7e963-0b8d-4cf7-832c-9237b6646443",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef7af5b-6400-4610-a958-961cf0f0479c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab08cf2-90da-4670-8236-dd6a2b57c9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b23909-47ee-4359-9bc4-b91b6195f57a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5acff89-d178-4ad9-ad58-a874a6aee686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd4debee-ed02-4f3d-8183-131e2b934d27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "998daee9-b219-4a5f-8dca-12005c30e330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a133108d-7c3c-4992-b797-5814697e6c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ebe364-e0d0-4976-8ec0-30ab0ea9b611",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284bd1cf-90ec-41e4-9308-efe55d1315b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5749f719-8714-4850-9eb7-25e32d804254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "356bc37d-c49d-4ae0-bc7c-0ed948b0e290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f307295b-c1a5-4e70-8f09-c2dac9433853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31ef413-5697-48cb-8880-120fb916414b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837abdc1-4049-489f-a3c9-ecc7f4f0f6b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e023d666-a4c2-45d2-a44e-3ac84db9c4ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c061e39c-2095-4c92-9730-b1ac21b25672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08b360f-3735-4188-a6fe-3329c9b2097c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14470f9-63f8-4eb4-8b91-f66998ee59e1",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6759fb7b-bc37-47c7-b4e0-8ff574249079",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ee3911e-bf56-4ec3-b3b1-b70bf26cbf50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "333b13bf-2df8-4780-be3b-6b1f6666b81e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fbfa424-59f2-42da-a0d2-fa07093f0521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7dd9670-2fe0-4d61-9786-8524a0907f68",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6d3543-e747-44ab-b333-c08a26c9c6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f34460c-b322-46d6-80cb-519801bc8414"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16affa41-5ec5-408a-a306-991751d053af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621072b5-5fa5-4f53-8025-e5a7882f1486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1d44b1-3284-4587-90a6-60ee299676fe",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2763a846-fc00-42ea-89f8-2f82a441e867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec895792-4ffd-4580-9a6a-c757b47197af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b039ac5e-9f77-4ca8-9d6b-91a9da49b783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d5f494b-97b7-464d-9c7d-09a4141e58c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45be766d-e6e9-4d63-8df4-ceb4f00e7faf",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54fd3005-90af-44a7-8661-4af2226d3fbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbd04b46-b7a3-4d62-bec1-6bea6e932c18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72deedc3-0cc3-4a72-9b9b-f00f89230696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66fb9be-09bd-4756-a459-aae8af4d84fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94138ec3-73e6-4a50-96e3-ae7fc346f4d8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc939b5-51f8-4fe6-bde0-64c905c3c652",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92138825-28ef-40b7-9a3a-9a40ebf4b206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "043d9dff-9261-4f83-80b0-19b329966ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be5d276-0f2c-435f-b18a-af228ce58d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0241b2-3bac-4508-877a-014292866d06",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb99912-b3e7-4313-9e0c-66ef1d72a746",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d44374eb-ac62-4c67-8f4e-91bcbb48e392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a945608-b8ea-42a7-8f05-251f379dad67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e102df4-eeaa-4b4c-a47b-e37a60dc39f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab4cd74-6aaf-41e2-a530-153317d9fccc",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a447db-be5e-45c1-b609-33b5e38cf9c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ad32a33-e25a-4d03-8582-bffaca244c99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbfe2c3c-404d-41b4-91e7-6354a582b761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e844ae1a-20dd-4be3-9842-c95ccb5f34ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20a783f-cec9-4741-919f-42157cedb1dc",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed751e1-2ce3-4696-bbbd-8cd8a5036d95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51fb35ef-e806-4eb4-af95-7aa67fa6941f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4b4c35-9f63-47cd-b481-9eeb52076bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2abfddbb-7019-4d58-acb6-a18e44126b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814ad554-cada-4c5f-be8a-2053cb96cd7c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38fa8f6-bb19-40ea-b483-482f7fed491a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c1e5c8-b5d6-4cb1-997b-dbcf7e1a022c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "276bf91f-77b8-43e5-84e0-3cc3df53b43e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f48917-b517-420a-bef0-99bc9be05197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9753b62-2d58-4ada-915b-d2be6284115d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2eff0e5-36b3-4df1-9c70-842e2ee75925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9185a3fc-679b-4469-b402-9b70b55b0c06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c60728-4433-4859-8259-b73e1da112a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b90ba3-8905-44bd-af4f-cf56cfcb457a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2685063-e654-4607-8fbe-4e414c08ec9e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1cf0017-cc50-45dc-8b37-00e78f7f9095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04323ca4-be14-45ff-aea0-16aa75085774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5522299-705c-4784-ba76-f7bf2b709a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f7955c9-a6c3-4f01-a2c5-fbce55e33252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b677c924-13d6-48a8-a543-d09f065a5e56",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f06646-2ff4-48de-b3bc-53d9519a84e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a35b69-3dcf-4149-b087-6207c14d45a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5861b868-c0c0-4848-9caf-b6ff1720e0e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f192e678-b4d8-44e7-95de-327a5f94b8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6fb7cc-6dca-46db-ae50-d9729cc150f1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d969c013-b006-48c5-b920-f338d124d2c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2fa5911-194b-45c5-9a71-d9c12b90fe5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a756e0-d653-4a39-9388-c30fd14c2708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc8ee43-9ca3-4d1b-8a0f-7c524696ec84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f39019-65bb-4888-bf0f-5320435cf91b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd0c006-6c89-4fbd-ad62-46c2b81cb3fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b22115c-e5e5-45b0-9aba-e47873c0af44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c879c61e-14a7-4cae-8f34-0bfc3573e063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc9c91c-4580-46ad-9345-3583ee7274ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e88ec5-4fe9-4e60-9a7d-1a79888b0f57",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b874aa-09a7-4f95-ab69-c2d6896bfe10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ba6d12b-8752-45be-835f-30efd18cf472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c0d648-0d53-4374-ab48-bfdcdf6a6ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f074d76-e83f-44c3-a9ce-5fdfaa2e410c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73976a0d-43c6-440c-9c26-2d2534e51f4d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2843f550-b361-49ff-af3a-1cf4b6e88391",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3d4d2c3-9f6f-4c23-86b1-c0d3824807a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef669e3-397d-4b9d-a3cd-d833bcc77440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7bfe2e5-2cb6-4baf-957f-dbcc4b0626b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411b7fa8-31be-418d-8d4b-4882ce62e26c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469f8a30-cbaf-4ddd-acf6-2e3e176573aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "259740c2-6ac4-466d-8bdb-69af59992154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1639e7-cfdc-43ab-8797-9295daae312a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39e25666-adbb-4caa-89df-bd5bb9b66cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40d1d29-8011-4591-83dd-e4c0a499f883",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afbd447-7c0b-44bc-b755-929681809818",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2600721-84ba-410d-a660-3cd306c91365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78653ba0-da0d-4fe7-b49b-31746a937c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc20e40-61c4-4ab4-aac4-68284548a974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58d0db4-baa5-484d-a2be-dbaf387b7a10",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d747a4-1bec-41f0-b570-c66a89329746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4f2613-7884-4079-9955-eff8188c6f2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde4e85a-0e64-42a5-ae17-9af15a176213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf6f4c3-4543-4e74-b58f-fadc57a9daea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a351ae-4e9a-459b-9c92-cfbc2e3e8aaa",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75b2bec-31d5-4015-bbaa-7c45a550ed48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04506adf-e388-47e7-865e-2a1fc66ff0eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a881db-a302-437c-8859-571fcf617229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01eba562-5703-45d9-b4f6-578ee071f560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9140fd0e-b800-45a7-a8b1-5dea91b1c850",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70816484-604c-4794-8a46-ecbb818e0b41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eca41925-6b23-4170-8d43-d47d068c43e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fe84c3-78a4-44b8-884f-10f83644be12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6edd12b-ff99-4e22-b006-50d67b7fb603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b2d2ad-b543-4888-b4d3-f09372d3172c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886bf4ec-2e50-4b2b-8f41-00697aec3673",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "329117b7-21ce-4607-a397-f7c158f8823f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "891a8feb-7cba-485a-8bbc-bfd63ca0d542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe124191-3e72-4448-888e-ea3d32f61428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d245b85f-1bb1-4ee3-bf9b-1aafd9f8676a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5293e765-c855-4300-8d1a-1b0420e8832a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16fa3083-033f-4127-bcfa-b13c13a29cc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9122f85-5d33-46e1-9fba-b7d34820f100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2d99744-b938-4ae6-a3a3-5f13485d1f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b753b4-1d93-4c73-a5d7-92da7cb11315",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750a8455-bfd2-4506-be77-d70ac8d5ce60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1669302-c210-480c-859b-3592e292e8d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "884cd388-7199-475c-acf0-053d5fe3d37d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b975e5-9589-4ae4-91c7-f4f686d7c6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6719ef40-884e-4554-91f4-2f03bc83e0cf",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e6c78b-550c-465b-9a51-88645d019a6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47bb417c-9541-40a1-a59a-8040088f5169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db028121-0944-4d03-96dd-9596cbbe5e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd2477c-9b6e-40f3-bdcd-37524f738fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c9dad1-e138-41a4-be78-cd939cf6144a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e05bbb-90a5-4708-9ece-84086c25f8f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc5ef545-64f0-4750-90b3-4d044de90611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbc978a-2a5f-4faf-8956-845199a4e96a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2139ecef-7dd6-41ed-8d94-8b9fb43a07da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ba2e18-7301-4b8c-afc6-3c9c1f6bdf69",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03b9ff0-142e-4136-90fb-22c370b14c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b8e6246-44e9-4d86-8866-039040a53c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00207302-2bb2-4a2c-aa4c-525c06eac760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4ccbaf-c052-43fc-a2a2-094b13311577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e672edf3-5bce-459d-ae78-dcc80531d07e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dff0eb7-62f7-40c5-b445-9e213e28ac41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf47cb36-9633-4a5a-8e2e-e02a0de4c583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff152646-eabb-453f-91eb-63a547992641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f6352c-0916-42ca-9206-e21eb83fdbe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44c8d98-824e-4686-b05d-04327a2c1054",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac10b215-f56c-4904-a36b-3b330060b78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2677527f-c000-44f7-95e0-a433a23ba803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91418d09-b22a-4c4e-8c6f-58674e742501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc17610-5b3a-4949-bfaf-a7b2254e60f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f29d56-7b78-4ac1-875a-ae2977c45264",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a996ace8-321c-4cff-89b4-1b44d3fa3889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc5d2552-47b8-4814-bb18-c5745de491e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b119bf1d-de0f-4745-9c1a-5a7347046fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d7b91d-b9bb-4ddc-8b72-15be918d78c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66651718-2e82-4990-a7c8-3fe19f38d6f0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5803f615-4e7a-4b2c-991b-8f8742d1f0d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3dbd348-4dd4-4ee7-b622-b01cd5b6a1da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e96d53-f0b6-40cd-a38b-3e40ce8eb3ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15dba82-14e3-4cc8-a376-d19bfbff1777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b984d61-6fae-4fe5-bd9f-aff9f367211b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e99227-682f-4839-b5e7-b9ef735bc055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b210e512-b8e2-43be-bf22-707facfb9062"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7e2ce4-c605-486e-b254-133f544c6e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74560a56-2f46-416a-8e00-9007bd864fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29cdc2ec-f0d4-4780-8c99-fdf884a839e7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100cfacc-096a-4a07-829a-f2ab42ec746e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b069050-1089-46cd-804c-4f5164422676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb542fc7-b280-4f2c-b354-eea3eb5f5d4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644a8ff5-4e89-4353-b4da-defd14ddeffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dbc4cfd-bb89-409d-a8ac-b571f0fbdeea",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39209773-f9da-4f49-90da-f48eb1bfd70d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "015a31a3-2e4f-4d21-8ce3-7c8dca3a9717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2702d384-9e5e-4c35-9bd4-01ffc2b5e835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd0c72c9-99e2-44d7-85d0-ca8853a76837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8dec3b7-663c-414a-afa5-54d2f983fcdf",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4209bd9-d735-426a-981e-da4f14f933a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "384fcca7-2d4c-4494-86d0-2117aac8becd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7db3e3-05b7-48f3-a1a0-2e9ace4841a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a5fc2b-e75e-403d-8855-f6d98598754e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709953dd-c807-4d0c-9ba9-3ef13b8ab233",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1eaf066-546d-448e-a8db-7aff06422b57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68acc29a-d892-4fac-9f73-77d38facb989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e88525d-1f27-412f-a0f9-7aab596fbb78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b3d6519-6d98-4481-97f6-500bb05a6194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76f4a24-68ba-49fd-86cb-4a3e5dca13fe",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db4aa58-36b2-400a-a157-aedb2c37ee8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb7faf4a-010b-4a42-8eef-5bd146312abb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b3942f-ea02-4487-b655-66d652aa8141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81daf32-81b4-41d7-be73-ad3f75e3f74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66141f2-351e-43bb-a980-9518a2aba450",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54970742-3ad5-4ef1-9bbc-25af6e49fa78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b1bd4c-ac59-4bac-9e3e-7b3ac215a442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58148d09-1b4b-4ec6-b594-3df3fbdf1b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17020b9-bd43-4b46-a56d-1bdab1d85943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d046c4f1-d658-4ab1-aea5-9f7067d4a2ea",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6936b3bb-4f07-40fc-b676-c6c9b5c52d52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4028926c-58fb-4152-a8a8-c0ff147fb21f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f876cc13-a44e-4fb4-89e0-b023e796601e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f816b42-95a7-4a14-9cf6-ea3295a9b629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c13a86b-3690-4411-a1aa-24cb2a0efc18",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7beb94f7-eed5-44fa-a76f-d788dbc416d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bb3dd01-b618-408a-ab42-6ff0a46bb5c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b526b325-7872-47c7-89ef-a2726c2fb5b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe86822-b1c0-49d9-9f94-093f1c613cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c834963b-5301-4019-b8a0-bc19268c130a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297a9752-cda6-48b8-a886-477e1211999b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "231462a4-b81c-4a87-92af-bc060d4bdbe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8098de-6950-49c9-be27-fa6dccc041ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cbd4e60-a552-441e-b6f4-5c51a74cbda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73be87f-e6b1-4d1a-a62c-2c2ef768183a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e2f8cd-dfa4-427d-a857-d510977f22ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d3359c-8331-4c23-8949-1c0cf0074614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b64c46-3164-418d-b9e0-b2f5b49029cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617eee29-2cd1-463c-8c20-8aa6a4d9cf65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9e0868-d2e0-40a1-a5c3-9d933fd694c3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0babe67a-0a51-431f-9bd0-4de714e861cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c3489f1-8644-4f3f-8b63-fa7ca7b8fc61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a98d5d-da87-4dd1-a539-3fa583771daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f92abe21-b741-4167-b44b-5d72ae55e4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a2425d-67b2-4ef5-a206-fd99ed050e5b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e626aa-7fda-4db7-b96e-a770397ec284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ae68d5-c86d-4985-b41f-d75a8649025d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d9cc2b-6c42-4853-95dd-3b3253d6f336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366cdfe2-d1d4-4c27-91ad-dc7d8d4a5810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d0fa32-0ba7-4381-b435-506f241d137f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e00f208-fbf9-496f-b87d-c5267264018b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa21fd54-43f8-4ddf-b681-a83050efb5b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e28d07-c8a7-4334-ad19-6ef2e7ff8e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4cbac9a-fdda-4edb-a630-cc51fba1b39f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25377a02-8d6f-4e36-84fb-5c18f92903bf",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3201bdd9-3825-4630-895f-fb5ed6809ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a66aed9f-de84-4953-b59e-fd1296d65115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37c1ec4-4db3-4d8c-bab5-55feb815737a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e99dd3-6388-4df9-ac52-b64cbc0461b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e41e51-83ea-49b2-82ba-c76df3114595",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b88ae2a-f674-4882-aeb3-a584f98ca615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff3e372-b332-4b1f-954c-853ae4d44b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77dd508-2331-46ac-bfa7-ca2f39a2661e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf5f096-5286-49f2-a2f6-dc09fdd7cdd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0550bf93-ea72-485c-8f20-2c0143b42603",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d05edb-4b60-46f4-980d-4f1bef9f66d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c4200e5-867e-43ff-aba2-4a9659aa2e68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2695c37-b2a9-4009-90a2-615220c977f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3234d9a1-3dd4-4185-9320-348a3ec4adb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9832fa-8ddc-49e9-9ca5-8973296bbfab",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ef7a68-6cb4-41dd-9720-98facacf098a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa9e9752-1d3b-4b11-86dc-b6febcb393f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "214ead7d-0bd6-4c42-9d8a-1ec188191990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2324dbc-5e35-457a-a6b0-316fff2f5bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db69cd07-7c61-48b3-9218-6b83996c6736",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123540d4-58ae-4a23-84a7-0c229fe6b8cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9870be29-e8a7-4a4f-9e9f-5546f30f5d14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba35746-dfaf-4a84-abbb-c98469e9f4db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "657947b2-e4e7-4a82-be9d-b9feea9ed64d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2cf0ec9-9550-48ea-8f36-9004dc24554c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f9772b-d475-485d-a39c-bc531d7a9576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c6fb9ac-c5e6-4f59-a2aa-188a5671c7cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a527882-2064-4073-8e44-4fc095190e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a70b6812-f458-4a3e-81f7-3a06b857ab5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28853a61-9674-49a2-a1e1-0acccc7d6b02",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0a57ce-7efa-44cd-9eac-fd46cac7b1fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0b42767-3756-4813-8a24-f032cfb603a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00f2bfd-3595-48ab-9768-a2aa360b5c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60fda237-33b1-4648-8d65-c0f4e45b415d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbaf5f4-4d66-4fae-b14c-6434211a5733",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5ab407-5bef-4386-9adc-9afe52a4e2b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e65c66b-bcd6-4e9b-b41c-928cbef798d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8a203c-4ab8-40be-805f-588e5764c413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a6c844-4497-47b0-8a9b-2a1114f466b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b615f5c-b8c2-4928-bc3d-65bf4136bb78",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601e250a-9fd6-492d-afd3-15f4c61ad06f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef98809-7d1d-440d-8287-fdca6a971540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "541fd101-d048-4b45-9be7-7c83ec490074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0658795d-148b-4ca8-9de1-7df680c1dc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee942934-3d77-43bd-9ed6-7b9103acd636",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834ec87c-0bab-4a3a-82fa-56111546e3e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f065708-fb17-42fc-be9b-6cee91231ed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "448a3c49-3466-47ee-b530-b2271e25bcc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15234179-a6c2-4ffc-bf29-a343043f1de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16990d1d-071d-4f53-bd4c-cfb92ba62bad",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca5e9d7-a822-4835-8f04-9648fa6e9a8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34a736b2-9dc4-4c0e-9684-90e361b545d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d845bf84-400e-4e27-8f46-f41f41dcfa19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "701f5235-1278-4ad6-8963-2d57fb16536a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7997b7a9-73a7-4c92-a8cd-6d84b970702e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2720e18-8218-4164-9a17-01f801df9152",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3811b7e1-b8b6-4963-a6b0-5ea69550d598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd980313-e227-483b-acfe-d34365811331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "516c1fc4-be80-42b8-93a0-499371ab1adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5071b2c0-16b8-48a5-8032-a4f1c2279079",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdac5148-9f1f-4d24-b490-3229d0979df9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "495bd854-5059-4b36-a892-69787b4a873f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c197058-cf6d-42bb-91dd-cf78585fa3c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ebab163-272b-443f-89c4-156702e6cb49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0a4f9f-d383-46c1-b50b-75dd06be77b1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2e9fb3-8adb-48c1-bdfe-a5ab7714f80e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "471f3d41-0b2a-4056-8b56-98e7c6d30cb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9055179-00da-4337-8de3-1f44dd0734e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2dd6111-4646-44a1-923a-4a90f8421738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829dbdbe-7834-4e05-91a6-3664dfff1216",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c8a0f6-470d-47ab-9876-ece584393a41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec432181-652f-4797-9e6a-7df0013e4a46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99766f93-8c14-470e-ae99-659762d6b69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5953559e-653c-48cf-9369-aa796282e493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118aed86-68cf-4754-8cde-70c13c978e82",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067753f7-7bfc-47d4-a415-0ffd3fe1306f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93432ef4-58ef-4c0c-86bc-e4abdaea36fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cecf18b9-79ba-49dd-99b7-39c005a59482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf653b0a-6a3c-4a12-be5e-65e7a31a635e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee2684d-4c82-456a-a287-9856ff698e93",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79692aa3-2612-4391-86d3-297f4bee6396",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36537c13-ba66-406a-aac0-1c3783024b15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ab29fc-1f6c-4452-8980-cddfe0b1372e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f354252-faa5-488a-8661-2d060e5ca1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97fc763-37fc-428b-8c3e-dbba5079b7b8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523320f7-7e19-4bc6-8759-b7d4695bbe19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "737a80ce-ee06-4e70-9933-e5175168c366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4dd596-4db4-4ff1-a42a-9a566f4fea58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ee5257-bec9-4431-ab22-1ec6d4435155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5814fc0f-c930-4251-8c6d-8fb85fd48f6e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c949c0-eb90-41d7-a8fc-343a7327703e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38779f08-c2db-497e-abef-08ee38d8e8e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d07a69-9e0a-4b97-ad10-02e34aa8689a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f4ea96-da41-4071-8a7d-c025ef39bcf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a326cca-0842-40d6-9a73-9bc474083f3b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1fbad31-5ed2-4c27-9492-42e33d6ebd3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c77fa136-3e0d-4a98-892b-ddf8aa01412d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "563fc04a-23dd-4b0f-81e7-cf024001022f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b85ce17d-6851-4b70-abce-21d137219ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3afa751-eb41-4c5b-bdea-170dcc76a921",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074ead28-2c0d-4a4d-ad75-c60c32119f32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ca7d784-d96b-4eca-92a5-d416935e7057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6319ac-eb71-4aae-8805-798b8d922838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d79d22b-4c53-41b8-aaae-09e88773cdd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53022d7-74c8-45db-a73e-1dcfc818bbe2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488ff030-d763-42f3-93ab-8d72a5743771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cd10ecb-1301-482d-9806-ed3200f75368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5f7821-bfd0-4f7d-8fa7-2bca9639a02c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f735e0ac-0286-4133-b1a8-b2f93be8a247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0cee08-df27-431f-9503-009cffaa29e5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307a6070-e3de-4b10-bcb9-ee4ae647f0fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc6dd754-823b-48e0-bdc9-080871edc5bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26992174-cd59-4368-882d-299312cac6a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb8fcc8-032b-43b8-bae3-3c10ae611fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706775aa-3d03-42da-ae32-adc2bfb62ac6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7605facf-bf85-48b6-ac5f-38873f7563f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffd24a49-85d4-4a56-9cf5-266a461c9b32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b96e52-6a52-442e-93c1-ad8edcb64184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a42658-5aa7-422e-9b13-f9aa904d6c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7dd40f3-abb2-42e4-8310-ea23b8522c52",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f2f780-fe04-4540-a927-a66dd14a9377",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae712d4b-f64e-43fa-850b-c312286d4c65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa3ba22-d299-4178-a882-8ed6855d331a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdaafb62-cccf-4ca3-9d81-59757a0d3b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ddea685-37b1-49ef-b4a3-69ad8cd7d90d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636371a6-9960-43cb-93e2-93c8f5688247",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c2a6ec2-3c30-4431-8af2-19a782532b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca3bea0-ecd7-425c-b2a7-75456f26ecf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5219eda2-0d17-4322-97bf-6a1d477d8dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da387aa7-ceb6-4d46-9eaa-c38675be79fb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2327d769-d403-4b7a-950f-35c87678c209",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e978299-08ff-4b75-8fa9-51ccde29d5cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0619a40d-edad-4d89-8b07-88fd63f84355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac230380-d13f-4446-9b45-3e56b294a279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126053b8-669d-4d36-9622-02306a1426e4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8537976-7fda-4637-87b9-37d4094d84a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "832eadb2-e5f3-4520-8a77-070e18b47881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9785ac9c-31a5-45c7-85af-8fe5b9201cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889dee2b-ab78-45b8-aa85-421f8939b545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fd0e76-a0d9-4ad6-b656-c1c34a782225",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14d4abb-29e2-4507-83bb-a0e9237b957d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37b90166-0003-4c15-9b4f-1b85bbd306c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c65884-5d3e-4bd6-a010-5801c9ff800c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c52506-d8d9-453d-8121-a8828f3f9910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b17de5-8f5f-4177-92ed-21b04f29865b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77bada0e-2c03-42de-8484-03337ae566ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60bb047e-4787-445e-b9ba-1667e1db8426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31cec98f-48d9-4bdc-91ef-93a378ffca33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf5af839-9feb-4130-aee2-3ac557589d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc12802-e857-40a9-98d7-a1edb8445d17",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3cb937-4a8d-4e1f-8268-c4533aa445e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53ef6def-1a45-4b32-9698-779e631811e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c73541-4b03-439f-ba89-d10550fc0d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb3245d-03a7-4dfd-b79a-281fe43b2ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166f3172-eda9-44ed-9b50-a427aa33213d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07835aa3-b42b-493f-a7c1-9abe8a52f712",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f67fda9-41af-4cc6-a562-af53d455e784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71f79cf-8082-4917-a0ef-36ef60ca9474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b39f8db-928e-4dd9-82e4-cc16841d5382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9faeeb95-3059-4938-9960-cf7974652b08",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384df64a-4234-40f6-bc0e-102dafb31dab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c86fdd8-23d4-44d6-a256-44e5f2ade01e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "719f8b57-b862-4505-a81c-ed37b2f44bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad67426-da41-4e87-9425-5f354fbb39e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77e4b7c-4569-4798-8c72-d7d9a02c4fcd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9f63e6-11c7-4b10-a317-9e33bc3e9d00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01f9c2e0-4b06-40f6-9083-c1fd9af73205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4765aacf-d4af-4eda-aebe-4b0f8bc4d03b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "219c9376-5afa-4bbd-8f92-7c17aa1587b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55882e18-dc51-49f6-9a2f-5ce0e87103a1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b28a5a-55ed-4ca7-b935-aa1c0a76816c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a348e26-8b8f-449a-98ca-952fa083747d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3183f1c6-fb93-4173-a94e-a8220477ff7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e17b77-8e87-4fd8-8161-480a7b41e458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ddf4e4-fb28-4772-92cd-7313db5c1dd4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65943e26-7a04-491a-80fb-6544a0805158",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1043e1c-0cc4-4b2a-a424-8a11b905b7f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48221ad0-cf6a-4f61-89d6-7893af70b6a8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc5b26a-e826-413a-887d-941abc452fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a8aea1-3c1c-40a6-8667-c63d6bb3142f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c031dcf-4df3-4828-81e1-93bca38f7abd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98e56d4c-570f-4891-b326-152f0b8fecd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "428a2fd6-d992-4523-b048-795184d3b785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f5eb02-c225-48d8-9d7c-35cf20ee59b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93d6355-85c4-43bf-a958-5e2f5d942b8d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20c41bd-657b-43d6-a973-19d4980bd02f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3bede19-e57a-48ff-b737-dc016eaaf2e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02de18be-9823-4cd8-8278-0903df2a9fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4744f63b-e412-49c8-8730-880c706426e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67e8f51-d13f-4793-81c9-bfded591fb7f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6b4ce4-1d42-491c-8164-0dcaa2c55ab9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f89ba28b-81eb-4bd9-9a94-3b152ba62cb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e47a58-f2d8-492c-8950-01dc9f569b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a226a86c-d072-40ef-bd10-a33491c0b7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eeff3b8-726b-4100-8339-0b16a4fcfb95",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced5fe34-b1ac-4a5c-9e48-104deed862a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01b95732-8fe5-4e22-a220-fc4ac231fc07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efaa45cc-e3ad-442c-acf2-8caf618166f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4085c8b-c767-4916-b104-8b13c23016b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7e15fa-8471-47c2-9f83-02c96c239f02",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d522f7-d073-487b-b856-7bbf7bab12bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4b66103-05f2-4795-b363-6b5fd43b2d1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7327f821-d465-406b-ae35-0827c2fd4761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a58f0b3-3c9e-4aeb-8b10-91ff3d6d60f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711b72a2-4daa-437c-9f20-83902e1183f6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b700bf7a-61e9-4320-8074-316a519a3339",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32ad6591-c221-4ec7-a52a-0821dbe1e666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13bca65-105d-425a-988d-2a5c35f881f5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6348d6-eb5c-4441-ba59-72da7f35d2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ebb0cc-c8a2-4969-af0f-4baa5c3f4cec",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ab1c5e-9c73-4279-b474-c8c6895e43b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00e84be4-6bfc-4b48-a30e-562b88aa90ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6173ba0d-085b-4b87-b713-a738470d5c28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "900fc4d6-335c-465f-b1bd-c1040167e069"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9662d64b-a579-4154-93ea-b67f6fd4be14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2475be4-2c23-46bf-aa8c-6081ba57456e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "61a72c51-99b5-45e3-b5e7-b9a0967ae5c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d04a750a-dc94-4cb7-9024-b4b2dfe007f8"
                    }
                  }
                ]
              },
              {
                "id": "c6012e81-0b1f-4b23-aba2-7b7790ede208",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ab8b7cd-f6b4-4904-8a33-077ad367376c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f6f7d9-7617-49e2-991e-a007ac029c3e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "53eae060-adba-46b8-a358-c611fe9c89cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda4ca45-32ac-4c80-a98b-f44207eae475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1573c66-1a66-4630-98eb-96a05284a3ba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3fea1a5-c0d9-4356-997c-ef2d3655aca9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e52e2da-573f-4755-84db-2ba759e91c4f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdc36c82-899b-46f2-b7e0-39ba8eba7ac0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e3bd6ad-406e-430b-a8f3-74fb230a86cb"
                    }
                  }
                ]
              },
              {
                "id": "154c69b1-c2d9-449f-9ed7-b033b402d864",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8bdda04a-3429-4cb2-ad64-dc5dfaf67d35",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6704d9-7a9a-44ae-8f69-3f9d13237d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5a6f3411-876b-4d2f-96cf-efe5c238772a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6537213e-517f-48ca-ada7-fbf4119f26fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2839818b-264b-4f39-9d13-ecc41d29451f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "06acc763-7786-4b4d-a780-dcd05da31190",
            "name": "Positive Testing",
            "item": [
              {
                "id": "944f9885-bd79-495a-9ce7-ffc2d36be9d1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56aecd64-f847-4d5d-b031-68a99497f35a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9f016be3-b241-4f23-ab8c-2855746dad54"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc9f36d0-1aa1-44ce-bb4b-131291d26774",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8a2fb51-afdd-4cc8-87aa-3ee146b386d8"
                    }
                  }
                ]
              },
              {
                "id": "da5aa5de-94a7-455f-a84c-3290cab387a5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "596a58a9-cdfc-4d32-9d7f-78f573a86ddb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cea550ca-437e-424c-954e-c337231d2b3b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3199875b-2738-4490-b794-e27daeadf6d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df11c417-8b93-4bfb-8b2f-8c2551957d43"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c8a1774-0d6a-4484-9821-ded0f2959045",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1e9150b0-7e39-4eb6-ab89-fb30cd9ebf30"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6b8a96b-6bb3-4a3b-afed-7dcafd2182b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c417b5a-2c2d-407b-b689-5226fabac219"
            }
          }
        ]
      },
      {
        "id": "8426446c-b1aa-4820-a744-80a025ff20fd",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7eaf59a0-b96c-44a7-a1b1-e755c33b6665",
            "name": "Negative Testing",
            "item": [
              {
                "id": "43c9fd56-81f7-4595-9357-fd7f5edda8a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "91913365-d822-4fc9-a05d-8ebdbb7e6376",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f7e60a-3d93-40b4-a32c-d7f8f7f35aab",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bfadd6db-fb28-42cd-a801-56337032dc6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "783a3910-32ba-4fe7-a2e1-6db0ca1bcb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "089aae42-1afe-439d-ace7-1685a1a170ef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7574827b-c614-4bac-9e5d-a8ff50e05493",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2dd43874-d55c-4e1f-a2db-d4106dda1e08"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0262b888-895c-4108-b48f-befb2bdc9e05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91c2323f-9028-49d5-ad60-5740f9bfaab5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "373fd1f7-237c-4bb7-9d4f-4355cf337f18",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a1e2e950-7c7c-4ae5-b095-acbcd8b8c2be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34a53c9b-540c-4b39-aeca-3f266c594aee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd6d6f03-09f7-411a-a959-82fa41efa0b9"
            }
          }
        ]
      },
      {
        "id": "095bc6fd-952e-43c6-b921-14074a1d187b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "df1d6a9e-c25c-4166-9e84-a13502504303",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d4bcb96a-c5c5-4824-a13a-ac640aed5f17",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e75ea15e-e47e-4521-acb9-67e0510cc5f9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc43e51-217a-4c12-91c8-b45ccef50a7c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6066078c-9f25-4b28-abb5-ea36ee4b4301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24adfbc2-e5d9-4a20-a63e-9b3465fd442b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ffd578c-f583-48e1-aeeb-82e0d674e9f6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "285be600-ac08-4adb-bdca-b38c3b7aed0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bac05c5-9eef-4b51-bef8-aed73d458886"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "374c7a07-6290-442e-9ea3-250350b56f63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "acb80177-3373-49df-ace5-091d1fd7c495"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3dc3d470-a332-467e-aa00-38203d5a97a1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "74367c66-f71a-4c5a-a0f0-861738c58015"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f00020b-33d9-4d07-bfe7-9d695e59b235",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f07df8f-e2ad-4ffa-b1cb-b1ec05b969d1"
            }
          }
        ]
      },
      {
        "id": "7c3ae1e8-fcb9-4b61-8929-5742210b493b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3492835c-44c7-4b98-9cbe-36a867541e3d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d72fd47-44fa-4809-92f0-33ef6fe62b26",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f4817529-4d1e-4b34-bbae-fdf89d00af79",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c10f16-e299-4121-8372-85919c85eb13",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85ad7d02-48d1-4e2c-a7e9-09bc3e48de42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2112399-ea90-4ee1-8870-246c726c5f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff494e6b-1943-497f-9152-3eb7db8c65a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2294c6f3-cd7c-4460-90d2-bc5076afbb9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "973c5c81-0d1b-444e-b19c-87c754669682"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "14b1aeea-c6b8-4449-9fea-4e9d727d028e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf08205b-9516-40ae-8632-67add1dd80da"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a50d9774-299c-4b00-8b1f-449cd5f99f40",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "25f64126-508e-4a8c-9814-bd199ea50461"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1d85f95-9171-4b8c-acfe-2debe4a4055e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6568d667-536d-471e-8243-ff6bfd6ab0cb"
            }
          }
        ]
      },
      {
        "id": "0be9e66e-e4c3-47fd-8308-80110cdf3011",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0622405b-d68b-4c33-94aa-a9d2b33c5e52",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1f8f5d1-c1a6-4098-b494-92d40a679673",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3dd09aa8-4be8-47d6-aed7-d78acbe8c86d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18f84837-d8b8-45e5-b986-8e8fa13d31b5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e101323c-c65b-4826-a21d-296a04a8523d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 318.9404761904762,
      "responseMin": 11,
      "responseMax": 7829,
      "responseSd": 1175.9972062027193,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1718843848454,
      "completed": 1718843937300
    },
    "executions": [
      {
        "id": "61752fc1-4f6d-415f-890d-eacb6a08a1fa",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a12ea8b5-0f0a-4aec-8934-0927ec85ab1c",
          "httpRequestId": "6231780b-eb30-4553-aa98-2248f3198831"
        },
        "item": {
          "id": "61752fc1-4f6d-415f-890d-eacb6a08a1fa",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "89e427b3-0bb2-438f-923d-a86b3d2c0e9c",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "19476a7c-f7e4-480a-925d-840c41ebbd57",
        "cursor": {
          "ref": "24669c76-4788-4924-adfd-1d26714f4f8e",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1be905ae-1e0f-4e7e-a869-5cc8ab6e7425"
        },
        "item": {
          "id": "19476a7c-f7e4-480a-925d-840c41ebbd57",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c290a0e5-15d7-43c9-ac39-0e0145772c02",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "669abeae-ea63-49b4-9edb-2ab62d87c9f3",
        "cursor": {
          "ref": "ad57c94a-f2ad-4ed9-b31e-f666eeb24474",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9185c6f1-c8a4-4bb8-9248-378155c5d1cb"
        },
        "item": {
          "id": "669abeae-ea63-49b4-9edb-2ab62d87c9f3",
          "name": "did_json"
        },
        "response": {
          "id": "9e08c250-db99-4637-a00d-0b5833b0a7eb",
          "status": "OK",
          "code": 200,
          "responseTime": 486,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50efce4a-6762-4441-8a54-78af730af0de",
        "cursor": {
          "ref": "5250534f-ceae-461f-bf0b-7f88821a1d96",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b7b557ff-7598-4547-95f9-dd569593ca7c"
        },
        "item": {
          "id": "50efce4a-6762-4441-8a54-78af730af0de",
          "name": "did:invalid"
        },
        "response": {
          "id": "3994a550-e9c7-485b-a15e-aca70feaa93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2032,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50efce4a-6762-4441-8a54-78af730af0de",
        "cursor": {
          "ref": "5250534f-ceae-461f-bf0b-7f88821a1d96",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b7b557ff-7598-4547-95f9-dd569593ca7c"
        },
        "item": {
          "id": "50efce4a-6762-4441-8a54-78af730af0de",
          "name": "did:invalid"
        },
        "response": {
          "id": "3994a550-e9c7-485b-a15e-aca70feaa93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2032,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ea22f1-4c72-4c64-b991-1bfb287bf4b2",
        "cursor": {
          "ref": "65984fe1-c8b0-4a6c-a023-5ceec1753ec6",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ae9c381c-92b3-4af3-a30a-c9014223084c"
        },
        "item": {
          "id": "a6ea22f1-4c72-4c64-b991-1bfb287bf4b2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "24469705-495d-45db-8e99-4a9f136beb72",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2652,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b285385-8de5-4e1b-94ba-f6943d198ed7",
        "cursor": {
          "ref": "c7a669a3-529d-449a-9123-ff5c7efe077e",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6a5403e7-4092-4918-a34a-c60784da86b3"
        },
        "item": {
          "id": "2b285385-8de5-4e1b-94ba-f6943d198ed7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "764d1f2e-f0df-4f3b-b84a-d5db167f3b52",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2322,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cebcb4-7b8f-4b92-8043-6b26f1e2717f",
        "cursor": {
          "ref": "3fd0aaa6-a8ae-46dd-b2c3-924bf5fb3716",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a8d0d5b8-04ad-45fb-b2d2-0be094bcc6b3"
        },
        "item": {
          "id": "50cebcb4-7b8f-4b92-8043-6b26f1e2717f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "689c0e8a-8a73-49b0-b05e-ad2a2dfd1d23",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa9c3e2-0b0c-4625-8926-ab53670825f2",
        "cursor": {
          "ref": "cb0122ac-6902-46da-a2d2-51c29e0e5997",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f850af6a-424b-4109-a061-c06013619c6d"
        },
        "item": {
          "id": "4fa9c3e2-0b0c-4625-8926-ab53670825f2",
          "name": "identifiers"
        },
        "response": {
          "id": "44b182d2-644a-4795-a6b5-c9b7c7e8a015",
          "status": "OK",
          "code": 200,
          "responseTime": 2111,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aeda170-0519-4a0b-a431-621bde592666",
        "cursor": {
          "ref": "44b4b6b1-6c37-4594-8456-54e6ddea5151",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "21823f51-8337-4e2c-89bf-a589f5d275a0"
        },
        "item": {
          "id": "6aeda170-0519-4a0b-a431-621bde592666",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fa49bf78-87cd-4cf6-9128-0e77a4bfc2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab799c7e-0e56-433e-b27f-ddc2b8c0df09",
        "cursor": {
          "ref": "6ad3bca3-a9ee-4984-841c-bb4954cfe904",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a4009539-9343-4424-abed-a9b3c6d9e333"
        },
        "item": {
          "id": "ab799c7e-0e56-433e-b27f-ddc2b8c0df09",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b5606224-0b87-4643-bc70-51e4eacd396c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076c9157-8840-4ca5-a97e-a72de6d48ca3",
        "cursor": {
          "ref": "dd9115d6-6b58-4cb2-871d-3a9cb39be442",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f7056d44-eb99-481c-b8c6-df0e8e1910d7"
        },
        "item": {
          "id": "076c9157-8840-4ca5-a97e-a72de6d48ca3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4c775e84-5e72-45d5-a788-287b768c2041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3950b750-9041-4d17-a4c1-bd95365d6f70",
        "cursor": {
          "ref": "b0df6b11-fc8c-4338-8e57-8a4509cd112e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f0ba58c8-0f9f-4b17-afb5-e93aa0b204fc"
        },
        "item": {
          "id": "3950b750-9041-4d17-a4c1-bd95365d6f70",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1195d4b2-b362-45a6-8725-665121170e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae1c0da-9576-48a1-9b1d-afe5d837f204",
        "cursor": {
          "ref": "c255934e-f955-483e-b3dc-cc1ca9aa7d48",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6b7154d0-4f0e-4e78-8398-ff711e2a2eb6"
        },
        "item": {
          "id": "8ae1c0da-9576-48a1-9b1d-afe5d837f204",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e3c5a266-117c-4d32-9201-586e485074ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0eda3d-5577-4395-b5fe-a0931de15707",
        "cursor": {
          "ref": "3b20ed73-6cea-4a77-b37b-f0fa075211af",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a869aeed-9792-4776-9633-e47bd6c3034a"
        },
        "item": {
          "id": "be0eda3d-5577-4395-b5fe-a0931de15707",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "906e6f83-6f83-4b01-ae97-50cda1bb78de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360f8235-6f88-4783-9b42-e871ea3e493a",
        "cursor": {
          "ref": "5dffb326-8405-4971-8efd-e7fe321c9878",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1923e38f-6050-496a-86dd-f9715be9c93b"
        },
        "item": {
          "id": "360f8235-6f88-4783-9b42-e871ea3e493a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "98aff1e7-7c1c-4718-b4fa-86cfbe107215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52451cd0-8095-48cc-b9eb-f7a2cd5e747b",
        "cursor": {
          "ref": "1b8fa180-7e44-459b-a17c-2732979a9fb1",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8b8f9c92-5883-4418-9ca1-1ba356a04db7"
        },
        "item": {
          "id": "52451cd0-8095-48cc-b9eb-f7a2cd5e747b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "35cb4b5d-e4c5-49b0-886e-8f45da72aa26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9648c8ca-e0a9-4d9a-9b59-a215b19261cd",
        "cursor": {
          "ref": "d0573131-42b3-41b0-87d6-6a5b6c12a50c",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "facc55e3-0aa0-406c-96ec-5e990ab22011"
        },
        "item": {
          "id": "9648c8ca-e0a9-4d9a-9b59-a215b19261cd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7fd11b45-8182-4a60-8c4f-cb84fb23abd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357c8e02-f4dc-4c36-a016-c184b52df467",
        "cursor": {
          "ref": "e8957042-25ea-4d4a-8210-9b917d9b135f",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2a7cd708-3e01-4856-9254-fd61a3a35fb4"
        },
        "item": {
          "id": "357c8e02-f4dc-4c36-a016-c184b52df467",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5ee33096-438b-4b61-8709-4eae5305452f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a04ae1-b3af-420a-a086-77794ecd1fdf",
        "cursor": {
          "ref": "080f792e-cb80-43c4-a33e-d082777cc04b",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9568d00d-db5e-4c47-98e5-f2d46ccc9b8c"
        },
        "item": {
          "id": "85a04ae1-b3af-420a-a086-77794ecd1fdf",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cb854df3-f318-4a92-9b97-921cd3aebbd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21f210e-dd7f-4dff-8d3f-d064880a3e69",
        "cursor": {
          "ref": "463fbaa9-e800-4617-a8a0-96c7cdf30033",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b4f7aa82-8dfd-4ba9-aed4-39f9d3420127"
        },
        "item": {
          "id": "d21f210e-dd7f-4dff-8d3f-d064880a3e69",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6b1e7784-517d-45f9-a27b-5917ba9dabb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3d862e-f249-4d58-bc55-b5a142a7d4a5",
        "cursor": {
          "ref": "c90eb798-decf-4b01-8ee0-ee43e28a9200",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "42fae945-d2aa-4457-b07c-4d02ddbcc672"
        },
        "item": {
          "id": "eb3d862e-f249-4d58-bc55-b5a142a7d4a5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1bbe34ef-ca3f-431d-a105-bf171364b6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7249db6-229b-4110-9ba7-7fb12b6139b4",
        "cursor": {
          "ref": "0acf34fb-e0a0-4b71-b549-886e07598d5f",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "998d06c5-9b7d-45c2-854e-4df219a75a27"
        },
        "item": {
          "id": "e7249db6-229b-4110-9ba7-7fb12b6139b4",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "11394c30-f5fb-4e31-a881-167ebfd00009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b5bc75-57c1-4ea7-b9b1-ade71f91f867",
        "cursor": {
          "ref": "d8d592a2-fc22-47df-8283-e118626519fb",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8ca33142-0d89-4199-a135-a57717cf7887"
        },
        "item": {
          "id": "50b5bc75-57c1-4ea7-b9b1-ade71f91f867",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8cdeaacb-cce9-4d02-b83c-e7aebe2f4914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec1f2ab-fa69-4162-8be9-ce8687af92df",
        "cursor": {
          "ref": "f3dbd567-7d5b-4286-aa94-8b6ab4f6407e",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8bdbb033-2391-4d6c-9be0-bc514bbd9c89"
        },
        "item": {
          "id": "3ec1f2ab-fa69-4162-8be9-ce8687af92df",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1fecf639-7103-41ab-b955-2385c5b1bcb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0d57ab-7488-4e25-94cc-8536cd7c4579",
        "cursor": {
          "ref": "8481a997-eed6-4871-bc9b-ec5fc522689b",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "371fd0b5-b8fe-4b07-95c0-1fa43d9f9413"
        },
        "item": {
          "id": "bf0d57ab-7488-4e25-94cc-8536cd7c4579",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "86a0161f-2a1e-47fb-8263-7ec8b69697b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76cfbd2-51de-4745-b3c2-65984de3f28e",
        "cursor": {
          "ref": "f649a79d-9cae-4cf8-be9a-7d62b46f11b8",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a5d05379-9b6d-4ca8-b1d8-7aaa6f7dcbf5"
        },
        "item": {
          "id": "f76cfbd2-51de-4745-b3c2-65984de3f28e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8082cf11-4417-4d31-9abb-09ffbb1a9423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4c6c67-5f0c-4461-864c-1bd071b3879f",
        "cursor": {
          "ref": "ead0a29a-34e9-41f1-8e9d-cbc6521bddf5",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1c9dee40-44b7-4823-8a41-90ea59d53b07"
        },
        "item": {
          "id": "2d4c6c67-5f0c-4461-864c-1bd071b3879f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3fa74101-c43c-4e16-8dc8-060606473bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d0d6fc-e9a6-4211-8918-72d4d40028c9",
        "cursor": {
          "ref": "b07f7269-c9e0-4989-a646-a9c96dfa23f5",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e949f257-b517-4949-90c8-96bb9c10776e"
        },
        "item": {
          "id": "a7d0d6fc-e9a6-4211-8918-72d4d40028c9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "deb888c9-fbd2-4c2d-baeb-8642392dfec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215edf6c-1617-4381-a202-9d50cdf67f49",
        "cursor": {
          "ref": "13dec921-2392-4966-a336-902bf7b04e2a",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "fe89b132-c7bd-4065-b156-a236a736d14e"
        },
        "item": {
          "id": "215edf6c-1617-4381-a202-9d50cdf67f49",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "085328da-f950-4ae0-9295-ff4983304512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c9b41d-3330-4203-9eab-e626cbe85675",
        "cursor": {
          "ref": "0a23a5d7-4e94-4d97-ac47-135a9ac37dac",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "48d4a83f-3772-42ae-a38b-3a22e5d0c649"
        },
        "item": {
          "id": "76c9b41d-3330-4203-9eab-e626cbe85675",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f4f8d1f8-c935-47ae-a5c0-0778c109451a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268f1467-9090-412e-99e1-b8842d9a838f",
        "cursor": {
          "ref": "5bd7bf37-f327-4fe9-b2d8-ab7e4733961d",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "98e5994d-b109-48c2-bd8c-9ad413f1edc2"
        },
        "item": {
          "id": "268f1467-9090-412e-99e1-b8842d9a838f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3a2cd9e5-4f81-401f-b89e-dcfbd9f6a3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782493ca-a6f0-4058-a693-472412f4863c",
        "cursor": {
          "ref": "45b7fda6-75f9-4a32-a4e8-3b4c4d508382",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6770fa72-2a31-4f12-bd37-a30b50a7f50f"
        },
        "item": {
          "id": "782493ca-a6f0-4058-a693-472412f4863c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b5ea06b6-3806-4226-83e0-418ad83856a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e106c2-35ef-4ba8-abdf-5652fcad3447",
        "cursor": {
          "ref": "5ba2467a-73e0-4097-9811-7573330425e7",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "275de17e-2288-4b48-96ca-b2cae110c19e"
        },
        "item": {
          "id": "e8e106c2-35ef-4ba8-abdf-5652fcad3447",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "772de7c9-ccde-40ad-a48b-89bf794eadfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f405f5-b6f2-4ec6-aac3-d68184ea7382",
        "cursor": {
          "ref": "3038a1da-dd42-4a02-8a86-a8d663c30655",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c1b94172-05be-47a3-bfa9-799e55a24e25"
        },
        "item": {
          "id": "42f405f5-b6f2-4ec6-aac3-d68184ea7382",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9605d95c-3e76-43fc-86dd-f7b3256c623d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff368d4a-812a-411d-b4b5-1fe6f4faf414",
        "cursor": {
          "ref": "37591bbd-8ba2-4ea1-9719-178e8a735591",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "76736e7b-d30b-4754-a480-370811e67ac4"
        },
        "item": {
          "id": "ff368d4a-812a-411d-b4b5-1fe6f4faf414",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b832747b-dee2-487f-adde-6be49c1959c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b97c32-ff62-46a1-91aa-8e884c6fb5d6",
        "cursor": {
          "ref": "33ae34b4-4203-4dc6-a9e7-7194f709da29",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8985da00-1590-41cc-ad80-04b0b56a326d"
        },
        "item": {
          "id": "16b97c32-ff62-46a1-91aa-8e884c6fb5d6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e5aba6e4-45f2-432d-a672-b300c27f9eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb776597-5632-4dd2-b804-a3b35274d608",
        "cursor": {
          "ref": "1ad510fc-85da-46e3-a261-2ab8dd9cc58f",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "60feb3d3-5a59-4707-ad22-3104b445261c"
        },
        "item": {
          "id": "bb776597-5632-4dd2-b804-a3b35274d608",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3e474140-cbc7-43c8-95a3-7b350b00106e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3286d920-b78f-46db-a736-3d4815d7adaa",
        "cursor": {
          "ref": "ae79188a-ce06-4dd4-a700-b1237054d4db",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "96612303-8672-474b-bba3-e09292228ea8"
        },
        "item": {
          "id": "3286d920-b78f-46db-a736-3d4815d7adaa",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "414e877c-4a74-4ef1-b7f7-f391938cd6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ce276a-1874-4f96-8611-019dbeb155a7",
        "cursor": {
          "ref": "394ca862-e404-4d14-93e2-f41b383e4825",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "713d9568-3874-4298-8f8d-71b595bd9664"
        },
        "item": {
          "id": "25ce276a-1874-4f96-8611-019dbeb155a7",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4e443fe9-1700-447d-8ca9-a89847efd23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5406d4-e638-4807-8505-ce62b8f71de5",
        "cursor": {
          "ref": "3609d21c-c904-4348-baba-a43a010f3321",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fed19353-c53b-4ee6-991a-73757abbd2bc"
        },
        "item": {
          "id": "0e5406d4-e638-4807-8505-ce62b8f71de5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "05dbe59c-7217-401b-b319-a2d69a18ea63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4038e192-bcff-49e8-861b-69f3c41e16fe",
        "cursor": {
          "ref": "e04300b4-3754-4ee6-8c1f-571eaa3f59d0",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3c9c2e3d-5439-489f-80f7-dbc86f69608e"
        },
        "item": {
          "id": "4038e192-bcff-49e8-861b-69f3c41e16fe",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f19b8953-f677-418e-9d57-e44e834f848a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c780454b-5ef2-4c61-a799-13b1b0c9aa68",
        "cursor": {
          "ref": "9583adfe-135b-4b13-8f5b-f30e3d2167cc",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "99f0a437-8038-47a7-aad5-39e4494253ce"
        },
        "item": {
          "id": "c780454b-5ef2-4c61-a799-13b1b0c9aa68",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7125fe59-afe0-4978-9961-468520c8ca74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c3e5fc-9b27-42a0-8fd9-f9cc1a92c96b",
        "cursor": {
          "ref": "59d434c8-f0ed-4874-8cb1-09c74a581a8b",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "98a99212-4241-4a3c-a093-d139f5b4bba6"
        },
        "item": {
          "id": "b2c3e5fc-9b27-42a0-8fd9-f9cc1a92c96b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "59247361-239e-4c2d-bcc7-41c796ee2610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b8e92e-390b-4d3b-a8cb-b8bad02369fc",
        "cursor": {
          "ref": "762e54d4-0069-46b5-94c6-8c8f78b8f0ed",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6d9ff081-8669-4d7c-9203-6d6c2f9bb94c"
        },
        "item": {
          "id": "92b8e92e-390b-4d3b-a8cb-b8bad02369fc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f92ddcb3-6d4d-4c49-89af-374c64fcf166",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe9d706-0a69-4aac-b194-a8dbe35e2943",
        "cursor": {
          "ref": "bc6f0121-30f1-4873-9829-3901b91c603a",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5f937ba3-f014-407d-a4cc-76b607ed1e42"
        },
        "item": {
          "id": "ebe9d706-0a69-4aac-b194-a8dbe35e2943",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e6ab12cb-f8cb-4944-a1d2-cafd7a17000e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2400a0-cce6-49f2-adbf-db07ff9bad67",
        "cursor": {
          "ref": "00d24b95-7ea7-436d-8ad5-ddcafe836266",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5cf291e4-893e-4ec4-824b-bbf68781ba4d"
        },
        "item": {
          "id": "fa2400a0-cce6-49f2-adbf-db07ff9bad67",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "865dfe94-b00e-4c51-9eac-9f43ee1bcd11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53c707e-7c03-42b8-9170-f0400f508f88",
        "cursor": {
          "ref": "abd21782-94c3-4cd0-9e28-180972e36b86",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c578ad54-3c7f-46d8-8822-6388b6df2e08"
        },
        "item": {
          "id": "d53c707e-7c03-42b8-9170-f0400f508f88",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c1a3f106-0c66-4bc1-a3e0-3927ee55cd3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce43cd8-bd8f-4e41-8d82-51b833ce244b",
        "cursor": {
          "ref": "d4176cee-29e7-4e64-b865-95c5afac2007",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "391c5117-97c8-4ba6-8ef6-2e88915fe759"
        },
        "item": {
          "id": "5ce43cd8-bd8f-4e41-8d82-51b833ce244b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2ac10c8a-160d-437d-8071-6ba880f79cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d0e15a-47b1-4fd7-a6a0-717e37426a31",
        "cursor": {
          "ref": "ea144255-e55a-448c-9c5e-6743914c5736",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "dfe6fec7-ddb6-4cd9-a53b-e18c7fc146fd"
        },
        "item": {
          "id": "71d0e15a-47b1-4fd7-a6a0-717e37426a31",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3d6fba4f-38f3-4d45-a49a-041ed8b127f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4785e01a-26c8-4af9-b35a-b70cce7c444b",
        "cursor": {
          "ref": "ed3a30a4-cbb3-46d3-8a3d-9acf4e9e43a7",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a7261150-8aea-400e-abac-440af7df7dc3"
        },
        "item": {
          "id": "4785e01a-26c8-4af9-b35a-b70cce7c444b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b86bd720-3fdd-4d62-b1b3-ee44f1b18e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013f6e12-ccc8-4f47-81e5-04f2af9bac51",
        "cursor": {
          "ref": "544eaadd-e678-47fb-9659-3dd568b67a0e",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4f79d8b4-8318-4aec-9921-127fb7151574"
        },
        "item": {
          "id": "013f6e12-ccc8-4f47-81e5-04f2af9bac51",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "94b30816-f534-46ba-9c17-79ab5f5828e7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bdd169-95b1-4511-a9e3-a6d0e837a550",
        "cursor": {
          "ref": "7fdca4c1-04ed-425e-846a-cb647d4b18b3",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ff0b832a-c76b-402f-b230-2174d534fac4"
        },
        "item": {
          "id": "b1bdd169-95b1-4511-a9e3-a6d0e837a550",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3edfb996-03ca-49e3-a560-3691ff696a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbba3f5-7ac4-4168-99d0-1ca14c8f9b7c",
        "cursor": {
          "ref": "8ddd0855-9461-4583-b8bc-76745cf18d64",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ecab2b0b-dafa-414d-80b0-45c55ad49a8a"
        },
        "item": {
          "id": "bcbba3f5-7ac4-4168-99d0-1ca14c8f9b7c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "12c7ed5d-2cb2-42cb-9bc6-0b7b3b92a03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603d2fb8-1a58-4e8d-aa69-52b6e48c4a69",
        "cursor": {
          "ref": "42420a44-1ac0-4459-881f-c594157fc254",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d8bee797-14d9-4997-87d4-743748576f79"
        },
        "item": {
          "id": "603d2fb8-1a58-4e8d-aa69-52b6e48c4a69",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3e01623b-6447-4d18-a5f1-e173d9625de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13228fb-f008-4b0f-af00-6fbd4ec34384",
        "cursor": {
          "ref": "3059ebfb-3d1c-4c47-ae6a-e469af494d20",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "019cb21d-dfdd-420e-abf9-666f90a9fa25"
        },
        "item": {
          "id": "a13228fb-f008-4b0f-af00-6fbd4ec34384",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1ae815a4-3c69-48d7-90d2-80dd33a2b98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0f43da-acae-4eb1-b221-70df5f670f58",
        "cursor": {
          "ref": "11169bf3-f246-4f3e-a048-a5237ecd19db",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bfd10c8b-3cba-4611-a297-8e98cb98a84c"
        },
        "item": {
          "id": "5c0f43da-acae-4eb1-b221-70df5f670f58",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6482e751-b32a-4992-859c-7d41810ed19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9dccbf6-e0d4-4f88-b810-11462877cbc2",
        "cursor": {
          "ref": "b4560fed-6c77-46df-8598-c0d6b4e6fe10",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ddd81eb8-4c92-4800-a7a3-3c7cc2a1ce05"
        },
        "item": {
          "id": "c9dccbf6-e0d4-4f88-b810-11462877cbc2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ad03f72e-869d-44f1-b973-908c04f8ced2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0bf237-148c-43d9-8a13-2b62142bbb45",
        "cursor": {
          "ref": "9a8ecb47-e47e-4043-90c5-82c0291606c3",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2c7ab177-b09f-4fcf-b054-2f5832883ea4"
        },
        "item": {
          "id": "ae0bf237-148c-43d9-8a13-2b62142bbb45",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "73b0d34d-a69f-47a8-93c4-61c714175df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4608eca6-5652-4272-99c5-3de7ffd58fff",
        "cursor": {
          "ref": "edfc6b6b-3c85-43f6-be4f-72f9517b52b8",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f2ae360f-7bea-4fd0-8390-af31813e0902"
        },
        "item": {
          "id": "4608eca6-5652-4272-99c5-3de7ffd58fff",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ea033f81-8876-4a52-903e-8c3229b7eaa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8238582-5626-4b38-b8a5-46a84512b0d9",
        "cursor": {
          "ref": "9a22237a-d3a1-4f73-8e09-cb7b6f0f0542",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d0a5a4d6-2153-47b2-9050-df03890c828b"
        },
        "item": {
          "id": "c8238582-5626-4b38-b8a5-46a84512b0d9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "92430326-3e18-4a8e-8b58-5f66a048d542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8de332-152a-408a-a1b7-fffb77b0079c",
        "cursor": {
          "ref": "42c3d643-7ea8-4191-a7aa-5dc830750079",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a50c22c0-79f1-4989-8d74-ffaadf534b09"
        },
        "item": {
          "id": "dd8de332-152a-408a-a1b7-fffb77b0079c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "92396d7d-63a0-43b7-a94a-8a9825cfcdf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a250e0-df32-4c52-8c75-4727eba1d349",
        "cursor": {
          "ref": "3daf1ce3-d474-4766-900d-8068ad52d1d2",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "51620f92-5819-46ed-843d-c4127a8aba8d"
        },
        "item": {
          "id": "b5a250e0-df32-4c52-8c75-4727eba1d349",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5685cd81-b39a-406e-9eaa-66c47ff63071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d8b62c-63b8-4846-9a2f-0f5f201683cd",
        "cursor": {
          "ref": "6740c0a2-b745-4fc0-b6ec-1ffa3bd4ff18",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3cd0515c-a810-41d3-ab4e-27d9a93b3cbe"
        },
        "item": {
          "id": "92d8b62c-63b8-4846-9a2f-0f5f201683cd",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "324dad74-dadd-4492-9971-66fe5e25a6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adcf5628-7630-4605-aeab-a95f02d0a88c",
        "cursor": {
          "ref": "b2799ade-1a29-4850-add2-9d78ac00ce25",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1e8c34ba-61ac-4f3e-ad43-b2d94deaebfe"
        },
        "item": {
          "id": "adcf5628-7630-4605-aeab-a95f02d0a88c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9c28c5be-fe96-4342-bcad-eabee5757419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1ee547-1e08-4eb7-abd8-8366e9601d0a",
        "cursor": {
          "ref": "64f63258-fad8-4fe9-a34d-7871f492dd69",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c2077a9e-768b-4dbc-b7ba-b2fc78f21445"
        },
        "item": {
          "id": "ac1ee547-1e08-4eb7-abd8-8366e9601d0a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c75e4de4-6bc2-4af6-96b8-4848ce0f4850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c538a6a-1289-4a6b-b69f-db3720698e04",
        "cursor": {
          "ref": "4069eb0b-5922-4f13-92f9-afea3da5aa16",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e04f5bae-0dcc-4af6-9122-6f2766fafdd8"
        },
        "item": {
          "id": "7c538a6a-1289-4a6b-b69f-db3720698e04",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c7a0d83a-72e2-4ced-bb08-53ab939ac25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25689dfa-4e51-49ae-a817-9a75a6c38018",
        "cursor": {
          "ref": "06e583da-a60d-4eb7-923d-e221cd0d7617",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2187e5a0-8311-4bce-a86c-e4d04ccba249"
        },
        "item": {
          "id": "25689dfa-4e51-49ae-a817-9a75a6c38018",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "45ed3026-d77e-4c13-87a9-a9229aebd526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8377e4f6-bd2f-4225-beab-7326b7ea2b27",
        "cursor": {
          "ref": "a54f8829-7874-48c0-8735-f789eb325d8a",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ec7b916e-5e96-4c0e-92e7-62e73dc92fc9"
        },
        "item": {
          "id": "8377e4f6-bd2f-4225-beab-7326b7ea2b27",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "51f62d93-1fa6-4c38-a616-3bb046c2a855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09891372-9ff0-4c92-b178-1afee1d4e773",
        "cursor": {
          "ref": "b103eae2-2ed4-4f46-8ad0-4c86d17e10fa",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "fdbaf14b-2200-4a10-a9ca-ed8f7877882d"
        },
        "item": {
          "id": "09891372-9ff0-4c92-b178-1afee1d4e773",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d5799f50-e2f7-4f4f-806a-0615142b4022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad3c31f-fd15-445f-bd18-ce66a1bb5f16",
        "cursor": {
          "ref": "e0b92feb-2fc0-42ee-bf0d-1b8771b8df60",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "91fb533d-51d9-4f6f-875c-99b7ceedb333"
        },
        "item": {
          "id": "6ad3c31f-fd15-445f-bd18-ce66a1bb5f16",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f571fcd8-b460-4932-8a62-3b88e69a725b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2686da36-5a8d-4190-b12f-ffcd19a08811",
        "cursor": {
          "ref": "dd051fe3-9c97-403b-aab7-6227bc6a4609",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c49d4ab3-5499-43aa-8bb1-221243f2aad0"
        },
        "item": {
          "id": "2686da36-5a8d-4190-b12f-ffcd19a08811",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d0387eae-ee1a-49e0-ae84-81bcd75a2f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e33f4c-dff5-42eb-ba60-79680749f723",
        "cursor": {
          "ref": "17fe335f-25d4-427d-a484-63cef36f904f",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8223c5c0-6acf-4b8a-9d3d-d7fca93b446e"
        },
        "item": {
          "id": "04e33f4c-dff5-42eb-ba60-79680749f723",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "33c19e06-f2e7-43f2-b257-e2921b3b3287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f2840e-f1a7-4ac1-b599-d07da85f3677",
        "cursor": {
          "ref": "239e4625-3ab8-47f7-910f-cd721eb4c276",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "71586478-acde-4ec8-90b7-c03df500d669"
        },
        "item": {
          "id": "20f2840e-f1a7-4ac1-b599-d07da85f3677",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0e7f7b87-af90-4536-b809-f6a4b4abb99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ddbc00-b821-478a-ac44-39d1b2326fc8",
        "cursor": {
          "ref": "66d57c31-a4a2-45d5-b856-dcb8627d46b9",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "34e2829d-9c4d-4898-b46e-0d19aaeb0024"
        },
        "item": {
          "id": "95ddbc00-b821-478a-ac44-39d1b2326fc8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "99cbba5c-3e0f-4f4e-8b80-a21c3378a238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fcbba2-0a30-4e5a-9a6b-b812bab6a33b",
        "cursor": {
          "ref": "e6da24f8-028d-467a-8ed1-3b7db5f92d20",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f3d66123-04ee-4f2e-bdca-783bffad700d"
        },
        "item": {
          "id": "43fcbba2-0a30-4e5a-9a6b-b812bab6a33b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "372a0d08-7338-4338-8e57-9e4d4bf42a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e5d654-4c1f-4422-bf5f-356b0a77ee13",
        "cursor": {
          "ref": "274a02ab-dcfd-4878-91d4-ea613a44e1e7",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "59a0fc46-69d0-495b-bffb-b146b5375f00"
        },
        "item": {
          "id": "70e5d654-4c1f-4422-bf5f-356b0a77ee13",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3946b5eb-f996-47f0-b0b6-5beee675e830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02151ba4-b791-4640-9d5b-84c6ffe95029",
        "cursor": {
          "ref": "64f4c0c1-e9af-4a5c-8ee8-e81d2e7aea40",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8ec7beab-2ba9-4e92-a761-34ba35c17eab"
        },
        "item": {
          "id": "02151ba4-b791-4640-9d5b-84c6ffe95029",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ab74237d-d243-41cd-b4c8-5f6a1a08f418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fc7fc4-6373-49f6-8bb1-7ac33749824d",
        "cursor": {
          "ref": "85ce265f-33e4-407b-814c-59705417c9c2",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8b4cfe2c-5cef-413e-9275-a281be05a8c1"
        },
        "item": {
          "id": "90fc7fc4-6373-49f6-8bb1-7ac33749824d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3516eafe-870a-4355-9722-46f90dcf8386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b723b3-7018-48ca-bb50-4f24d650bf04",
        "cursor": {
          "ref": "2dbd979f-f333-4474-8bdc-3cd154a22b86",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "06ac8832-7797-4a26-98dc-6346a62a1686"
        },
        "item": {
          "id": "b9b723b3-7018-48ca-bb50-4f24d650bf04",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "db2f507a-d0cd-4c9d-a6a2-0730f3e39d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c697667c-119f-4661-a6fd-8acfe5136197",
        "cursor": {
          "ref": "2bedfec5-bcc2-4671-bf30-c4a36ec83210",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "507afea9-47fd-4d7b-944d-7d429afa683f"
        },
        "item": {
          "id": "c697667c-119f-4661-a6fd-8acfe5136197",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "30089f42-ab43-4f6d-8cb1-48628647ef56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448b640a-fd59-44fe-8cd0-a013f33e761a",
        "cursor": {
          "ref": "22e7cec8-f772-409b-a81f-61d9a294249e",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9d3ea337-725c-4a1a-8bec-8491d7f17748"
        },
        "item": {
          "id": "448b640a-fd59-44fe-8cd0-a013f33e761a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "05619898-d17a-4cfd-b3e8-381944553f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6282bca9-280d-43d8-8464-75fdf3571fde",
        "cursor": {
          "ref": "4face79e-0b3a-48ed-bd6f-b000d31271b2",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "932bc0b8-7eeb-43c3-98cc-cc799451e232"
        },
        "item": {
          "id": "6282bca9-280d-43d8-8464-75fdf3571fde",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4de66bf4-8fec-44f3-a01d-615cf03020ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20153020-335f-4402-9061-aba86ee321aa",
        "cursor": {
          "ref": "5a4465b6-1fd7-4e58-a46d-3459f40216bb",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a7f7958f-f265-49cd-a02b-50945f136b66"
        },
        "item": {
          "id": "20153020-335f-4402-9061-aba86ee321aa",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "16ecc88f-e246-4a22-a6ad-8ce22c075252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581ed9e7-6230-4c96-b331-a35b96d5225e",
        "cursor": {
          "ref": "68ce1555-739f-4f69-81a4-07e5a058170e",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b29d023f-18f1-412c-a470-6137f4c1a6e0"
        },
        "item": {
          "id": "581ed9e7-6230-4c96-b331-a35b96d5225e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "acdf593f-9762-496d-8797-18efa1b88d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481f2bc1-1334-47ab-aedd-f3fadb062712",
        "cursor": {
          "ref": "3c744dcf-cf52-4f48-9ec7-d36012514c44",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f437c3ad-72a3-4b6d-97d2-68b368479415"
        },
        "item": {
          "id": "481f2bc1-1334-47ab-aedd-f3fadb062712",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1131dd7e-4377-469e-a2d5-dc18461b271b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf115c0f-2f40-48d4-a8cd-d5ac452cdec9",
        "cursor": {
          "ref": "e77feec4-1aaf-4f78-8088-5a1a7a1246cd",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "732aec11-03c9-4c8b-ac6a-79fe0b5270df"
        },
        "item": {
          "id": "cf115c0f-2f40-48d4-a8cd-d5ac452cdec9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "18f17ff8-5480-4d22-aa94-1a58480d5eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8b832d-765f-46fd-b504-f2dac7315b1e",
        "cursor": {
          "ref": "4001fd7f-f880-47d1-bd81-957bb29c3df5",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e64e0f38-11a0-409d-8530-8b671b79cdd5"
        },
        "item": {
          "id": "1b8b832d-765f-46fd-b504-f2dac7315b1e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4b1d2ade-ed31-43ea-804c-4cbba0bb1b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c207d55e-40c0-4d68-97d8-906ccf99a79f",
        "cursor": {
          "ref": "49bc0793-be7c-4da2-baaf-5f3f90f147fe",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "09b1d598-73f0-4bc3-a4af-2b6df1970e4b"
        },
        "item": {
          "id": "c207d55e-40c0-4d68-97d8-906ccf99a79f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d1b66b2a-a83b-42c9-910b-7bd6371cebae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9dde5c-ffc1-4f12-9ee8-aa3fa86d30ed",
        "cursor": {
          "ref": "9d87ee5e-22a9-4f62-b335-41333d585f04",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a833e70c-0b79-4314-8380-227ca135c281"
        },
        "item": {
          "id": "0c9dde5c-ffc1-4f12-9ee8-aa3fa86d30ed",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ca78b7e8-e8ad-4bd1-b1ca-1094d0f9230e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4c85d7-11f8-4cc1-b7ea-3db5470028fa",
        "cursor": {
          "ref": "4c6b8b44-db78-4773-be6e-c356227c46ce",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b0ab70b0-8f80-47ee-af38-d82d0cf58281"
        },
        "item": {
          "id": "0b4c85d7-11f8-4cc1-b7ea-3db5470028fa",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "093b12d3-c29a-481c-bec1-c13977ee8257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f968c61-89ed-4a59-b3d9-ac992cc8ebfb",
        "cursor": {
          "ref": "af0f4890-53a7-4284-981f-33bb0ec2abe4",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1ade1ad1-dad9-4a45-bde8-93ae196ed287"
        },
        "item": {
          "id": "8f968c61-89ed-4a59-b3d9-ac992cc8ebfb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "38f8748c-369b-4cc8-a766-9b89b8cf8a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa45532f-3a4a-4ae3-ace7-6b273c622839",
        "cursor": {
          "ref": "93cccedd-5ef6-4431-bf72-13b5cf169632",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a2128ff2-2f5f-41b9-add2-61875a8316ca"
        },
        "item": {
          "id": "fa45532f-3a4a-4ae3-ace7-6b273c622839",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8a7f0daa-6d6f-4274-980d-d1da973c5353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d555c5e1-957e-4bd0-aa1f-0a45cb7b060d",
        "cursor": {
          "ref": "d139ba7b-de9e-444d-a8e5-be65b671093b",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b1afb806-a0d9-4b9b-85b2-6d9013c319bb"
        },
        "item": {
          "id": "d555c5e1-957e-4bd0-aa1f-0a45cb7b060d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cae18ab0-0b66-4d0f-a4ef-1895d5a693ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad97058-033e-4c67-9f12-804ee59b53e3",
        "cursor": {
          "ref": "2e9aff1b-4e16-4d64-a311-b70b5762dbc0",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "59ae2bd7-8c6a-40ab-bad3-b544736b2e40"
        },
        "item": {
          "id": "3ad97058-033e-4c67-9f12-804ee59b53e3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b1ae2a45-13a5-4a58-8f85-4164f6bb58f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4507158d-38b1-4656-b57c-8ffe7002bc1c",
        "cursor": {
          "ref": "e1ff5748-5825-4146-ab59-d782b46ce852",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "447da741-5745-4cf3-8950-487a58611673"
        },
        "item": {
          "id": "4507158d-38b1-4656-b57c-8ffe7002bc1c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "607eb12f-bd8a-4a06-941a-973573521551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8920ea-8782-4b5d-b37f-92af90e6da23",
        "cursor": {
          "ref": "66dfaae6-8c78-4ee6-abec-d23072c25e11",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2edeada6-8255-4f99-9481-f408b515082d"
        },
        "item": {
          "id": "4f8920ea-8782-4b5d-b37f-92af90e6da23",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "18348b95-afb0-4bf4-9a7d-4d8908633a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9988ba-2cb6-4ad0-95dc-80c5469d5c32",
        "cursor": {
          "ref": "9b495d13-1920-41c2-9afd-418d7e2c6054",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fdb8a11c-1883-4635-992c-ba36b07188ab"
        },
        "item": {
          "id": "2b9988ba-2cb6-4ad0-95dc-80c5469d5c32",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "64432203-faca-471b-9cec-5957ba53c0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e332307f-a383-4a39-8f76-97a646e5297f",
        "cursor": {
          "ref": "45fb6124-5e4a-4150-a349-2762b48a174e",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "791773f2-8ff9-4ff0-8330-1ccc861cdaaa"
        },
        "item": {
          "id": "e332307f-a383-4a39-8f76-97a646e5297f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5ba40984-9a5c-422d-9214-e8aba4726d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482ede94-8257-4c0e-a074-a9eaa4c0ec47",
        "cursor": {
          "ref": "6103b635-6db4-427c-984f-31502be84df9",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "968de453-7dfd-4d76-bd17-1d58a9130b65"
        },
        "item": {
          "id": "482ede94-8257-4c0e-a074-a9eaa4c0ec47",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0333bdfc-b611-4ed6-b424-498330790777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51402586-dcc4-4220-9b28-1473820704c8",
        "cursor": {
          "ref": "576985ef-c088-488b-9eb3-4de23a582dd6",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ba4bf6b1-1c03-4356-b46f-dab6042582e6"
        },
        "item": {
          "id": "51402586-dcc4-4220-9b28-1473820704c8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9bb18242-e335-47ad-b1a2-1aaca3f20558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a2770b-ebe1-43d4-92d7-7a0e8c9fc1a4",
        "cursor": {
          "ref": "4eb01084-444f-4fcf-bb1c-57ec026f368a",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ed49307b-281a-4573-ad45-c34ed849cd71"
        },
        "item": {
          "id": "e0a2770b-ebe1-43d4-92d7-7a0e8c9fc1a4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "33275138-c04a-4c17-9540-7338b2f0ebb3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1b477c-20ca-4971-bdb9-e7ef71ed3ec7",
        "cursor": {
          "ref": "f649bf05-d154-462b-9266-b1b956276556",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1b9af593-e8da-41e8-9a29-7a7946a6cc38"
        },
        "item": {
          "id": "ed1b477c-20ca-4971-bdb9-e7ef71ed3ec7",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "88246eca-ea74-4f6f-8256-e52889ccefb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ddf3aae6-71c9-44ff-8c5f-ae10ac09c91e",
        "cursor": {
          "ref": "2c9eed3e-d883-4914-b6c8-97326aa96480",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c3571fa0-500e-448f-bf25-dd3d3d164d4f"
        },
        "item": {
          "id": "ddf3aae6-71c9-44ff-8c5f-ae10ac09c91e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "27997712-a076-4a12-a166-44bd7b03383e",
          "status": "Created",
          "code": 201,
          "responseTime": 7761,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df22548-e079-4460-b1d7-932ce02239dc",
        "cursor": {
          "ref": "68f50276-e4b3-4f05-9390-ac712744cb18",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "06857044-d9bb-4a43-a688-c3d9fa1e0f75"
        },
        "item": {
          "id": "4df22548-e079-4460-b1d7-932ce02239dc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "28e6d32d-564d-4359-bc96-b3734c424582",
          "status": "Created",
          "code": 201,
          "responseTime": 7395,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a64e9c-6a08-40cf-8840-7a8b386a7b73",
        "cursor": {
          "ref": "5151f3f7-51f2-42b4-8256-2e6d70962c48",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0ce3962d-0095-4f4f-a088-700a705c99ba"
        },
        "item": {
          "id": "50a64e9c-6a08-40cf-8840-7a8b386a7b73",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d88c679c-7b6e-4d1c-a830-a768079b00e4",
          "status": "Created",
          "code": 201,
          "responseTime": 7829,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c42590-5ca3-46f5-b439-93b523e7b638",
        "cursor": {
          "ref": "7d49e7e8-c3c9-407d-9b13-949912bcffdf",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ff592d65-f8a9-4aac-b5a3-dc9dbe6466b1"
        },
        "item": {
          "id": "38c42590-5ca3-46f5-b439-93b523e7b638",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "70b5e36b-4405-4170-94fe-1cf2d19753fb",
          "status": "Created",
          "code": 201,
          "responseTime": 7303,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4be27a3-7e03-4ffa-b7b6-4564122786b6",
        "cursor": {
          "ref": "6085c6bb-9dd1-428d-bcda-51d20ed83804",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0c22a2d0-2271-4587-be3d-41dfa3d2d091"
        },
        "item": {
          "id": "b4be27a3-7e03-4ffa-b7b6-4564122786b6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "751151e8-e788-4f49-b785-742708b0e3eb",
          "status": "Created",
          "code": 201,
          "responseTime": 7015,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-20T00:38:26Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-20T00:38:26Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "410065ee-3aed-432b-a3d2-cbbcc027b6ac",
        "cursor": {
          "ref": "713496c3-4489-4584-b55d-0210853fdc51",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1eb405b0-e9ca-44f5-a6c5-1c747e73d7bc"
        },
        "item": {
          "id": "410065ee-3aed-432b-a3d2-cbbcc027b6ac",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8554c25f-0d39-4695-81aa-49d75fd7e16f",
          "status": "Created",
          "code": 201,
          "responseTime": 7357,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f4c979-60b2-4dd0-9c3f-a8ab4c843ce3",
        "cursor": {
          "ref": "b0c20e4d-0ab2-4b03-a7b4-62937aa5376b",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9a46a55a-752d-4028-9ea3-591a8ff97227"
        },
        "item": {
          "id": "06f4c979-60b2-4dd0-9c3f-a8ab4c843ce3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c74a0395-687c-44c5-abc0-82d8682e0ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a5abc4-d2ee-40e5-acfc-07f3aaac57b4",
        "cursor": {
          "ref": "ca9b49a8-2fea-4cc7-9cea-25b551dd3b72",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e7ca33ec-eff7-452b-9ed4-4d7aa3ec70ad"
        },
        "item": {
          "id": "80a5abc4-d2ee-40e5-acfc-07f3aaac57b4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1902ba6d-ba22-4789-8150-cb9dcb5c3f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d5e443-4a4c-47b7-94ae-7c162c58048b",
        "cursor": {
          "ref": "d09abaf8-4274-49f5-a9f3-96487642f773",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "72594dc0-8bf1-4f6b-9191-01ed12a95947"
        },
        "item": {
          "id": "85d5e443-4a4c-47b7-94ae-7c162c58048b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3dd18bd8-64b4-4ddc-b27c-80b8a200d1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c429b2-204a-459f-8981-38d35bed5adf",
        "cursor": {
          "ref": "fc4b7460-214f-4a61-948a-3fc9d0883d06",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "767ce096-6d79-4c48-920c-2ffb663de796"
        },
        "item": {
          "id": "92c429b2-204a-459f-8981-38d35bed5adf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9a62bd69-dae9-4734-b6da-ef89db51c5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026f0fc1-4ce0-4f98-9831-4d5e83bea6aa",
        "cursor": {
          "ref": "48f743a0-0234-40a9-83a7-dbace46a4add",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "933b04da-132b-4174-b4f5-c6da1119f86d"
        },
        "item": {
          "id": "026f0fc1-4ce0-4f98-9831-4d5e83bea6aa",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c28fa971-e449-4a9e-a482-82caf102fa5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24df0a8-f917-4263-a1ca-3c6df6bfbf69",
        "cursor": {
          "ref": "9ff45314-6b92-4285-b191-eceaf315b130",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "eb25ed37-d587-434b-8eeb-815539891d17"
        },
        "item": {
          "id": "c24df0a8-f917-4263-a1ca-3c6df6bfbf69",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "30b8af50-cb57-4c66-8d1e-cb178529f1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f45bf2-b9eb-4484-902f-641447d66547",
        "cursor": {
          "ref": "80d3b5ea-b868-46dc-be37-e7cb7bf8c947",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b681f7a0-9d3b-4951-b361-f02bc14b011c"
        },
        "item": {
          "id": "c5f45bf2-b9eb-4484-902f-641447d66547",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8a4006db-9f80-4813-b704-bb89a4deacd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78bb54f-294e-4c17-b096-6c19ae842617",
        "cursor": {
          "ref": "99db400d-aad6-4718-bd81-16158c0b500f",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "320efc6e-03fa-42cb-a70c-e9bee4238acb"
        },
        "item": {
          "id": "b78bb54f-294e-4c17-b096-6c19ae842617",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "513afde9-c845-4510-99dd-5b07dbe5d501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8e09ae-0db6-4a6c-bef5-a9829e2cf354",
        "cursor": {
          "ref": "06fd80df-e621-4cf7-90a0-fe709bedb7f4",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "38038eae-7ddf-4029-829b-c235bb10cfc0"
        },
        "item": {
          "id": "0e8e09ae-0db6-4a6c-bef5-a9829e2cf354",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "afea78c7-b77e-49f3-b610-a50d70b67f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6935e9ec-d65e-47ad-97e4-a6b074948516",
        "cursor": {
          "ref": "75357a17-09cf-4afb-af78-9a27fd590f92",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "761d609a-4b81-4167-8562-34214c4823d6"
        },
        "item": {
          "id": "6935e9ec-d65e-47ad-97e4-a6b074948516",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dfcd5fc2-cbfe-434b-8a3a-e1c78d90bba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3cc4060-82ed-4932-afd8-70e653d18223",
        "cursor": {
          "ref": "5c9ef8d4-c51a-4323-a163-c1a64ed4aed3",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8aa7494c-5067-4647-a41b-ad57d1193f75"
        },
        "item": {
          "id": "a3cc4060-82ed-4932-afd8-70e653d18223",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "22172bd0-8ea8-4cf0-b4ef-a82d3af1d9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fefbfa-8dd9-48e4-ad92-c2c085f7fb4b",
        "cursor": {
          "ref": "87156725-3bcd-44f4-905f-8791c06903f5",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3e9c1ede-d2b1-4814-9028-e37f6948a474"
        },
        "item": {
          "id": "b8fefbfa-8dd9-48e4-ad92-c2c085f7fb4b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5b387dbf-46a4-42f1-9f76-9125887a056a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bab2b2a-3740-49b0-9f97-c45c67d2fc18",
        "cursor": {
          "ref": "2aa911f5-8f2a-43ea-8fb4-03b82d6274eb",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "69109b02-9212-4566-ab5b-e3ef35fbec43"
        },
        "item": {
          "id": "3bab2b2a-3740-49b0-9f97-c45c67d2fc18",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "69894314-5be1-42c5-867d-751a7b50ddb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac25018-8d9a-4420-aa83-a826168730a6",
        "cursor": {
          "ref": "b1c8d0ec-62fb-4525-b18d-b62027dfe708",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b82d22a6-3861-45e6-bfe8-e280bc36a7c8"
        },
        "item": {
          "id": "bac25018-8d9a-4420-aa83-a826168730a6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "612072d5-ac8c-4779-af15-a58ff3116e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80113abb-5e7f-4f41-a711-4798678c8b40",
        "cursor": {
          "ref": "321fd3ff-e9da-46dd-99bd-2f81a1ac3ab7",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e83d4a4e-90db-4974-b84e-249f4bf5632d"
        },
        "item": {
          "id": "80113abb-5e7f-4f41-a711-4798678c8b40",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c7b3d7ba-591f-4ec6-a05e-fd1cbf4d2277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8698d45c-4101-4b90-acba-1d222300b565",
        "cursor": {
          "ref": "3eddd893-d457-439d-b4ba-9bf357b1cd53",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "53e58192-b596-40c3-86eb-bfee06f75600"
        },
        "item": {
          "id": "8698d45c-4101-4b90-acba-1d222300b565",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e477e664-6f3c-4e2b-937f-7923a5ef5dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bdc4af-0b99-4612-a8f1-a52d892eef95",
        "cursor": {
          "ref": "dc7e70a0-8854-4ad7-9c28-fd01fa4d574e",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3842f1d0-14a7-40c1-89aa-b7b0f93df107"
        },
        "item": {
          "id": "f1bdc4af-0b99-4612-a8f1-a52d892eef95",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "55e8c5eb-89d4-48aa-8d58-1be918dba1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46a9b5b-aa2f-4344-a74a-04e0096d781b",
        "cursor": {
          "ref": "f96cd568-7039-4023-ba00-b5ccad7fe2f2",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "93bed65b-c274-4436-af14-9369a42bc2bd"
        },
        "item": {
          "id": "d46a9b5b-aa2f-4344-a74a-04e0096d781b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ab067419-c66e-4ee4-bf7e-de467aa55530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7522ce-4e7a-4c26-8a82-af02d161f3f9",
        "cursor": {
          "ref": "01740bcf-c982-4118-98bd-2f29eee73e80",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b2ad69bb-c45b-45bc-892e-522bdd3a514a"
        },
        "item": {
          "id": "ee7522ce-4e7a-4c26-8a82-af02d161f3f9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7a20b6c8-ddeb-4d14-b25a-b9d51437e14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97df453-5a01-4bae-8eab-78825b3e0d16",
        "cursor": {
          "ref": "c6bd1fd4-71bd-4c17-88ee-feeae6a29e82",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d955ed2d-7583-4fb2-bc7b-8892c2c9760e"
        },
        "item": {
          "id": "c97df453-5a01-4bae-8eab-78825b3e0d16",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "67509aec-87df-4021-917b-609e28cce1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b72ce6-0c39-48f6-a6e8-d69b66877b91",
        "cursor": {
          "ref": "42cd5329-4489-4d44-9171-34722e5fbf37",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "557b3147-a08b-4a13-a0b4-27dafa31feca"
        },
        "item": {
          "id": "f7b72ce6-0c39-48f6-a6e8-d69b66877b91",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1c29abf8-5a66-4f24-8e3e-ad5a06e50767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd7d76c-2ffd-4898-b8f2-ed34cfc58298",
        "cursor": {
          "ref": "e1d8b730-a071-4ba3-a7a1-5a8b6f5a6cdc",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f7df48e2-b601-4f2a-a2dc-806e4f076308"
        },
        "item": {
          "id": "4fd7d76c-2ffd-4898-b8f2-ed34cfc58298",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ff421215-2b15-45f0-af08-b595e1f24c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769ab968-6731-4879-a041-7d5853e60d23",
        "cursor": {
          "ref": "cf91ef97-8cb3-4d04-9516-31bbe4dd2a92",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7c8fd013-1d76-42b9-a275-9f70f64310e3"
        },
        "item": {
          "id": "769ab968-6731-4879-a041-7d5853e60d23",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "86b8c12b-88d7-43ef-8e5f-0d23499871f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a79ef80-3d80-4c01-8b1b-69f26cdf2bce",
        "cursor": {
          "ref": "5383383d-d584-44b0-a43c-045c205ae503",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2f7f40b7-2df2-4813-8ff5-fb8bfd2b7082"
        },
        "item": {
          "id": "0a79ef80-3d80-4c01-8b1b-69f26cdf2bce",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d024d695-2143-4f80-9c38-989894fdbb16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10963e41-706f-40ea-a439-f6af4145f2fb",
        "cursor": {
          "ref": "f6bc0d78-b5ee-48bd-98f4-fb4785ce347e",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3d4d463a-5827-4e9d-821c-2962acea0766"
        },
        "item": {
          "id": "10963e41-706f-40ea-a439-f6af4145f2fb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3e907dc4-1c70-478f-ab80-09fec70ed01f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562c4e5a-946d-40b1-902b-e9270187246f",
        "cursor": {
          "ref": "5c93f215-0c60-4ccf-9718-8089d54378d8",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "02d1d644-bd61-4e75-a90c-3ba49c6be3ea"
        },
        "item": {
          "id": "562c4e5a-946d-40b1-902b-e9270187246f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "48fffc61-1b64-40a8-864a-0d298d696643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e070ae50-55b5-4c19-9b3e-ca6f1a63c26e",
        "cursor": {
          "ref": "3eb47166-6cfa-485d-bc69-5b85576b55d9",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "43091843-28bd-42a6-bf0e-6408cf48d102"
        },
        "item": {
          "id": "e070ae50-55b5-4c19-9b3e-ca6f1a63c26e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b0abab01-2fec-425b-a1cd-ff37b34faf87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba829424-f48b-4ca7-bcf5-1baf73c580ee",
        "cursor": {
          "ref": "4aff8969-64e2-433a-8029-efaa9c354a3c",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3c609992-ac6c-4bd2-adc7-803ffe580b03"
        },
        "item": {
          "id": "ba829424-f48b-4ca7-bcf5-1baf73c580ee",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ffd2592f-6bcf-4228-818f-8c9ef67e06e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308d906d-fbec-4681-9bd5-2940f194caa7",
        "cursor": {
          "ref": "c0269c60-077b-4fa3-a262-7367ae99c808",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b53d24e3-3aa7-46d1-b64b-f9a64e902390"
        },
        "item": {
          "id": "308d906d-fbec-4681-9bd5-2940f194caa7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e0c5e8f4-7a7e-4962-bdfa-9a922cbc28cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd863574-5c5b-43d1-9cfb-eed378a7f452",
        "cursor": {
          "ref": "736deb5f-5815-46e9-bcba-c39e5ea72703",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e7292761-8771-4ed3-a31c-e1f0a06f50ec"
        },
        "item": {
          "id": "fd863574-5c5b-43d1-9cfb-eed378a7f452",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8f8becae-b501-41b2-859e-987cd9d9143a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066cce65-d469-4cdf-adf0-82c1def208fc",
        "cursor": {
          "ref": "e995cd2e-85c5-477d-b2ea-b223d9947d3e",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "98557188-9e66-4e12-b8c3-8f5c37dda63d"
        },
        "item": {
          "id": "066cce65-d469-4cdf-adf0-82c1def208fc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cd38515c-e9a4-49f7-9e05-7d63825410a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2ed761-fe7f-4b55-9a8b-729e09a0905d",
        "cursor": {
          "ref": "f2e138bd-1473-4ec3-9bd8-03cc0108c5d6",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a612a8a6-9495-4b86-a655-d85afc88769c"
        },
        "item": {
          "id": "4e2ed761-fe7f-4b55-9a8b-729e09a0905d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "dea2d91d-5d0f-4419-8154-67f2c1bbd9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4829f87e-0d44-46ba-9773-2326f1f16a6b",
        "cursor": {
          "ref": "eb5ea40b-a83a-41aa-9143-902bd82d218d",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c7336b92-91f9-4cb8-801e-e0821c02df59"
        },
        "item": {
          "id": "4829f87e-0d44-46ba-9773-2326f1f16a6b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "510ed4b3-77a5-4842-ba03-bb9510262482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9d99d3-5687-44d6-ba5b-fb5b6d86b98c",
        "cursor": {
          "ref": "f61c5f57-b60d-46e4-b7c6-799c2edb6b5f",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "56c5d1d4-9236-4991-8752-41bcc4756842"
        },
        "item": {
          "id": "ff9d99d3-5687-44d6-ba5b-fb5b6d86b98c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c5f49377-4a43-46fb-90da-52114065d33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c947c6db-f7f3-4dff-9529-dbf9e9d89fc8",
        "cursor": {
          "ref": "519bf7c7-5ea3-4c8d-be94-82357aea0d58",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "63927022-fc2e-40a1-b34d-a7ea8bbae7c7"
        },
        "item": {
          "id": "c947c6db-f7f3-4dff-9529-dbf9e9d89fc8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "67f391d7-c8e6-4ce7-b278-a355a3d6383a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3865e8d8-b802-4345-b366-e64e6205d0ff",
        "cursor": {
          "ref": "bcd7da6f-0422-41cb-b4f7-513626a25d77",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4762731c-843a-4675-a405-c254fed2ac88"
        },
        "item": {
          "id": "3865e8d8-b802-4345-b366-e64e6205d0ff",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0e4b9a36-4f59-4b65-907e-a7a5534997bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fe7800-368d-4a6b-a5af-a2b6e1b92701",
        "cursor": {
          "ref": "73af61a1-a2c7-41fd-a214-ed3170d3cf5c",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d69fc1e4-02bb-4bbb-a242-87e3a4f55ff6"
        },
        "item": {
          "id": "45fe7800-368d-4a6b-a5af-a2b6e1b92701",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "901619c2-b0de-476a-9d39-297916e68ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f059c80-ac57-4b2c-ac82-b495557bd29f",
        "cursor": {
          "ref": "5c3ca682-ac23-4088-8679-5304b7f83e52",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4b1f7761-98c4-4155-a595-8a601933ff6a"
        },
        "item": {
          "id": "4f059c80-ac57-4b2c-ac82-b495557bd29f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7a0a27d7-8a09-4fee-ac6b-b1ad544e8534",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc6a312-227b-47a2-86cd-8aa9de7b14b0",
        "cursor": {
          "ref": "7f3c23f5-c385-4eae-b204-6b319d771b89",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "eb4bcd13-a327-4819-a8ae-9ba8100dac54"
        },
        "item": {
          "id": "8fc6a312-227b-47a2-86cd-8aa9de7b14b0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a1e05f65-aac0-448f-998d-94683f9839c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fad01c4-e8e8-4fe5-bb82-0f7ad6aebd06",
        "cursor": {
          "ref": "0e7ae3ff-d632-4662-80c9-0d09ace77bd0",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9476c61e-da20-461d-be21-35f5663dddeb"
        },
        "item": {
          "id": "1fad01c4-e8e8-4fe5-bb82-0f7ad6aebd06",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c8a0c217-24f5-403c-9b64-b8a61cd38bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6f9700-cd5b-4e8d-b150-998926cb3655",
        "cursor": {
          "ref": "5ee899d5-587c-4dd5-8098-63cc8b1f1c48",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f0faf59b-0b98-4b35-82ea-52bfac1b38ea"
        },
        "item": {
          "id": "eb6f9700-cd5b-4e8d-b150-998926cb3655",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f5b72a2f-4bdb-4426-ae43-7053de7d8aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5e69fd-bc14-477a-837d-fd4eed40bb53",
        "cursor": {
          "ref": "26b50de8-2a5a-40f1-aa6c-ce44d05d6b3d",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f93325f6-7217-448c-a073-c0c157850ea2"
        },
        "item": {
          "id": "0f5e69fd-bc14-477a-837d-fd4eed40bb53",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "69b7dfaf-742c-4016-986e-7a36faba907f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873bcc54-a4f7-4f05-be16-c0bac4f6b740",
        "cursor": {
          "ref": "8aaa52bf-c16d-4ba3-8a2c-3cd880351ce9",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "20523bb6-c68c-4590-97af-90c4161e44df"
        },
        "item": {
          "id": "873bcc54-a4f7-4f05-be16-c0bac4f6b740",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e1cdfad8-cab4-4289-8cac-7334694cc772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae7e963-0b8d-4cf7-832c-9237b6646443",
        "cursor": {
          "ref": "c9efe912-3ff9-4394-8703-2792a1852ec2",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "04043b5a-a2a4-4a73-ac09-2b3dba06dc74"
        },
        "item": {
          "id": "0ae7e963-0b8d-4cf7-832c-9237b6646443",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6e219c35-1247-446f-bee7-7b578ed7bc0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b23909-47ee-4359-9bc4-b91b6195f57a",
        "cursor": {
          "ref": "e01fada1-ca9d-46e7-b759-10a12d65fd9c",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8b27a2a6-4d0f-4de2-9ac1-00e8c7460b39"
        },
        "item": {
          "id": "43b23909-47ee-4359-9bc4-b91b6195f57a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6cd9d8ac-58c1-4e11-914e-e03143aabbe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ebe364-e0d0-4976-8ec0-30ab0ea9b611",
        "cursor": {
          "ref": "e12dd31a-79ca-4688-b453-479568af32fb",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2d0fc1c6-2fba-4886-85f6-da875e110d24"
        },
        "item": {
          "id": "29ebe364-e0d0-4976-8ec0-30ab0ea9b611",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5b3418ed-1e43-42a7-bfa0-3072dce6f92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31ef413-5697-48cb-8880-120fb916414b",
        "cursor": {
          "ref": "bcfb60fb-6077-4625-8df8-66c031d178b4",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "93f952a0-fef8-43d5-a4de-507d1149e4e6"
        },
        "item": {
          "id": "a31ef413-5697-48cb-8880-120fb916414b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d253ac8d-22f9-4d74-8357-ab9c4c0c599f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14470f9-63f8-4eb4-8b91-f66998ee59e1",
        "cursor": {
          "ref": "c155fa2a-d01c-4a48-a7bc-d618144434f4",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "833dbca5-e2b5-41de-bc34-176bc65115e6"
        },
        "item": {
          "id": "d14470f9-63f8-4eb4-8b91-f66998ee59e1",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7404cd4d-de70-49d9-990a-47d713ee8af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7dd9670-2fe0-4d61-9786-8524a0907f68",
        "cursor": {
          "ref": "e69544ea-89ae-4c98-96d5-a3c224a3611b",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "fdac2fe8-77b0-4613-9f7b-f219241682cc"
        },
        "item": {
          "id": "e7dd9670-2fe0-4d61-9786-8524a0907f68",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2f86e07d-4684-466b-b2ba-7dadddf8aa96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1d44b1-3284-4587-90a6-60ee299676fe",
        "cursor": {
          "ref": "2f99b46f-f815-4bf9-a002-e0712174553b",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2c9ba5f1-0709-4e62-a2f6-b159924a5141"
        },
        "item": {
          "id": "0f1d44b1-3284-4587-90a6-60ee299676fe",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "321ac983-2fdb-45b7-af3e-4828028d60b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45be766d-e6e9-4d63-8df4-ceb4f00e7faf",
        "cursor": {
          "ref": "a69217db-793a-4872-aa3c-2cf8f615ce46",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "212e013b-8ad6-4080-8f69-77272ab049c4"
        },
        "item": {
          "id": "45be766d-e6e9-4d63-8df4-ceb4f00e7faf",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "28ee4293-323e-4df5-9dc1-78f8362bec18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94138ec3-73e6-4a50-96e3-ae7fc346f4d8",
        "cursor": {
          "ref": "033a7387-642d-41df-ba55-70f30e9d14fc",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "950ab7de-a21e-4f3f-99c4-e31af78d2527"
        },
        "item": {
          "id": "94138ec3-73e6-4a50-96e3-ae7fc346f4d8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b9a4daef-ee61-46a0-b5db-954124816217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0241b2-3bac-4508-877a-014292866d06",
        "cursor": {
          "ref": "bbf796aa-fa6e-4870-bbfb-62bb3c3b180e",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "72db558d-4e23-45f4-9fcd-ffe4b6928cc6"
        },
        "item": {
          "id": "8d0241b2-3bac-4508-877a-014292866d06",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "afa6485f-1008-4a70-9fd4-f3b713c1d2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab4cd74-6aaf-41e2-a530-153317d9fccc",
        "cursor": {
          "ref": "76f1ffb1-ee79-4fc6-beb3-86b01aaf27e5",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8f922f09-35dd-465d-9b1d-7aa71c764b37"
        },
        "item": {
          "id": "aab4cd74-6aaf-41e2-a530-153317d9fccc",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "dd066334-d2d0-4d68-b0e1-6ac3a8a7942e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20a783f-cec9-4741-919f-42157cedb1dc",
        "cursor": {
          "ref": "0ee40bed-7f17-4fe6-a5a0-baa78e42e3b9",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bd13986b-cc1d-4eeb-abb1-3857e7a7c92e"
        },
        "item": {
          "id": "c20a783f-cec9-4741-919f-42157cedb1dc",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f7e7c4f2-e02a-4b5c-94e5-ddfe89c6c5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814ad554-cada-4c5f-be8a-2053cb96cd7c",
        "cursor": {
          "ref": "5ad22b01-3643-4253-80bc-3c2223e615f8",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d76538e0-b5b8-4d49-a81a-636ea68e1ce1"
        },
        "item": {
          "id": "814ad554-cada-4c5f-be8a-2053cb96cd7c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b61f6f9f-875c-46ac-84f9-15eb83b095c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9753b62-2d58-4ada-915b-d2be6284115d",
        "cursor": {
          "ref": "461bf924-8463-4f15-a22b-7fbc73f3fb32",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "cf1a3972-0c1f-489c-991e-46258d7d0d4d"
        },
        "item": {
          "id": "a9753b62-2d58-4ada-915b-d2be6284115d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "60c728ff-d585-4a6e-b092-9c9611d77365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2685063-e654-4607-8fbe-4e414c08ec9e",
        "cursor": {
          "ref": "9d142c6a-599e-4ee5-a99a-01d7c3915023",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ceea2770-5b20-491f-a02c-8bc192e1f8a7"
        },
        "item": {
          "id": "d2685063-e654-4607-8fbe-4e414c08ec9e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f38f6478-9178-4325-96f8-833b8571e126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b677c924-13d6-48a8-a543-d09f065a5e56",
        "cursor": {
          "ref": "0d74a461-7c11-4de5-aefc-dc2b40e80053",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "03fbe679-323a-4e86-b097-e9198a3de9b8"
        },
        "item": {
          "id": "b677c924-13d6-48a8-a543-d09f065a5e56",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3cbe1c41-d5fc-4f3a-bf80-498c6bc3b3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6fb7cc-6dca-46db-ae50-d9729cc150f1",
        "cursor": {
          "ref": "5b63ad2f-42f3-4421-ac73-9c96a2da48d4",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "bf196a93-0a62-4335-a939-0b1813b22f32"
        },
        "item": {
          "id": "0b6fb7cc-6dca-46db-ae50-d9729cc150f1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "84396c06-06fa-42b1-bf51-ebe254ee005c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f39019-65bb-4888-bf0f-5320435cf91b",
        "cursor": {
          "ref": "629eaa27-9401-4e7f-a1b7-ede5710133c9",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "94aea754-1920-4439-b648-44fd1ef15b6f"
        },
        "item": {
          "id": "48f39019-65bb-4888-bf0f-5320435cf91b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "317c909b-ccc4-4b34-944c-e654c04d5af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e88ec5-4fe9-4e60-9a7d-1a79888b0f57",
        "cursor": {
          "ref": "c560a56f-87dc-4794-8402-746626104a7f",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8c21c5a7-0a9a-48c4-858a-ac53383684f4"
        },
        "item": {
          "id": "b7e88ec5-4fe9-4e60-9a7d-1a79888b0f57",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "fa773950-f8c6-4a7d-96fb-3baaa7c2da6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73976a0d-43c6-440c-9c26-2d2534e51f4d",
        "cursor": {
          "ref": "4484de1a-29ca-4a72-bcc9-117f5d66551a",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "51b70408-aa39-4133-99b3-b7023603026e"
        },
        "item": {
          "id": "73976a0d-43c6-440c-9c26-2d2534e51f4d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d6fd815e-0c16-43c3-84ba-9d7147a33a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411b7fa8-31be-418d-8d4b-4882ce62e26c",
        "cursor": {
          "ref": "9f532acb-e4ac-4856-933b-0287c9ce8406",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "19401916-a93c-42fb-96bf-8ad0af114268"
        },
        "item": {
          "id": "411b7fa8-31be-418d-8d4b-4882ce62e26c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "62495e27-e492-4c41-846d-2301e785db25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40d1d29-8011-4591-83dd-e4c0a499f883",
        "cursor": {
          "ref": "a3f5f4fd-76f4-473a-b235-e13b15b46fb6",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "89f57847-5e62-47bb-bac3-ce988ef0d384"
        },
        "item": {
          "id": "f40d1d29-8011-4591-83dd-e4c0a499f883",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7ed85581-7758-4290-b97e-29ef6735eaa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58d0db4-baa5-484d-a2be-dbaf387b7a10",
        "cursor": {
          "ref": "e23e2a85-0df0-4ec9-8b2d-b9cdc03a3f8b",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "afc3da84-b1fc-48a7-a344-b84f0d7555fe"
        },
        "item": {
          "id": "c58d0db4-baa5-484d-a2be-dbaf387b7a10",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9803e6f8-cc9a-498b-90b4-e4db4e7004ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a351ae-4e9a-459b-9c92-cfbc2e3e8aaa",
        "cursor": {
          "ref": "e75be8ba-c084-4cd5-a85e-7484cfac33b2",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1b7d435b-70c0-49d5-9045-03d9ee365706"
        },
        "item": {
          "id": "82a351ae-4e9a-459b-9c92-cfbc2e3e8aaa",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "07621002-395a-46f6-975f-7a37a0ba9472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9140fd0e-b800-45a7-a8b1-5dea91b1c850",
        "cursor": {
          "ref": "7b23773e-3ed7-4a42-ae25-c88ec6a5be5f",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1898b6d1-9df4-4f3e-a748-318c311f9695"
        },
        "item": {
          "id": "9140fd0e-b800-45a7-a8b1-5dea91b1c850",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "93eb9885-c2e4-44f8-b89d-e233c5111d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b2d2ad-b543-4888-b4d3-f09372d3172c",
        "cursor": {
          "ref": "ea113ba7-fed2-4ae5-a1e4-aef5eab681d8",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a99a9d91-a480-4012-a592-d622b64b9e00"
        },
        "item": {
          "id": "46b2d2ad-b543-4888-b4d3-f09372d3172c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d53b29fd-68db-45b1-b47d-943f76ebe60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d245b85f-1bb1-4ee3-bf9b-1aafd9f8676a",
        "cursor": {
          "ref": "732afda1-da44-4880-8484-b0d1fc6fa00a",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "200a71a6-4986-444e-b077-c44046894276"
        },
        "item": {
          "id": "d245b85f-1bb1-4ee3-bf9b-1aafd9f8676a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4985d047-5a65-4fd8-bf71-ce7bbf41dd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b753b4-1d93-4c73-a5d7-92da7cb11315",
        "cursor": {
          "ref": "ac07c57b-a397-426d-90f0-fb56a825d5f0",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a019fcfb-b62e-49b0-a84e-cc810f71cc9e"
        },
        "item": {
          "id": "79b753b4-1d93-4c73-a5d7-92da7cb11315",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7038ce31-99ac-42fa-9b51-3f4ba730e297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6719ef40-884e-4554-91f4-2f03bc83e0cf",
        "cursor": {
          "ref": "bef4f9fc-b16f-4df2-a276-19f865479ebd",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6723b5c2-73bc-4716-904f-c7b98b6245ac"
        },
        "item": {
          "id": "6719ef40-884e-4554-91f4-2f03bc83e0cf",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9d2718c3-68cd-45f7-a30e-358aae45af3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c9dad1-e138-41a4-be78-cd939cf6144a",
        "cursor": {
          "ref": "addd0480-a190-47e9-b41d-dba52696d729",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "df7eea96-6ba8-4e70-8365-6ec27f45621f"
        },
        "item": {
          "id": "e2c9dad1-e138-41a4-be78-cd939cf6144a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c780fdd8-e6e1-478c-a7ee-4d7b366243b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ba2e18-7301-4b8c-afc6-3c9c1f6bdf69",
        "cursor": {
          "ref": "bceb565f-89f1-42b6-ae5f-96ff75d4472a",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2ee38e79-36c5-47bd-8721-cfb70c63b190"
        },
        "item": {
          "id": "12ba2e18-7301-4b8c-afc6-3c9c1f6bdf69",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ec9584cf-b2eb-41ea-80dd-3526d11a5ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e672edf3-5bce-459d-ae78-dcc80531d07e",
        "cursor": {
          "ref": "9f026627-50fd-4e62-8337-db251fd43320",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "15fb23d3-b4e4-45d2-84c7-532b3fe01201"
        },
        "item": {
          "id": "e672edf3-5bce-459d-ae78-dcc80531d07e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "27c5e88b-4047-4983-ac8c-a1470769a370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44c8d98-824e-4686-b05d-04327a2c1054",
        "cursor": {
          "ref": "77728b96-92c4-4cf0-ae25-bb5757c23c4d",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "11480676-b1b2-4395-99f1-b846e41587ce"
        },
        "item": {
          "id": "b44c8d98-824e-4686-b05d-04327a2c1054",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "33c6d5e2-b8c7-479d-8f32-680b88b06764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f29d56-7b78-4ac1-875a-ae2977c45264",
        "cursor": {
          "ref": "773cddf7-c040-4213-b0e6-f760d16a1492",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d6c72513-ad9f-476f-b531-75b147072916"
        },
        "item": {
          "id": "e0f29d56-7b78-4ac1-875a-ae2977c45264",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5d758c1a-f0bd-4d8e-990c-60638d503681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66651718-2e82-4990-a7c8-3fe19f38d6f0",
        "cursor": {
          "ref": "ff4dc3bb-8f3c-4cab-8b6b-35b0f6a63d40",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f7b496db-08b6-43dd-9d9e-412d7c96eae0"
        },
        "item": {
          "id": "66651718-2e82-4990-a7c8-3fe19f38d6f0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6f2839a9-8a54-457d-b86e-056a3b060995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b984d61-6fae-4fe5-bd9f-aff9f367211b",
        "cursor": {
          "ref": "e3f354b2-c71d-41e0-8694-37d2770cd17d",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bd24744c-571b-4791-b5fe-50ad2fe76e1f"
        },
        "item": {
          "id": "0b984d61-6fae-4fe5-bd9f-aff9f367211b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "46e7db78-8993-48c6-9411-e7e764f3e305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29cdc2ec-f0d4-4780-8c99-fdf884a839e7",
        "cursor": {
          "ref": "c4999033-d7b4-4902-9700-61d003927764",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "46b9fbd0-c1de-49aa-a7fa-70ed5cfaab51"
        },
        "item": {
          "id": "29cdc2ec-f0d4-4780-8c99-fdf884a839e7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "80835119-e7f5-474c-95c2-d0e0249c60cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbc4cfd-bb89-409d-a8ac-b571f0fbdeea",
        "cursor": {
          "ref": "1d05664d-a870-4fa6-8a5c-13a5c956741d",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d3dbd974-cbe2-4c76-8d7e-efee947f2f01"
        },
        "item": {
          "id": "1dbc4cfd-bb89-409d-a8ac-b571f0fbdeea",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3c7717e2-e34c-4bad-812a-02b81cc84bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8dec3b7-663c-414a-afa5-54d2f983fcdf",
        "cursor": {
          "ref": "00d6bab4-6561-4e78-8ed1-ea856d442cb3",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d73d3d44-f92d-4465-9df8-dc232c4e064e"
        },
        "item": {
          "id": "c8dec3b7-663c-414a-afa5-54d2f983fcdf",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6ef9decd-71ae-436c-a020-1b5b78ab05e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709953dd-c807-4d0c-9ba9-3ef13b8ab233",
        "cursor": {
          "ref": "c65df390-b9cb-4262-8722-b67e0948b215",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "45892fea-4fee-4d41-8f72-738aa62c2c12"
        },
        "item": {
          "id": "709953dd-c807-4d0c-9ba9-3ef13b8ab233",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "315a652a-a339-4680-9803-b30a85940629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76f4a24-68ba-49fd-86cb-4a3e5dca13fe",
        "cursor": {
          "ref": "e854c3b2-1a36-4ab6-a480-8879dd3005c8",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "fc6c8a0c-e46b-49ea-9e1b-0da08422719a"
        },
        "item": {
          "id": "f76f4a24-68ba-49fd-86cb-4a3e5dca13fe",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "50036718-8220-4d18-88d7-a4b660c6a359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66141f2-351e-43bb-a980-9518a2aba450",
        "cursor": {
          "ref": "9c9fc8da-34fc-4c7d-b75f-ebde0944e189",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e5dc5259-80fe-4a49-8816-f4b403f40724"
        },
        "item": {
          "id": "c66141f2-351e-43bb-a980-9518a2aba450",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "23e27c81-d0b8-41c6-8923-1e40a3de0456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d046c4f1-d658-4ab1-aea5-9f7067d4a2ea",
        "cursor": {
          "ref": "ee107688-d143-419d-972e-8a78d40d11de",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5ff698bd-40d6-4e96-8af8-179e24709c63"
        },
        "item": {
          "id": "d046c4f1-d658-4ab1-aea5-9f7067d4a2ea",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "435ed5d1-6b6b-4b9e-974d-8d3a603dfab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c13a86b-3690-4411-a1aa-24cb2a0efc18",
        "cursor": {
          "ref": "b6a817cb-2d4b-4da4-b02e-f56954dd3e80",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fd593005-30a0-4489-8a9a-1f37ce0d8e0b"
        },
        "item": {
          "id": "3c13a86b-3690-4411-a1aa-24cb2a0efc18",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4db91ae4-e3ec-4d61-834d-f9bb6331284c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c834963b-5301-4019-b8a0-bc19268c130a",
        "cursor": {
          "ref": "652ea29b-77c4-4595-ab5b-eaebf168eec5",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e14816bc-b0ab-40f2-aabd-7829bd10fa37"
        },
        "item": {
          "id": "c834963b-5301-4019-b8a0-bc19268c130a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e69098bc-189a-4dbc-8675-8f3a740b7b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73be87f-e6b1-4d1a-a62c-2c2ef768183a",
        "cursor": {
          "ref": "3d65725f-f566-4b32-98ab-d6d84d5e887b",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d0967fca-ed4a-4c9f-8803-43820d512504"
        },
        "item": {
          "id": "e73be87f-e6b1-4d1a-a62c-2c2ef768183a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d6d36843-6160-405c-bb29-98ec7aa36c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9e0868-d2e0-40a1-a5c3-9d933fd694c3",
        "cursor": {
          "ref": "1d4da607-3497-4136-a9a7-32d79ad684ca",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6f024fe8-4208-4d28-8ddb-8d516051eb54"
        },
        "item": {
          "id": "ba9e0868-d2e0-40a1-a5c3-9d933fd694c3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ae4250ee-6f39-46f4-b6f3-71594f96fb34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a2425d-67b2-4ef5-a206-fd99ed050e5b",
        "cursor": {
          "ref": "879084b3-0e8a-4656-be97-814fd88b61ae",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "973c2107-bace-42ac-b9e5-16cc726c69e4"
        },
        "item": {
          "id": "54a2425d-67b2-4ef5-a206-fd99ed050e5b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cc56e059-6c5f-4181-b2ad-ebeb76609f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d0fa32-0ba7-4381-b435-506f241d137f",
        "cursor": {
          "ref": "08f4ebc8-a427-4ad7-a082-d421d3bc4cec",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0150f767-690d-4443-828f-7a876007abcb"
        },
        "item": {
          "id": "19d0fa32-0ba7-4381-b435-506f241d137f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b8e72425-4799-4165-921d-f20c7b6c6078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25377a02-8d6f-4e36-84fb-5c18f92903bf",
        "cursor": {
          "ref": "a0f53671-64e3-4766-9acb-abd38012e993",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "19b3896a-3706-4cd5-b7a6-9d783f0e9a3a"
        },
        "item": {
          "id": "25377a02-8d6f-4e36-84fb-5c18f92903bf",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f4a0191a-039e-44ce-8676-40aed006cb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e41e51-83ea-49b2-82ba-c76df3114595",
        "cursor": {
          "ref": "f4b9f134-b62d-4d87-bfcb-58d1ddb18c60",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b7976324-70c3-4fef-90ba-5a99a31e9d1f"
        },
        "item": {
          "id": "c9e41e51-83ea-49b2-82ba-c76df3114595",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3979c9cb-40ba-417b-b9bd-560b84aefb98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0550bf93-ea72-485c-8f20-2c0143b42603",
        "cursor": {
          "ref": "0c77c4ea-c473-48a6-8f3e-2db65b1bdbeb",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "68aed027-3ff5-4c41-81bc-ab6aef3fed42"
        },
        "item": {
          "id": "0550bf93-ea72-485c-8f20-2c0143b42603",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3406bd4a-11ca-4ded-9b2b-b9540e512ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9832fa-8ddc-49e9-9ca5-8973296bbfab",
        "cursor": {
          "ref": "aabd5e29-d4a7-4653-848b-80a10f210917",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "df686ee9-122c-4934-9c60-bdab099ca214"
        },
        "item": {
          "id": "ec9832fa-8ddc-49e9-9ca5-8973296bbfab",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c76bece6-30c8-4ec5-9374-28538e51e05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db69cd07-7c61-48b3-9218-6b83996c6736",
        "cursor": {
          "ref": "aacc04f8-0992-441f-b2e6-0bf3fb89ab0a",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0c3158fc-ab4d-47ce-be4a-e60587137eda"
        },
        "item": {
          "id": "db69cd07-7c61-48b3-9218-6b83996c6736",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d50905aa-5cc5-4f12-9648-26689a00ffa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cf0ec9-9550-48ea-8f36-9004dc24554c",
        "cursor": {
          "ref": "13d897f6-b659-4c1d-81b4-9365422a292c",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "01c4fb7d-fb0b-403a-aad1-8f9b72a8e84f"
        },
        "item": {
          "id": "e2cf0ec9-9550-48ea-8f36-9004dc24554c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "cf2839e8-acaf-4eca-8702-c1148d808cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28853a61-9674-49a2-a1e1-0acccc7d6b02",
        "cursor": {
          "ref": "fb3d88e2-00b3-49da-bfc0-566d99843002",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8cc85b57-d8df-4e20-a923-e66472cf2893"
        },
        "item": {
          "id": "28853a61-9674-49a2-a1e1-0acccc7d6b02",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c87a8c16-886b-42d8-bb5c-5a716ae1c905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbaf5f4-4d66-4fae-b14c-6434211a5733",
        "cursor": {
          "ref": "c9dc4851-0897-40fb-891a-2230fd9aaf61",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "25cbe7fc-16f5-45de-b046-92386969c49f"
        },
        "item": {
          "id": "5dbaf5f4-4d66-4fae-b14c-6434211a5733",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d3c82c19-d23c-4633-8666-5d81215a6902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b615f5c-b8c2-4928-bc3d-65bf4136bb78",
        "cursor": {
          "ref": "40e3a531-5a1a-4968-b140-06bec08166de",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fa6365ee-c30f-4ff1-907d-72fbf5f241bc"
        },
        "item": {
          "id": "1b615f5c-b8c2-4928-bc3d-65bf4136bb78",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "775fb1a1-0d72-4e7d-a654-7597ccd44c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee942934-3d77-43bd-9ed6-7b9103acd636",
        "cursor": {
          "ref": "9e9f4718-5519-4ee9-be2c-a840e532562f",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c94e48d1-1e78-4244-a7eb-903805d95d12"
        },
        "item": {
          "id": "ee942934-3d77-43bd-9ed6-7b9103acd636",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1cbc1135-6ea1-48a4-9cb8-de8d1c13d9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16990d1d-071d-4f53-bd4c-cfb92ba62bad",
        "cursor": {
          "ref": "e2275525-aedc-484f-948b-c7bc7021ec48",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b949ccae-a98f-4d79-a2f0-65f1e95c0f00"
        },
        "item": {
          "id": "16990d1d-071d-4f53-bd4c-cfb92ba62bad",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ae6edf35-fda0-4a99-92c6-7e0e80eb7c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7997b7a9-73a7-4c92-a8cd-6d84b970702e",
        "cursor": {
          "ref": "3706a019-f8c0-4ee6-b1ac-509ec885e97e",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "25317ef9-d30a-4503-abde-f87bc5e0bf2e"
        },
        "item": {
          "id": "7997b7a9-73a7-4c92-a8cd-6d84b970702e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c1c69e85-8f28-418f-a7cf-421b2b162af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5071b2c0-16b8-48a5-8032-a4f1c2279079",
        "cursor": {
          "ref": "3936c599-bbc0-43c6-ad86-a955789d5c3f",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "02feb29a-0802-4241-a8ee-e8ea6a61e02d"
        },
        "item": {
          "id": "5071b2c0-16b8-48a5-8032-a4f1c2279079",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "244a4ad5-f8c9-452f-9b4b-2141a063f576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0a4f9f-d383-46c1-b50b-75dd06be77b1",
        "cursor": {
          "ref": "5206884a-92c8-4fcb-81dc-c4169be317d1",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4a1ed3e5-424c-4aa0-8b7d-648ccdc3758b"
        },
        "item": {
          "id": "3a0a4f9f-d383-46c1-b50b-75dd06be77b1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bd2c8dc3-b5f9-4d8a-91cd-93bf7bb69645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829dbdbe-7834-4e05-91a6-3664dfff1216",
        "cursor": {
          "ref": "a7c2b997-6594-4e22-91e5-127459bccce8",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "650768c7-81cf-4b15-8654-a9b5b08322f3"
        },
        "item": {
          "id": "829dbdbe-7834-4e05-91a6-3664dfff1216",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f2ea301c-f37a-4427-9543-a5dd0e37415b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118aed86-68cf-4754-8cde-70c13c978e82",
        "cursor": {
          "ref": "6fcaca6c-98a3-4838-8c81-f91df9c79c53",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "04651728-c4f1-4182-a229-3e836a1b97cc"
        },
        "item": {
          "id": "118aed86-68cf-4754-8cde-70c13c978e82",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2da561b1-1007-4525-af0f-58c3e92c78dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee2684d-4c82-456a-a287-9856ff698e93",
        "cursor": {
          "ref": "c6b70a32-215f-436c-9ecc-ddf2e17aba52",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "65c27476-cb7f-4ade-a848-1e96c1eba814"
        },
        "item": {
          "id": "3ee2684d-4c82-456a-a287-9856ff698e93",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9bbdd6a8-b3b4-4238-8ac3-93e6c7ac9e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97fc763-37fc-428b-8c3e-dbba5079b7b8",
        "cursor": {
          "ref": "cb14e04d-76bb-4291-82e5-047d29c515eb",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "325b0324-368b-4f45-992a-ac9e99b21b55"
        },
        "item": {
          "id": "f97fc763-37fc-428b-8c3e-dbba5079b7b8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5d898e25-a409-4edf-b400-bb000974febf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5814fc0f-c930-4251-8c6d-8fb85fd48f6e",
        "cursor": {
          "ref": "927e6de5-445e-4f0d-bb55-355c6b4b8624",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8f8964c3-5572-4f19-b626-94b66cb151ac"
        },
        "item": {
          "id": "5814fc0f-c930-4251-8c6d-8fb85fd48f6e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ef2fd005-1fab-49b3-94ec-edcd50a37116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a326cca-0842-40d6-9a73-9bc474083f3b",
        "cursor": {
          "ref": "c2953809-5ee3-4f6d-b6a7-c8a956d0c5a2",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "518c6ba9-863d-433e-9a3b-12247912ed2a"
        },
        "item": {
          "id": "9a326cca-0842-40d6-9a73-9bc474083f3b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d2a65ccf-7f44-4d4e-b196-d98ca5976ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3afa751-eb41-4c5b-bdea-170dcc76a921",
        "cursor": {
          "ref": "6d1e4641-6e14-4b19-9719-633daa3c52a9",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3815fba5-0b4e-43f3-872d-e1dac982d160"
        },
        "item": {
          "id": "c3afa751-eb41-4c5b-bdea-170dcc76a921",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ecc894bc-f34e-48b0-bc03-d475367e1dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53022d7-74c8-45db-a73e-1dcfc818bbe2",
        "cursor": {
          "ref": "7ca16004-567b-4297-b0cb-1f80416bf5b2",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b7140d4c-94f3-4c0a-99a4-883537a6c0a0"
        },
        "item": {
          "id": "b53022d7-74c8-45db-a73e-1dcfc818bbe2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "45fc39ca-79d5-49f3-a2cd-352c37202e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0cee08-df27-431f-9503-009cffaa29e5",
        "cursor": {
          "ref": "a0499670-3f78-40e6-95d4-34becad93d11",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6d157009-a8c5-42e6-a1e9-1fcbba788215"
        },
        "item": {
          "id": "fb0cee08-df27-431f-9503-009cffaa29e5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0c41b66a-ffaf-46b7-aa01-ab5f8cc42486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706775aa-3d03-42da-ae32-adc2bfb62ac6",
        "cursor": {
          "ref": "8c3041a1-936a-4c3f-a77b-be103c100d96",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9f346130-19ad-44af-8492-0a934735591c"
        },
        "item": {
          "id": "706775aa-3d03-42da-ae32-adc2bfb62ac6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ac35fe4e-e214-46c7-a429-e92b0942ee2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7dd40f3-abb2-42e4-8310-ea23b8522c52",
        "cursor": {
          "ref": "17e2aa63-ee57-4747-b1c8-d7aca2a6ea10",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "800a5e7e-6c7a-48d8-9514-c796f47050b6"
        },
        "item": {
          "id": "a7dd40f3-abb2-42e4-8310-ea23b8522c52",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "87de464f-d87c-4ea5-b52a-fdc656b9a359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ddea685-37b1-49ef-b4a3-69ad8cd7d90d",
        "cursor": {
          "ref": "67770f79-5e2a-4590-8ece-8a194dfb7253",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bf3ff76b-b9ea-4a32-bd8d-55b33f7bbdf0"
        },
        "item": {
          "id": "5ddea685-37b1-49ef-b4a3-69ad8cd7d90d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cb7101df-91b6-45a7-9ad3-9687b643ae1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da387aa7-ceb6-4d46-9eaa-c38675be79fb",
        "cursor": {
          "ref": "4c6aca57-8988-49fd-8eae-993ace2e6902",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9b42ae58-64d1-4274-b233-5ff3a9527dcb"
        },
        "item": {
          "id": "da387aa7-ceb6-4d46-9eaa-c38675be79fb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "357a5ba4-e1ea-4eaf-8913-68bf11d7673a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126053b8-669d-4d36-9622-02306a1426e4",
        "cursor": {
          "ref": "7282422a-73b0-44c9-a192-b5f9e8456ce6",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f4c5a266-0b57-400d-a211-019d1792cef1"
        },
        "item": {
          "id": "126053b8-669d-4d36-9622-02306a1426e4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "35cbd7e0-08d2-4064-8d8e-25aa31bbd242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fd0e76-a0d9-4ad6-b656-c1c34a782225",
        "cursor": {
          "ref": "bbec8a1c-40a9-4259-aec9-9b0b1fea80df",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e90b0b21-599f-40d5-bbd7-417c5ba53002"
        },
        "item": {
          "id": "f3fd0e76-a0d9-4ad6-b656-c1c34a782225",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "04ec311b-0965-4039-9130-54ec51df5e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b17de5-8f5f-4177-92ed-21b04f29865b",
        "cursor": {
          "ref": "8a8c5496-a5b3-49b5-91d1-130745815af7",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8e837a77-97a3-4a8e-aea2-0a48fc902a43"
        },
        "item": {
          "id": "49b17de5-8f5f-4177-92ed-21b04f29865b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "097c6032-f173-4860-a897-40e22f236b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc12802-e857-40a9-98d7-a1edb8445d17",
        "cursor": {
          "ref": "7df1ebf5-10ec-4fdc-bb67-f6b918e16b78",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "46bf798a-b801-4108-b466-61d9680a9594"
        },
        "item": {
          "id": "1fc12802-e857-40a9-98d7-a1edb8445d17",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6c96e1f8-0f60-469b-93ac-726d0a4ef698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166f3172-eda9-44ed-9b50-a427aa33213d",
        "cursor": {
          "ref": "1f7ec707-3f11-471b-a0c6-9650d8a51081",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b2abb372-101f-4a21-81b0-1d0d0ac7e6f4"
        },
        "item": {
          "id": "166f3172-eda9-44ed-9b50-a427aa33213d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "364dbc0b-c2b8-4145-9c88-7ce5433cfb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9faeeb95-3059-4938-9960-cf7974652b08",
        "cursor": {
          "ref": "61d0a8ea-f85b-4a01-9dcc-8fbe7bb866a5",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1b465763-a6d0-4a5f-9e58-8646d0a64346"
        },
        "item": {
          "id": "9faeeb95-3059-4938-9960-cf7974652b08",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "374ed6d1-489c-47a5-bf6f-b97d2e5974ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77e4b7c-4569-4798-8c72-d7d9a02c4fcd",
        "cursor": {
          "ref": "835fcd82-4f44-4498-824e-80cbc4464569",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b735afde-29f3-4d63-93eb-3513dd78fcf8"
        },
        "item": {
          "id": "a77e4b7c-4569-4798-8c72-d7d9a02c4fcd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4d334788-05d2-422f-a0d4-78ab6e3a7f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55882e18-dc51-49f6-9a2f-5ce0e87103a1",
        "cursor": {
          "ref": "02bb23f8-0280-4b8e-b31d-e0bfcfc09eaa",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b4c9074b-11b7-494a-9736-6bb0c358ea13"
        },
        "item": {
          "id": "55882e18-dc51-49f6-9a2f-5ce0e87103a1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "03cadea6-f2f3-481c-8761-ee1f3e3ba520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ddf4e4-fb28-4772-92cd-7313db5c1dd4",
        "cursor": {
          "ref": "de51a163-570e-489f-8865-206af584542c",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c879f488-30ce-4da2-b625-36e42188b994"
        },
        "item": {
          "id": "e5ddf4e4-fb28-4772-92cd-7313db5c1dd4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e6699b9c-aee1-4505-8f7d-20b64122abbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a8aea1-3c1c-40a6-8667-c63d6bb3142f",
        "cursor": {
          "ref": "33e93f9c-d24f-43e8-8247-6813d9efcdeb",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7802fab5-dac2-402d-837a-a5c9aaac8b31"
        },
        "item": {
          "id": "37a8aea1-3c1c-40a6-8667-c63d6bb3142f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "711dd56a-8cd2-4de0-a25f-cd1d55f9ca5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93d6355-85c4-43bf-a958-5e2f5d942b8d",
        "cursor": {
          "ref": "ff652737-bb4f-4387-9635-ec8ae581a1aa",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "87e21d1b-b103-47f2-8225-2ab36f6bdcb2"
        },
        "item": {
          "id": "e93d6355-85c4-43bf-a958-5e2f5d942b8d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b0034e75-411e-4c99-a151-2260690c342d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67e8f51-d13f-4793-81c9-bfded591fb7f",
        "cursor": {
          "ref": "7e6a4ab4-0bcb-4b44-aaef-24747374bb57",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b88fbbeb-e8d0-41d2-9f53-fc3552ea0dad"
        },
        "item": {
          "id": "c67e8f51-d13f-4793-81c9-bfded591fb7f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4758e519-8c0d-46c6-a6f8-f0211712a510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eeff3b8-726b-4100-8339-0b16a4fcfb95",
        "cursor": {
          "ref": "63b32eb8-bfaa-4854-9944-60191a5d5177",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ba0d5db8-db02-4bd5-8064-8ae2fe61e838"
        },
        "item": {
          "id": "9eeff3b8-726b-4100-8339-0b16a4fcfb95",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "abe8d537-6227-4233-b90f-8ca90c53ef41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7e15fa-8471-47c2-9f83-02c96c239f02",
        "cursor": {
          "ref": "8ab5bbc8-89d9-4074-9106-b2fc6d4adc52",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e03a5421-5241-418e-8ec1-1f11a2c23bf0"
        },
        "item": {
          "id": "7a7e15fa-8471-47c2-9f83-02c96c239f02",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5f0affbe-4d78-4612-9340-295a4f28a23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711b72a2-4daa-437c-9f20-83902e1183f6",
        "cursor": {
          "ref": "b79bb670-d3be-48d5-bddc-a54f5aab9c53",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "dbdd8099-40f7-4d1f-b439-6a069ee4cd40"
        },
        "item": {
          "id": "711b72a2-4daa-437c-9f20-83902e1183f6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c8a81acc-8e23-47fd-8e38-4d99e05d9e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ebb0cc-c8a2-4969-af0f-4baa5c3f4cec",
        "cursor": {
          "ref": "a030400f-b7b7-434a-b9c2-e9ea9c7a78ee",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "aa4ce6fd-41af-44e8-af10-7f9a0e89769d"
        },
        "item": {
          "id": "f7ebb0cc-c8a2-4969-af0f-4baa5c3f4cec",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e2b4e642-d9e5-40ca-ab6e-4bf154529789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab8b7cd-f6b4-4904-8a33-077ad367376c",
        "cursor": {
          "ref": "7c86f14e-b391-440d-91a1-5e5ea475ee53",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0a235ece-e2c1-4b89-bae8-a4a96b90b97c"
        },
        "item": {
          "id": "0ab8b7cd-f6b4-4904-8a33-077ad367376c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "17cc0e9f-0a08-4e4e-a518-48b811858ef2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdda04a-3429-4cb2-ad64-dc5dfaf67d35",
        "cursor": {
          "ref": "baeb238d-30c4-4f54-a328-13dc6b48649f",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "905ad044-53b4-4009-a606-d81bb43860cc"
        },
        "item": {
          "id": "8bdda04a-3429-4cb2-ad64-dc5dfaf67d35",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4587d6ea-28e8-48b2-8d73-9dca2cac44a1",
          "status": "OK",
          "code": 200,
          "responseTime": 2270,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "944f9885-bd79-495a-9ce7-ffc2d36be9d1",
        "cursor": {
          "ref": "9934979f-77bf-4a2d-9d07-7f40f4fb2395",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e0adb7b5-e23d-4df2-b161-eb1cf8cf9dc2"
        },
        "item": {
          "id": "944f9885-bd79-495a-9ce7-ffc2d36be9d1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "aedfa7a6-4d6c-42ca-ae81-48c75f94096a",
          "status": "OK",
          "code": 200,
          "responseTime": 2879,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5aa5de-94a7-455f-a84c-3290cab387a5",
        "cursor": {
          "ref": "0167fefe-da1d-4c62-8380-7fe513e0901b",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bf6c9a00-7bdb-4138-b3a2-84ec802ec311"
        },
        "item": {
          "id": "da5aa5de-94a7-455f-a84c-3290cab387a5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "75bebd6b-5b32-4505-828d-e6a2a129dd94",
          "status": "OK",
          "code": 200,
          "responseTime": 2248,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "91913365-d822-4fc9-a05d-8ebdbb7e6376",
        "cursor": {
          "ref": "faaadfc5-36ac-472b-9f7b-d147c5e7871c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "911af247-bd94-43a0-9384-6585e2e270bf"
        },
        "item": {
          "id": "91913365-d822-4fc9-a05d-8ebdbb7e6376",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0a8b0875-21c3-4dbf-a08b-05767f4fd595",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91913365-d822-4fc9-a05d-8ebdbb7e6376",
        "cursor": {
          "ref": "faaadfc5-36ac-472b-9f7b-d147c5e7871c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "911af247-bd94-43a0-9384-6585e2e270bf"
        },
        "item": {
          "id": "91913365-d822-4fc9-a05d-8ebdbb7e6376",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0a8b0875-21c3-4dbf-a08b-05767f4fd595",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75ea15e-e47e-4521-acb9-67e0510cc5f9",
        "cursor": {
          "ref": "739391bc-59b8-424c-91be-3e64163f3919",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "824ce460-1a83-465d-83ca-31b5ebdbd4d6"
        },
        "item": {
          "id": "e75ea15e-e47e-4521-acb9-67e0510cc5f9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "50b1d2d6-3726-4ea4-813c-d977b3d22099",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4817529-4d1e-4b34-bbae-fdf89d00af79",
        "cursor": {
          "ref": "80367f38-2eaa-4398-ad20-5580388e5113",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "40ffbec5-65bc-4b34-aa38-8f6daa08f8ad"
        },
        "item": {
          "id": "f4817529-4d1e-4b34-bbae-fdf89d00af79",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ba5ba6b9-37d9-40b0-8ae2-38eb5160981d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}