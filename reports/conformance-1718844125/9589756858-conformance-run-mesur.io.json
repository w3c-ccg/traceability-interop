{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6765c4ee-5ef8-4e74-916c-e23660b45d96",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d928f357-36e4-43a6-9beb-9eab9c43958c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "870a21a3-21f9-4d36-8509-e047abcf3035",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c136e2ef-e153-45fd-b08b-c9370983d8bb"
                }
              }
            ]
          },
          {
            "id": "c9ea30f4-08b6-4418-bfef-4d3a306d8f5b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4bff4c24-7669-4012-b174-8683df31f8c9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f617971a-acda-44f1-a975-cd847010ee9a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1638d25b-853a-4bdb-87e1-b86ec7360dce",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a4e14c1b-6e7f-41e8-a90d-7c23ab323ebd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0b828812-3d40-44f7-920b-3aea9a9097e5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96d73969-be3d-49d0-a373-07d1bcae3db2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fe402bfb-27e5-4d5e-8323-2c5dcdd4d212"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "347813b3-213b-4008-ab65-c3e4d546cca9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "edf1c113-3d52-49f6-ac5e-b72c9ed7e02a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "15589d33-90e7-4f44-b894-3046886f21c6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5649b8af-f6b3-47e9-bf17-d345609ca119"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7776424-aeb5-43db-a2c1-f68360869da7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0e36a299-8ea9-40d3-a0a5-f1ca6873a524"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b8f15b8-8587-42bb-af63-dc94d0c1c60c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6418e1d-7d24-4906-be97-bc0513ae5fcf"
            }
          }
        ]
      },
      {
        "id": "955ee5d3-674d-41b4-8d2d-9fc330e185c7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9838d23b-6f23-4b0b-9e06-4c3b94b4ecca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "97325010-e6b4-43ba-bd74-3f1838705665",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "041fdd4a-35d1-4aed-aa17-92875d85f813",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3657fc-6c6f-4766-9c45-cfaa2c66911e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "982ff503-ea48-4bc7-ae66-d278148ae5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d7ced0-4a86-4877-81a2-79fce2a5b445",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ab5cf8-7b81-45d2-8f56-f60593784f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31067bfe-dfd2-4f01-8e93-139b51a1bf16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a273a5-ced0-4bb8-a9b5-c4a67daaa441",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd98b9a-2efb-4b3d-9ee9-cc53a1571890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ffcc5e0-8204-4d42-aff7-1c253c3e8386"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "49d3be90-d26f-4ec5-bf59-0c67773a23bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cb5e6030-6b73-44da-b287-f8fdbfc329ea",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ce2877-d71b-49fc-9786-d11db79fa699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "faa06179-738d-4806-b79f-f5995a5bb57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c049a00f-2ec6-47cc-9ccc-d5aff5293487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1602d4bb-c40b-4f73-b31e-a75a4b73c104"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4011bf04-4e91-464c-a384-1f0b427b9340",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5852f493-bed4-4751-b621-e35290c4e412",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98dade6c-26c9-47a4-bcd1-50fd8ebb458f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1bc0eb47-53ae-4afa-80a0-729ed23c5a74"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58ac0ce5-4293-4563-b24b-b4a83c1aa00f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2926292f-8c95-43b9-95d0-91fdd9601833"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57e2d275-4550-4aff-9894-5d9c050db80b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8529c6b5-231b-4158-a405-1d59a555e8b8"
            }
          }
        ]
      },
      {
        "id": "e5d2b071-d4f2-42a6-ae01-bfdf5325846a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "72eef030-458b-4674-8279-3211eae484d0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3b298dd-db3a-48b7-b5d4-695e62ee4567",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c7586bae-c327-4a78-9585-16632bfc9b60",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aad8a7c-f5e6-4559-b929-d7a7789cba4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b4f850-8f1e-4000-8638-8e451b05a720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b9571d-5ff9-4f49-b644-d2753e44d974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6beb3964-ee7c-44bc-9bf1-e3df9c0217bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30714a6c-e56e-4888-9123-310e49281c20",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68cfbbba-51d2-4dd7-810f-9957767d7199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f78d6a5-eb0c-4bf7-abd4-5cc473cb8bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced27548-ca1e-4c39-a587-38f000e28459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b0e5136-7efa-4526-a6a7-c215641d86d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117860f8-731b-457a-9169-3c10d3891b99",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b4befe-1739-458f-9f5c-18c99d3d58be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "400fa4ae-aa0c-48ac-ad47-9c0f42f51188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f530a673-e687-489b-a35e-5f4035c02ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29661504-7465-4a63-9e02-6ef6b989a910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be6be6e-603c-48d1-96ee-c6187b694792",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0886e604-b154-48de-9ec3-fd95c8a09d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "090217ad-7d9a-41be-ba50-dc197b202737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb0fd75-2676-4363-bf6a-9491450527db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "699bf19e-6cfe-4ea7-bc86-8a9f40bfa5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7f4cb0-d221-43cf-9134-b894f29aeba2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf3ab59-b0ff-4774-bdb3-52087f413ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa50867-fbc7-4d72-8bc5-5fd62e156366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e81b97f-d563-4c0b-aa48-88a640934a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c888a85-58bb-47b9-a71f-33337ca2959a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6992ff-68d5-45d7-bb0c-e2740c07867b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807d2c52-1054-4e92-83b1-5ea0ae28e220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea2c09e-d0a9-414d-b433-e9553d6d999d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a171dadf-c621-44b4-a1d5-e53fa0730d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f395603-7d77-4d39-9a2f-29daa6c1a4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2a9021-64ee-435c-83f7-9fdc6c6b309c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ae8af8-0ea4-4473-9eba-be8aa97ad0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e33914e-d380-4dbe-9a0a-8044b64871e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935351e2-1f6e-43db-a033-cb2f364be159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3f431ae-e19b-4044-ad5b-10c3a0f122ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d6ff37-0eb3-4a0a-863f-626895e81b61",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0b2057-c57a-41af-b3ba-167b4cf3b264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582cd100-a760-470f-bb58-d6244798e506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2148a913-4c67-4343-9b08-7bff4a059c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf50c7c4-a384-4b64-87c9-70191c418197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddaa9a3f-bd7a-486b-9cd2-3f43454845db",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0204528f-0fc0-49eb-851a-801ad08b75f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad7bd3b-8c89-4f6d-aeea-b69b7c511cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a7dc58-4558-41f9-a62a-a44382f7a901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b287ba15-60c0-4868-8974-3a287db1e1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b9efeb-c115-456d-9948-355abfa2bdbb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b33d8e-e94d-4aed-9e69-49b82a8c07b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f157fe79-b5db-4730-bb9d-7c6469175613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683d36d7-2efc-488a-b830-f7cc63430ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9013ad79-b420-4b6f-83f0-c22eecac184a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfcb89a-4bda-4d48-910c-3c527d72aafc",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "318b4be1-5604-4124-a132-d36a24d5d8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf6c4d6-f865-4202-8658-018752b999ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0471dd4d-746b-4abc-8b06-fb8acdec9c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea999576-42e9-4953-939f-28eae5fb506c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c71cbb-a057-4a92-a835-9322a2a8d729",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "611bf867-9fbb-4e3e-85dc-dfe7448e36c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a1a468-21da-4876-838c-419f0d2fb7b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3f752b-dd93-4282-9bad-57a71d0c03b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6454045-09f1-422d-aa12-02cd5f2499e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f48fb6-8f66-4c6b-bb24-ae59e8997fe5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569eada2-f5aa-4444-8cec-f16ba512a6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537c9e0b-bf5c-4f0c-91e0-2600cafaa8bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10451c0-8e22-4942-9c8f-5fba60bad6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88e7fdf2-7eb9-4e2e-bc7e-0c218e723cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c12f63-6c94-4236-873f-bda8913bbdb8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8dea67-970a-435f-bdd1-780a59ddbfb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b42a655d-9702-42ba-ad40-82081288862b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f91998c-f5b8-4886-a6e7-0997b4e30ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e32c043-b352-4e13-bb37-bc033fd0699b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73e1096-db63-4750-a304-d56bf9953a04",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1148f129-4645-465a-929e-34e4ad32664a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1b5f91-6b55-45cc-b133-ea20f4933015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ad0833-824e-4dbc-8657-b91808eba906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5508732e-4a93-4010-b001-e8f60cc9a973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15477324-149e-46fa-a1b0-558eada7debe",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41dae0e6-8b9c-46dd-b2c8-046027e86291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155de01f-05dc-466d-ac0c-c8b032e12be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec44fc0-83e1-4e97-9d5e-021487e3e010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99c5b94c-87c5-4a4c-8a67-e61ab5e99e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670d5fd7-2e60-4003-9ef1-caaa12136736",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7207bc8b-95e3-4618-b253-1c8a2bbd12f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2817d4d5-bd70-426c-b261-8d473d7baf75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3afb9e2-8a25-4319-8a81-8fa82322d6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "896b0566-ffe6-4dc1-bf3b-a5cdd2fd7c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86c5bc5-2551-4d63-abc6-a58341641bf0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3a3d33-6bd6-43cc-826b-a6ab9b7676f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6335d973-f86c-4e6e-91a9-947e74156bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3b56ab-f6e3-45d6-98a0-3bb25fdc4d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef44ae7-2da4-4492-b75c-9ff4095985f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea84cd4-b1b1-46d9-b795-6d6ae1eea410",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03dc8d8d-aee9-4b0d-8144-16f34d4674d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7840e2fb-604f-409d-b138-93abbe6e7b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56555139-0eee-4f18-bda7-b32b5543ba44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe67003e-b0cb-4050-923e-a4b9e4b904b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3e384f-fff0-40b0-9e03-ac063820cd6d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b523d8f-3b62-4f6c-83a9-edc5a6ead117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c5b75b-a1da-4b18-8eea-524b1e13dd3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb9d0ab-a12b-4eac-abd2-32ef720240ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6800020-11e1-4abb-8fa7-2f1a64813de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4895787b-a261-46d6-ab6e-4bf7a304cbe9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b365be-3ca7-4bd4-9a04-87125b841e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d36c30d-e60a-4de2-95da-7d9529d465e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5735a619-ca58-4307-8b7c-ddf8a8f416c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c38b827c-8d11-45e9-9597-97e383601be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938afe90-b6ca-45b0-99fd-21a45fb44dee",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b546da76-f78b-48ec-9656-82a6c65e837d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61324ec-645b-47f1-8cb6-7eac8130b3b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a75173-9ac0-41ea-b5e2-b5392daf233c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3884b55f-63fc-4895-b301-3ba5c01a77b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fb4ab6-936b-45d7-836e-c5935b08294d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c1aabc-4654-418d-b495-d6f85d2cfc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aebb668-0941-4ef4-8eb3-2622327466cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216a9263-5740-4a6d-88b5-74c0bbda8f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e68c972-ede7-41e1-b905-fa4586446dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880f3ea0-e61b-4ab7-968d-3a2879fb6043",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "729a1748-4ee3-4c73-b8c9-36db99cd34b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a5c177b-f084-48d1-9525-3c0a3a4b3e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596967ad-5059-4c21-a96d-c486deabb17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c10bf3a-9c78-47fe-a522-9995a3d34a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "befa25fe-b76d-48f3-a9cc-8e6194314df7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571a6924-6df8-4e40-a6f7-86ccd4a5f4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d441e140-6580-4dac-9cd3-1195c86bc38a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045bdcdd-4f29-4f99-a11e-69c6f4969f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa28b339-39c2-4a42-b84f-0ef0985829e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10507026-0f3d-4eb8-b26e-c6e7fc0dab7d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023491f5-2c40-4c69-b7af-2d24699d9e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97644f2e-7d24-46f0-9904-91264f2d3a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54609a3f-20c0-4598-b5cd-d3ee976eb018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1e6e5f-8ea6-4ac7-b9d6-5718b9728320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe8279a-6379-4eb8-bab6-6241030a858d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a864b1c7-66de-49cb-a11e-9a8a81e6af0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddfbe534-851a-4f33-8cab-6536e5e8c800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfb6716-0519-4eba-a3ea-c875d4b4f116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c78bd5e5-8530-45a5-82c5-4325ed17f4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347b33bf-d5bc-46f1-a03b-699208828631",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d806dd3-bafb-4fe3-b01e-500e7b55651f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca95ccc-77f4-45b6-b935-3933b5e3398d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef806ee-2862-4b2c-b852-8bc95cc355e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "598c0213-535d-4973-9519-633f22c96824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67378052-e788-416a-9b3f-d021c3126938",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7ffe92-2fc6-4e4a-8a97-43c6186cbecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0749ab4a-cf5d-4ac1-b896-5a6e6508f967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865d29b9-65f5-409b-9720-4d491d121738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd6fd76-5b44-4b90-a345-39a2e43f9937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17e9770-14b2-4357-8836-c46622a5988f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78301a99-e65b-4212-ba3a-962a299b83a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b858c00-ab65-4217-bf52-fea50c56f0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d60a98-d863-4da0-b248-83b08136cefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f63472f7-6fc1-4ec5-b1a3-239a313690f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0fd674-32c6-4259-a47b-07ba51a69f99",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7861ef4-05d3-41e8-9ac1-385e3c969005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5745ca5-752f-49c5-9815-4a6101b254c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6507c876-c632-4625-8545-0bfd08639859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0285fd10-e880-416a-98bb-f21e44c3409b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3388005-de5b-4ba0-be21-c7e340713da8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4324826c-63d5-457a-a741-15e05d57f9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5433e8dc-07b6-4335-a919-ced88f021aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae3440c-570b-478b-a341-c516574fa74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e68d62-6718-463f-ad2d-9718f365e537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1cf76b-2d9e-4f68-b52e-72d0c5a681d5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fcddb9-c58c-4d9a-a512-8f8924378711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1dca9f-9d25-4f9f-a521-4b0569526b8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cca994f-a060-4835-b893-b8ea7cb4b777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dffccdb9-4a25-449c-8a92-1abde68b3991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c359be1-f4c5-4c91-893b-b57e5eb8d0d9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05c54c7-5177-486c-8520-be19a8a151c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b7dddeb-b51e-4b2b-a6d3-32ac4b8e0fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718ec83f-3d1f-48fe-973e-22b003108cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c391732b-5e45-44df-a458-3da094f9ed6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b67e74-e6f0-4b4a-82e9-dab294d6a616",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0088ad0c-f454-46ea-911c-cc54d2540024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3640353c-adfa-49ab-a0be-639936d7488d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48a3b5f-6c5c-4699-abb0-77fed0c5e6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ad43a3fa-bc91-4f07-92e8-9170632cd67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b642ff-b898-4482-a0dd-ec27329c58c5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b5e735-e450-4d18-9549-09d652afc005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a632705-25cf-4193-a8f1-75b1bd0b7e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbeacd00-8827-4e5a-b781-5a326cec5125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "54ae0082-89fb-41dc-b185-2d3a81232977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de58f08-760c-4c2f-b1ab-d78cdb6329e7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd6cfce-6a21-40ab-a85b-65cce38c8f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48266cb2-31c1-46a6-b756-67ac9d6aa382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4082fd-7089-4660-b230-e9d2a08861c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "04ac9709-2c50-49a7-ac23-4084ce89fd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c1b0a2-6ebd-4127-8cab-89cee2451fa0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6555018c-b6e0-4213-89e8-ba680558d628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90a8fd0d-aa86-4e68-8346-7a9c6391cd7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829de792-c9b9-465f-92ed-2f8ac948f591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f84c490-87a9-4ec3-9f48-5bff77f83b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf72b93-ed6f-4c4f-a01a-f697ad31bf9f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f452867-7379-4d60-958e-d040f21f6547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa1dbf3e-7609-44f0-b019-9d7a1408e694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547b17c7-8677-4399-9af4-4ae389ba779e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b23b2b4a-dc8a-4299-a17c-03834d67b758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a40173-b9a6-47fc-838f-fce9b0b5caf8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b31b89b-3e9d-47c0-b796-8d92f504d603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3175bd43-a2ef-4109-9669-33b34f0ee9ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2de7c92-b219-4010-be4b-45e5e06f535f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf7ded85-7e68-45ca-b4f2-94de699d91ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4604952-5459-4c64-a2aa-04d24cd26779",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05b8b81-cde3-4cea-89b1-e40986cd3bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5872a442-93b3-460d-bccf-3a59542bcfa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413ec9dc-472e-4d54-82d4-cfb7d3129d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc0c35e-2ff2-424e-92aa-4054dbaeb428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417f29f4-1395-4b67-a7d8-e2d5d8911a13",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48dc91dc-39a0-4a51-888c-084ce3f13acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92aef909-b2e1-496a-8678-a968cfce7335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2dbabb9-9730-46a8-b4c5-46abaa408182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e5831f49-439f-411e-a53c-e61e2da83957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2594e684-75bb-45a2-a750-17ad55818d70",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1eb4b42-ef0c-4ea8-b008-cc60e83fa5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae60a93-a0a1-43b3-ac10-8d69a3cd0563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a9e756-8a1b-43a8-b90f-46c7b1b339f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "833de3ef-82f6-490b-a94d-df0a4b081c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5ec4c2-4aae-4fe7-a1c9-346d723912f3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd263bb-42b3-405a-8e49-0cfeb235a33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ca5054-624d-4eec-a3d7-38b41957cdb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce45318e-a671-4bcb-8183-31056d88ddc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "006aef9a-f253-423b-b51f-c158679e741f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2c342d-84ba-4dc9-992d-8925f278b4b6",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57cf0ae5-07ac-4fb5-a3a9-51654a0380b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b723d2e8-c74b-4d3c-a4ee-6ae5b79f767a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6cb37a-7033-4042-adf3-d40b5fcaf0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2983200-c654-4f82-861f-ab5da3d7a2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fe4ca5-1f8e-4dc9-9445-1490ae2b3da4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea96e2a-1616-49a7-88a6-b2575d5efe53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af49ea1d-8d2d-4632-a31e-44f3fed45443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4337c842-8887-4f81-b7c2-bddb9e8642ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60fa4ed5-8af0-4b2e-8fc8-3a11db60c6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f487298b-9af4-48e7-807d-bf573015874e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "729a0093-2214-419e-b814-106c50349c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f309dd-c2c2-458d-8bde-ab4f0a5d9394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc239860-11dc-468d-83f2-7b1ce55475b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "880083f6-c5f5-4d6b-87a6-00d2228a992c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc6b4b8-49e6-480a-a841-a3fb3b2f754c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb5df94-6c45-4a91-a1ed-a072a0bf665a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac2a242-c942-4dbf-8b3d-095a2e707fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46302fdc-ab67-4560-a0d7-0325977201ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "690474c3-a0ff-46c1-b748-0b7edab55976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c505db2a-ead3-4052-a068-ded75483b9ec",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8b60b4-61ff-46e4-958a-28148c773e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df40e5a1-4b09-41eb-b8f9-0301b6d39353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a6ceaa7-d2e1-414c-8baf-4f51e7b683f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa35dd02-6497-4d2b-bda9-968234f83227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b58978b-5a48-4ef0-90e0-a8ec474f92c0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4d933d-f595-408a-8b83-4c3d5296ba18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b66412d-0f58-488f-97a2-8a53bcbaf2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41709e5d-1f6d-474d-a516-d58bc2d063de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa77f31-f7d1-43a4-bc67-0ccf537aff19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb745478-ed93-4ecb-8a83-bdbfcd1e6226",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed5deb2-dd7e-4a75-bd1e-df7723e51946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db21efc5-d0a5-4e93-99d2-b93475f6ed16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319d89d5-d463-44b4-b452-42056eb9c3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff9d2372-393f-4c45-8f43-c085021718f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef9e456-9901-42e0-926f-fb8959c726cf",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be67316-3740-4d3c-b660-8d9396c151e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "432ca2be-dc1a-4408-b76c-32185775a2d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20149a94-7831-4518-bbb1-b9b2beab6bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "84756320-1f3c-4595-88e2-fb45bc7c3af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e18c0b-6071-4550-9124-c2b5cf6c5dda",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edee34bb-81c1-4894-9b43-b2ed52c90a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5d2e75-8777-42aa-8403-432a44687a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e7ed03-8f89-4a03-a567-cbbbb64f32f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25bf2392-8b25-4b47-a2ef-c4ddc13a6bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bb4421-5625-4452-9fad-5d92ac729e8f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aaba9d1-8d07-4739-a279-07f2114e5d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be3c6232-1501-41e4-b4b2-75e27cd6b850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d8dd2b-d845-4925-afa2-732cbfe1e7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "33475b1d-0871-4117-a3c0-9b07451f7238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c91edc-aef4-44a1-9450-8f74151a9407",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2498bb06-58f3-4bce-869c-c970df44ccdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc362740-64fb-4939-a997-f1517ae7c731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb048e0-7ab2-47e9-8ce8-7092418010fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ce49d87-7bb7-4ba4-bf74-b1bdb24339b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7898eb26-3c7c-4cff-ac16-8d40a7cbfbe6",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c89597-8d75-4c90-987e-60347d816d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe65337b-1a9d-4c9a-9eff-a01e1e44d387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9a784a-87b3-463b-967c-33ac527f4ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e94889d2-7c48-4bfb-8c17-1e52329d5df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e3387a-af80-4576-b809-eb8cea64598e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149c6602-cd96-4b56-ab4b-18c6035e17d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b43b1f56-68d6-41e5-b429-bccecd31a367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f14af1a-4d35-4687-8e30-24806af9ac06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f2dd91a-e9e4-4b05-8151-4ce99524656b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4911944d-edf0-4fe2-b8da-e7fac8017d46",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abceb798-ac5c-4f58-83ae-582b38cb08cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff903a3-6b26-4bce-8b32-7213595c54ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061f01d1-02c8-4897-8bf6-fd048cec4849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a0c927b-fee0-4046-80f1-bca0ff157075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5074758d-babd-468d-9892-18f78061b9ae",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d926b9ed-1927-440f-a652-5d22a01060c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4286d0e4-90ed-44bd-bd4d-9e2e7b346b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a865efe-0772-487d-ab20-255ac79696da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "102fe656-09e4-42a9-8ba3-f4991f2f86ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75702c25-a0a0-4df5-a0f4-e84873ac5e82",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02c20d0-1349-4c60-9ead-03aa90329dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e6c0833-fbeb-46cc-8df0-1cd2c31f279b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960a4eb0-adf7-4cde-9998-b130259aa2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "afbbce94-6708-4f80-9a9a-0396465ba7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df07d68-a85c-40dd-9dfb-a1a6b993ef3e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0edd90-07c1-4adc-b907-3057aa1be72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539b9e72-f425-42de-b813-f8a7f2a2fd80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe2431b-ed2d-4e9a-bafa-c83768f0e827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe5504a0-3803-4b46-8543-4800a35638fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35613ab8-0f5b-42ee-a283-d675d76638f6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cce5d8c-2336-4a55-a5ce-383a840184f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac6202bf-a27c-4877-9fa6-f12f97de24a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac27edc5-8047-4876-8dc3-e8e2954e6cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "403aef5b-8391-4d2c-b93f-4e0c6ee85f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf03e4cc-257c-4a57-907b-e17b891a668c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e75184d-6063-4a36-b56f-7d874f1982c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e7c4ce3-f6c3-4b89-9838-06d26d6ee3f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa65558-288b-4d6c-89ab-bf6123a0f663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "973d3a82-8a1b-42cc-a757-893cf17143c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8801382d-862e-459d-86b8-649327aa77ad",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8780d8c8-6b3a-4333-aeb9-d0eb20f65a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29aeefb3-eaa6-4a45-811e-5b88a30819d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73b119b-dc95-406b-a916-29e597c582a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e63caf11-a361-466c-a59d-523670e966a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ae2f76-3502-477d-8cd3-c39ed2592e0e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03f580f-96a5-4527-bf43-2583cc374df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46aed31-cba3-43f7-bafb-c97d54c562d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c7fb1c-acc8-40e5-9267-5710ec82ab98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21ac9c0e-4dfc-45a4-9fba-77a88c873cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb7e8a4-ff92-45a7-bb16-ff600db583b9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cc322c-1cb1-4e14-866d-1985abadb527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06536f34-ccb2-4a27-8028-e21cd2e00378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935f08d3-8a36-410c-b0fd-d9b13faef3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "214e2376-63f0-42ae-8376-c082db89b680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19895d8-0157-4b48-b2a3-0ad9a2b508b9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbaafbed-7f6e-4bb4-81c9-c34f60915426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e5f86c-cf06-4bd2-ba45-6c892bc4040d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a05966-f629-4fbe-b2b8-509e81981b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6a130a-a569-41dd-92a0-51f6b9dbdcea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118a89c3-503b-4f72-acaf-057ca26029ed",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9cf649b-94bf-4926-9103-5a68a7f19e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d5bfd77-f65f-4b4f-a7cd-4938cd4b2874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30805c9-cb87-4dd7-a45a-95894412e391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "94190956-0ec6-45fe-93f5-f6f3e3984c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6192a3c-6fa9-4953-8229-2bbf78d7be12",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d62e61-7978-4151-8b8a-cb1e5736f534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2db16f6-f42f-407a-84b9-b007e70c7542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6055bc50-fbef-41d9-bd07-2060be370cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "85f98d19-4076-4f35-84da-2965a05aad4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ede1a8-ce44-4d16-a993-b4dfe33aa436",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd50376-6939-4865-a56a-725810a8d96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f3ba50e-9796-4eea-9774-1ac74e092746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9306f2e-0640-4ec0-aab1-c649436b0f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "120e74a1-e098-4de4-8013-4e846cae02b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bcc57d-cec8-4eb8-8a3e-4f03fc93d0b8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbdf5c26-ba41-44c5-b356-272497bb3b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "921f969e-c09e-4b21-bb54-007e2fd80fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bfdee83-d462-4eed-a610-9a4d4a226b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3e6ddf-c9b4-481a-99e3-88c70e73e0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e66c602-e773-496b-9c47-199bed822a17",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8696a185-3b9f-4e6b-b5a1-491c109d2f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d87db0a-282d-49d5-b0da-d7f970af9107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c3851c-7753-4dd9-a0a5-d5f8afe2fc78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e8ef6ac-f7b7-4432-95e6-fd602bff8dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfdd0ea-e97c-4f43-b630-f0423c468ea1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cbe0ede-0a7d-4bc1-9330-3f993a8a23e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ffc355e-5730-434f-9ec7-b9c41afa2bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975afa83-4180-4ea0-8f9f-612d2473ac6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca19b6e8-e337-4ad1-93e2-51306fefcd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e391d84b-716c-4dc7-b6fd-a83dc1b9dd65",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5663f038-8b58-47ad-a2c0-9fd4a5dc5fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50bc2fcb-98b8-4428-91d4-5793d860c99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e170964-5e2e-4e68-aa41-8f55e4b28909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61e6d81d-1a5c-415f-b0ab-d8ec9137394a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6620e5f2-4174-4fcd-85b2-56fc68d3346d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b42a543-2003-46ed-ab83-30ed1cee21a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e5b0cf-1349-435d-89d5-11566d6fa75e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0359b2c2-cfd3-419f-aca6-f8b4b4b9b403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "00e51523-5e1f-4afd-adf8-fb068cca2797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f1f1b9-fbed-4686-86a4-2e6b09df3ee2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910250b6-da4e-4ed2-a2fc-b42ed3293e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d44d299f-41f9-44ca-9ec0-c7fee767560b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c828c6-9b7f-4b5b-be54-361017ef53d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aadbd296-f6f0-4292-90b8-c43729398feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f298240-5c9b-4dc8-ab4b-61d6700d30a8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cba4717-cd54-46fc-8085-a78cf89bec64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a2c0e3-24f8-4cc9-bd08-d98facfc4b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854bee17-2471-47fa-8ca9-7b9fa371ac93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e9e5b23-212f-45a1-b970-1f2e23359be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8734d09-a67a-4bd9-94e8-98ea21b934f5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65983a8c-781e-41a9-bd34-3551c1b1ee47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "297446f3-1f21-4dae-8576-85b4dcf786da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e97084-49f0-4378-957a-969413d85a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fee0e1e-e6de-4099-afa4-87f2410212fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc33a2a3-e0b5-4d67-8ffb-b77c850a1360",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeba3fd5-837e-4d0a-8950-cef21e8d87de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d42360-eff4-489c-a52a-48761c380d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb93ebd7-b3ae-4e8d-91f9-bfe6c4260c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51ec93e3-df49-4039-98c0-cdc3a7b853cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ef53b4-463d-410b-85bd-bb41d5a7df80",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612dfac8-3721-4f0f-bd7b-f61036d072f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3de8460-1399-42d4-b153-a3c815562f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cc3210-595a-4443-8103-a409c84fb2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc49d3c7-c8a9-4a0e-a381-ef3f141af504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462fb2e0-852c-43fe-9eb0-09574e7f4e73",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98d5a2f-f3ca-4278-87e7-da2237c1769e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29fe6c8e-1fa5-44d4-8ef7-7113663f9d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d848f774-e4d6-426f-8c73-096a1c3061c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8905ae95-b8e8-4e14-af60-029253cbb888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3edd2127-5a69-4baa-95ae-ca344b000032",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca94a79-8718-422d-ace3-3e52c6492cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902e4422-9603-4e0d-9d70-a684d5f335f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6b1f57-8713-41df-9c65-94aaa40e4c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "054eb838-18ea-45b3-9086-e4bae92aedbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a4442a-46e3-4d46-beb6-aefb2e00f5a0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23cc507-49f0-4f79-8fc5-128cb82b4ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f385556-9a28-440d-a7e9-547e8a6998dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1c7b1f-55dc-4e8c-9f47-441825356a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b01a3d1-5021-41fe-8cbf-878a4fd44198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27e153d-8c5b-47d4-88c5-076b88fb72dd",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab427598-d687-4d6f-9736-e1293535ac23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "884f0d92-5f1e-434e-afc8-ee7f389be4f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d918dc1-44bf-4fc1-b57f-d5de06b6cb59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a07b7150-168e-4228-bc93-9317ad5fac57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7555fc9-46b7-4a42-918c-b0ec7d89e804",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea85b831-876d-450f-8f97-4b55b545bab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6601bca1-03d5-4551-a867-c8c15e5219d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6730170b-28b4-4c34-8821-b4ff82a605ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3c27b7f1-6bd6-49fa-a870-b72697ff581a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a53400-8799-44ec-a69b-ed042bfa0221",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93246781-2628-42c3-a27a-ebc931a9705b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737f3487-1b1e-4e55-b050-49e27baff762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd727da-651d-4409-a5c0-12ea5bc9e8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "17ba81fe-5bd6-4325-a1b9-80653e4c8f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d5ce66-7051-4b9d-909e-fc04a919d0f0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95df7b34-c711-4013-9111-913f0be31d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c9fba05-e51d-458d-94ed-c9fb8679d503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48a1726-49a2-47b5-82c1-c9aa049de23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c801150-84ed-47b2-9aa4-75a31fde99c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99fa7f7c-9b15-4251-8261-f5bc65a6b705",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4dbeea2-3a3d-43d5-9a47-e340c06aefdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f07c07c4-d916-4566-bdee-6f85bf1de80d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c24e94-882f-4174-b388-05cd76ec8df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b83bf8be-2059-48c0-b1a4-208f773fae11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8710619b-f7ff-49dc-a11b-c599a6f0c117",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9deb6a06-25c3-4b4f-ad04-fdf0b8783506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06dcdbf5-4e0f-46c5-b20d-8e39e86083a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05000c12-527a-410e-b17a-f7e04147e3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f57c09-832f-4f5c-8b07-12bc75018562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9ee6ba-b926-46e6-8703-5c2b801775a3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2c894b-d62e-4323-a252-8d024eaf1930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02302b24-b0ca-4a0a-b489-ea11c99b3862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8dbf631-ee98-4a27-8952-ac7aa38bc897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "20795d8f-8cce-47b9-9628-ceaa1ac3b652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b1c06b-f0c2-4c1d-b9e6-01f79bcfe40b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8d5dfd-eeb1-4850-8fc2-e139e8817d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5ce483-d942-40b5-9f47-01573ab3bd4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d17fdf6-cc4a-4ec5-8705-d1e647b05d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "11fc3c6f-5100-4a89-8f6d-bc5233f7dfa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4baf06-dda3-431a-b9a6-3ea94bc348c0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c95b2d5-662f-4c6a-9eb3-53cee3040666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7ece6261-e900-44ef-b04c-da73073975a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd2d0e2-c2f0-4555-86fa-e66dbd1a9917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec24a2d7-9849-459c-9f16-60ba8a18176d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "88bd851c-769c-426d-a1d9-e8df0f2a3971",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "522f6f1c-2141-4f27-b082-3c821442288e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd451e9-06aa-4a61-8e82-597a1b1a2ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43d61ce5-989a-4618-950f-954478c09a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ead0aa-e4e8-4b57-9160-10e0d6b663a1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ceba2e5-7ab0-4f2e-8fe6-78a14d8cb89b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2142e1c-e2dd-43d8-8a90-dde1ba3f4f38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "213ff7e7-f96f-47f7-8634-e80558ec2ea0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "65340235-c857-419c-b225-9b7586b076be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7006b9bb-a236-48a4-803e-6140e2e38234"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "18fb74d2-650d-407c-9d07-f77c5497afc1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0cc558b9-4cc8-42ca-8a50-e399cfa8b045"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ac4ce700-719d-4a9a-9e96-0c7a4e93a065",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8a5920ed-7250-4c7d-bcb2-7c59b4973b58"
                }
              }
            ]
          },
          {
            "id": "2f069ed1-0883-47a0-a982-e2b45ff955f2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1b926158-fcb4-4877-8f26-52ee45046c7f",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a6999f86-3e93-4c98-a6c8-6827e7440734",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d003a187-e69f-402f-a03a-f9eec1f02d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "eb33ef16-bacf-4303-b44d-c962d003a394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74503ecf-6adb-47bd-9598-b20dde36df0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef72cf80-a580-43c7-a76d-c6a1737bcabd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9b911e2c-b866-422d-a9d3-999d791331cb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94bf73eb-76a8-4dbd-990b-e7dbba5053ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c51d6fe2-820a-4166-b03b-95e656f39a06"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2dd1de0-aec6-4dab-a844-e00a9637bda3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2b646bba-2167-4c37-be7d-f6c650eeb749"
                    }
                  }
                ]
              },
              {
                "id": "a179e9e3-1a9c-4474-adf2-8b8ddcc3f6f8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "130bddd1-96be-41c9-8127-2394c1820b8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fffac9dd-c15e-4807-b8f0-eec8aa03dc1f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a96146c-53df-4c8d-ba55-9e45dae2a488",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7710af50-7290-40f0-87aa-31affad3bf05"
                    }
                  }
                ]
              },
              {
                "id": "3b89c0d4-225e-493b-b014-904ad5e14ea2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21c0ac06-6304-47c9-8d8f-8f6ae2df63b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c97d1e94-1c87-416b-8169-ba1668e2ac90"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19ecae79-75d4-457c-956d-81abb8c806af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "645a55ba-cb29-4431-9d49-4fb0a1477eff"
                    }
                  }
                ]
              },
              {
                "id": "84711f9d-9aba-4ebc-8eb0-a8ce5ba517e2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "326e449a-0553-44be-86ce-bd1af6b7ba36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68eb3ab0-2822-4d52-b83c-0bb8fe214472"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f7e0721-f23c-45c3-b145-40e81b6f60ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1a015bd0-d795-4a5e-9054-c2f6fe815e4a"
                    }
                  }
                ]
              },
              {
                "id": "3cabf258-48d0-4c5f-ad2e-c135ca035f71",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e472bc7-8ab0-4361-b850-c633588113a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b31fd2e-47a0-4569-ba28-bb6bc28822bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8bcb85b0-80a1-42d8-b084-19bed291fe98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6ddb5e36-a228-4afe-8c2d-22983c970334"
                    }
                  }
                ]
              },
              {
                "id": "4fdbebc2-5b80-4ce1-8c21-7e8c9878c4b4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f393742e-9633-4ce4-8c8f-6ec29a387503",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a61eb7d5-7c38-43a0-829b-4625d439a433"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96383044-c65e-419f-b654-9b678231a3f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c05a7403-8a81-49c1-b448-603ed40089b3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2aae45bd-fe7c-423e-8e9c-21dc6d9ea6c0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a3642d0a-c817-4a05-9f56-7d827ed94ebb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "85ea0410-ece1-4f3b-92f9-8cdf09a61e0a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2bfeb804-6dd0-40cf-97a0-0c32b7daf0ac"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2666173-6882-472a-8001-4f505ada98bf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "291a780c-3686-432f-9724-2991ca0fb822"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90b93bd4-4164-41bf-a0e4-2d43b07f1992",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0237ad63-6485-4e88-8fa2-6e6ab2445da3"
            }
          }
        ]
      },
      {
        "id": "0645a4f7-e370-4f11-9c26-eead8b87be9c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e1074f2c-d479-4989-a52b-1842ea03cd3e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "26649532-0ac2-4a7e-9ebf-656d176dab7c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c62a1719-06c6-442a-bb6e-e1e701fa6984",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e6ea9a-3b2c-4607-94bb-8ed9ee6c3c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721be7fd-3f70-46ba-b00d-40f613b21d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8647c7-84e9-4bd7-acf3-6e0e36232d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbdae7f6-238c-493c-a47f-ba2b19ea0705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786eba68-954f-4165-ba0a-ba569e3ba1ff",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a08a15-cb09-45d0-950a-a0f34098f28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "090d40e0-b7ec-4a81-8003-c3bed4783aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921e9c73-3cc3-4dd6-a9b9-0a0d5f7dfb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "96ebea48-ae1b-4a20-a351-4c9448e98676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dabfe47-d13c-40b8-8059-dfea89bb17e6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4556c4f9-21ef-4222-8300-5f4649493528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c5b6fb4-48e9-4b24-8545-34a74f19c72b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9d8b0c-11b5-43a7-bc65-f60e7d57a75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b37369f-6c7e-4a68-a4aa-bab9e584ce8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caafb258-685e-46ea-87af-61e96a2b4eee",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233eb101-aa64-4fd4-84e3-f31df9e582be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa61d458-7054-4fd8-a058-970349bffd18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7c4ab1-b10d-416d-bb01-3d82642bc2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "800f5a60-51f6-48f3-8ab7-c717b4f8481e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3f3365-8f13-4a73-9dd3-15ad721edd14",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6389b281-39ba-4171-a5f5-d3aad3d84801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401b68ba-db8a-4d18-8694-92e6b6c1ac39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa276de6-7173-431a-906c-b66c34a0795f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b166d01-efaf-4071-b834-2c963aff5095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0df9e3-500c-445b-b7ea-a0fc0df70bb1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8dae09-1cd3-4fdb-994c-61824563675f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "934d094a-b860-4921-bdef-61fc7dfa248d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d6fee8-c4fc-4ea3-9601-ab773b9c0b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f45ac0-1a7a-49a6-9c14-74f1078d25be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d028e93a-e646-4d43-9714-eddd4285a815",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb943b2-c67b-45e3-8e96-8a99494a3ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a57be8-39b9-41dd-92f0-954cda7952e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec6ca4d-4c78-47cb-819d-06c20dc8ce4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dbff94f-3908-4b2f-8532-c11a266df798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa1eee9-adf6-41e1-ad56-2cc1486c740e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "374e6515-1437-4880-997f-6b8a74025d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9888ac0e-0335-46d5-9f90-36240a4b5017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff94a404-6f36-4bfd-bbbc-200b27febd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a7dd7d9-3c91-4fc9-b62c-7e25c61a4f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faecc61d-95ea-4040-9b82-9b36cb015497",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa72e2d-a273-41f5-a10c-37a8ffc67d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcebc3f7-fb29-473d-a6dd-16bffde74072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba11b15-a68a-4cae-8cdd-7952cc73654b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "adb92d99-165e-40a1-bb1d-28d7250e5677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eae24f6-cabc-49c0-9a90-3a4ed265c6f4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97201714-adcf-4829-bbfc-d3bd988dd500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "907efd5c-42c4-4cf7-b507-5fbe1b2a0aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac4a3e1-cda4-4348-a870-da47313092bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e07a91d1-e64e-49c3-9a13-94eeb1f2ed14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd338a2-edf9-4fd8-a60d-e75011d1ce33",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e8953f-e66c-4785-bf34-4c6d7de337e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a49b3b4a-e418-47a7-a001-f30a5d033eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28dc28e4-c413-4a46-b9dc-bb72a4e30237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "921af6f0-9366-4092-9a2b-61c9b8927ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8546d97c-e513-42de-88ef-f91337d7ba3d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727f4487-21bc-490e-9fd8-3d3f66981df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e3c06a1-4367-407f-8976-aa27249e89c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0d8f9c-5f59-412b-b79a-6be9fe2abdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "175ce933-7a5c-4bb9-b8c6-fe8340b95e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2b5ffc-4660-4baf-a1ec-528ebc1e86a2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93dba430-bba8-4ca5-8e43-58655b98fb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc998340-ad2a-46ea-a71a-3ab002dca13a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd233c6f-666a-493b-874c-8bc0c2acb1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bec2741b-9f88-4ca2-beb1-fc08d3c8fcc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade60a1a-0efa-4a9e-9e0e-03aae53e3491",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c864185-f939-4cd1-90a8-2fe13e693851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee8abbf6-2119-4a3b-87ed-61ca71059b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2002cc-4725-4275-9545-90b3604357d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "efc77155-e9c7-4518-bdb4-de297fe87c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048a2f06-8c8a-4b79-98a1-bc7d05f7fdd8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd050316-c527-45b0-8c49-fd99af248490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657f5685-2cd5-49d1-894d-5202a395cf15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9712ec-b056-4bc1-a960-91ecfa5def0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a16b271-cbc8-4b4b-8fb2-5ea47877979c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109bfa54-597b-4e59-bf92-610be8a054b8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd475f8b-c093-43b8-93b9-88763e1924ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa01d572-51f3-44b1-ae06-9c41c11096ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b08968-f2f0-4943-ac0a-dbc126f84ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8000b99-16d2-4f6a-a245-829143abb72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f569c0-b8af-4562-97a1-9785c88056fb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad21f9e-5759-45b1-ae11-1f0da22faeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f6a19b7-8db1-46c8-85b1-56cd274b971e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b204668a-1cd3-4e69-ba3c-65add34b6fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "44ca5f12-9490-442f-a55a-76799fe52e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7710bc-63fd-4702-93d8-bf9219956ad0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93813dfd-fa2c-4357-a1c0-d35d366719a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92aea373-da4d-46c2-98d1-5c8dea650e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f9f5f5-30a2-4ea0-a7e6-0437791f368b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a7b9e83-cad5-4044-94d1-f145bdc2f23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6bf7a8-4ae2-47d5-a04f-fbf074a3697d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef802fea-d714-42c5-a694-ec97e1be15c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b16bf3e-8a94-4d09-a89e-d518a1621d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59b2aa8-810f-4696-ab5f-814e67c76dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b88ce2fa-e962-43b8-a919-1c1930e29b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0409f6a0-342d-4295-b855-bd296dfd161a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f0ae17-2fef-4595-93fb-9deb215e5196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715cd9f5-98c5-493a-bb82-ef431aca5e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82af700-3140-42eb-8972-39218e93a5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc9ac944-16c4-4c2e-87dc-d753e6e9757c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee254ac6-7841-48d7-936c-e19c507e3ae2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04b3991-04ba-46d2-9007-260115aaa0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f190b299-d387-4f90-abe3-68c8101566f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ae7bdb-b7d8-4200-824d-e85fa0fbcdb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52e6c8ee-e636-4cf2-8016-3970755dffcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0b7bf2-c445-4f90-bd75-55a959e25392",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64383d44-3f11-43f5-afad-ac31b6ecc5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba225dab-d134-4dad-b4c1-3b8f46ca7de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5b7e29-743f-4c63-a6a2-55fb339b4d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b8f7786-0888-4f39-b88f-56212964642d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52dfe30c-6742-4134-9604-f16b39c745c6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63378489-1a43-4b06-bcb9-f4fa6eaf345d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a7b54a-9cda-4514-999b-8cd583221d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f2e3b3-5631-4ca9-b678-b4a132fd77d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9f1ea8-a5b2-4f10-beae-5c69979c9ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04da2217-8e24-43b1-8973-7cbcb97a3ad4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448c121d-98d5-47ba-b126-d127f47c95ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b557f67-b3b8-4429-91c6-d8a50bfd0278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebfe3a2-7ac4-4940-95ca-61b3cfcbd470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03f2ec50-a2b5-4654-8b3d-53260f5cf100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c9bb79-b63b-4555-96ea-592c3ffd60cb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9108c28a-2b91-40a1-8454-fb3e4c5f774d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb89c27-c888-4b96-a848-853a817a7433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453712c2-5a1a-473c-a949-d4b70933b5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65d58fd9-96ca-48c1-bf65-c149bd32d934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49762f51-e48c-40f5-b756-4b595be4e246",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9665bf5d-ca68-4999-a41a-06e19b7b5e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2573b1dc-52f4-4319-aa95-8744fe5579e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6f3cef-3a5b-4154-b5dd-fd51b1d217f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95162700-ed12-4246-bca1-520a06f5759a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23a6220-a95a-4c4e-959b-1748097fb866",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d68e29-47cb-4a90-86b6-c15ee70b54b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f928097-1cee-40d6-a753-49eb8dc355bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423e767a-0280-4fe1-9cd2-174e52e3359c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94140d03-b4fc-4a87-b541-3d4dc0f49026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a646d3-8c61-4e22-ae5e-315dcf41c7d3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64557401-f761-421c-b032-132e5613b737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946dea28-b4c1-4e16-b20b-951bdb3e67a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39622220-2d06-4d43-9f9c-d9918447fe83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c63746f7-2452-48d1-a0dd-592fd6007d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876f8a3a-280c-48c3-a626-56475f665d53",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5fc6c7b-7a9f-4bcb-9a9c-c610340e3d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04302728-20a8-4724-ba50-a483773589b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45979f9a-656e-4d1e-aaab-16ba85e09ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57ce8c0e-1104-484e-ac93-fa30d9b47cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c905df88-9e0d-40f2-9d95-3b4f00b9495c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d879e839-25c4-4452-bc08-945f21190ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f67f8827-0d83-44de-9d0e-bae01c1e6ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d55bbb-6612-482e-8b20-b1d53bf0285d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afcbc300-6fd5-4ef2-ac48-1f1b948b54b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6baef86f-17a0-4203-b3d9-b9c0b1cea9af",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "843d4100-6bad-42e2-84d3-07eec64dd894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b54725-c4d8-40f5-8e29-0e62bc2b2267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfcca4c-b0d8-427d-94c8-934f3deb74fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80834cee-3dc1-4307-95a2-94ade75bb9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34537799-3313-4d25-b0ea-b2b5fe3c7c59",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab7f473-3936-4258-83ed-7334397e177a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2b094d-c5d8-4420-a642-c54eb217ee68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d49f787-58a1-425f-a04a-5c9f0495eaf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6fca206-7d87-4b12-9f15-7c2447a77937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2072eabd-d5a7-43e7-a72e-d34a6b966f83",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13b5d05-5ca7-457d-9dda-54c04404ee59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5326cb39-ab30-459d-8ab0-d66147df8580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e206fb-c75a-4228-a018-354e18263e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "037560f9-1603-4e5e-803d-e84bea969f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff38aa1c-7bee-4601-a4a0-22705a2ba3b6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63bfff3-5b24-4461-8ccd-1566a6fbfb1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "904a1726-98e7-457c-b399-da1f5e871014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beefb450-2428-4fb5-9364-79640f72b0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f2f9ad-8182-4b5e-9fdb-53d63fd60427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa9c77a-d894-42fa-ba58-bc66ec4adb38",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e69dabb-6603-48b6-b3f1-4b976f0f9b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00994145-de39-430c-aa42-9afa36f9ff7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c74c798-091d-4944-ab25-843aa0c2a4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32ae9f2f-ebf2-4096-b2e5-be9b41f4c3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa497f74-583f-45d2-918b-e5e1d269ca40",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2801376-2133-4cc8-95e3-88549e70a9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce510022-8791-4e5e-a263-e649834f5916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbdd470-5ecf-4358-b21d-01564b2126b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13b72237-3af4-4f4d-bfc7-ddcfb8fa4955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb815a27-3b6f-4365-bfd4-f96a33e38f0b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb06f14-90b8-4fb1-a311-0e7c0de9fac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9091e81a-6fed-4de8-ac37-629990b0982f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ccc23e-e251-412e-93c4-8d064e7803e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a6b0ed-465c-4d0a-b216-6ed3c42f5ad8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0d1d1076-73f4-4baf-80ff-e9822acc83d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "635573f9-31ce-4c35-ad07-32abfeedcfbd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edda231d-d80e-4d34-8dd1-44d3662508ad",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1f20a3e7-2dd8-43d0-9451-9dc2f03fb5f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a38a16e-db8b-410f-b082-bb17aad379a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc01644d-0d5d-4eaf-b69a-bc6494b65550"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c32a95f5-69f9-4ef2-af0c-6dd6a9493fd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63505518-b654-4096-9ff7-1b22786670d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6be978cc-487e-40f2-ac20-f134abca6de6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81ad191d-b9b5-447d-8b84-b253b9341e6c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bfef090f-1f13-417d-95c4-d1e695dd131b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2f4bb173-b1cc-410a-a9dc-920611e25803"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb694c72-a08f-4845-8ab1-57518a91d519",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b97f1bbc-a9ea-4630-a345-98697d56f632"
            }
          }
        ]
      },
      {
        "id": "c93e2b9f-9ffa-4395-a3a2-a4232d2d2ed9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "458fe1e1-9cb5-47e3-9ae9-598fdfd611b4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c07845df-dbce-49d0-b27e-ee7555d53001",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1844a47b-ee96-40e2-b6bf-d243b030e46e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d589f8-6120-44a6-9c56-c078edeb8e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6309d64e-9f0c-4af4-8c6d-fc4360ac8bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14e2173-55fa-46fa-94e4-7f5753ec232b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce2acf9-d9ed-4c7c-ae22-4dc6f7b1a5ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f117b11-0784-4be7-88db-99426db300c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6e4ac9-69a2-4243-9d97-4c5c120f1a51",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662f2596-8c9e-45ea-9db1-6bc9d42a5fde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "083fe9aa-1ee7-41f1-b632-304c6c85f495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d591e3b-be18-4eb5-a196-86094f396c98",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d03732-0c70-445e-9618-aaecd4171ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb8b33ac-d3a6-4985-b856-2ea90560326b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b601f19-eb61-4389-9021-4fb98c26d780",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641b3ccb-4f1e-4295-a466-e77dbd9bc6f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209c13b0-b0ba-4164-a748-2cc1334123a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1ddda0-f2b7-41ed-8fad-4ba81cfefd3a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6562ea-c383-43c3-ba92-b5c55e729735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71672507-ab58-4d0c-ab08-1ba0a2c3012e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8579ab54-3a92-4d59-8f6d-8c20653fcbaa",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8085792a-a930-49db-aff6-8be3700d84d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97cba334-ff74-4075-ae73-1df1afaf882b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0b96c2-f727-4b78-a94d-ee51bd01da55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be5f7dc0-0e6e-4e09-acea-689d75f95b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c56bf79-57bf-4e65-a2df-673294bfe6b1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b23cad3-a2c3-4e4f-885d-52a307d66a9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "270bd1bf-b884-448b-a543-fb609e6c49d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2544134e-bc66-4873-ad89-9f6d3b3d2bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a2213f-75d4-4e63-a8f9-2e10eaa4249d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78870fa-35b7-40c2-a63b-4260c66c852b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95288d8-0f0d-4d62-9468-497a6ecbe74b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aff8417-0312-4a0f-bb5d-3633d4075b1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef092eb6-dc13-47f4-a38c-8147fb5c7d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7195465f-3691-4ade-995e-d947058497f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf99e21-d336-4f13-9d54-e7cca748477f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157dbbf9-94dd-4a28-8c9b-5b3f321e19d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52b6d017-6d5e-4d9c-ab6e-53011530c382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a028e83f-3ccb-4a35-8c08-eb6c1387884e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b9f0ef-22b8-4817-ae17-025da2102bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87858793-7e8a-4733-8d82-389d3b977437",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947f1723-fa83-497d-adc8-82867d08346f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e395c849-82b3-467b-9d7c-c4d18fbed51f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5da6a1b-ce09-41f5-bd1b-f4bbb9f2b68b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7038df0e-d167-4cad-ab6c-eab351f6bc07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6a7262-4059-4d3b-ba0a-a685b13d9ba0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a5d6e8-e668-4d5b-be73-368b7632f1a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe05ffc3-3dc7-4c1b-9452-9e5d2604585d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c950d17c-313e-4940-ac76-77c7fa3f9cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17c8791-b070-4db0-86d4-32ecd459682d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408802ce-19e4-4c98-9577-4b7cfc787a69",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0000565e-14a5-43b6-8191-cc333fe3183c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afb0d1d0-a8a6-4d97-91d8-23bb11ccb74f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0754ed31-e378-4cb4-ba5b-10fd6a50900a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d996ab42-e401-4848-8ca7-7d8bac127f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b56f1a1-df28-4148-a2ba-7c84cc6a3222",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e535de32-0a27-4fca-a98c-82e35e14eb0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f32837e-2e16-47c6-b58a-88d570ba311d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60099484-379b-4ede-a69d-e330c63750ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96472104-a859-4c26-9a89-22bb4495a1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d442c2-4b32-400f-a689-aec959b100b6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e0babc-3387-47d7-83f0-fdd7f21aba3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "286c6f9e-d83b-49dc-9016-a983f7f6641a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02020d9a-1693-41c1-91ff-6fdfccd65b57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "789af29b-49f9-43bc-89d5-32e051c62311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffbbb2a-2e71-4292-8680-d4756f25447f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4e568e-37d4-4382-ad3d-15d82a750f68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dffb3c9-3802-4dc4-8326-13fe645cf5b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "897e2c83-f1e9-4356-9a4a-63b41cde07aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f72cf799-a802-4ba9-8615-6bd32b90e879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739b63c5-d869-447d-9c03-5e1e37249370",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6842277d-7fa0-4111-be25-2f64167c5c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f31e533-a904-42f7-80da-95518e4a22e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8758eca-6f04-4c9f-adf8-d9463a806c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d6ad2a-006b-466b-b74f-2af9f5489a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07367afb-4504-4fd6-9ed5-38127499d662",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170ae40c-36d4-45e8-b58f-437f616edb7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ff83e47-38d0-43aa-9400-3d2efa4569b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "400e57ef-498e-4026-b928-bd7c669134ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70119e17-5820-437a-a1ae-a0d25360ba1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d126ec-694b-457a-8c72-ef630561dc02",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b507897a-0ecc-4080-b577-854baa7d279b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f6b1ac-bc05-4b43-8fd6-f48f339136b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aac88c6-0ae5-4fea-8d17-eb0906cc2ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4909a11d-5b8e-4f9d-9510-f5cdf8dad5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd693d28-6a8b-4903-ba34-e6eced718898",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20abe596-790c-415f-bbd9-d7d66a75480f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b967d717-7188-476b-9cfa-3829b374c4ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0c4d4c-f4a6-4284-a4b5-c7d3171dcdcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f544455-9894-49a4-8b94-7710618fc328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2b07a4-4260-476b-a343-acfa682ff2e8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c2a1cf-2a29-439a-95a8-ced194a369c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff00ff8-5c13-4589-9411-999d643ff1e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa896aed-49ba-4c8f-b4e3-48a65a4cc7a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5674c11-596f-4fc6-bc45-c34896bce4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17bf0f26-8d81-426a-8cc2-32280c64c987",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df614f3-f7d3-426f-b8c8-2620ed2ce8b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd1706c4-4847-4a90-a0d8-36db0acd4f4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8475b16e-9288-4c33-8dcc-bf6ffe86f449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb25faa2-ff3c-4c3f-acb1-5a293bf7abb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c70d200-736c-4351-b385-a71c192b076c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74c88fd-c4f8-4119-8096-7ded9ebae386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f03a3ae-291e-43c0-8968-b57f63d6cf98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc75e787-1772-4de0-9464-f5630b4393c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8705788e-bf67-4ce6-b132-8bcd4fb0b17a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16eb2c5d-0f3d-4ec4-9dfb-050ed0afe919",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d892d3c2-c72e-4dff-a077-051c7669b265",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e69f900-6549-45cf-b05e-670b13a71910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62a36e7-d776-404b-8479-ece9431f03d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d095d43-7d03-4ad4-a5db-f78d04ad9bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b172b630-841c-4447-957b-07eaf232552c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c1122b-e6d5-45ed-9574-34b0fd1377e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ad52e52-fa88-4be2-85d0-8ee8ec73b3d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7931d9-87d7-459d-8694-0696631786d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763750f5-4e46-4409-a2ab-e3585a1b049f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2bcb8c-25ae-4868-b117-936dd8b10599",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e07998-e584-4323-8869-4b624bc770ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6441943-d7dc-424d-9a97-dc327a37a90b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7941f5-43ed-4fca-9381-9c2552f1f8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d908f0-ba04-4873-b0c0-79b5b2edbd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ebb8ed-efc8-4d9c-9488-7451eb4cc446",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19d89ec-cfb1-47fa-9d99-2bd8509e0298",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97a71e52-0991-4009-a237-8c0e2c2f45b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5408622b-acbf-4daf-b4f6-1f969a168838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ff432e-b946-497c-a956-e16601321946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6aeee0-879b-4dcc-aeb4-92276734e386",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394b13fe-a234-4efd-bd11-c488f2ee9d0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d241473-b6ec-4041-9938-e092a69a4aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a8d936-a0ed-402d-8b7a-c60414da01ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c3bcba-1205-4d14-81c0-c9e2cd96ab4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b22963d-8943-43d8-ac4b-d3d694aeb4b7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b800636-a351-409f-9cd3-d6a204c8cd1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49d47e91-72f0-4586-902b-15b0f54f4c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d0dcbc-220f-49b4-b112-b49f5a8ea766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c23310ce-a857-496f-953d-0858501f326b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771d6584-7bac-4cb4-be4a-cce7d249b134",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c57107-9296-461d-a0bc-8ea8ff213e7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2db7c175-ae69-4554-89c9-b2c8f1610552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3ec855-4071-4531-8176-eb3430a68753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe9b795-26da-46b4-8d7a-e9783045fa65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afe583b-e4c7-4b5c-9112-a242b312f510",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09343e0a-b732-4be2-a9e5-9cf3cb8cba4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4d28c93-ddb7-49bf-9b65-aef07e93afd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa5fe17-74a3-4865-8b6f-821518a226a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "007d18b7-21db-491c-9d7d-82ad7ca247ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7285dc-c388-4347-ac4a-528309e63e6b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7548e264-8543-4957-83c9-c3845f0418b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7c43034-83be-4a50-91aa-d90d5e925dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "678e3bae-3645-41bf-aa72-7d4de3cfc97e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e5c558-5382-4cc6-9320-d937e09f2663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a9eaaf-ce93-4541-a462-df7eb66a69a9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c18456e-0fe2-4b0c-84ca-9b5921388535",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d139093-d9f7-4e52-aceb-7366c2940b0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9a4df6-d81e-4a3e-8714-05421d7176d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e589f8f3-0040-4af4-af19-86cb02977928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44a7071-2a00-4ef6-83e4-13e374665d80",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234b77f0-2fd5-4b57-9880-faa7b8be68b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ee647da-2def-455d-9cb6-cebbb47ef88b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e81184f-304e-464a-99ba-23d31929685d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c37b173f-5b8b-443e-84f5-21e5cc14453c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fa022f-915e-4674-9126-560b077103c5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88a71a5-c23d-4459-994b-bcec98883094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658afa2c-3015-4d84-adc2-392deba14010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12179148-af64-442f-a3d8-8e49d41bf725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8268d74f-4315-4b90-96f8-ce6fd824858b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b9426f-5b77-47d9-bb55-62f60c9852dd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09a50bd-e538-425a-8c2e-620d7997a033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7f3326-f1be-4315-a8e0-b2a6f8cd6a4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1339f89d-59da-4b8a-9114-e9b03fcedbc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f898371-5d5e-4d50-a553-59d68899bace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b21ff97-e217-4f0d-aadc-19db389b6f6e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe159e85-bcdd-4c58-aef0-0b27dcbf4db4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e38bc1c8-e1d3-40fb-a66b-afdb731bfdd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d053ec-3fc2-436e-bb0f-2c77dde9eba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "181acc50-5208-4023-9f50-c3771e1d8cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a92c8a-2c66-4dcc-a7dc-efa10892b1f2",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c61a695-a429-4e57-aa98-6ba7c274cb66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6385d8-21fa-400c-81b3-2d490c35f82d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebcd1d3-4e33-4a91-92eb-98d90e32d57e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd8fc73-51f4-48e9-8e83-4dabdbabb049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c25e9b8-a1e6-4e7a-9d74-4cee0d4f0511",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1beaabd3-e852-48cc-b83a-33ea435ee6a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6a0558-a3fa-4174-ab6c-3b2dcda847a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b739794-7ed8-4e2b-b000-07a2ca248c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2008309-dc70-43d4-abcf-75dbda5c896b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400caf8d-430a-4701-bc8b-c1bb97fc8fa4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd52dd44-7d04-491b-9d65-f2e5863105ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f62f09-081e-44ab-8d96-53258c83dd40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "427ee62e-a181-4ed4-962a-51c1cf18dd4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da897163-01fc-4f41-acb0-014da43e6f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e68f72f-bbf8-48b4-94be-f2ab0a4d511f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a913e04-72bb-406d-b461-86306c3daaf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce22c00-79e7-4a79-9be9-883d1cc265df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "695efdb8-cf2e-4a7b-bcb8-8b2fc0ed3d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "934f6b8a-0cdf-4f8f-9167-c4de741e2872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2446ef-879b-46cc-93e2-26d02af71ef4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91351b9-b3c6-4128-bd9e-e0977e6ddd26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039c7b04-e71f-4dbf-8ab4-2858d0be1970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24435745-825d-4ada-bfd8-b7f326a3b9e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b156b9a8-df50-4f26-8b50-8642b3e9d674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1f7c92-b1df-4d68-a211-630df2063891",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bac82d5-cd88-487d-b2e2-774100f01d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21b36bf-9b67-4f72-8c04-56f753359d16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34331ecc-0cf5-4d5a-8c7f-feaaf3dd11ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e21d64-81cc-46e0-87be-e5da546b215b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21770db7-629a-408c-a7d8-f4f1c354adfa",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3829221-f083-4440-8c25-5b8a0628b991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37687e3a-3941-427d-9f11-3eddf362daed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c549ec-8d69-420e-9639-d2651daedb6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4da1b7-3f1f-4b8c-9e69-7749ab28f3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3096c76-c61b-4f4e-a2cc-d06fcaa1aa7d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05c9ce4-a19a-4e87-b103-553f06e95213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15cdf814-1869-4cb2-af8e-0e7c315e5a4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e68bd9-09c3-4856-8ef7-1a1e03214904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd75760-5d2a-4063-a3ac-0e2a37bc4df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74196ef-d18d-4e9e-a2a0-a10983617531",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d696ccaa-4b32-4743-916d-2649af53f326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0382ba55-062d-4a28-8901-0e927e84a009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2362027-e094-4593-b0c7-b108bd6e1659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aec5505-11a3-4413-be47-4678d0679305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4d702d-7031-420f-9aa6-1baa700fe435",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09c7860-90a0-41b6-9851-d1461b770358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "049b75ce-6225-4cdf-b582-105d7dae6e4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "565b716f-a656-42be-9e27-ce5cce94b516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a00390c-5163-4704-b85a-8e2ea1c5efbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb62096-3b86-45f4-b1c7-c75b737e4bb5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4718c40-dcc3-42f4-8088-318eb42094fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a08ef3f3-afa0-4960-a88e-a6d80ab6cd6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df9f4fe-8474-4c5f-a0d6-dd8f6be199ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7addab32-7de2-40a5-b975-bb336766bb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e39a570-428b-4c06-b86d-a1268efaeade",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd539958-67e1-43d7-a597-f51ff211b0f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2fa45b0-89f6-4254-a583-32007e1b41e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61991c4d-fbf1-4d6d-a737-0c71dad4a5db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22714a12-df62-4032-8007-35f2e5574301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e702046e-166d-4245-a936-b686b79b1012",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828f9e17-2bad-45fd-8584-72537c8dd1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2322fbab-a39f-49dd-955b-b535e435223e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "556cbe65-33be-4eed-b803-e33f94b943d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809073d9-3c41-4aeb-899e-462eabe0ee8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feaa2c66-df7d-4f22-a008-5caf70b8ab5d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926cdd88-5335-482c-a074-f316d7e6bb0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73465196-5a8c-4185-bb36-1998ad928baa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d66bb4-bcc3-47d2-bb36-2b37c97e062f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ff4ab2-90c4-4e67-a907-dcb541665085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614c82ff-abf2-4a15-888d-49ffdb82a3fd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4130afab-947e-48c1-8a9a-09c6e268a25f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44505699-29c5-42b5-b28e-c11fc1cf100f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "389f69e8-634e-4532-80a1-02d44029d67a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e41f89-0997-4058-b467-76cf80de19f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c9d4ad-82e6-4f7c-8328-692c966fb830",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4cb7be-0aaf-4c9d-9ee7-dc385349b7b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c850586-11a6-4e46-9d3f-aaf0bd6e53e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5ed7e1-3160-45f1-b9f8-04f45518e96f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9641d70-2219-46f2-afb3-ece9b9598da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6040f0-0950-452a-8370-4399092ce61c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2753b2b3-efe0-471c-9e2a-8d4af8bd3f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ed61da-5d95-4e66-9328-30e54bdfece0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "871e4886-540c-4e0d-ad18-fdfe8b0292aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78269c3-14ed-4b03-9f6d-dd53fbfe11e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d81a6c-d19d-4b36-a941-cb061d252874",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7cb1491-9c4d-446b-8494-4aec28be109b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdee1e82-fdff-45a3-bff3-3f163930c0eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78463939-9163-4bc1-974e-c53ec7304176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a74a909-c2ce-4e7d-84e3-d610097fdaa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a0de3b-3b87-4570-ad34-f7e02eb8466b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30283167-57a8-4828-9797-bbe9e2c74fd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a535dbf3-2d62-405b-9b8f-e0cf1a674ffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46b376d-d7c3-4de7-991d-f53999f9c242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f57e121b-92ae-4429-a9fe-bbea12950d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271e59ec-dfdb-4a0b-8db9-51f4b50f7ea3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06bb393a-d071-476f-a06b-319450d2f6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74d6a652-1aef-4501-b252-ef45878fdb0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4497068f-eba1-4201-84bf-955176d593d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3feb5a7-4d32-49b7-a012-b5a42944a3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3747399-bacd-4058-98ee-244626f528b1",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb3b921-3b42-4fa4-a6cc-a685940b6676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c5f50b7-6fd5-4a08-a200-53319795893d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd3d655-36ec-43b0-9c63-ec5d9dfd730e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b41c871-cc2b-4d9e-8f21-4625c95a3869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45becb91-41bb-48f7-a7f6-9c58c84df8ab",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428352cb-e39e-477b-b4ce-5e3d7a796042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d2e1a0-501b-4a07-b078-2b118ce299cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcb4371-0254-438f-aa11-68ba6e929719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0266e77-600e-4474-9daa-18f70c0b7fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bff3f20-0ef1-44d6-8450-c858e3cb9c37",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faebe965-bd13-4495-a36e-385b0d51149e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc382c4e-485b-4569-a290-48dce2dd55ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3bffe4-d0ad-49f2-a5cd-b9d15e09c8ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "934f1689-05f3-41a2-9e12-95f62280a5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d0186d-209d-4364-ad91-9ec1335379dc",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36821a0-0107-455f-963e-b45eefdce5f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7cd429c-27db-405d-89da-a2bab0c2c4d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1953c3-15d3-479f-8cf8-23d3f3942228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ddd0cd-c22d-4768-b5f9-548b65133609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb056f5-eb4b-43b7-86f5-80863933fde0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e861793-e215-4b72-b61e-2fe1d45379ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8844311-b57f-4009-840d-c494cde99b7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a2b34e-1f64-4824-a103-3d36beb86d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf381f2-569a-4f0e-a1e8-a599fae5a52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac0ae4a-4217-4e64-b5fd-a2bd70c35644",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404b377c-58f3-4d21-ada7-43cb7135bb98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b1be42-309a-423b-bf4a-ec947d9e70da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edaafcbd-87b4-4beb-9078-264486afdb42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4d4e63-200a-4990-847d-b04d5d475e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b85090c-8bb9-4f3f-9fb9-580bb08a8fe1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10ce762-e6b0-4b2f-96cb-29460c9a0fa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f642cb6c-83f4-4053-84ac-057c3f6b7bbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07265fb2-9371-4841-8fdd-4deccfe0fdb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d189a1f0-ee72-4839-ba7a-9eb5b601eabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d469a1-d4b5-4385-bb9d-381fbc2ec139",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e251ebf-8492-4b63-9dc0-03502a28b123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f8ec00d-3f35-408b-bca9-3ba8043b8f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0121116d-5a0a-41c6-8fef-0d7fcf56df7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "160d6944-a081-44cb-8824-fd7d0604b2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f23ca4-3ba9-41e4-8db0-316ac36ad358",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be1ae59-d065-4d5f-b18b-d097229c200e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98b2e917-c123-4ecb-8625-6f0f25d2515a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3c07be-4458-4e75-a052-7e9059014978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec1ff0c9-f287-46a7-96a2-1361879b3dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8eccdfa-b2e3-480e-8c9c-6f2f824edb28",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f142ddd6-4144-43ae-9772-4c6808ce0a19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b88fe916-3206-413d-9294-7c3feb2c186c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0941ca53-7a0c-4353-90c7-e6605a1a82f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac5ac4f3-4261-4234-8d31-36175db2754c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8efda83-a072-4f0d-82f9-0abac042024b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3524d1-1ff0-4b58-bc2e-3595ab84b9bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "948ee434-4860-42f7-8ca0-c74f6c3f2362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b0897f-d0a6-4eae-944c-e7c6ef8f78b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8739f121-81b4-4153-8f05-2429dd0e8358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846ccd73-618f-40a4-9d95-c143f76ddb7f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457e416a-e9ec-4eb6-a2c1-d304cd36d24d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9af7d6c-5eff-4f0a-a3f4-89c978bb453e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af64ffa-72e3-4446-ae12-af2c29ae5660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99415c6b-e055-49eb-8320-02c7245b9a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66fd64b2-8051-42de-aa87-c766198e0452",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66be90e1-ec98-4e90-9c6c-d38c84540b85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24908332-600a-4b31-95f8-f2ee8e516309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10ebb4a-7f31-496d-8c71-4ba72155ebb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9bf4f6c-cd52-4410-84b0-4248ba1aeb2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b639b8-7d41-49f7-8c21-aeee484564c0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7aba9d-a929-41e0-abba-8d284378acbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edde8e79-f5bd-436a-82b2-f5d8e9b614a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "767342aa-1313-4a87-91d5-ce1645add84a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3172fa8-4af5-4463-a8f3-57213f16bfb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de51cb18-00b3-415c-8cae-d7cf8bee1529",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538f78df-2b0f-40a2-82a0-aa4b12c7f2d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d04a227d-e0c6-4a29-8f0b-a38364fa94dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8157ee11-73d2-474a-98cf-f3cd2f879703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95370454-784b-4682-be29-bcf780db869e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e0e4dd-a058-498c-b7e6-8321d1bdd7aa",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ada68eb-0af5-4872-a7d2-6675302a4a5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d9e7865-44a5-4ea8-929f-119ae343e043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b141cb-b7cb-4dc6-acc2-35fcf0f7e3c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2959bc9a-6be3-4769-be1c-2f6f5530b76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771322a0-dc5e-4097-b786-53dad1be781a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c811c8bd-c59d-4a25-b387-30a7d2102d18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8ef48d1-4bf9-44d0-bce6-d7cfdcae894b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99cf2172-109a-4aca-9c59-d523590f7de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3671ff-f1a6-4174-afc8-7b449e676da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f8fdf0-d7dc-4a39-b68a-6508497dfa98",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "665d3f2d-d8f5-4d8a-8372-cc09ab17a767",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "885fc2c2-dd56-4bb4-b604-66396934f097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6cb8c1-4b4a-4e0e-a2ac-77f70817c51d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b0cc740-ece4-4265-bd1f-031035db1f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293a9bb4-40aa-4221-856d-91ea2cbdcec9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5699d16-900e-4ba1-b54d-23cc05ac7352",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6527f454-cb27-45d3-98f6-f1551be1a8e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef251999-cdb2-4a0e-bec6-0c81f6363b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b3f567-20ee-40b5-8767-6e70ec91eca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673e3166-36e3-4494-8a91-3967878e5f9f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9cc593c-1f74-46a1-a48f-c093648f1622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d94190c3-e267-4d3a-9c63-f27bd3f5eb7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "547ac196-3564-44e0-82a8-39a4ca62c7bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f401225-a57b-4938-a6f4-63a3fdf0839a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf7406c-40af-4fa2-8406-42217af1ef6b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470515e2-7462-4366-98e1-ef303f8ddbd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3df37058-4d9a-4596-80b9-b3e6dbb8bb06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a3bdcd-60b4-4050-87b3-7b241b0e6c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f9d793-0d5b-4afc-969a-2e5bbd0ed343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f20c2e3-5f51-49c5-8cda-b559c8631fc2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c2c8bb-bbf6-4d11-b750-83c4e973cc39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a359c728-21f1-4f15-9831-6c51c5311319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "399908e7-0aa7-4dd3-b019-4c31c9528fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05628c9d-229c-4a5a-996d-d8bfa9360f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4398075-2171-4831-9879-8c762bfc1f4f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474f8337-d9a8-492f-b3a6-c7056cc6e261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14fb76fb-b500-4f72-b059-baffe1b2bd0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc19a7e6-4166-45c3-9543-d735666c8759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fbb0d7a-3242-48ff-a08c-6d446c150804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cb0933-d839-4021-bc22-7c14d8f98fb0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f8d1d5-64e8-497d-a499-a589c4c40a43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57909919-6b8a-41a0-a132-621f04ff5507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b7ef51-e89a-4f21-9122-64e3027f69b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97884149-7c81-42a5-9a15-12afcb76a476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449aab5b-8cf7-4d00-a502-913c1998f858",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c707a57e-66d1-492e-89ca-efa436603f14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a73634ba-a7b8-49a5-a326-bc921026deb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "799af5f5-f412-4ecb-90e1-f5579cb4ecbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb13e499-659f-44d4-b72b-a2939c48df59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c03a2f6-9430-47a5-b8a1-7d0c32c889e1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c52389c-3827-46d5-991a-b39b7d65aa2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2327b364-4966-47b0-9581-36e2d4740eef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1dce5bc-67f3-4f88-8669-47bd6fb74100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c91910-6785-42aa-a676-39664d436503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7fccac-caa0-412b-896e-7a738610eff9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab337b12-ddd7-45d5-98a7-f615e2effeb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "141f2411-0131-43a3-b239-83f329611ca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "157ed2cb-8ae4-4973-9115-d2e3225cf609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cadce7dd-18d9-421a-bee6-b376a37bc47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb967582-e424-475c-a5eb-abab235272be",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22d8e03-f149-4cfc-a764-248460d046ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b358e5a-93f7-4d41-b104-d1e578435521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4836b1-c337-4da7-8efb-4b7790638524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4b94aa4-be3f-4cbb-8c11-613f568055cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a035e339-3989-4672-9994-0391a1ff6a75",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c8bad2-c66f-4b97-8eff-5023eb56f3c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a2709e8-673d-4460-b6c6-f12e9b4fd72d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "040376a4-269f-459c-b24b-5848538983fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f555f697-b399-4931-a6cf-d04d72e97253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d996c4-85fe-4257-8aad-24749d06570e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f121ec8-e3ef-4e1d-9d42-007814bf25d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bdfef9f-8c2c-4a80-bfc8-b1508ff23cca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5206deb-ccd3-4881-aaad-fa86dbc2529a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f642bc08-4a2b-4e0c-8cc0-f12a9e00fdf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63693a88-993d-4ba2-beef-789fddca651a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c18d8ed-03a4-4393-aef3-217c17322d85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1816fed-6092-4ac2-92e4-7c8e9a1bf67e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e49000d-59ef-420c-8aa6-fdd7e82e13e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab6faa1-af67-47d5-94a7-1060f0a562e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f23142b-81c6-4a79-988c-0998bf6f3c86",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165ef221-dae8-4373-bc22-7d43943517f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dee77496-3d20-4ab4-ba18-5438625a6235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad99d38b-ba7a-4151-bf64-4812fde08264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158d8d79-3a47-4ab0-bc47-4f4e387846de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71889d9-47ed-4351-8848-27cb76331e69",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479c95fa-23f9-451d-8046-c38e9f7caaf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0372c7c8-5508-46ea-ad32-1ebc45106762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31459678-b68d-4992-806f-60ff41a19e5e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "711b5836-bcdc-4cec-b455-78ac3b51d14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0d349e-2473-4008-a9ec-cdfb2a96b7e0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4d8dd5-5418-49dc-85ae-cdb81d179df9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "692ad27a-cb39-4bfc-b002-ed9b7b6b27c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ddef9e-afd8-4445-a9b8-7de58d37d0d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c9bb25e-3f35-46fa-b9dc-aa36b3fc0986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c913dd6b-dd5f-4684-a41b-9c45d9b8ee1f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56dce991-7626-4977-a3f0-6f014cfce290",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8db573a-fa4d-4f26-b1a7-7b4531b12f34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f31fbcb-33c7-4fbe-b68c-42f329db29dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae3d0131-ead7-46af-a0e2-480050db5c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2018da-1bdc-4206-bf4e-bee9cfc497e7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7279ef12-0fd4-4e14-9911-137170c18728",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b809e8c9-6e18-44ba-800c-8da44c2ae066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16837819-3aa3-4e85-8d44-a1f565a5d319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f699c0f4-62a5-4751-8da4-10f9f27595f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0ade6a-ce73-48fa-8daa-7ebe9aff061a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ecf505-380a-4fe4-af6c-aaca5743c9fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07bda2ef-4e93-4b23-a038-66169b181ffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed27346f-8923-4986-9fe5-f9c4fdba7176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "064cf486-85c5-44d0-af1e-c6a40dbf96b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc8916e-7bfd-46d4-9b42-d746a769202c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6131fa3f-5e7e-46c5-b95b-39bf054559aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdc5d244-cc5e-4dde-b2f9-ba1289eada9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14d2ede-82ad-4b00-b36e-e0e487de14e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "017c09fa-d5b9-4350-abe6-95d0e0fe3f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063efa24-892d-48b9-a427-223f8b5bfcab",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe8e905-ce30-4012-a21e-a2e36a1c7e17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "395cfe46-4181-48eb-820a-8d6862da8e45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5549fc70-1166-4a95-9bfe-ad0da4773554",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf8ded6-304d-4f1a-87fa-f7e7b2a76286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74dafc96-c9bb-4098-9e75-490e88814b47",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89fb007d-8da6-48e9-b8f9-36bb1999dd21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9cb7c50-a9d9-42d9-ac38-c2e051d20fc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d0edae-2022-4c65-8586-068f053c4db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf53f5b-5c05-487d-9c53-9cb0f36d7f4c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f39fbd1f-6b32-40c0-88e9-63cfcbb8eb11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1707aa59-e49d-43f8-b14e-6e814a81cc1b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7c3c65e-cc20-46e0-9a72-9e1c35b1e2d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf99e545-a70e-44f7-8d2e-095632fde0df"
                    }
                  }
                ]
              },
              {
                "id": "fb50f095-40c3-4146-ad6a-d1536660dd25",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e1cf04e9-bbf2-4672-a09d-f1236a2412cf",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a15dede-7d5a-46e1-923d-17f88c95cc37",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5db0bf15-e54e-4978-9a7c-4404093b0586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "360d8dcf-3f92-4f6c-9e7b-6a741649bc86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "127c463e-e4a1-4cd2-9e9a-44e7a8faf1e1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d149d689-a7d4-4833-af68-08df32a92051",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4612295-841a-4fd3-97d0-bfa07eeccf6d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78a9e2e3-999c-4d4c-9e37-3bd7a86f2698",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2f92729-1c14-49e5-bd3b-95085a262647"
                    }
                  }
                ]
              },
              {
                "id": "abaaab37-0dcc-4e09-a9cf-28d437b2a8fa",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7afc5828-97aa-4eac-9f0e-e9215da78d10",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ff5988-2464-40c7-93a9-8a7e8ee9d732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "438cec80-c569-4ab7-a8a0-fb92bc5c6a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e444a1f2-8255-4cc0-b6a8-2026e59c0a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d768a0a-9526-4f8e-8339-fd1126ca58a0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "63c4b07e-02e0-4ea3-b64e-1fadb7da72e0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c9e4cc28-e9ab-4d83-85f3-25cb44f4b4d8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5e4c709-9f74-48b2-b707-6abe793b6502",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a97dddec-d038-468a-86ed-e1854675ac7f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba188d13-a7d1-4942-abab-1518d65f8987",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d52381d-abec-47bc-a6e7-7cf976aa191a"
                    }
                  }
                ]
              },
              {
                "id": "438a0588-0ba3-44bf-bc42-4cf60575d7d2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5216677-8782-4c60-af22-2706dde7d17c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "772f891d-0c4e-4a36-ba59-842e98165862"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7385bb9-9777-4679-98a2-93e8eefe32bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77eee0af-9414-4bd0-85b8-a627dee3d47f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ad448f1-d97c-437f-92e3-be7b05db8afd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "14f29116-7c11-4e66-bd88-ad10e7374528"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37e224c2-d1b5-4acd-8949-6912800fc460",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6bb05f11-197d-4ebe-8809-f58f4dbf0e37"
            }
          }
        ]
      },
      {
        "id": "5095d655-3330-48fa-971b-b5a9c9341e57",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f2c89817-7e5d-4d02-95ec-6d33f6b6456b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe325201-05de-4cc0-920a-b679dfb46d87",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d55a455-23df-4b22-a30d-64e56256345b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836a5fa2-e2f3-4f7e-939e-039e88914b82",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "aff3282a-4a84-4dec-9732-34bd434833e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fdabe0-8225-4c7c-b80b-deb3a9a67cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b80afc08-dd07-49cb-8164-5bc1a3c7589e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d91097e-71c7-4b3f-ab4a-11603d1a3f6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de227603-c44a-4a20-9cc8-8f27f82cae28"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a6772fc-732c-437d-bedc-b4cc358ff25f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1435f8f-3e4d-4d19-bfbf-77c90b501184"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85f8cb43-b6ae-4268-953d-0985cf9284f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "94f381dc-278f-4476-be80-2b95f2b43f9b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ad53b43-8d43-46f7-a8e7-73e476c278ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95ae83ca-6f6c-49e1-b13b-8e103c680181"
            }
          }
        ]
      },
      {
        "id": "01806820-56d3-4471-b386-cab407e15362",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c58dca87-e415-41d1-83c1-6661c2264eeb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98b553ec-4291-4f8b-8448-8b401cc3afe1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1bc78537-26a7-4cfb-9ac7-5a536e8d2d96",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125a7577-004f-4b53-aded-025191a0c2c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00d995da-a578-4332-b831-fdd39220a8e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab605a91-ce5c-4a2e-b0cd-729dbb9b965b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f6c0c40-6218-4a0d-87ad-b4297d8a971f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04468469-611c-4305-95fd-ee4a9df4ea0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29e782ae-42df-456e-a33e-90374eab7a0e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "08e5ce83-3ab0-477b-8b34-50444d5d19ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ea5f4ce-ea8b-495b-a6ac-4aaa347f7393"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c7c5e20-8273-4c65-b5d7-6ec676a04244",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "932a63b8-eea8-421a-9129-a68320a9dcb3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5819c27-37ce-406e-92d9-92b00f2ec255",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "394cc3a3-9017-4f91-93c5-bfe949cbfbf4"
            }
          }
        ]
      },
      {
        "id": "734350ed-a842-4b9e-8814-1f878bfed869",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1f652d6b-57c6-47d9-824c-8d218d88a795",
            "name": "Negative Testing",
            "item": [
              {
                "id": "75135396-bb00-4f25-b8d0-162d3a36ad1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "84980de4-6b86-4e5b-ad14-965d48178c4d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65bda03b-7414-43e9-aebd-38b5a53111b2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "613173c2-8841-4164-a7ee-7af28a75a2a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "096ca19e-c009-4354-89e1-226744568bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3db8c1e-4e84-4a47-833a-d9e0e5c4c6f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e6dafde-27ad-4a3d-bc51-8638c0de4e9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "849a6cc7-d984-4fb5-8f71-052549d424dc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b8387f7-88c3-45da-83d5-9bd404cf2600",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30e4ebfb-0f92-4d2c-8ce1-d42b1ac2a976"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b476ce78-1d97-44e3-a5ba-77b478e7eec2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c21ac0d5-a99c-4da6-a04a-a8b0208ece3a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f37531c-6816-4f6b-8f96-2da66e1dd26c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ed9deee-0b59-4fb7-bd07-6e4878be750e"
            }
          }
        ]
      },
      {
        "id": "838f0306-5a79-42c2-9704-775ef2b6295f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed0e0adf-bcfe-4363-a0aa-169e5516b24c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "26b7f059-29b4-4c77-8a1c-e7f39f76c13b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d28a0642-e813-4312-abd2-858e485baf4e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13b5a26d-b6c3-425e-9e0f-b153e4c79400",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "628f6c26-a529-4f4f-9336-f18852e8d9da",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 38
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 74.11507936507934,
      "responseMin": 7,
      "responseMax": 397,
      "responseSd": 33.18357206740154,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1718843851224,
      "completed": 1718843877919
    },
    "executions": [
      {
        "id": "d928f357-36e4-43a6-9beb-9eab9c43958c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6e42a9d6-78b6-4e4a-8b66-e9f8da855d91",
          "httpRequestId": "2fdde428-c3d2-45d3-a261-8583a40a8002"
        },
        "item": {
          "id": "d928f357-36e4-43a6-9beb-9eab9c43958c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "dfd25d62-2ddf-4914-8aa4-e48fb93a6697",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "c9ea30f4-08b6-4418-bfef-4d3a306d8f5b",
        "cursor": {
          "ref": "01a66b19-e9e0-424b-a9f8-e6998e186890",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5dfc5289-71ee-4ad5-8844-60ddfad41790"
        },
        "item": {
          "id": "c9ea30f4-08b6-4418-bfef-4d3a306d8f5b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f9c1fc47-e247-433d-909a-5c60be53a2ca",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "0b828812-3d40-44f7-920b-3aea9a9097e5",
        "cursor": {
          "ref": "c4e67f4c-e7f8-4279-91b4-2e0e3603380c",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "08cfe50a-eb51-49dd-90c5-7f3f51ffee0d"
        },
        "item": {
          "id": "0b828812-3d40-44f7-920b-3aea9a9097e5",
          "name": "did_json"
        },
        "response": {
          "id": "37debe5c-0ff7-4697-83e8-38e556dfdd42",
          "status": "OK",
          "code": 200,
          "responseTime": 343,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041fdd4a-35d1-4aed-aa17-92875d85f813",
        "cursor": {
          "ref": "2714451b-00cd-47e3-8bab-5b1c60d4795e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c8d30b1b-22a1-4784-9786-cf86dda3607e"
        },
        "item": {
          "id": "041fdd4a-35d1-4aed-aa17-92875d85f813",
          "name": "did:invalid"
        },
        "response": {
          "id": "b23609be-bc9c-4f1f-91af-9b841c47279d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041fdd4a-35d1-4aed-aa17-92875d85f813",
        "cursor": {
          "ref": "2714451b-00cd-47e3-8bab-5b1c60d4795e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c8d30b1b-22a1-4784-9786-cf86dda3607e"
        },
        "item": {
          "id": "041fdd4a-35d1-4aed-aa17-92875d85f813",
          "name": "did:invalid"
        },
        "response": {
          "id": "b23609be-bc9c-4f1f-91af-9b841c47279d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d7ced0-4a86-4877-81a2-79fce2a5b445",
        "cursor": {
          "ref": "4c444af9-3cfa-45cc-af60-be46172c81bc",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e80adaf2-0e76-44a9-b49f-5482ea46dcf5"
        },
        "item": {
          "id": "a7d7ced0-4a86-4877-81a2-79fce2a5b445",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "dc31e13b-d1cb-496e-b77a-5a79e4b4f289",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 353,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a273a5-ced0-4bb8-a9b5-c4a67daaa441",
        "cursor": {
          "ref": "c626ee54-b23b-4c2b-8adb-50e6dbe51501",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f3c0cbb4-2e91-48c9-b34e-a74e910b63b2"
        },
        "item": {
          "id": "96a273a5-ced0-4bb8-a9b5-c4a67daaa441",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7ca6a817-ec84-4ddb-9c65-00a07da15984",
          "status": "Not Found",
          "code": 404,
          "responseTime": 71,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5e6030-6b73-44da-b287-f8fdbfc329ea",
        "cursor": {
          "ref": "80f48587-9c29-4329-8f31-1b455bdf16dc",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "943c8dbc-df60-4437-a17c-f83e8d904f13"
        },
        "item": {
          "id": "cb5e6030-6b73-44da-b287-f8fdbfc329ea",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a0be8606-a706-41ed-b3df-c198c8ad35aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5852f493-bed4-4751-b621-e35290c4e412",
        "cursor": {
          "ref": "19c2a0d6-895d-4169-b46c-3ec9a2acfb4c",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d8f787d8-9601-4970-96ee-e602080c00cb"
        },
        "item": {
          "id": "5852f493-bed4-4751-b621-e35290c4e412",
          "name": "identifiers"
        },
        "response": {
          "id": "2b5d1f6d-caba-46a2-8b46-e6271d2d167f",
          "status": "OK",
          "code": 200,
          "responseTime": 120,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7586bae-c327-4a78-9585-16632bfc9b60",
        "cursor": {
          "ref": "b185ed08-74e3-4e7c-9970-566e7875dc03",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8037fc9d-fe9f-475d-912e-60ea888ac628"
        },
        "item": {
          "id": "c7586bae-c327-4a78-9585-16632bfc9b60",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0a82d9bc-88c5-4976-8241-15d96296b2a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30714a6c-e56e-4888-9123-310e49281c20",
        "cursor": {
          "ref": "dd246a06-af5a-4c3b-9220-fce2ccd482a3",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9c029545-06c1-4c28-b644-54a9752a8523"
        },
        "item": {
          "id": "30714a6c-e56e-4888-9123-310e49281c20",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6ec836b8-2047-47bc-ae60-8220d22a1e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117860f8-731b-457a-9169-3c10d3891b99",
        "cursor": {
          "ref": "08c9d056-ba1a-4005-a548-381b032bb1cd",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "eb46f32f-544e-4c09-beae-139dc959c3d6"
        },
        "item": {
          "id": "117860f8-731b-457a-9169-3c10d3891b99",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a708fa80-6f0f-46e3-97a1-8099c1b03878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be6be6e-603c-48d1-96ee-c6187b694792",
        "cursor": {
          "ref": "b0a3776e-415b-4577-b773-75f130623cb6",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a860d9c4-3070-4f93-83d8-e8c99817d0ac"
        },
        "item": {
          "id": "7be6be6e-603c-48d1-96ee-c6187b694792",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "450d7d5f-d1d3-4473-841d-b8467de10898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7f4cb0-d221-43cf-9134-b894f29aeba2",
        "cursor": {
          "ref": "cabb1e9c-7335-4347-b48c-85c965f42625",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4d0601c7-d74c-4511-a95c-46210fb9d81b"
        },
        "item": {
          "id": "bb7f4cb0-d221-43cf-9134-b894f29aeba2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "faccc0f0-a5ac-40c8-81a2-4d47d327e5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6992ff-68d5-45d7-bb0c-e2740c07867b",
        "cursor": {
          "ref": "d6007e92-4426-4543-892b-b82e7b996d39",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7ef45d4b-20cd-46d2-bcee-0cb99128de54"
        },
        "item": {
          "id": "cb6992ff-68d5-45d7-bb0c-e2740c07867b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bb9ab8b7-132a-46e3-94a5-6c689e211b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2a9021-64ee-435c-83f7-9fdc6c6b309c",
        "cursor": {
          "ref": "c2f6c47d-e946-4ea7-9e85-997341a86453",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c0fed56c-3a7e-41fc-9849-77175b6b8c8a"
        },
        "item": {
          "id": "2b2a9021-64ee-435c-83f7-9fdc6c6b309c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8d3e1488-f183-4e55-bb7c-032ff68af5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d6ff37-0eb3-4a0a-863f-626895e81b61",
        "cursor": {
          "ref": "c80de60e-ddc3-411e-a6f6-223335aecd32",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "aaf7b1d7-30f6-4504-ac90-31bf687103e1"
        },
        "item": {
          "id": "25d6ff37-0eb3-4a0a-863f-626895e81b61",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "193a5d4d-2226-414a-87c0-1aa44e3920a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddaa9a3f-bd7a-486b-9cd2-3f43454845db",
        "cursor": {
          "ref": "2c6d4951-bfe2-42a3-bcbc-bcee2d7f0f6a",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4c750cd8-285f-413c-adb9-e7321954d8f2"
        },
        "item": {
          "id": "ddaa9a3f-bd7a-486b-9cd2-3f43454845db",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e32ea305-d677-4795-8ac8-14f4bd3c3619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b9efeb-c115-456d-9948-355abfa2bdbb",
        "cursor": {
          "ref": "13e7bd25-ed66-4c06-9b26-1422730d9a0e",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e73c120a-cd7e-40e2-8c51-304b5f6ed8d9"
        },
        "item": {
          "id": "99b9efeb-c115-456d-9948-355abfa2bdbb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e5265273-cbdf-4cd6-a311-110e55fd6243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfcb89a-4bda-4d48-910c-3c527d72aafc",
        "cursor": {
          "ref": "79ca3f3c-3c65-497a-8dc6-329ad6e2ecf9",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0a5aea7b-8968-43db-8bfb-b22319d46931"
        },
        "item": {
          "id": "fdfcb89a-4bda-4d48-910c-3c527d72aafc",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "adf47268-3800-4435-bc1f-3e579f13a612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c71cbb-a057-4a92-a835-9322a2a8d729",
        "cursor": {
          "ref": "cc24bbb0-589e-4d5f-9342-6770319b8352",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "144fc152-f447-4e11-8385-bea7dd95888a"
        },
        "item": {
          "id": "33c71cbb-a057-4a92-a835-9322a2a8d729",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e317731f-2538-4bb8-b04a-fc1ed55ac5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f48fb6-8f66-4c6b-bb24-ae59e8997fe5",
        "cursor": {
          "ref": "4004b129-08af-40cf-aa44-1424bac8e8e3",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8a7f8113-a017-4103-ad42-f73bcb2762f2"
        },
        "item": {
          "id": "16f48fb6-8f66-4c6b-bb24-ae59e8997fe5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "38bf4ef4-732e-4986-ae23-febdc8ef5747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c12f63-6c94-4236-873f-bda8913bbdb8",
        "cursor": {
          "ref": "5491c922-e486-43a9-96ca-6a44aa4d14d6",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "75a8e0e5-6488-4897-be80-8f228d196260"
        },
        "item": {
          "id": "81c12f63-6c94-4236-873f-bda8913bbdb8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f87fda20-bc85-4378-815a-c76ec19e7ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73e1096-db63-4750-a304-d56bf9953a04",
        "cursor": {
          "ref": "e7d6d1f6-c776-4ef4-89ba-c5f1357d5490",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d6794486-9b8a-4ab7-955d-7dc4b0b6c484"
        },
        "item": {
          "id": "e73e1096-db63-4750-a304-d56bf9953a04",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0e8b4a7e-d16d-4220-b5c1-e198e0beb152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15477324-149e-46fa-a1b0-558eada7debe",
        "cursor": {
          "ref": "4795a706-632b-4499-8cd7-433fb049dc93",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a9b2e078-661b-4958-9d6c-b7f3b3475915"
        },
        "item": {
          "id": "15477324-149e-46fa-a1b0-558eada7debe",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bd04f9fc-6146-4d79-8f96-e60b21f1a2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670d5fd7-2e60-4003-9ef1-caaa12136736",
        "cursor": {
          "ref": "268782c1-8d69-4908-b7ca-961c7ce92365",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e6754f21-ef06-477b-b744-4fbf1572b82a"
        },
        "item": {
          "id": "670d5fd7-2e60-4003-9ef1-caaa12136736",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "91dc5272-001f-420c-92e2-ad0c9e07001e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86c5bc5-2551-4d63-abc6-a58341641bf0",
        "cursor": {
          "ref": "d07c2b66-f49e-4ccc-9b16-e6275274463e",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e3352f4b-a384-4777-913d-cb8031bf67ab"
        },
        "item": {
          "id": "e86c5bc5-2551-4d63-abc6-a58341641bf0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "43ca9989-2490-434e-813f-96a4fb4578ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea84cd4-b1b1-46d9-b795-6d6ae1eea410",
        "cursor": {
          "ref": "adb1f5ce-d256-4a08-89fc-e0dd2fa7615e",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0668303e-17db-44e9-b938-6bc38deaf11b"
        },
        "item": {
          "id": "2ea84cd4-b1b1-46d9-b795-6d6ae1eea410",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "96142902-6c7d-4422-af6c-dd955a5f75e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3e384f-fff0-40b0-9e03-ac063820cd6d",
        "cursor": {
          "ref": "48383cef-dc67-4c53-9b33-9bb99e5a9bce",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "072cd043-75e6-4f7a-b684-2c63cf32c00c"
        },
        "item": {
          "id": "0c3e384f-fff0-40b0-9e03-ac063820cd6d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "bab72020-9a05-42df-9ee4-53cbba8ddf4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4895787b-a261-46d6-ab6e-4bf7a304cbe9",
        "cursor": {
          "ref": "e1987f8e-6ae7-49d1-90eb-9b26679e7663",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d51fb831-2dc6-4f58-8910-7b4ec688f6ff"
        },
        "item": {
          "id": "4895787b-a261-46d6-ab6e-4bf7a304cbe9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "dc428086-5977-489f-be69-48079de97646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938afe90-b6ca-45b0-99fd-21a45fb44dee",
        "cursor": {
          "ref": "1e794c95-df67-4ae1-922b-843799f3ae57",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "55a15712-accb-448d-9ffe-414ca53bfd45"
        },
        "item": {
          "id": "938afe90-b6ca-45b0-99fd-21a45fb44dee",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "dbebdd86-edee-4537-8001-ac8c0a79afff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fb4ab6-936b-45d7-836e-c5935b08294d",
        "cursor": {
          "ref": "b2f711dc-795b-4d63-a6d2-2563e61ac9a0",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "851ab479-d070-4f04-97fa-467be71a83c1"
        },
        "item": {
          "id": "d9fb4ab6-936b-45d7-836e-c5935b08294d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "dbe0adb2-2dac-461d-a367-52e5cd676bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880f3ea0-e61b-4ab7-968d-3a2879fb6043",
        "cursor": {
          "ref": "f76567a9-5688-42d7-ad41-a801463ef701",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c5a9e94a-8fef-49ab-bc03-06275fa02752"
        },
        "item": {
          "id": "880f3ea0-e61b-4ab7-968d-3a2879fb6043",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a9092da2-9f6a-4830-9016-a393ec8a28bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "befa25fe-b76d-48f3-a9cc-8e6194314df7",
        "cursor": {
          "ref": "ccc38b1e-7b32-4499-9bf1-18a4f1ab105d",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "364085e6-78d1-4d0b-94c6-4a2004b11527"
        },
        "item": {
          "id": "befa25fe-b76d-48f3-a9cc-8e6194314df7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "faaeff46-80b2-4860-80d2-be8cf747b08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10507026-0f3d-4eb8-b26e-c6e7fc0dab7d",
        "cursor": {
          "ref": "4c8df27e-c7f3-4018-b3b7-32deac4801fa",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2d1792ab-ff66-4e54-8335-d2c15a9e7f8d"
        },
        "item": {
          "id": "10507026-0f3d-4eb8-b26e-c6e7fc0dab7d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e80fbd37-7c44-485d-bda6-192bc3a4a390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe8279a-6379-4eb8-bab6-6241030a858d",
        "cursor": {
          "ref": "a15ea8ae-341c-474f-ada0-587b05ed1866",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "84012846-fd9b-4470-934c-ed328729c7f2"
        },
        "item": {
          "id": "efe8279a-6379-4eb8-bab6-6241030a858d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2375ff39-671a-410c-872f-f5053aade605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347b33bf-d5bc-46f1-a03b-699208828631",
        "cursor": {
          "ref": "daeaa5d6-eb4f-4b9a-a29c-908e6f8bb30e",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0660df87-32fd-4f53-888e-a7ca1a25fae8"
        },
        "item": {
          "id": "347b33bf-d5bc-46f1-a03b-699208828631",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "eff731f5-35cd-499a-b274-df13e538815d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67378052-e788-416a-9b3f-d021c3126938",
        "cursor": {
          "ref": "b358795b-3fda-4f65-8e5a-5c02dc87145e",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "98c51fd0-24f2-47e6-b258-e4b7b2cd3d2b"
        },
        "item": {
          "id": "67378052-e788-416a-9b3f-d021c3126938",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "384993c0-f1b8-479f-8e1a-4498a657d6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17e9770-14b2-4357-8836-c46622a5988f",
        "cursor": {
          "ref": "385d9410-35ce-4c48-b599-623eb77b3611",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a03d0048-5389-4cd7-9242-7423aea0cda2"
        },
        "item": {
          "id": "f17e9770-14b2-4357-8836-c46622a5988f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "42c302ce-0512-4a8e-8488-d3c35af8313c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0fd674-32c6-4259-a47b-07ba51a69f99",
        "cursor": {
          "ref": "802eddc5-281c-403b-8e89-39aa3e238157",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1d6b3bf6-3f3e-4f05-be93-127bd2e66455"
        },
        "item": {
          "id": "3f0fd674-32c6-4259-a47b-07ba51a69f99",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "eec04e85-88f8-4066-b674-68a342081158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3388005-de5b-4ba0-be21-c7e340713da8",
        "cursor": {
          "ref": "0e2fca83-8e8f-44cc-b546-eb7bd701bab7",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "32f64b4e-ad16-4c15-9673-0c6d171830bc"
        },
        "item": {
          "id": "c3388005-de5b-4ba0-be21-c7e340713da8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "201a4cd9-b984-48f7-b470-7774856a6c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1cf76b-2d9e-4f68-b52e-72d0c5a681d5",
        "cursor": {
          "ref": "ef1e41a9-c260-48d0-8f0a-6ef8c6c46b46",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bf01a877-a666-4e4b-b216-cc552aa9d979"
        },
        "item": {
          "id": "ff1cf76b-2d9e-4f68-b52e-72d0c5a681d5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a7a19bc1-493a-462f-a514-c6221c66e682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c359be1-f4c5-4c91-893b-b57e5eb8d0d9",
        "cursor": {
          "ref": "9cdafecf-f400-4466-b3b8-31169a79f896",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ba62c7a1-6220-4805-85dd-eed328825e96"
        },
        "item": {
          "id": "7c359be1-f4c5-4c91-893b-b57e5eb8d0d9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "dfe86513-f86a-4d3c-af01-685fbcfa90d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b67e74-e6f0-4b4a-82e9-dab294d6a616",
        "cursor": {
          "ref": "b5443e88-0240-407d-bd9b-6a7d2bbc3692",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8595f8fd-fd4d-4b61-b6f4-db0c31d02120"
        },
        "item": {
          "id": "f7b67e74-e6f0-4b4a-82e9-dab294d6a616",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ee302bfe-55f4-460b-a3bd-88d60dd2b2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b642ff-b898-4482-a0dd-ec27329c58c5",
        "cursor": {
          "ref": "b523f255-8747-474e-93ce-14e30fd1a21d",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "df617131-ddf7-426f-8737-5326a72ddef2"
        },
        "item": {
          "id": "a7b642ff-b898-4482-a0dd-ec27329c58c5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "49e606c1-72cf-48e3-a0c8-6d00886b86fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de58f08-760c-4c2f-b1ab-d78cdb6329e7",
        "cursor": {
          "ref": "be3acf97-aeea-4bf4-8226-bc4d083df74b",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "09b3dabb-e3d7-4dfd-9da9-20aa73428ba8"
        },
        "item": {
          "id": "5de58f08-760c-4c2f-b1ab-d78cdb6329e7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6e30eb56-f36c-4de7-b14b-8bec5babc1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c1b0a2-6ebd-4127-8cab-89cee2451fa0",
        "cursor": {
          "ref": "6c116ce2-6370-4c99-9bc1-4d410b44462d",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0afac28c-2eec-4060-8b49-7c4a59cc9964"
        },
        "item": {
          "id": "91c1b0a2-6ebd-4127-8cab-89cee2451fa0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "199eebd5-be3b-4b90-8ee2-0b16939394ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf72b93-ed6f-4c4f-a01a-f697ad31bf9f",
        "cursor": {
          "ref": "b4801af1-6a61-41bd-8f12-96b5b5cbe6eb",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "956d7708-2197-4a37-8a29-7055fed98f39"
        },
        "item": {
          "id": "fbf72b93-ed6f-4c4f-a01a-f697ad31bf9f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e2f1a11c-2da3-4d72-a34c-7752a01b11dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a40173-b9a6-47fc-838f-fce9b0b5caf8",
        "cursor": {
          "ref": "f2604989-6060-47b9-b7f0-662169ec03c2",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ea642aae-a4e9-4c98-9609-d4dfaa8dc6fa"
        },
        "item": {
          "id": "11a40173-b9a6-47fc-838f-fce9b0b5caf8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ed85e3d1-cec1-4130-af2f-4630e2b70e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4604952-5459-4c64-a2aa-04d24cd26779",
        "cursor": {
          "ref": "99420dbe-bac3-4393-b4cf-021f62f4e09c",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e724551a-8ba2-4bd2-a080-d26294f5b008"
        },
        "item": {
          "id": "b4604952-5459-4c64-a2aa-04d24cd26779",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "16f7b263-9854-409b-a38d-4214dd2b6436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417f29f4-1395-4b67-a7d8-e2d5d8911a13",
        "cursor": {
          "ref": "4080d7cb-82a7-4c7c-948e-1c59cd0c017d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "96014c16-6ae5-4ead-89fd-15f0732023a9"
        },
        "item": {
          "id": "417f29f4-1395-4b67-a7d8-e2d5d8911a13",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "dfbc826f-b7c1-478a-9bf4-de2e1d646e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2594e684-75bb-45a2-a750-17ad55818d70",
        "cursor": {
          "ref": "f45fcfbd-9abf-4fa0-9422-1ada27efbd53",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7f4ba5cb-2e5f-425a-9567-f36e67b92c69"
        },
        "item": {
          "id": "2594e684-75bb-45a2-a750-17ad55818d70",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9fe7129e-e7f3-4a63-a8bc-df8f0175bffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5ec4c2-4aae-4fe7-a1c9-346d723912f3",
        "cursor": {
          "ref": "c5ffd1d7-ef93-4823-aab9-79699deaa816",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d7ee8b7d-6afe-4d6c-9b4a-c34f7d0c826c"
        },
        "item": {
          "id": "7f5ec4c2-4aae-4fe7-a1c9-346d723912f3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8fc8b2df-a960-40f8-a8e5-d8cb17608c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2c342d-84ba-4dc9-992d-8925f278b4b6",
        "cursor": {
          "ref": "efd8632b-dd50-43fb-b51b-a717a5af8ffc",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1e420027-bd11-4d26-a109-e0dbfca091ca"
        },
        "item": {
          "id": "8c2c342d-84ba-4dc9-992d-8925f278b4b6",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e87a6e95-ab24-4630-9185-a16dc25e8bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fe4ca5-1f8e-4dc9-9445-1490ae2b3da4",
        "cursor": {
          "ref": "dee1575d-3269-4bd3-88c1-87b34414879e",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4951ad20-a0b6-4e0a-9286-a37a42dea021"
        },
        "item": {
          "id": "30fe4ca5-1f8e-4dc9-9445-1490ae2b3da4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3020ded4-3f0f-44ca-9730-c3fba3e09148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f487298b-9af4-48e7-807d-bf573015874e",
        "cursor": {
          "ref": "0d8d60d6-e91a-49bc-87d5-00b6f44ca68f",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d0a79c2b-e63d-4b9d-96bc-0eae039ee429"
        },
        "item": {
          "id": "f487298b-9af4-48e7-807d-bf573015874e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5df312aa-347d-4052-bb5f-11a7d56770a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc6b4b8-49e6-480a-a841-a3fb3b2f754c",
        "cursor": {
          "ref": "ac9200e5-f0c9-4e7c-acfb-9b3c3afb7e49",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9a93de3c-3ca1-4b09-8a3b-9c2fa1df3677"
        },
        "item": {
          "id": "acc6b4b8-49e6-480a-a841-a3fb3b2f754c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3c160daf-8bbf-4ecc-b11e-45d62e883f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c505db2a-ead3-4052-a068-ded75483b9ec",
        "cursor": {
          "ref": "18122f1a-b8c2-4c79-974b-72247d0efe9b",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f6bb56df-03f0-4fc2-bf5f-0534cd13200a"
        },
        "item": {
          "id": "c505db2a-ead3-4052-a068-ded75483b9ec",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "625363fd-ba51-4980-8290-2510f5f076b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b58978b-5a48-4ef0-90e0-a8ec474f92c0",
        "cursor": {
          "ref": "b1bfaa38-6b9a-427b-a9e1-08c05ca618fe",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c4721f2f-2bfd-4fed-bcfa-9453e9107c71"
        },
        "item": {
          "id": "3b58978b-5a48-4ef0-90e0-a8ec474f92c0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c20594ec-9da7-47d2-ada8-e7204cbea67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb745478-ed93-4ecb-8a83-bdbfcd1e6226",
        "cursor": {
          "ref": "5b838b29-8ca2-4b6a-8ac5-6812fc89f05b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2067f1d2-2ddf-409a-b917-02c42bd1c2f1"
        },
        "item": {
          "id": "cb745478-ed93-4ecb-8a83-bdbfcd1e6226",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "65c94486-160f-422c-9ba6-411df2c99f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef9e456-9901-42e0-926f-fb8959c726cf",
        "cursor": {
          "ref": "1cb80d43-b401-4c9d-8d44-966c89b54282",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "39d5e3cb-5236-4ba4-a944-eccfdf2ef09f"
        },
        "item": {
          "id": "aef9e456-9901-42e0-926f-fb8959c726cf",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0d60faf7-85cc-49bb-bafd-f4b09d2016d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e18c0b-6071-4550-9124-c2b5cf6c5dda",
        "cursor": {
          "ref": "7b75e4c8-b034-4be7-b14e-7a06593702e3",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7a3c63c4-6cce-4d18-98cb-78b7eaf6aeaf"
        },
        "item": {
          "id": "88e18c0b-6071-4550-9124-c2b5cf6c5dda",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "68c99456-6732-4cd4-9cba-29801f0798b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bb4421-5625-4452-9fad-5d92ac729e8f",
        "cursor": {
          "ref": "6497f553-ee9b-4990-9a0f-6199c05edf6c",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ef5ee486-bd77-494a-a912-6317782ac32c"
        },
        "item": {
          "id": "d8bb4421-5625-4452-9fad-5d92ac729e8f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2204064a-3b0e-438d-9f62-a11271c16e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c91edc-aef4-44a1-9450-8f74151a9407",
        "cursor": {
          "ref": "f91ec7d5-5fab-4d4f-ad0a-208bd4cd2025",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b959040f-4d92-4b26-8943-9bfeed2dbd66"
        },
        "item": {
          "id": "50c91edc-aef4-44a1-9450-8f74151a9407",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ebce14c4-26cf-4812-89d8-6f7a29ed609d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7898eb26-3c7c-4cff-ac16-8d40a7cbfbe6",
        "cursor": {
          "ref": "1510548d-d49c-410f-aeb7-2a89768408aa",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "28c8c9df-2692-4836-8d1d-7e5c2a9287ec"
        },
        "item": {
          "id": "7898eb26-3c7c-4cff-ac16-8d40a7cbfbe6",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4d8edde6-db6f-4826-811f-cef53c6400fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e3387a-af80-4576-b809-eb8cea64598e",
        "cursor": {
          "ref": "111ccf6f-27d3-4aa2-9ead-34d631b0d90d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "16d7402c-e635-471c-971d-7afb42fb9af0"
        },
        "item": {
          "id": "82e3387a-af80-4576-b809-eb8cea64598e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "79122019-477d-4ca1-946c-1664888774e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4911944d-edf0-4fe2-b8da-e7fac8017d46",
        "cursor": {
          "ref": "bac3a78f-af74-4e51-b74c-83ab131dbc28",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fc77d216-072a-43c1-b812-bab0a5bca9d1"
        },
        "item": {
          "id": "4911944d-edf0-4fe2-b8da-e7fac8017d46",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "70fc53f8-7f3b-427e-b4bb-8e5adb94abed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5074758d-babd-468d-9892-18f78061b9ae",
        "cursor": {
          "ref": "d14174da-6ce8-443d-b5dd-fbba6781a297",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3f67f669-58d2-4517-91b7-7f28a2ed49bf"
        },
        "item": {
          "id": "5074758d-babd-468d-9892-18f78061b9ae",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "66403a20-5cfb-403a-837d-4abdf68f8edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75702c25-a0a0-4df5-a0f4-e84873ac5e82",
        "cursor": {
          "ref": "1d1516f4-92d5-40a2-af30-75fc046a7426",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a3f0e031-4561-4e8c-93f7-48cc6fdb203f"
        },
        "item": {
          "id": "75702c25-a0a0-4df5-a0f4-e84873ac5e82",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ecb2f7c1-c424-4a1b-b54c-be6cf28f5b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df07d68-a85c-40dd-9dfb-a1a6b993ef3e",
        "cursor": {
          "ref": "3c3a9f87-70a9-4e17-93ab-1ce91a930c72",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e8c6493c-ca15-4e39-a492-22432e446872"
        },
        "item": {
          "id": "5df07d68-a85c-40dd-9dfb-a1a6b993ef3e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a3758d12-3722-4aae-b7e9-5fe7e621ad8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35613ab8-0f5b-42ee-a283-d675d76638f6",
        "cursor": {
          "ref": "5af66c36-e164-42aa-b812-fe9b6bb8df47",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "867e9888-cbd7-483e-91a4-e4eb14332a39"
        },
        "item": {
          "id": "35613ab8-0f5b-42ee-a283-d675d76638f6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "50190528-e0c4-4e3c-9e26-fc112acd84b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf03e4cc-257c-4a57-907b-e17b891a668c",
        "cursor": {
          "ref": "7b1a0aeb-2427-43ef-a769-fbc0c7359234",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ba09af74-8ab6-417d-85b9-c02ab049b62b"
        },
        "item": {
          "id": "cf03e4cc-257c-4a57-907b-e17b891a668c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4263fbb1-3958-4af2-b659-d5c12af6f8e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8801382d-862e-459d-86b8-649327aa77ad",
        "cursor": {
          "ref": "39f013c1-1c1d-4a76-8589-71fb7ee58c4d",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1d0ff400-1691-42fa-aab3-61171b17d538"
        },
        "item": {
          "id": "8801382d-862e-459d-86b8-649327aa77ad",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9889d826-4f0f-4d67-bb8c-47754f2ff935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ae2f76-3502-477d-8cd3-c39ed2592e0e",
        "cursor": {
          "ref": "052c0d42-26d7-4a0d-9e0f-ae30fd9e6d98",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "76b8b79c-7f99-4c8a-b68b-7251ad950a80"
        },
        "item": {
          "id": "a5ae2f76-3502-477d-8cd3-c39ed2592e0e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3c2e811c-9ae6-40a1-8075-70e9ddefa70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb7e8a4-ff92-45a7-bb16-ff600db583b9",
        "cursor": {
          "ref": "1d01a9a0-a255-4917-9ab0-0945a6ca74e1",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "67027e74-ee5b-42e5-84a2-83d735833dcc"
        },
        "item": {
          "id": "2bb7e8a4-ff92-45a7-bb16-ff600db583b9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1b71d663-d0d5-488c-9cbe-e3e759d98237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19895d8-0157-4b48-b2a3-0ad9a2b508b9",
        "cursor": {
          "ref": "c7705211-25b1-4c8b-ac5e-c3c376492154",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9f0c6e97-5951-4b7e-811f-5f6c112265fe"
        },
        "item": {
          "id": "e19895d8-0157-4b48-b2a3-0ad9a2b508b9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d460ac77-99b1-4a6f-bdbf-547bb8f90c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118a89c3-503b-4f72-acaf-057ca26029ed",
        "cursor": {
          "ref": "410c289d-58eb-475e-8ae3-3d88afeb650c",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d1d731cb-aa75-42f4-8e70-5089221b9e77"
        },
        "item": {
          "id": "118a89c3-503b-4f72-acaf-057ca26029ed",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a01f324a-63ae-4818-9d1b-fe70c5357eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6192a3c-6fa9-4953-8229-2bbf78d7be12",
        "cursor": {
          "ref": "afde4468-a6dd-4f90-9dd9-5271c57b56ef",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e6ee22ca-8a06-41ca-a3c2-784546474fd0"
        },
        "item": {
          "id": "b6192a3c-6fa9-4953-8229-2bbf78d7be12",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8000ad04-df88-4f6e-872f-884e11a96d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ede1a8-ce44-4d16-a993-b4dfe33aa436",
        "cursor": {
          "ref": "7dba593e-7d5b-40c4-97b7-c32933c89666",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c126e70c-96c6-4a7e-be44-9c27c1c55a9b"
        },
        "item": {
          "id": "28ede1a8-ce44-4d16-a993-b4dfe33aa436",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ea7b06cd-adfc-4628-bdc7-51039b04c462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bcc57d-cec8-4eb8-8a3e-4f03fc93d0b8",
        "cursor": {
          "ref": "9fbdf22a-dedf-45ec-a8c7-27ce6742602f",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "415030e4-2c54-4f6a-bc59-5bece432b431"
        },
        "item": {
          "id": "98bcc57d-cec8-4eb8-8a3e-4f03fc93d0b8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "87295083-6a28-4cc6-af00-da241ef5d5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e66c602-e773-496b-9c47-199bed822a17",
        "cursor": {
          "ref": "5659cf8d-e746-4ec9-bd68-9695e6cf9546",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "10aa9ea7-7588-439e-8b02-45f17399769a"
        },
        "item": {
          "id": "6e66c602-e773-496b-9c47-199bed822a17",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6b3b149b-f580-48ca-8688-a8df167dfb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfdd0ea-e97c-4f43-b630-f0423c468ea1",
        "cursor": {
          "ref": "6286921b-4e40-4192-9a36-26c278d3d3b9",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9103a395-5db4-4eaa-a113-605b1ee0f479"
        },
        "item": {
          "id": "4bfdd0ea-e97c-4f43-b630-f0423c468ea1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5982ad84-7b14-4f33-9243-83c82657056f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e391d84b-716c-4dc7-b6fd-a83dc1b9dd65",
        "cursor": {
          "ref": "fa1febda-aba6-49fc-9970-61d3b656c2c9",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2a87eb60-2321-49ca-8859-0ee0ab91aab6"
        },
        "item": {
          "id": "e391d84b-716c-4dc7-b6fd-a83dc1b9dd65",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "26457ee7-1d54-4020-bd3d-2b60fb17d2a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6620e5f2-4174-4fcd-85b2-56fc68d3346d",
        "cursor": {
          "ref": "3578d524-9b41-4670-b3cb-e132e7f18736",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e8d5df9f-64be-489d-b5dc-fd76aa701973"
        },
        "item": {
          "id": "6620e5f2-4174-4fcd-85b2-56fc68d3346d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f581279e-8b72-4cfd-a28d-ccd5ecb454f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f1f1b9-fbed-4686-86a4-2e6b09df3ee2",
        "cursor": {
          "ref": "edc4b635-dc53-423c-9235-16abd29b511d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6a4cdaed-6a2a-4da8-82b4-cf98079cb51f"
        },
        "item": {
          "id": "88f1f1b9-fbed-4686-86a4-2e6b09df3ee2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "93428930-b958-4ceb-b3a1-66f395a4dc86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f298240-5c9b-4dc8-ab4b-61d6700d30a8",
        "cursor": {
          "ref": "0a4cc46d-25af-4e98-b08d-60ef65523eaa",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "98c99cc3-ed2b-49cb-b815-fcbac5dcfeb1"
        },
        "item": {
          "id": "0f298240-5c9b-4dc8-ab4b-61d6700d30a8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9cf37cd9-687d-4b95-a104-e1e87ad2b604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8734d09-a67a-4bd9-94e8-98ea21b934f5",
        "cursor": {
          "ref": "3f9c82a4-2329-46f4-9f65-ad1482540f5f",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d2a6e7ab-c0e1-4f48-bb53-3b9e9be80d4d"
        },
        "item": {
          "id": "a8734d09-a67a-4bd9-94e8-98ea21b934f5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7862ab6a-03d0-449d-a74c-765b1a078b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc33a2a3-e0b5-4d67-8ffb-b77c850a1360",
        "cursor": {
          "ref": "3ffbf8a8-f3af-4a28-a430-c5880054b519",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e6b655fe-13c2-4e5e-9839-08d7ef258926"
        },
        "item": {
          "id": "dc33a2a3-e0b5-4d67-8ffb-b77c850a1360",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6e7766ad-3078-4b1f-bbe1-36509e0fb11e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ef53b4-463d-410b-85bd-bb41d5a7df80",
        "cursor": {
          "ref": "0f688611-b327-4e29-994c-65eb549816f7",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d0f56b7c-14bb-485b-9758-dc3bbe1d75ff"
        },
        "item": {
          "id": "44ef53b4-463d-410b-85bd-bb41d5a7df80",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d32e04bc-b1d7-47cd-9bb1-d3227a270ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462fb2e0-852c-43fe-9eb0-09574e7f4e73",
        "cursor": {
          "ref": "a1988dfb-6d69-4037-8323-78d3bfbe00ff",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3c0a7ac5-12d7-4857-8b7f-9b7b33008510"
        },
        "item": {
          "id": "462fb2e0-852c-43fe-9eb0-09574e7f4e73",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3f95cdf8-e878-47a4-b4ca-1ecfa5a4c939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edd2127-5a69-4baa-95ae-ca344b000032",
        "cursor": {
          "ref": "9d065962-4d22-4d8b-a2b8-940a5c98d336",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1421850e-3458-4c5f-b5e7-fd64c29f528d"
        },
        "item": {
          "id": "3edd2127-5a69-4baa-95ae-ca344b000032",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "385d638f-6dbb-4bbf-be15-75cba269f4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a4442a-46e3-4d46-beb6-aefb2e00f5a0",
        "cursor": {
          "ref": "807c80aa-758b-4b07-9d41-1d369ee5b07b",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4292acf5-f3ac-4290-8ce4-d579df913788"
        },
        "item": {
          "id": "89a4442a-46e3-4d46-beb6-aefb2e00f5a0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "68c02456-e119-43e1-9345-a85e8507965a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27e153d-8c5b-47d4-88c5-076b88fb72dd",
        "cursor": {
          "ref": "dc65ff27-c83b-4c0f-a2ea-2c5990a63952",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8fdfb957-1550-46ff-be60-982002401d4d"
        },
        "item": {
          "id": "f27e153d-8c5b-47d4-88c5-076b88fb72dd",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4ee58915-e68a-4024-addb-4b1770b084ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7555fc9-46b7-4a42-918c-b0ec7d89e804",
        "cursor": {
          "ref": "3f0f2681-9989-4591-90a0-57e83a98543c",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "eb6f3e98-d813-473a-b616-b5d82d8aff99"
        },
        "item": {
          "id": "a7555fc9-46b7-4a42-918c-b0ec7d89e804",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "80ad2c21-d0e9-4d0f-afcc-facf073238f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a53400-8799-44ec-a69b-ed042bfa0221",
        "cursor": {
          "ref": "5a14eb47-964d-4542-ace6-a38c94a2765e",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "178d26d0-52f7-4471-883b-c87fed333c78"
        },
        "item": {
          "id": "03a53400-8799-44ec-a69b-ed042bfa0221",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3b570e05-8ba6-454a-b061-3edf3c622af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d5ce66-7051-4b9d-909e-fc04a919d0f0",
        "cursor": {
          "ref": "9a6105d9-850c-46c2-97ad-c1a76ca7be7d",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "72e2dfa6-45df-4686-b253-e0f63c377ec3"
        },
        "item": {
          "id": "10d5ce66-7051-4b9d-909e-fc04a919d0f0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "686182a5-33fa-4510-9298-5ebc24ff96c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99fa7f7c-9b15-4251-8261-f5bc65a6b705",
        "cursor": {
          "ref": "23657ad0-0459-4086-af47-d5445365728c",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8634a00d-0b96-4740-b918-60c109993eba"
        },
        "item": {
          "id": "99fa7f7c-9b15-4251-8261-f5bc65a6b705",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6e3f5aee-02f5-4f1f-b3c9-0f7d78c72d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8710619b-f7ff-49dc-a11b-c599a6f0c117",
        "cursor": {
          "ref": "c887b289-096c-48a0-ab71-284976be2ee7",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "30d9a852-11b0-4feb-b359-1c69621549bb"
        },
        "item": {
          "id": "8710619b-f7ff-49dc-a11b-c599a6f0c117",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "01bb84cf-2185-4e18-b3c2-0c7dc9a4d5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9ee6ba-b926-46e6-8703-5c2b801775a3",
        "cursor": {
          "ref": "1a468ecb-b77c-4265-a9bd-1baa73f8ca70",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fe78ceaf-670d-4e0e-9ca6-69e27d060835"
        },
        "item": {
          "id": "7d9ee6ba-b926-46e6-8703-5c2b801775a3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6fde2fba-be68-475c-b334-f440880116bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b1c06b-f0c2-4c1d-b9e6-01f79bcfe40b",
        "cursor": {
          "ref": "e7c1765c-e8ec-4a7a-9b59-ddd77de2ca29",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "218be096-f19b-4184-bd62-d57e915242fa"
        },
        "item": {
          "id": "e3b1c06b-f0c2-4c1d-b9e6-01f79bcfe40b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "16fdda15-aa1f-416c-97e9-956deba1f7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4baf06-dda3-431a-b9a6-3ea94bc348c0",
        "cursor": {
          "ref": "9fada999-5467-4eea-8d12-6b10741c2bb9",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "61dbd428-a24b-4ce5-84b8-5d8142c9dfaf"
        },
        "item": {
          "id": "5f4baf06-dda3-431a-b9a6-3ea94bc348c0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "972ef8e3-09f5-4987-89e0-266ce7ae7abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522f6f1c-2141-4f27-b082-3c821442288e",
        "cursor": {
          "ref": "a525f388-1424-47a4-ad40-a544630d1e16",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "58134740-cb50-4cb2-a966-3bea37ba9e4f"
        },
        "item": {
          "id": "522f6f1c-2141-4f27-b082-3c821442288e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "bb6a0d50-5122-4560-8f66-4d6d41a853de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6999f86-3e93-4c98-a6c8-6827e7440734",
        "cursor": {
          "ref": "e605a038-3562-4379-9adc-1e5db3c74438",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5efc296d-8156-4c93-a331-f09943447034"
        },
        "item": {
          "id": "a6999f86-3e93-4c98-a6c8-6827e7440734",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "dffbe38a-c365-4d4f-8845-31aa445cedbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9b911e2c-b866-422d-a9d3-999d791331cb",
        "cursor": {
          "ref": "bed127d0-cadd-40df-923a-97c5e511463f",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3772b768-cb1b-439f-a920-07e4527a66fb"
        },
        "item": {
          "id": "9b911e2c-b866-422d-a9d3-999d791331cb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "52bfe68f-5f39-4200-90be-39855b359338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "a179e9e3-1a9c-4474-adf2-8b8ddcc3f6f8",
        "cursor": {
          "ref": "42d33cc3-fb6c-45f1-82d9-087c2ed171f1",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1d666836-e8ca-4c76-9f53-c37897ee02e4"
        },
        "item": {
          "id": "a179e9e3-1a9c-4474-adf2-8b8ddcc3f6f8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "975d99f6-a9d3-4b28-a579-2104ed96fdd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "3b89c0d4-225e-493b-b014-904ad5e14ea2",
        "cursor": {
          "ref": "4a63484d-6c87-4c1e-90a5-e01469e43b4c",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e8d287d4-31c0-4fff-aed3-e13d3c24384d"
        },
        "item": {
          "id": "3b89c0d4-225e-493b-b014-904ad5e14ea2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "353d02b9-8357-435e-a5fe-d26acde8119f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "84711f9d-9aba-4ebc-8eb0-a8ce5ba517e2",
        "cursor": {
          "ref": "8ac78dab-9d58-46d9-b714-86fc17bc1ecc",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bdca38a2-2d8d-4305-9d0e-12df9ef75a4c"
        },
        "item": {
          "id": "84711f9d-9aba-4ebc-8eb0-a8ce5ba517e2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ab41b9e0-087b-49e8-b967-ddb89738d03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "3cabf258-48d0-4c5f-ad2e-c135ca035f71",
        "cursor": {
          "ref": "d780493e-a2ab-416f-b8f9-bdca0fee21a8",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ff9caa2d-ec50-450e-8b6c-518d2c50f7be"
        },
        "item": {
          "id": "3cabf258-48d0-4c5f-ad2e-c135ca035f71",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "93d4ade0-b736-45a8-80a7-7fa1ab9ed7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4fdbebc2-5b80-4ce1-8c21-7e8c9878c4b4",
        "cursor": {
          "ref": "4a53cbdf-6180-45d6-a21c-010ceec17c98",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0b4d8568-7775-4fc9-a429-f7e387d32d94"
        },
        "item": {
          "id": "4fdbebc2-5b80-4ce1-8c21-7e8c9878c4b4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cafb93b2-7573-4a9d-8453-080429291b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c62a1719-06c6-442a-bb6e-e1e701fa6984",
        "cursor": {
          "ref": "761b67fb-fc13-4fc0-83e0-4fc2c0f518df",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "64edb04b-096b-4268-b3a2-3c53d9125177"
        },
        "item": {
          "id": "c62a1719-06c6-442a-bb6e-e1e701fa6984",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "eb2d025b-5a72-4301-bb60-1027846ad1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786eba68-954f-4165-ba0a-ba569e3ba1ff",
        "cursor": {
          "ref": "ff2751c6-c525-45fa-be8a-e6a7bf636807",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0434134b-1654-4a50-8a06-f4495bbc4732"
        },
        "item": {
          "id": "786eba68-954f-4165-ba0a-ba569e3ba1ff",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f904a842-249f-43cd-abb6-34c103441796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dabfe47-d13c-40b8-8059-dfea89bb17e6",
        "cursor": {
          "ref": "64391618-eceb-4bcc-b695-d8dbc035333e",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "945d523c-aafb-4edb-baf1-418aa682866d"
        },
        "item": {
          "id": "6dabfe47-d13c-40b8-8059-dfea89bb17e6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "98564d92-b5d0-4793-b75f-0c43c8866c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caafb258-685e-46ea-87af-61e96a2b4eee",
        "cursor": {
          "ref": "bc4f3556-291d-4d37-ae8d-d7a228864581",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "59f9a989-df2d-487d-b633-46b7002207ef"
        },
        "item": {
          "id": "caafb258-685e-46ea-87af-61e96a2b4eee",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "32363a11-7b6b-4e71-a0cb-b05e4cca9e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3f3365-8f13-4a73-9dd3-15ad721edd14",
        "cursor": {
          "ref": "fed21f45-7d77-4154-ac6c-8a81b51d7555",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5bf00f3a-f22f-4b00-b049-2c6c3178c623"
        },
        "item": {
          "id": "1f3f3365-8f13-4a73-9dd3-15ad721edd14",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "66edf690-e615-4f6b-9cff-d883cecbfe3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0df9e3-500c-445b-b7ea-a0fc0df70bb1",
        "cursor": {
          "ref": "b7e8d5eb-9ab6-4123-b74c-1688b2fedaae",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ddb8f1bd-343e-44f5-a9ab-0d8875b8ef92"
        },
        "item": {
          "id": "7f0df9e3-500c-445b-b7ea-a0fc0df70bb1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "76591d1a-65c8-4962-8fc4-34d2ab744dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d028e93a-e646-4d43-9714-eddd4285a815",
        "cursor": {
          "ref": "b9a90502-ff5d-4b25-a083-159c7b9f010a",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f73e97b8-e4a1-4ce8-b63b-c23c964c3904"
        },
        "item": {
          "id": "d028e93a-e646-4d43-9714-eddd4285a815",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cbae3866-a96e-4cdb-8f86-437bef68e49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa1eee9-adf6-41e1-ad56-2cc1486c740e",
        "cursor": {
          "ref": "fa14e9b2-cda0-495b-bfb3-82544e8511de",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9866fe6a-ae9b-4282-b27d-a0277787c895"
        },
        "item": {
          "id": "baa1eee9-adf6-41e1-ad56-2cc1486c740e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "92735afa-211e-492f-a693-9789c043543c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faecc61d-95ea-4040-9b82-9b36cb015497",
        "cursor": {
          "ref": "7d6fa88d-deb4-4b27-baf2-8fc131b07132",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3f80f156-afbf-4780-a2fc-90ea03a5bde5"
        },
        "item": {
          "id": "faecc61d-95ea-4040-9b82-9b36cb015497",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f69c2149-4c9e-409f-9a56-7bf5ca9a7cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eae24f6-cabc-49c0-9a90-3a4ed265c6f4",
        "cursor": {
          "ref": "1590075f-2e0f-4950-a62c-7616984a2728",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e3704934-46f7-4d90-8296-8af981a6baa8"
        },
        "item": {
          "id": "8eae24f6-cabc-49c0-9a90-3a4ed265c6f4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b788e93e-458b-42cd-893c-bcc71d2a2b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd338a2-edf9-4fd8-a60d-e75011d1ce33",
        "cursor": {
          "ref": "cab5b6a0-8dcd-4f07-a78a-2009cb8dc0e6",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "36c1ae96-93bd-4bb2-9c18-5bae088e2d4e"
        },
        "item": {
          "id": "5dd338a2-edf9-4fd8-a60d-e75011d1ce33",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e659df10-b95a-4532-b74f-a784587b5f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8546d97c-e513-42de-88ef-f91337d7ba3d",
        "cursor": {
          "ref": "5b7e7485-18a3-4de4-83e6-511313d844a2",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a1b7be7d-dcc9-45fd-a027-9a47af93229a"
        },
        "item": {
          "id": "8546d97c-e513-42de-88ef-f91337d7ba3d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5e43005d-ab76-45a1-9745-8d85e6a49917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2b5ffc-4660-4baf-a1ec-528ebc1e86a2",
        "cursor": {
          "ref": "fc9aa526-ee49-47fd-a6eb-2ab679a3a910",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a7cf511b-e323-47c0-bc4a-9eac26dc64c3"
        },
        "item": {
          "id": "8a2b5ffc-4660-4baf-a1ec-528ebc1e86a2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4fa70dd4-873b-4e71-94ee-408484e76cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade60a1a-0efa-4a9e-9e0e-03aae53e3491",
        "cursor": {
          "ref": "734443b5-abb9-4ff9-9651-8dc313afdc36",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "bbb297ef-b4a9-4a9c-a436-0ea1e3611b1d"
        },
        "item": {
          "id": "ade60a1a-0efa-4a9e-9e0e-03aae53e3491",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fcf8344f-4b71-4d59-96ee-1ad42de103c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048a2f06-8c8a-4b79-98a1-bc7d05f7fdd8",
        "cursor": {
          "ref": "fb4d5014-c8c1-411e-84d4-7065b04ec82f",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "170fc559-49f7-45c3-a03c-064bb75402f8"
        },
        "item": {
          "id": "048a2f06-8c8a-4b79-98a1-bc7d05f7fdd8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e07722ef-fd20-46c2-9052-6c1fe9ba8e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109bfa54-597b-4e59-bf92-610be8a054b8",
        "cursor": {
          "ref": "95aa1175-d9a6-462f-96a5-9f1ede86ca10",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "de4bc4c2-025e-45e5-8bba-40d98db94fad"
        },
        "item": {
          "id": "109bfa54-597b-4e59-bf92-610be8a054b8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fc004efc-ea33-49c3-8c6f-c2bfd365f13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f569c0-b8af-4562-97a1-9785c88056fb",
        "cursor": {
          "ref": "55a3b3d9-c40b-482c-be5e-44920515ad00",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "712f7d43-ed13-41d0-a351-65eff7c1c157"
        },
        "item": {
          "id": "52f569c0-b8af-4562-97a1-9785c88056fb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c7f904c6-3a60-469e-b1fd-2aa4c85d06e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7710bc-63fd-4702-93d8-bf9219956ad0",
        "cursor": {
          "ref": "3e5ce97c-3109-4d48-8ba7-96408f9c0230",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5ede6b09-5249-4755-95ff-ab7f2e56a818"
        },
        "item": {
          "id": "cf7710bc-63fd-4702-93d8-bf9219956ad0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6996907f-7521-4a73-a48f-e0cf15acbd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6bf7a8-4ae2-47d5-a04f-fbf074a3697d",
        "cursor": {
          "ref": "a1ace46d-a5f7-4211-944f-2bcd8ee58ceb",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ba09c3b5-c96f-44a4-97d2-b285fcd3a454"
        },
        "item": {
          "id": "dd6bf7a8-4ae2-47d5-a04f-fbf074a3697d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9e519f5e-d5ad-4ad0-a741-6479c2d2497e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0409f6a0-342d-4295-b855-bd296dfd161a",
        "cursor": {
          "ref": "850df1bf-4a1d-4fd7-9b7a-3bfd0538cf90",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4088286d-c9be-4b6e-b4de-64fe450974b4"
        },
        "item": {
          "id": "0409f6a0-342d-4295-b855-bd296dfd161a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b02fbf72-c5ee-46b8-ac42-2be7fb047bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee254ac6-7841-48d7-936c-e19c507e3ae2",
        "cursor": {
          "ref": "02368470-8dc9-4a6f-a8ba-bf52e4737d71",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "977bc009-86ec-4756-87cc-3ef797d846a6"
        },
        "item": {
          "id": "ee254ac6-7841-48d7-936c-e19c507e3ae2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "088d0d3b-e251-46ea-b1ab-3886ffce581a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0b7bf2-c445-4f90-bd75-55a959e25392",
        "cursor": {
          "ref": "32cc63bb-c81b-4273-8730-c26c6f35c1ce",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "229aaeef-ae9b-447e-9476-b4c2032f6e10"
        },
        "item": {
          "id": "3d0b7bf2-c445-4f90-bd75-55a959e25392",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "14e8476d-e4b7-4c5c-b8d0-81f6ae4a4232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52dfe30c-6742-4134-9604-f16b39c745c6",
        "cursor": {
          "ref": "64e5088b-2f1d-4723-b522-1e220ff20ee5",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f990d4a4-5af3-42a8-9c12-9d1107bd9dd8"
        },
        "item": {
          "id": "52dfe30c-6742-4134-9604-f16b39c745c6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "008bb941-2812-4148-80a6-d7224d43dea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04da2217-8e24-43b1-8973-7cbcb97a3ad4",
        "cursor": {
          "ref": "97c1e0b0-a199-4383-8499-85436f6ee9cd",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "384d5746-0a87-4d8b-bfe1-397feb8cea01"
        },
        "item": {
          "id": "04da2217-8e24-43b1-8973-7cbcb97a3ad4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fb2e87b4-6e4a-458c-aece-066c6c4a6c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c9bb79-b63b-4555-96ea-592c3ffd60cb",
        "cursor": {
          "ref": "39d629ee-8a94-40c3-91fd-75eae12354dd",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e59883fa-5f32-4f02-b43e-a38a8927134b"
        },
        "item": {
          "id": "63c9bb79-b63b-4555-96ea-592c3ffd60cb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1f036520-6692-4a58-8710-f75cd9520433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49762f51-e48c-40f5-b756-4b595be4e246",
        "cursor": {
          "ref": "4ef375e4-f72e-479b-aba6-9c33ed60f32c",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0488f978-b871-4402-bbef-22a80e2001c7"
        },
        "item": {
          "id": "49762f51-e48c-40f5-b756-4b595be4e246",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "185d31a3-6688-4d00-aaa3-6e296bd530da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23a6220-a95a-4c4e-959b-1748097fb866",
        "cursor": {
          "ref": "d870b84f-71ab-4b19-8cb0-8a794f651179",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3bd49194-2f7d-447f-bac6-4b3b68afc9bf"
        },
        "item": {
          "id": "d23a6220-a95a-4c4e-959b-1748097fb866",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bed8949d-0577-4263-ab3b-3e35ea1941c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a646d3-8c61-4e22-ae5e-315dcf41c7d3",
        "cursor": {
          "ref": "2145f27e-302c-4bc2-a582-f96acb9ac65c",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "39e94d27-9985-49df-8fbc-ae22c0aea7c5"
        },
        "item": {
          "id": "a9a646d3-8c61-4e22-ae5e-315dcf41c7d3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bc6bd59e-27c5-482a-a1a6-934ed9c204b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876f8a3a-280c-48c3-a626-56475f665d53",
        "cursor": {
          "ref": "ef384086-b636-40ef-9cf0-bd9c58c348a1",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "23307d5d-0f8d-418f-9dc6-454813e996c8"
        },
        "item": {
          "id": "876f8a3a-280c-48c3-a626-56475f665d53",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "716a6072-fd18-4045-971c-9b2cc9809a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c905df88-9e0d-40f2-9d95-3b4f00b9495c",
        "cursor": {
          "ref": "24cf9a70-f149-465c-af97-98344f68b584",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "70650c2c-3f08-4eb1-8221-84a0c981b480"
        },
        "item": {
          "id": "c905df88-9e0d-40f2-9d95-3b4f00b9495c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c505b4bc-a10e-457a-bdf8-64f4ceaf09aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6baef86f-17a0-4203-b3d9-b9c0b1cea9af",
        "cursor": {
          "ref": "eba9f79d-15fa-4742-bca1-71c336b0be2e",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "48d67869-dcf3-44ed-93b1-fe9eee68390b"
        },
        "item": {
          "id": "6baef86f-17a0-4203-b3d9-b9c0b1cea9af",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ed43e3a2-0412-44a1-84d3-b449f5de95d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34537799-3313-4d25-b0ea-b2b5fe3c7c59",
        "cursor": {
          "ref": "861df959-5745-4e78-9ec1-e29fa86b815d",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0e4c79b8-a352-4d88-b771-8ad5e34a3e42"
        },
        "item": {
          "id": "34537799-3313-4d25-b0ea-b2b5fe3c7c59",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2bf21eb4-1987-44fe-a8f0-6b998571c749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2072eabd-d5a7-43e7-a72e-d34a6b966f83",
        "cursor": {
          "ref": "1a6a1ca8-7936-43ee-b1eb-40b7bf2492e4",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e4352aa9-794e-4164-bba1-52e2ccbe9842"
        },
        "item": {
          "id": "2072eabd-d5a7-43e7-a72e-d34a6b966f83",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8142e69f-2e6b-448f-80d6-9a13cea19bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff38aa1c-7bee-4601-a4a0-22705a2ba3b6",
        "cursor": {
          "ref": "c7ba8f78-b0b4-4c3a-b9bb-2eb08d94221e",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "141026e2-875b-496f-bb91-a2a33660a548"
        },
        "item": {
          "id": "ff38aa1c-7bee-4601-a4a0-22705a2ba3b6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "bf205743-51dc-4707-871e-68683439d937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa9c77a-d894-42fa-ba58-bc66ec4adb38",
        "cursor": {
          "ref": "b53c58c2-e517-4ce1-8747-c7247c6433fe",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e3f0ec0d-69a5-407c-83a4-72d2d123aa79"
        },
        "item": {
          "id": "5aa9c77a-d894-42fa-ba58-bc66ec4adb38",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c4b35b7d-874b-470f-8447-4cc611ddb26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa497f74-583f-45d2-918b-e5e1d269ca40",
        "cursor": {
          "ref": "4be54851-0551-4f0a-b388-25641e9ed4f8",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b4c2b392-812d-4e9a-b8d6-daa0781d3eab"
        },
        "item": {
          "id": "aa497f74-583f-45d2-918b-e5e1d269ca40",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4b9d2ac8-19a0-45ce-a91b-448ad6c46e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb815a27-3b6f-4365-bfd4-f96a33e38f0b",
        "cursor": {
          "ref": "8c7c53a9-0fe7-48d8-bf30-173bdefdf2e0",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "63608629-aed6-490f-9009-875bd447584b"
        },
        "item": {
          "id": "fb815a27-3b6f-4365-bfd4-f96a33e38f0b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "22f19085-699c-4a7a-973e-61163771ebe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635573f9-31ce-4c35-ad07-32abfeedcfbd",
        "cursor": {
          "ref": "e13fef82-29cb-4696-adbd-b77b102323dd",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b384a4db-41f3-45d3-812b-a287abfad704"
        },
        "item": {
          "id": "635573f9-31ce-4c35-ad07-32abfeedcfbd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "72debff8-d28b-48c1-a9a8-60d52637d688",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1844a47b-ee96-40e2-b6bf-d243b030e46e",
        "cursor": {
          "ref": "450e7936-0aab-4a14-b4ed-4fe1c4eda335",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fe605a0e-168f-475b-89f4-3005e45ad7bb"
        },
        "item": {
          "id": "1844a47b-ee96-40e2-b6bf-d243b030e46e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "007fbf10-fb36-46c1-b127-bd1fa0d2411b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14e2173-55fa-46fa-94e4-7f5753ec232b",
        "cursor": {
          "ref": "173892e0-d26a-4c4b-b181-d1afaa708909",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8a15f1ae-f8af-4282-944b-bb7fa0a13e4e"
        },
        "item": {
          "id": "d14e2173-55fa-46fa-94e4-7f5753ec232b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c1a836d6-d1aa-442b-84f6-98ef599bbb11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6e4ac9-69a2-4243-9d97-4c5c120f1a51",
        "cursor": {
          "ref": "e3769e10-43fb-4127-a4e2-a3c17a47c783",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1ab7fdff-3922-4347-abfe-e8c655595a07"
        },
        "item": {
          "id": "dc6e4ac9-69a2-4243-9d97-4c5c120f1a51",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "85a0d4a0-5a59-4b92-8fe6-fcd67b48a32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d591e3b-be18-4eb5-a196-86094f396c98",
        "cursor": {
          "ref": "a1e8b1d0-9fc0-4004-a2d9-724c4aa1d690",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3f6087fb-7ca6-4db6-ae50-22eb21bec3a5"
        },
        "item": {
          "id": "5d591e3b-be18-4eb5-a196-86094f396c98",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d7fff277-94d9-434a-9098-e0384a12594c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b601f19-eb61-4389-9021-4fb98c26d780",
        "cursor": {
          "ref": "7ad056f7-ba2a-431e-8f5c-dd54482c0668",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6cf23cda-d700-4a69-a3c1-26eee6c0e330"
        },
        "item": {
          "id": "4b601f19-eb61-4389-9021-4fb98c26d780",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "436b24d3-ec4c-4090-85e2-8175ce6bcd95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1ddda0-f2b7-41ed-8fad-4ba81cfefd3a",
        "cursor": {
          "ref": "59f0f3f6-776a-435d-bb4b-633d6828403e",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "90650567-f5d7-4ad9-921c-b5e494c023e9"
        },
        "item": {
          "id": "1b1ddda0-f2b7-41ed-8fad-4ba81cfefd3a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8cd52d88-42fa-4c7e-a453-800f436b5dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8579ab54-3a92-4d59-8f6d-8c20653fcbaa",
        "cursor": {
          "ref": "c26deca5-cd19-43fa-9d20-0bf45d2286d1",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "48c812c5-c25c-4ee9-acb6-38c21ed536c1"
        },
        "item": {
          "id": "8579ab54-3a92-4d59-8f6d-8c20653fcbaa",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6852bca8-94b1-4021-a628-61b8974b1bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c56bf79-57bf-4e65-a2df-673294bfe6b1",
        "cursor": {
          "ref": "0d19b9e4-87bd-48b7-aced-ada5dd77c77b",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "bddf9dfc-7012-49cf-8270-7e0dd0ec6d36"
        },
        "item": {
          "id": "5c56bf79-57bf-4e65-a2df-673294bfe6b1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "902ec06f-eeba-453b-ae1a-0f24c7aade2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78870fa-35b7-40c2-a63b-4260c66c852b",
        "cursor": {
          "ref": "dc8e16c3-3173-4231-a349-2882914022c1",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6d8eec5f-fdce-4aa4-997f-f36c35d4b067"
        },
        "item": {
          "id": "e78870fa-35b7-40c2-a63b-4260c66c852b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "29544c58-8c98-4c24-bb07-6825b5de187e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf99e21-d336-4f13-9d54-e7cca748477f",
        "cursor": {
          "ref": "64940e86-3388-4a1b-95f8-ef31ceb07120",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7b6499c3-4048-4ecc-acab-2df4adcc83ff"
        },
        "item": {
          "id": "bbf99e21-d336-4f13-9d54-e7cca748477f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8a84f293-3a14-43e8-b8ba-23b110bf1f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87858793-7e8a-4733-8d82-389d3b977437",
        "cursor": {
          "ref": "c066e1f6-417e-4b74-8dce-f9724d5accf5",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "78cf39ac-27a2-4f53-8060-814bdc06a0fc"
        },
        "item": {
          "id": "87858793-7e8a-4733-8d82-389d3b977437",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "418e3ab3-deff-4975-ab6a-83811fe7e79f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6a7262-4059-4d3b-ba0a-a685b13d9ba0",
        "cursor": {
          "ref": "b7695df5-8bf3-47f7-b602-152f0d0947a0",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "62500bab-3081-4184-b9f1-5ffb885835f5"
        },
        "item": {
          "id": "9b6a7262-4059-4d3b-ba0a-a685b13d9ba0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "326866ee-489e-4adc-be21-dcb5bc586719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408802ce-19e4-4c98-9577-4b7cfc787a69",
        "cursor": {
          "ref": "35ca3c67-ddcd-4f1d-af9f-40717bbd84fb",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "40f9eb05-a2ff-4edd-8a4d-9435088511d6"
        },
        "item": {
          "id": "408802ce-19e4-4c98-9577-4b7cfc787a69",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c18a28a1-b7fc-4717-a1b5-887eb5821d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b56f1a1-df28-4148-a2ba-7c84cc6a3222",
        "cursor": {
          "ref": "d1b0ae79-608a-4a76-a4a6-9bcc5e4ddf18",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f00c3fda-51a3-4716-8e4b-cf140833f413"
        },
        "item": {
          "id": "6b56f1a1-df28-4148-a2ba-7c84cc6a3222",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d321541d-530f-43c8-910e-6141407b1e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d442c2-4b32-400f-a689-aec959b100b6",
        "cursor": {
          "ref": "0ba69afa-ab85-48c4-97fa-bc29f031d04f",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "82655035-5303-4f13-a260-50b34e954509"
        },
        "item": {
          "id": "70d442c2-4b32-400f-a689-aec959b100b6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1767b1c8-5478-4629-8379-f38255f7a510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffbbb2a-2e71-4292-8680-d4756f25447f",
        "cursor": {
          "ref": "344e783d-c4dd-4007-ae75-a8c177994127",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f9aff5a8-adbc-4bfc-a11b-163d788802f7"
        },
        "item": {
          "id": "8ffbbb2a-2e71-4292-8680-d4756f25447f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d9a083ff-3b3e-4ff2-9bc9-1fc5c82df71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739b63c5-d869-447d-9c03-5e1e37249370",
        "cursor": {
          "ref": "51475a33-59e6-402c-bce5-9313da264f41",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7e5a16dc-74ed-4bfb-9a77-28f979063fef"
        },
        "item": {
          "id": "739b63c5-d869-447d-9c03-5e1e37249370",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e8f4ae59-318f-432b-9a8a-83ac1012070b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07367afb-4504-4fd6-9ed5-38127499d662",
        "cursor": {
          "ref": "7129ca5a-e3ad-441b-a9de-7459908d1dbf",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3f6cc756-984a-45f9-b1dd-21053f0ee05b"
        },
        "item": {
          "id": "07367afb-4504-4fd6-9ed5-38127499d662",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "74a4bfee-703d-4e0e-a75d-61016a0e76b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d126ec-694b-457a-8c72-ef630561dc02",
        "cursor": {
          "ref": "569f8d4f-958b-48d7-be6a-4f3936df16a4",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "65ed68e6-7e4d-4820-bb1b-99c14f381ba2"
        },
        "item": {
          "id": "e1d126ec-694b-457a-8c72-ef630561dc02",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d7fe5b98-c753-46ad-a653-224e4ddb82fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd693d28-6a8b-4903-ba34-e6eced718898",
        "cursor": {
          "ref": "97bdff75-eb01-4d67-a96b-2800dc77ab4e",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3c23d667-5dcf-43a0-82ef-fbea517b27bc"
        },
        "item": {
          "id": "dd693d28-6a8b-4903-ba34-e6eced718898",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8400854f-27e2-4afe-b3dc-97b3b0e54350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2b07a4-4260-476b-a343-acfa682ff2e8",
        "cursor": {
          "ref": "9d2cf343-6e1a-4157-a565-409148846c43",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5cc716a8-b2d1-4389-855c-208c0ba8e00b"
        },
        "item": {
          "id": "3d2b07a4-4260-476b-a343-acfa682ff2e8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "81e4d680-451c-46c6-8f84-64d65947f47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bf0f26-8d81-426a-8cc2-32280c64c987",
        "cursor": {
          "ref": "38ced211-acca-482f-89fc-b64c37f24a12",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b626f1e1-28dd-4bc3-a290-4bec81c6f548"
        },
        "item": {
          "id": "17bf0f26-8d81-426a-8cc2-32280c64c987",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f7cb3a69-f008-443f-b823-06777d38cf8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c70d200-736c-4351-b385-a71c192b076c",
        "cursor": {
          "ref": "a8d6bbfd-3d1c-461c-9a0e-7512fb59a3a3",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "dd779dd1-1dd4-485d-abfc-1b972d0726ba"
        },
        "item": {
          "id": "6c70d200-736c-4351-b385-a71c192b076c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "37fa4b59-9222-4701-a50c-eb64a115b398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16eb2c5d-0f3d-4ec4-9dfb-050ed0afe919",
        "cursor": {
          "ref": "3c3c427a-3fb1-4229-a316-230ea0fb1406",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8c555380-5ba7-400a-ae9d-b6954a53760d"
        },
        "item": {
          "id": "16eb2c5d-0f3d-4ec4-9dfb-050ed0afe919",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2c4a7100-3055-4a86-88e5-6be237a791cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b172b630-841c-4447-957b-07eaf232552c",
        "cursor": {
          "ref": "96ca6777-3726-41a7-a3fa-c5ef72bce09d",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d77e8f45-3a75-41c2-bd1e-907897762552"
        },
        "item": {
          "id": "b172b630-841c-4447-957b-07eaf232552c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7b689c68-d894-4941-baab-359c72013b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2bcb8c-25ae-4868-b117-936dd8b10599",
        "cursor": {
          "ref": "14f1b6c6-dc0e-4ab5-aecc-c6aa21631d10",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7db62247-f3d7-4d8d-82cf-11d115336952"
        },
        "item": {
          "id": "4b2bcb8c-25ae-4868-b117-936dd8b10599",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "020d6f66-534a-4e44-8ec2-c486bd28176d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ebb8ed-efc8-4d9c-9488-7451eb4cc446",
        "cursor": {
          "ref": "57bd7574-d68e-48a1-b235-b4de49753add",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ecf03439-ccb6-45b3-8c6e-bceee5899504"
        },
        "item": {
          "id": "b8ebb8ed-efc8-4d9c-9488-7451eb4cc446",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ad44c67f-368f-441c-a724-40c853fd2922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6aeee0-879b-4dcc-aeb4-92276734e386",
        "cursor": {
          "ref": "27df25bb-6106-4b7a-8da3-0dbee85661b2",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9ec1975a-922f-429e-a9e0-c9c060741a42"
        },
        "item": {
          "id": "7d6aeee0-879b-4dcc-aeb4-92276734e386",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "91c57e00-e4ec-46bd-b613-6551dec52c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b22963d-8943-43d8-ac4b-d3d694aeb4b7",
        "cursor": {
          "ref": "6185bef7-781f-4bed-92ca-dcc0f7845f88",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c74aa5aa-c7a5-4981-b28b-03df74594cd5"
        },
        "item": {
          "id": "4b22963d-8943-43d8-ac4b-d3d694aeb4b7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "125cf602-9277-4629-87f4-cc4a038408d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771d6584-7bac-4cb4-be4a-cce7d249b134",
        "cursor": {
          "ref": "f1b4c9af-7f75-4094-b173-2e61d055c0e8",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "bd64defa-f15b-4f55-b971-4b8461fc7d04"
        },
        "item": {
          "id": "771d6584-7bac-4cb4-be4a-cce7d249b134",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "37b17518-4e61-40e9-930b-208919ade228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afe583b-e4c7-4b5c-9112-a242b312f510",
        "cursor": {
          "ref": "b693aa5d-5e8a-43ce-bf01-70bc942e5ece",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "32663b3b-6982-463d-84c8-ec71333a6325"
        },
        "item": {
          "id": "2afe583b-e4c7-4b5c-9112-a242b312f510",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e51ac5cc-2104-4c30-9b71-9f9f9675babc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7285dc-c388-4347-ac4a-528309e63e6b",
        "cursor": {
          "ref": "4ffbfa78-1f25-43f4-aa6d-1ad10cff39c9",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e9d20115-7b55-4578-b598-d81a202fed72"
        },
        "item": {
          "id": "7d7285dc-c388-4347-ac4a-528309e63e6b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "196190e8-60d5-4180-b2e7-838ca09eca80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a9eaaf-ce93-4541-a462-df7eb66a69a9",
        "cursor": {
          "ref": "572cf90f-2100-4056-b590-a8cdc50282f7",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "aaaa5503-3460-4638-8c53-fe4b50f4263d"
        },
        "item": {
          "id": "56a9eaaf-ce93-4541-a462-df7eb66a69a9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f3fd1e16-e99e-4276-b956-c8ed98b1e8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44a7071-2a00-4ef6-83e4-13e374665d80",
        "cursor": {
          "ref": "510dee33-9e91-41cc-85bd-25aac39c4aa2",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "769ef5ac-dc2e-4ff5-a86c-b2907656c9f0"
        },
        "item": {
          "id": "e44a7071-2a00-4ef6-83e4-13e374665d80",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8777c664-d0cc-4f41-85f8-899318b004ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fa022f-915e-4674-9126-560b077103c5",
        "cursor": {
          "ref": "cbf6f56a-792b-4b7c-b096-bed89f5a4cc9",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "81e54de6-2cd0-4bd2-bd1a-1f7d25e0a3cd"
        },
        "item": {
          "id": "71fa022f-915e-4674-9126-560b077103c5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b497901c-398a-47e9-b567-d5983ffac67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b9426f-5b77-47d9-bb55-62f60c9852dd",
        "cursor": {
          "ref": "9a0dd2b9-27ef-4436-b45c-269f74106fe4",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6db387f3-493f-4bbb-9714-6bf38421803f"
        },
        "item": {
          "id": "42b9426f-5b77-47d9-bb55-62f60c9852dd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "caae5aa8-4319-412f-b96c-824a510b8718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b21ff97-e217-4f0d-aadc-19db389b6f6e",
        "cursor": {
          "ref": "c58a9fc9-f651-4a0a-a26f-275e978e720d",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c0fad716-32a9-48f1-9ab5-c6dd7cb93755"
        },
        "item": {
          "id": "5b21ff97-e217-4f0d-aadc-19db389b6f6e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f05f8a5c-fc25-4e9f-b32c-d4d6d930d73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a92c8a-2c66-4dcc-a7dc-efa10892b1f2",
        "cursor": {
          "ref": "ba69b91c-868b-49d8-bccd-a6b56be5ec11",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8b75f091-aa20-4321-b68e-14685a0633dc"
        },
        "item": {
          "id": "27a92c8a-2c66-4dcc-a7dc-efa10892b1f2",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4943b001-63b3-4415-9f2b-4ef7b4aada8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c25e9b8-a1e6-4e7a-9d74-4cee0d4f0511",
        "cursor": {
          "ref": "fab62d2d-310c-47bf-a850-7a1fdc1d7fb2",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7935b46b-fdd1-43a0-b1d0-fa98b5f4e800"
        },
        "item": {
          "id": "8c25e9b8-a1e6-4e7a-9d74-4cee0d4f0511",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "51baf88a-f9ae-4877-a775-8a39c79b1430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400caf8d-430a-4701-bc8b-c1bb97fc8fa4",
        "cursor": {
          "ref": "06c9b25d-20e6-4d7c-a412-5522c6636d40",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9c673158-e6ab-42fb-b64d-50fe53fa3ce4"
        },
        "item": {
          "id": "400caf8d-430a-4701-bc8b-c1bb97fc8fa4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "29efa729-2f98-4a1e-b397-e68df78fb5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e68f72f-bbf8-48b4-94be-f2ab0a4d511f",
        "cursor": {
          "ref": "7ddf6620-e4dc-4a30-85c5-24f55da81664",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d2fda2b5-da87-44c7-b66b-f41aca49a95a"
        },
        "item": {
          "id": "9e68f72f-bbf8-48b4-94be-f2ab0a4d511f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "43843977-8233-4fd0-b2b6-50d3d913c351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2446ef-879b-46cc-93e2-26d02af71ef4",
        "cursor": {
          "ref": "22f78c48-0991-4e77-a704-cd403107fe0d",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6466ff4f-7521-4128-9728-f6d79cb7ec38"
        },
        "item": {
          "id": "4b2446ef-879b-46cc-93e2-26d02af71ef4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d9fbafef-a902-4d94-8808-4cd73f7cd018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1f7c92-b1df-4d68-a211-630df2063891",
        "cursor": {
          "ref": "cfe69ef2-16e6-4614-a74c-36bfc2ff9279",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "458124f6-05c6-466b-a7f7-9a2e27ce7ca7"
        },
        "item": {
          "id": "5c1f7c92-b1df-4d68-a211-630df2063891",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "74efd531-6729-4e85-9ac8-74b4d85e274f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21770db7-629a-408c-a7d8-f4f1c354adfa",
        "cursor": {
          "ref": "92a0945f-a267-4aec-a773-b5f7f1768b04",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2c9575d5-2a85-4ac8-9c02-fc74bcfa90e2"
        },
        "item": {
          "id": "21770db7-629a-408c-a7d8-f4f1c354adfa",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f9e46559-bb71-41dc-8108-d93aaecf2c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3096c76-c61b-4f4e-a2cc-d06fcaa1aa7d",
        "cursor": {
          "ref": "47a21a27-b30c-4ba6-9c6f-84a9c3275ac3",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b12da1ab-82d3-4495-99d7-ca37107e95d6"
        },
        "item": {
          "id": "b3096c76-c61b-4f4e-a2cc-d06fcaa1aa7d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d5b6574b-be1c-4aba-ba4c-56d76919baa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74196ef-d18d-4e9e-a2a0-a10983617531",
        "cursor": {
          "ref": "7f55b56a-fd08-4b3b-b7be-cb0362d8c8de",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "817b691a-383d-438b-bd71-558e69e675f3"
        },
        "item": {
          "id": "a74196ef-d18d-4e9e-a2a0-a10983617531",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d34a2515-2e99-4eff-9a4a-088f0b65e959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4d702d-7031-420f-9aa6-1baa700fe435",
        "cursor": {
          "ref": "017d9753-f8c9-4353-b148-72a2692b73f2",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e7bbe5e9-dffc-47cc-b53d-172a82c5b4fb"
        },
        "item": {
          "id": "8c4d702d-7031-420f-9aa6-1baa700fe435",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b1dad52b-e327-45ef-b05d-87232545a37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb62096-3b86-45f4-b1c7-c75b737e4bb5",
        "cursor": {
          "ref": "40ad3bf8-ec95-4da1-9529-0f2fd5ed8e82",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "48fecc0f-ce8b-4ca9-a82e-d2db4da8af35"
        },
        "item": {
          "id": "fdb62096-3b86-45f4-b1c7-c75b737e4bb5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "338e6612-7b2d-4e89-8fc2-70773a03910d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e39a570-428b-4c06-b86d-a1268efaeade",
        "cursor": {
          "ref": "a1250923-a84b-431f-97e8-a53ad45cd405",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "12b3db55-cd62-43bf-9016-d38c1d3c85b1"
        },
        "item": {
          "id": "8e39a570-428b-4c06-b86d-a1268efaeade",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "39a0f797-8cf0-403d-8e11-7fa5c696b612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e702046e-166d-4245-a936-b686b79b1012",
        "cursor": {
          "ref": "96a0185d-1cff-4ce3-9085-522968f9fd13",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "56220283-8190-40cc-a9e6-7edeb67dfe4b"
        },
        "item": {
          "id": "e702046e-166d-4245-a936-b686b79b1012",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3c090948-d472-4a0c-9e43-7382642071eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feaa2c66-df7d-4f22-a008-5caf70b8ab5d",
        "cursor": {
          "ref": "5222d0a3-3530-40d3-996b-a872e6919b78",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8b5c65ae-cffa-455c-a800-5b53b4621ff9"
        },
        "item": {
          "id": "feaa2c66-df7d-4f22-a008-5caf70b8ab5d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b1ce5adc-11e2-47f4-a500-9f7d0fd4f7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614c82ff-abf2-4a15-888d-49ffdb82a3fd",
        "cursor": {
          "ref": "ef6efc1b-bb53-43ba-aff4-f85e1fb55429",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f3e8f7d3-8255-401d-aeb1-4a96a2acc0af"
        },
        "item": {
          "id": "614c82ff-abf2-4a15-888d-49ffdb82a3fd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9b7234f5-5d2f-4988-99dc-c772a2e31a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c9d4ad-82e6-4f7c-8328-692c966fb830",
        "cursor": {
          "ref": "5cd1736c-774d-4034-a592-5ce2442d24b0",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "383270d0-770b-4806-b47f-836ab6297029"
        },
        "item": {
          "id": "b7c9d4ad-82e6-4f7c-8328-692c966fb830",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "97195f80-aad4-4a7c-911b-f745a266e71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6040f0-0950-452a-8370-4399092ce61c",
        "cursor": {
          "ref": "912f3180-e371-4cad-9bee-bd6a7233756e",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8054bbfd-21a2-4b09-9c02-e2b0a9831365"
        },
        "item": {
          "id": "3a6040f0-0950-452a-8370-4399092ce61c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8cbf8427-c25c-4e49-98e1-97344fb82085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d81a6c-d19d-4b36-a941-cb061d252874",
        "cursor": {
          "ref": "e8760119-f86b-412e-b5a8-3e8118d822a2",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f5810fd9-50c8-4ebc-9e3f-49b0cbe28324"
        },
        "item": {
          "id": "97d81a6c-d19d-4b36-a941-cb061d252874",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "aa158332-7323-4394-96ad-a32654ae611e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a0de3b-3b87-4570-ad34-f7e02eb8466b",
        "cursor": {
          "ref": "30a5e029-edd2-405a-a7a1-61a286d14b3c",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3629cdfd-8da7-46d4-8554-9655a223245b"
        },
        "item": {
          "id": "39a0de3b-3b87-4570-ad34-f7e02eb8466b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7ce06866-bedf-4d23-8048-2638af8ab1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271e59ec-dfdb-4a0b-8db9-51f4b50f7ea3",
        "cursor": {
          "ref": "b4140c83-adf7-43ff-8212-b89cd33ab759",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "aa9d88f9-c9f4-44c3-8053-1a5a6f86466e"
        },
        "item": {
          "id": "271e59ec-dfdb-4a0b-8db9-51f4b50f7ea3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "147dd7ff-e0e9-4026-b2c3-6389d6df29a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3747399-bacd-4058-98ee-244626f528b1",
        "cursor": {
          "ref": "3e2c3eef-8708-4f9a-81d4-2d60b6cb7d66",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "58036075-7ac7-4956-aa98-0415c45e9197"
        },
        "item": {
          "id": "b3747399-bacd-4058-98ee-244626f528b1",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ede96ab5-3e99-40c0-9e4a-a14b7659f6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45becb91-41bb-48f7-a7f6-9c58c84df8ab",
        "cursor": {
          "ref": "686a5cc7-446e-4b11-859a-1405a5ecef39",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8c009e6f-4431-48d4-9224-37daab0c5031"
        },
        "item": {
          "id": "45becb91-41bb-48f7-a7f6-9c58c84df8ab",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4b45bbcf-10a9-408f-aeee-54e2ab24e163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bff3f20-0ef1-44d6-8450-c858e3cb9c37",
        "cursor": {
          "ref": "bb9ba6a3-76a8-4138-812c-ee888c16871f",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9cc2e53f-d2d3-42e4-81a1-2412134cce8d"
        },
        "item": {
          "id": "9bff3f20-0ef1-44d6-8450-c858e3cb9c37",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9948f862-692d-41e7-a4f0-293b70dfe786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d0186d-209d-4364-ad91-9ec1335379dc",
        "cursor": {
          "ref": "c3d33a8b-10e0-448e-bddf-61ca3cef2f64",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b6b5bbf6-bbb8-4017-a5ce-8b93a6d18cf2"
        },
        "item": {
          "id": "14d0186d-209d-4364-ad91-9ec1335379dc",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b367546f-02a2-4674-bf88-61a73623d8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb056f5-eb4b-43b7-86f5-80863933fde0",
        "cursor": {
          "ref": "5ed747c8-bd8b-4d34-8da9-343451bda8bf",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f52ad32d-12d3-4e8e-970b-d3f5fdd3fe84"
        },
        "item": {
          "id": "beb056f5-eb4b-43b7-86f5-80863933fde0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ff768773-ffe4-4b72-b30f-3207b5ebc15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac0ae4a-4217-4e64-b5fd-a2bd70c35644",
        "cursor": {
          "ref": "cd2cc04b-dcd0-40a6-b25b-d470fabda84a",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "02204c26-2618-4bfa-8617-30b92cd20df4"
        },
        "item": {
          "id": "1ac0ae4a-4217-4e64-b5fd-a2bd70c35644",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a6cb9215-a0ba-4c68-b307-51b5c23a57d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b85090c-8bb9-4f3f-9fb9-580bb08a8fe1",
        "cursor": {
          "ref": "42235ee4-910b-4688-ba99-4c41bec9721a",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a617ed6b-5458-441d-bb0c-074170fe1b12"
        },
        "item": {
          "id": "7b85090c-8bb9-4f3f-9fb9-580bb08a8fe1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bd5cceff-eab0-46d5-8c22-6eac48c725ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d469a1-d4b5-4385-bb9d-381fbc2ec139",
        "cursor": {
          "ref": "a68179d9-6352-4ccb-ae04-104a2e24a6c4",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b453e6ff-0543-476b-8c76-ddba94df8669"
        },
        "item": {
          "id": "d2d469a1-d4b5-4385-bb9d-381fbc2ec139",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e6467da3-5890-4cde-b8ef-a5de0825d087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f23ca4-3ba9-41e4-8db0-316ac36ad358",
        "cursor": {
          "ref": "108e6f42-e976-4f3b-bef8-c669e883485f",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b93baf86-05c7-49b8-bf0e-077c6c1f90f0"
        },
        "item": {
          "id": "f2f23ca4-3ba9-41e4-8db0-316ac36ad358",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6b22ed65-7bf2-4993-b363-c715055ea935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8eccdfa-b2e3-480e-8c9c-6f2f824edb28",
        "cursor": {
          "ref": "f2c8ecf8-41a4-4d4b-a071-761071ba8071",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "42aeec84-4d14-4bc4-9a41-27c9d2378514"
        },
        "item": {
          "id": "d8eccdfa-b2e3-480e-8c9c-6f2f824edb28",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0b7dbf88-de6e-497f-baa9-ef7c8d388892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8efda83-a072-4f0d-82f9-0abac042024b",
        "cursor": {
          "ref": "71efe122-5a61-4e44-9ed0-cee9bd957c41",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e301b959-f48f-4992-9d98-586c8d979913"
        },
        "item": {
          "id": "d8efda83-a072-4f0d-82f9-0abac042024b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "518bf9ac-9446-4720-829d-ab054e7b860f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846ccd73-618f-40a4-9d95-c143f76ddb7f",
        "cursor": {
          "ref": "b309be40-2331-4e0c-8f09-d1d7e3f59737",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5882289f-dccd-4ac8-87e3-2bdf837695c4"
        },
        "item": {
          "id": "846ccd73-618f-40a4-9d95-c143f76ddb7f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a0ab15dc-13b1-4d98-a65b-b4922c62a9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fd64b2-8051-42de-aa87-c766198e0452",
        "cursor": {
          "ref": "9cd9ceec-36e4-416f-bdde-f55cefead312",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0ecc8b80-618f-48bb-b5c9-6cd5eed88780"
        },
        "item": {
          "id": "66fd64b2-8051-42de-aa87-c766198e0452",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "68bb2663-d089-4676-97e5-243bb3036704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b639b8-7d41-49f7-8c21-aeee484564c0",
        "cursor": {
          "ref": "b83d8d25-2056-4635-8451-1c7654b3728c",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "51a12b59-7649-404d-a525-13282e05a348"
        },
        "item": {
          "id": "49b639b8-7d41-49f7-8c21-aeee484564c0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "05d3fa32-dbea-41c5-b5b1-8fd6b85fa509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de51cb18-00b3-415c-8cae-d7cf8bee1529",
        "cursor": {
          "ref": "d1333569-5805-4b50-bd2b-587757b50c85",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4615c4ab-aba5-41d7-a26b-42a80379a1c0"
        },
        "item": {
          "id": "de51cb18-00b3-415c-8cae-d7cf8bee1529",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6c898694-6b38-4efb-bb55-1ac7f0b771a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e0e4dd-a058-498c-b7e6-8321d1bdd7aa",
        "cursor": {
          "ref": "01b8da3c-efd5-4018-bef9-68d1c14fb936",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0ac79a93-2ac6-45ce-9c52-6e7b24658377"
        },
        "item": {
          "id": "80e0e4dd-a058-498c-b7e6-8321d1bdd7aa",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "bfca137b-a02d-4289-8f6b-3f59ee1f4c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771322a0-dc5e-4097-b786-53dad1be781a",
        "cursor": {
          "ref": "0bbf47a6-3271-407f-a34a-44d2270f402b",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3c9ed50f-bb20-40fa-b8d5-4006272d57c8"
        },
        "item": {
          "id": "771322a0-dc5e-4097-b786-53dad1be781a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f0a0556a-513b-40d8-aa13-50f2be4aebb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f8fdf0-d7dc-4a39-b68a-6508497dfa98",
        "cursor": {
          "ref": "c8a67135-b668-48a5-92cc-05b6fe117406",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "81bd089b-b872-4d1d-8cb7-e07e0dbc9c09"
        },
        "item": {
          "id": "d3f8fdf0-d7dc-4a39-b68a-6508497dfa98",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ee2a3f55-89fd-4a97-999c-91a9d575dbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293a9bb4-40aa-4221-856d-91ea2cbdcec9",
        "cursor": {
          "ref": "6ac60639-7adf-4260-b5f4-7e4317550685",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2e8ae723-c1e5-4456-90a1-2328ad5b8712"
        },
        "item": {
          "id": "293a9bb4-40aa-4221-856d-91ea2cbdcec9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "66f26a8e-4cb4-4f40-88dd-eb8c65b661a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673e3166-36e3-4494-8a91-3967878e5f9f",
        "cursor": {
          "ref": "5a6b10f5-bd44-42e5-8b5b-918f9b17a24a",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d3a832d9-f33b-4930-b557-491aed386af0"
        },
        "item": {
          "id": "673e3166-36e3-4494-8a91-3967878e5f9f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b1ae10f5-079a-4734-a07f-a3e4a71a1fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf7406c-40af-4fa2-8406-42217af1ef6b",
        "cursor": {
          "ref": "60aff3f1-19fd-4709-8aa4-ee8c243c882c",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6b93b7f4-1c83-401b-bfc6-2fbcde0d1527"
        },
        "item": {
          "id": "cbf7406c-40af-4fa2-8406-42217af1ef6b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a9ecf80e-60b2-4884-b3e3-dd73a5139123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f20c2e3-5f51-49c5-8cda-b559c8631fc2",
        "cursor": {
          "ref": "f630ac9f-3a0a-422c-8052-cae9caaa4b7b",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c74798bb-42e9-4d05-9651-46ae3fea0310"
        },
        "item": {
          "id": "5f20c2e3-5f51-49c5-8cda-b559c8631fc2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cfdfca63-bbcf-4757-a502-95cad3de4667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4398075-2171-4831-9879-8c762bfc1f4f",
        "cursor": {
          "ref": "c05e984d-3458-4000-8975-bdf806129482",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9c68cbdc-6d31-4df9-82bf-5bd5baf93df5"
        },
        "item": {
          "id": "e4398075-2171-4831-9879-8c762bfc1f4f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3f2d2164-e705-47a9-b32b-8dea05ea51b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cb0933-d839-4021-bc22-7c14d8f98fb0",
        "cursor": {
          "ref": "4702dc8f-9c14-4095-bebf-22f5d4e7b3e5",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "24958645-6843-471a-8ef3-b66060e3ec96"
        },
        "item": {
          "id": "55cb0933-d839-4021-bc22-7c14d8f98fb0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fc930ebc-bd78-4f96-810a-dfcc13b7a9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449aab5b-8cf7-4d00-a502-913c1998f858",
        "cursor": {
          "ref": "96b3258b-6cc1-4079-b4b8-b5c8b24a0310",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fbba1945-045f-46c3-ba5a-4ab6ed6311b0"
        },
        "item": {
          "id": "449aab5b-8cf7-4d00-a502-913c1998f858",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0e025e87-3904-4e94-85c4-2c5ab644b5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c03a2f6-9430-47a5-b8a1-7d0c32c889e1",
        "cursor": {
          "ref": "2139f923-4aa6-4d04-8bd7-6a8a2f17a984",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e50cc83c-3abd-42bd-a1ec-6c76110e67c2"
        },
        "item": {
          "id": "7c03a2f6-9430-47a5-b8a1-7d0c32c889e1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "874f8e29-c793-48e6-aa76-f531a2c221ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7fccac-caa0-412b-896e-7a738610eff9",
        "cursor": {
          "ref": "05f4c3b5-4ad1-49ca-baf6-49a54c0dcdd8",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e314660b-94aa-4d05-be3c-a70139515262"
        },
        "item": {
          "id": "3b7fccac-caa0-412b-896e-7a738610eff9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5d5ebb09-8906-4e64-939b-e0367e1f3ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb967582-e424-475c-a5eb-abab235272be",
        "cursor": {
          "ref": "2a34e51b-6dfa-468d-96c1-6cfb55aae0b4",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4f5ea2e8-50f3-41d3-a7b8-70b804ca2b0c"
        },
        "item": {
          "id": "fb967582-e424-475c-a5eb-abab235272be",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fce5839a-dabb-4f01-942b-31883de5b4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a035e339-3989-4672-9994-0391a1ff6a75",
        "cursor": {
          "ref": "b44df494-ad6a-41ac-8181-a08be4feac53",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5f2e781f-bd69-46f9-ac00-2df882869712"
        },
        "item": {
          "id": "a035e339-3989-4672-9994-0391a1ff6a75",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "833325dc-4d80-4f6e-9e2c-8906556bbcfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d996c4-85fe-4257-8aad-24749d06570e",
        "cursor": {
          "ref": "b895b4bf-36a9-4f45-86b9-b95ade09a7b9",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a15fc4aa-3daa-4c31-9126-6bbb70823c29"
        },
        "item": {
          "id": "f3d996c4-85fe-4257-8aad-24749d06570e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9e5f9eef-8c42-44a1-a57c-5c2339d340b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63693a88-993d-4ba2-beef-789fddca651a",
        "cursor": {
          "ref": "111f3a96-d753-48a1-8520-0fa0bf0c7d56",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "77ab76d4-23a1-4732-9caa-0b4be5fc1f33"
        },
        "item": {
          "id": "63693a88-993d-4ba2-beef-789fddca651a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f5c17d3d-332a-47ac-a088-97096f81292a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f23142b-81c6-4a79-988c-0998bf6f3c86",
        "cursor": {
          "ref": "25078c47-4685-48b4-a6de-509b8d108343",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "59f87f81-339d-4b07-8e17-fb20045b7418"
        },
        "item": {
          "id": "0f23142b-81c6-4a79-988c-0998bf6f3c86",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ec26ebf6-5414-4e65-8bb8-e4df871bfb68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71889d9-47ed-4351-8848-27cb76331e69",
        "cursor": {
          "ref": "47ec3567-4eed-4fec-bee6-1d7acf45b150",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2a4510d6-ea7d-47e7-b9e8-a723d20ae613"
        },
        "item": {
          "id": "a71889d9-47ed-4351-8848-27cb76331e69",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3f559ebb-841d-4350-a450-7d03ca9b1320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0d349e-2473-4008-a9ec-cdfb2a96b7e0",
        "cursor": {
          "ref": "b5425378-dcd1-4923-890d-11a8b42520cf",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3d27790e-8253-410a-81ab-fcfaa941baad"
        },
        "item": {
          "id": "7b0d349e-2473-4008-a9ec-cdfb2a96b7e0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "17216a5b-d738-4c89-ac5f-fcbbe4eb75fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c913dd6b-dd5f-4684-a41b-9c45d9b8ee1f",
        "cursor": {
          "ref": "4f086afc-83af-405f-93b9-1abf51c15811",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "01005cfd-5f5b-4e0a-9ee1-43bde894ab3c"
        },
        "item": {
          "id": "c913dd6b-dd5f-4684-a41b-9c45d9b8ee1f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2f354540-d8be-4651-afe5-5404db31eb2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2018da-1bdc-4206-bf4e-bee9cfc497e7",
        "cursor": {
          "ref": "c59efe03-7797-41d3-8c99-f22901bd6048",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8b4c81d5-c793-4836-b5bd-5d23d749f061"
        },
        "item": {
          "id": "5c2018da-1bdc-4206-bf4e-bee9cfc497e7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "abe5d115-cf49-4800-a3e4-ae3bb787922c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0ade6a-ce73-48fa-8daa-7ebe9aff061a",
        "cursor": {
          "ref": "9f025dd5-faa9-4497-804a-efae5d5e0cc5",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "431e83f4-46c9-4fe2-b4d8-3974a462cd95"
        },
        "item": {
          "id": "6b0ade6a-ce73-48fa-8daa-7ebe9aff061a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "369aa02e-34cd-4960-a832-48d57a93d0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc8916e-7bfd-46d4-9b42-d746a769202c",
        "cursor": {
          "ref": "ef8e0e0e-1031-4cf4-b468-93e4b209af52",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "64e42578-2e9a-4be4-8dea-ebb6d18e9ae5"
        },
        "item": {
          "id": "dbc8916e-7bfd-46d4-9b42-d746a769202c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0f684bb4-a10f-4a80-804b-df31d065e2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063efa24-892d-48b9-a427-223f8b5bfcab",
        "cursor": {
          "ref": "4dc97426-d7cc-4201-8b8f-d460e7ca665f",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fd9a0171-fc7d-44c7-a978-591bfa474a91"
        },
        "item": {
          "id": "063efa24-892d-48b9-a427-223f8b5bfcab",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "af34ab0b-6723-4301-8351-26c56e7344e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74dafc96-c9bb-4098-9e75-490e88814b47",
        "cursor": {
          "ref": "c4e00ddb-730f-4a1c-8305-f524e08e5e90",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "13818378-160b-45de-af6e-4c41dbac8fe1"
        },
        "item": {
          "id": "74dafc96-c9bb-4098-9e75-490e88814b47",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "39358216-1cc1-4160-954f-432bc48cb516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1cf04e9-bbf2-4672-a09d-f1236a2412cf",
        "cursor": {
          "ref": "e2dfe9b6-5ca7-4678-9703-347e6f30f4a2",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0dea4579-adda-473e-9d42-3f8f4e16c244"
        },
        "item": {
          "id": "e1cf04e9-bbf2-4672-a09d-f1236a2412cf",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7b3502ab-06f8-424e-b9d9-6d2707c78d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afc5828-97aa-4eac-9f0e-e9215da78d10",
        "cursor": {
          "ref": "30b4e07c-7502-4149-a99e-568cc199be4b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "05db0823-6a15-4d41-bbde-34c83aa43f2c"
        },
        "item": {
          "id": "7afc5828-97aa-4eac-9f0e-e9215da78d10",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "28ebef60-25e5-4490-b3ce-5309a1b8e54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "c9e4cc28-e9ab-4d83-85f3-25cb44f4b4d8",
        "cursor": {
          "ref": "0bb13f3b-962f-44e9-bd19-714524176b2d",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d1add94b-ea8c-4cf7-b142-aaa40b02c6aa"
        },
        "item": {
          "id": "c9e4cc28-e9ab-4d83-85f3-25cb44f4b4d8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a200e1b9-5087-42f4-a897-c113f17c5505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "438a0588-0ba3-44bf-bc42-4cf60575d7d2",
        "cursor": {
          "ref": "3b483e1a-0e5b-4f8a-8f24-83fc3fed68d1",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c8e832e8-f448-49d5-99fd-a95815e52769"
        },
        "item": {
          "id": "438a0588-0ba3-44bf-bc42-4cf60575d7d2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "949034bd-cbcd-4fbc-b4cc-b69627660188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "0d55a455-23df-4b22-a30d-64e56256345b",
        "cursor": {
          "ref": "63811ee9-13ca-4d29-a1e1-615d41d4bdda",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0e2c6104-e5ad-432a-945d-513141248e02"
        },
        "item": {
          "id": "0d55a455-23df-4b22-a30d-64e56256345b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "40cda236-c1c5-47a9-86eb-46e6d3e5ab28",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d55a455-23df-4b22-a30d-64e56256345b",
        "cursor": {
          "ref": "63811ee9-13ca-4d29-a1e1-615d41d4bdda",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0e2c6104-e5ad-432a-945d-513141248e02"
        },
        "item": {
          "id": "0d55a455-23df-4b22-a30d-64e56256345b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "40cda236-c1c5-47a9-86eb-46e6d3e5ab28",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc78537-26a7-4cfb-9ac7-5a536e8d2d96",
        "cursor": {
          "ref": "09a26890-b3b6-4e66-ad7a-c5b223db2941",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "26089aa0-a441-4998-adf9-3c8f9eca0793"
        },
        "item": {
          "id": "1bc78537-26a7-4cfb-9ac7-5a536e8d2d96",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7e011c23-8679-4131-a473-d6830c34673d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84980de4-6b86-4e5b-ad14-965d48178c4d",
        "cursor": {
          "ref": "6e5027d5-bba8-424c-8ef3-7344456d63ba",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c61e100d-45a7-4f08-acb4-22647060d34c"
        },
        "item": {
          "id": "84980de4-6b86-4e5b-ad14-965d48178c4d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6121193f-4cc5-4f72-8476-09f2402e823d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}