{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "17a5a03c-9e07-42c8-a6f3-5e5126d82d01",
        "name": "Clear Cache",
        "item": [
          {
            "id": "255b9dc8-b3ec-4f46-8423-f388b0c81efd",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "191f72b7-9406-4be7-946d-03068ebb6b17",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "411004c4-9519-4231-b878-3326b4b05620"
                }
              }
            ]
          },
          {
            "id": "7c393f60-1fa9-4f0c-b49e-ce16d1b56e57",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1dab99e9-7db2-49d3-9c8a-34445584e309",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bcdb0fc3-6cdd-4325-bf49-104b36932d5a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "931f033a-fa5b-443a-8458-e5d68f5ca6a3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d05ab1fd-275d-41a0-bce0-8babb95bcbb6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ec3b5f10-3df3-4216-92a5-c032a5c6b972",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ebb3747-b613-495c-85b3-1c92623f2ef9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f20cdbb-ff7d-400d-b2ab-16cdbced7c7b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7ab6ec3d-d288-48e1-8cc5-cf97027cb236",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9ea04a2-b9d9-4cf0-bd34-174af5f92d46"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c28b5c4a-73f7-4e3e-bae0-342c1cb45724",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "52fab04e-6a47-4ddc-81d5-01afd853f429"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8bc53b94-79c4-498d-8cea-93983f41ca39",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "412f5229-7f06-4e37-9029-65d44e3e4d57"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f86450ec-6f34-45b2-97fc-66cb36ec422d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe82e724-53e6-48e9-bcae-b526f0b646eb"
            }
          }
        ]
      },
      {
        "id": "5fe348ce-3cd1-4a0c-b466-95e32ccf45e9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7f0dd835-3228-4a1a-b4e9-c25d06c7f200",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6e4d55fe-7743-4eaa-bf5b-dde0b8abe1f9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "308248e2-e703-49e9-911d-70f70fa66847",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba484d1-6730-4cb2-95ba-a4ada521e237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b3426b4-6023-4328-94bc-8d5af7ab38a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f96c37-65af-4953-89f5-be7445c941e4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a33791a-2d86-43da-917b-495f297b32fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae0c1990-7d4c-40f7-8c66-38c67722130b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361dac3e-f133-44fb-88ed-3a2f97f18b6a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82bdf2ed-5171-486c-b68f-26238a6019e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e462526d-1b01-411e-a9c4-5f5a3de543fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "943de102-cf0b-4c92-8818-677d2f6de5f7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eadc5061-c3ed-4414-9250-7c1d9a1b11b1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5efff2-e3f6-423d-94d2-4340fef97358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "098b3afa-7c53-4854-9700-0a6079ae3738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273d4c03-a112-4913-9951-c3d0bcf31cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "114d9d5a-0d20-4ef6-aadd-76598130f9cd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f26bd037-5afa-4e6b-8b2d-8df326f9db39",
            "name": "Positive Testing",
            "item": [
              {
                "id": "690c3382-b398-43b1-9d1f-b1c40cf967fe",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46dafa5f-e4bd-454e-a300-21404f32ed02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "318c0503-cdcf-4aec-a512-f81bf30e954a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1b5cfdba-0560-4f3c-8a7e-15eb31bf971a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f7b32b66-5547-45f2-bc20-e75b91b9b0eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "65d59e7f-9ece-4d9d-ae85-a3e90843d34b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "661429ab-b289-46ab-8e34-289f4c459b79"
            }
          }
        ]
      },
      {
        "id": "8b49b96d-0ace-45b0-9ffd-ed9a108b5fd9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "158eb055-aacd-406e-89b2-4543ab1e7a0a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "34060d8e-3002-4bb0-ba5d-4b82aee14737",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "08d2b28c-8323-460b-8cfc-acc4c426a9f2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e37404d-48e8-4f6f-a785-f70ae98691b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf06ea5-f3fb-462a-9cf8-09a7ed66d3dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3519758-3772-43a7-a548-a0fe802ecf96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49eb0a81-70b8-4cc9-bb41-d38589b0a2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fa71a2-ac91-4783-9b29-482b59c495bc",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975c0158-a8d4-498b-851d-fa4b6205884d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c0d5cfe-04fb-4a48-b716-12a47daacc2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8681b957-7b4d-491b-91e4-6300fa178dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9142762b-500f-4413-832e-4594c29d285b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d68e383-4e2e-484e-8709-38e16e62cb1d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66f6637-a9cc-4a54-bd37-d86c692cdc31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5db4caa-7784-4866-a9cf-a15d301bb9dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1609367b-d04c-43eb-99c0-bb937b55e5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bd635a2-ac7f-4b07-8044-436bc15e92c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d797aca9-5699-4d03-93dd-b9969b8d8a36",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2128d9f-a776-445d-9d60-33770b13e526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb87e95-cbd7-48b4-b723-247033099549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8ce62f-f56f-4dbf-9dc5-027570c991a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6423af35-e5d4-4599-98f7-6404c36e9de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3b627c-df78-4b7e-a157-124208b24780",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1374b03c-3df6-470f-99bd-041cc32174dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d08853f0-733a-4765-84ac-2a2e480439dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f108aa33-5ea5-486e-a42d-b942932f04f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8be1e12-7400-4ab2-8e3b-4b5f48d6035e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51da5986-b1be-4312-a6ec-0f82d74b435b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7755fced-388e-49df-8b4f-b652d784210b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfcb250a-e125-4540-94b6-ebcd4b1a3ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0754bb7-99bc-4b9a-adac-344b3600c035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff4188c4-402b-4086-889a-e07d3cc46360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb6d4c6-5960-45b5-aba9-2285e04a0de9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778b32c3-3e8c-4fc3-bed0-9b1332a002a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e73b72a-0186-47f9-b68e-ba0ecda628a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2edb641d-d18d-4440-9573-67dd952073df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2c0f52f-e5e3-494f-880f-74a311f74294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3719e865-8aab-43ac-a312-aad4e9dae655",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85139b15-c939-480b-8e47-9d9c651cbdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bbe7c14-5198-4087-a448-140f0ddfb0b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b25829-e352-467c-97e3-976d73fbcb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0bee178-d785-49b8-8ec8-7de0e6912c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e8c5cc-a134-4f7d-bc79-89e041f98fd9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08459d0-65b2-444f-b27a-818ed6eda91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f889b213-a3fd-484f-9b9d-dcb9ddf01b7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1fbcd92-4e96-4270-b232-c83729a5a815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "833e11c3-6cec-4ef1-8836-b0e6f37ffe1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b442eb19-c634-481d-9f8d-640db59da4dc",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d9bbb3-347a-49ed-8de4-66d5e688fbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65acb671-606f-4997-9fe8-45118d5b84e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e92bcb-8ecb-4385-9a48-c0bcb07e68b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a22d4ed-2352-4559-b6bd-75d98cf5b68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe60069-3e33-460c-9feb-b64ac8b9cc60",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b578ba6-1568-449a-b466-0cf8e8972e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c27fc01-7d22-47c6-8024-3a4eb15483f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913c63bd-ec21-492a-8fed-915399850102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c6a9a11-725e-48cb-be97-cc28da87384a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a1508c-f91a-4882-9ea7-be14623fc16c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac0e615-2cad-4170-aac8-18a0a5756752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec6efc8-d833-430a-8082-3e083e607fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62a0447-1ea1-4f70-960c-2c720b92400f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa08c58a-894f-4b77-8880-b57b7a1da3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9dcd28f-64ed-4a5b-97ca-f0df5a431d1b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79542148-6ed7-4207-92c6-0ad1d02f291e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b52e53-f2db-4599-ada7-31f29d00290f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27800e5-cbae-4fa1-8680-6e017358a4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc3eea51-33ad-483c-9fc2-4ae27a669fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2243b2ea-4d24-4004-8bc9-85c74ae5923a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7cf881-4cb3-4423-993e-1a82a9468221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b8715dd-cb95-4754-b169-a52e0d71f1e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba91ff4-b6b1-42b6-8dbb-72edf1a46b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67c862c3-38dd-4a8f-b66f-bc93f04615bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf93e94-75bd-40a4-b2bf-7e6bb0fc6674",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed74ab6-225c-42e8-b328-f83c8df78a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37b63bb9-7032-4072-a97c-626f44046035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8a7e56-8ce0-4449-896e-671cebc6d78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d3e4ac8-5dce-4fad-b574-5b7b35cb3c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e1c451-9e05-4103-8247-006b336c8a4f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0798ea-cdb0-4e31-b70d-ae220d086d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a916d958-592c-4f13-bc50-f52b17da81eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843df04d-ecdb-4ebd-9204-eb6adc780660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "451421fb-eccd-4a59-8662-38768419710b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec6c1bd-53dc-4255-b69b-460c99a2b468",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6c5635-5496-47e3-8991-0b3a11661383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f639cd-e5fe-45b0-97f5-4bb18a6d5d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b06a1e1-09dc-4e1f-9c7e-297e9b25f361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ac1b48f-bd6a-432c-a946-9281131a339f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d563ac8-d3a6-47cb-9731-a1bc306e48ed",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852f34f6-4604-43c8-8f17-839fbd284823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a3c081d-a29b-4982-9820-5f16605374e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47dc6d0-795a-4cdb-ab1f-2aa72e400ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f34fa426-0f80-44ed-b6f0-ef1d94c62214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb10c3e0-bf64-474b-b277-7b2de7877667",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3cbc1c9-e724-4703-804a-fe0d14d605a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3bf5b10-952b-425a-86ee-104e45579fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c766b14b-19ad-41e5-ac6f-fa6ab1204c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc45e96-10db-41ce-9531-3758dcf50390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271d807d-82ad-426b-8ead-bcc2d1f6f166",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ffe26e-27e9-4e69-8fc5-202d478f99b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c03332-82e1-445d-9576-f4a032f4bb27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb54f0bf-116f-48a1-9426-7f4335f687de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50fe7aaf-6116-466a-8461-03bbd1ab8be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b42a777-7621-4417-94eb-e67b20b067c6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bd7370-2bee-4091-80c2-d86abd2ee24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad5c725-f5f8-4e20-9fc0-9ab5be0d0f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80eb64f-1179-43c1-9839-75f31fc660e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05c92190-9c45-44d3-9fde-12646ac255bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a04ab2-6175-4d4a-b40c-fbb1c19031c3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bc4499-7a30-4e0b-ab67-b551ab381689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "995e9f6d-3c9b-4787-a82c-3c0a448d0b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7109b290-37e2-4f6b-b53d-65e8dbc5fd34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b572dd05-b433-4d85-8ad5-6f7a29ab8652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecfa596-2e82-4ee0-9a04-4acd25070ec2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0fc00f-a6e9-4aa3-8e5d-3e98f167216c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47dcf354-5db2-4812-b756-a0ea1a6b9e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0866a680-09f6-4e0c-b8fc-3d9cc27b709a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a65f3e90-24c8-46bc-a833-60e85042a90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0d5490-cc66-49f7-a991-69f375817573",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "032975db-0d4e-4fcf-aaf4-474ca296ae83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2814bfb-b6ec-43e3-aa3b-c10a7d6b23a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553537b5-7360-4e90-8634-9be7bcd861ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e819f73a-0f19-4a12-bf00-56fc59bb6659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ae6991-b3ae-4781-87d4-c47adf79df95",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57f4300-5b3f-4b02-aa17-be07dafca012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8adf9d56-546f-44ee-b1da-4aafb810f46b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a86a2e-948c-4145-9780-47cc31ed6464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd327036-6f0c-4b9d-a7c7-61e386cd7f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d20a48-584a-4a0d-9063-828460acfd10",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3c5b03-6520-40c1-902e-115a89807800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984b1aa4-68cb-4afd-a674-b8c5df769ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032d40ed-3059-495f-94a4-a4a7f2c8ba2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b5f0441-aa4c-4bd0-9036-4d214b566387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd1e2e9-8d47-46e6-8f3a-032bae98020c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "047a5099-9bc2-4be3-ab41-515eeb628539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ccba29-42d8-45ea-9ba0-7733a5d11188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06ac418-481b-4acd-b8db-5b706f41fe08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04da2cb0-e00b-4efc-93f4-6ef26603f8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2466533-ced1-439f-a650-705e67a22130",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1974b7d5-15f0-4c2d-989d-ba76fc74f675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f97eefbe-e6ca-465f-aff8-bd5d86e0daac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad6d0fd-aa0f-4d99-a139-59dc63b11ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d54b0e7-0850-491e-a42c-1d1137db9d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cdf3f76-4b5f-4d12-94f8-c308907f3137",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7108ced-4a83-4b92-9e8a-1f7357885d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fed71ba-eb78-4c70-a2e7-327339123a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98389af4-4d9a-4630-9b83-98a817c4dda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5d3d32-7acc-4698-917e-579a099e387f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad406ba-1745-4dd2-9750-fe0a31bf17fd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880114ec-068d-4084-bcb4-748a81ac79a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4049bfa1-bb90-472a-b2dc-f8a50ff26300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a53013c-703e-4c01-87cc-0a58e43f4863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a69287e-7817-423f-97a6-b6bf226ed4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b45a9e-5e27-4df3-9ee7-f6e4a1b5c11a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93daee53-475f-4cb3-8a98-f9bc193ac311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202270e6-085a-4053-89d3-b425ac07809c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4bcf71b-764e-482e-b095-88240d740de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fc22674-7278-4cd2-ae25-c8470d00ced6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e023ae-887a-4fdb-a422-c2301a0b1898",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc8ca8a-9efd-4dbc-ba3c-ec7da6be0d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68aab89c-d168-4114-b7ee-848553553c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7a10a6-9bbc-4181-ae13-229bc90dc216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc422aed-35e7-4e95-b87e-6885d21a2464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a19e3f-7731-46d3-973a-90c65cbca9c3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b412d8c4-a955-4dcd-95a9-d586ed25e030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "135a281e-7b89-408c-a603-a944e7bc440e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7afb70e-4a9a-482f-a082-f922d204e6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb88cd80-6d7b-408d-8968-a3a3006509ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2875c9-5e64-4315-ae67-710a08ff7228",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3229ad-1084-46d0-a236-c9eae966ad06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83cb1c58-d01b-4a3a-98d3-799fde19c808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedaee8b-7dc1-48b6-8e0b-289231f350a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd0d4fa-7d11-46ed-8ce2-34b1a7193487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec47919-7d80-43b1-a9dd-37ef01b07e54",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f43c7a9-ee3e-4a77-8b79-26b0cc9ef09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d788dddb-f777-4c03-b5c0-38e9098652e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a1b3df-b3e7-42a4-8d1f-6728db662285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4a186733-436d-4ded-84f9-736468f581fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d625e4-9aaf-48ef-9853-96c837c3077d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5388149e-56c5-4203-b2f6-9218e4a650c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ddb677a4-e264-410c-b2b9-8b46f2f353c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b437d06-dfeb-4600-a301-b9979aaafa39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fb5dc7f2-4997-413b-afaa-2e23e3327308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd4cf19-48fe-4c46-af31-4c4934376563",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce2732f-2499-45df-a1e8-f42ae53f9dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa81d118-2048-4d75-9a48-2a3c27e1dca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c0dc82-7b2f-4866-af07-a6c687f8fdff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13e9d96d-6724-4723-a21a-2bc96574cbce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6a2313-77dc-4fee-ae66-456868b6260c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c452e6b-f0c2-43e7-9223-74283fff21d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83fbffa3-410c-4763-a536-ad590c675a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec1bdf6-620e-47c9-9222-cebbe263d64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "30445f2d-6f22-4c76-bc95-327280bf2b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33655741-0046-48e3-a427-0f109bfa7920",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49627765-443b-480a-9734-489d8634ae65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea2eab5-c7cd-44ae-b9d6-e5dd58a20ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df279a24-20f9-4a8c-9a9e-8c0fa14d26a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef9f91e7-4070-466e-b127-9749ac8caa56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fffb2ff-a424-4832-80f7-4f6e6cf5f866",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c948f0-1cf9-4b2f-8ea2-92ed1e3e8973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd6b8b7-93d7-4f73-90d5-cf5667687b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb4b48d-947b-4c11-8bad-fb6867176fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f49b2b33-8680-494f-b92a-4b4179c284fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999b9e3a-d32d-4225-97a6-081d795e4f99",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fcd639-6f9b-4778-98b0-668a4661250d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d2a587-399c-43ec-82ba-b4a84bc97e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7e0656-5129-4ebf-82d2-40f10b5748ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2098e077-e72f-45af-a94a-37b2fb32a42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0642828f-b34f-499e-affb-71fad9b9998c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8270ff0-c5c1-43fd-9506-9a3c76852d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2935f401-7f6e-4aa4-8a5e-38f6a292d513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75027785-9ab5-401c-9148-9ba2964c85d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "25c9bb8a-62a2-498d-ba45-401ec31b27cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328814fd-0f37-4889-9e07-c325ecb3e8df",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac9da04-f411-4f0c-ad9b-35290dd1f0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef1bd17e-9e34-4bec-a6d1-5fefed1c0970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472db546-bed6-4041-b138-20bb54f23e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "97ef4176-e2f6-485d-bad7-c291d5dd0ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff9b005-a83c-4449-895b-10e600500714",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "720dc51b-d3f9-4291-9d3c-1ad7507411c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "504368cd-1d53-47c7-b720-cb575df749b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c451f3-45b7-4b64-8de1-d7609f27949a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f9c1ce0-2a76-45db-9059-3dbdada693a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf804db4-ee09-4868-b7da-3f9f025ee1db",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8676aa-fac0-43eb-844c-feb17916a45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a3d94b-ca70-4f15-9501-eac180992fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a9ea08-1e05-4891-90bf-5afce36093d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8590887-1da4-406e-bdfb-cad3ffa048c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced6580f-50ec-4228-90d8-23409facd240",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157db2c8-ae5d-43d4-9fde-6799450177e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8335e1a8-db36-4cdc-af2a-e1f8c2560a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc37be0-f3e9-46a3-b7f2-54659904f258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3163dd6b-d373-4265-9c53-c8c80405b02d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c702c9-8e67-4c69-9bbe-0bdcc2b44d7a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68e672e-f90b-4f96-8b52-9d9fd834a6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dcee529-ae76-439e-8eb0-f58f6b3a517e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e00686-ff3e-4e38-879b-88655ec30be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a9a7df1-8d10-487d-b099-914d98b2a7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ffcf15c-4c4c-46c2-acae-05052bfbddd2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833eb7cd-bbb0-4616-80f3-f1207e8d3b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "776f4a84-b041-4047-aebc-b095a90b5586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbf3d56-c1de-4a01-bfee-924f1f15130a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b813f016-c3e5-4ca7-ae41-562c4f042e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0029aa-1fed-4958-b03c-5d8b33f3331e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa921037-283f-4939-aef2-094f45d56600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a06d5803-168e-4aed-b276-a152f01a5aac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9319445-3a65-4054-aef6-fee5e7efe8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea7282f-9e8c-4f33-bbdd-872f4ab02d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23947ae-b591-4504-a2a4-fe21bde0fe19",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3865b41d-3ed4-4660-ba2d-607f2bc28869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da2a4a66-9832-428f-8e02-5867c7d66f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97fea743-07b8-4830-b205-59eb250a4a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58ce8ad0-9932-46b7-ba34-e9130b013cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8bb9fe-ab25-458c-96cb-7d5c69860e7d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8618144d-e5b0-4439-9768-59d606cdb421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8804c15a-218a-4679-9e2e-e72b0fffcad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fab468-4f2e-4664-b897-32e814bd38c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc674626-3d0f-4961-9391-390f84cc1499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c26e167-b6e4-43af-b545-89e14c0a42c6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ba9ae1-9899-4c92-93c6-faa8cc72a9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e6ae7aa-d0ac-4a46-a98a-6fb2999ea575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfbc02b8-b733-48cf-8084-0824f0f7bdc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "65cfedc8-0003-4678-a67d-84cf3b5f52eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91b3e93-645e-4d69-837f-49b7d00a0afd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2231f807-bbea-4410-8c7b-fdd96044f63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c9198ba-4268-4eea-9adf-382f21ba5466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad07448-5bd9-4d3f-816b-05e30730ac31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ca6f81-c867-4f63-ae14-35d1dac502b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94427cc7-548f-4555-838e-c0697c9082f8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b9911c-94ad-4384-ae06-c2ccaf55eaf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b567ba2-565f-4783-82f8-0a2c4a38bb48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb401f3-03e7-435c-a9d0-d8d569dffde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87367260-c019-4a9b-afda-4fc47f9152a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2fdafa-152f-48b0-9188-b508925ec303",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c345a5e7-3159-4971-b3eb-0c2430583c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b65bf12-c005-4956-9fa0-6a6dc609565d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b068ccd9-e04e-441c-b614-b4ce69d34fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dacb13c-bf7a-4af6-adbf-acc9c47a942d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3dbcfe2-260a-491f-9ea0-e2525de3edb6",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33d052d-0ad8-40d9-a679-2ee78cb3fe92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c03027-ea81-450d-94b2-5073ea257f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51813681-c375-4dde-b4e8-c8c8d96fb35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0b5dc83d-6869-4754-9674-40d004dc4dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40ef88b-bdce-4aec-b2d1-c096080b7d49",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407ecbbe-f4c2-49e5-894f-e5ce15bf0410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a936b0-43b9-471f-830f-f2f81691e8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dac282b-df9e-4dee-9d38-a95e72fc45c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "965957d6-11d3-490f-b601-d15dd814ed26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d4ba39-0d51-49ad-96c2-7289e89b312b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b419a2cf-5aa3-4ee0-bef7-9b376da08baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3448ce8e-15e8-41cb-815f-3b164bd3d16f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdd0550-1e6c-4cdf-b507-9f66f0c97daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb681616-c596-4a1b-baba-79cefeda1a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a07aba-3049-4cbd-92ff-0c97035ab18e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfe5a66-a4eb-45e0-8712-0d02fe1ef84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e78ee5-019e-49fb-a56b-96c021d5f798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc815b5-7a41-4edc-8664-f1dd09eedcdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5955a3-6889-46bd-8370-3838040734d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a8700a-7ae2-4310-b6f9-82dd1eb369f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe93dc24-2827-49cd-837b-c704ff8172a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39646088-89d0-41e3-abbf-341d069ff35b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59fac979-2dfb-426a-9a7a-63e09437d18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcba9c3a-15c2-419a-8480-63d04b76ccac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92277d83-d4a2-4103-bbfd-3e1a012e0434",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2c5141-41d0-45ae-ae55-0b3bfa95a8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f7629ff-d827-44c8-b352-afcb8968c06e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd882e40-c604-48f3-81e6-a02738c1cde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "42123509-162a-4bb8-a005-9ee3191cb7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d7bd75-fddc-4bfa-ab4e-cf94cfea8450",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f332502-128d-4296-8b9d-9a5fe1ca2f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c50e6b6-05a1-4f90-987a-bf61dde15063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ecf1c48-40a2-436c-9ba8-0ad69279277c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "31211e79-8d2e-4713-9d9d-30499015dd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a29b3ce-a5fc-4ae7-b781-9cbd20f8086d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33771b1-2ac6-4369-83fd-b005fcce12c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f44f17b-e66e-4baa-bed1-a20d6b62a68a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f241cf2-5b9b-42ea-8995-5dc3dfa6d80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3067da-0ef7-4be8-8bde-843d9f6bebdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12d3b78-82ed-4599-a45f-92c8f9c05d83",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26268200-e03d-48d1-bdda-71106d4eae04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c88282-040c-4c03-810d-99116e8e9176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03fc7f66-4693-426a-9b1b-c8f5fb188197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2b23cf-6726-4f90-b22c-706c57f41ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20e9a7b-f02b-4b5f-a2c8-cfb8b5b80ae7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a549da10-439c-4971-91d5-8ef0869c2fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee11b786-3632-446f-81f4-45e517f8d598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4fd70f-ba20-4b33-bb4e-442f50c4e695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "febd97c3-2778-4274-864c-72e4f830df71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56f052f-e2b6-4f9c-9eb7-49fb4ae85dae",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db091bf3-eefe-40bd-88d2-187871336071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b907e0fb-ba5d-4610-90a5-353e0ad84f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afac313f-6204-4c4b-b363-2bf7bbbf43cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "922fc0bb-87fc-4901-9c36-139a591b2fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373fac53-8c4e-47a7-bd1a-cd551af349d9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1bb200-e28d-41c5-baa6-5b4a3572d5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b5e7e75-7079-464f-98c2-34c3a8cede3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa8fc29-6902-44f4-bade-43701b9a7e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20cc3b59-5368-4d69-b959-bcd29fe7ffaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fbd1ae6-4e7a-4240-ae9d-8ed83ce6db93",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29429260-69e2-4293-b704-d8d5b7a74169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da28614-e4ea-49bc-86a8-05935c9e71b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20d04a7-b2c0-4387-a5a5-3b454034d043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb466ac9-9a21-4260-bb35-5a92859f8390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d235e75c-28ce-4bd5-a0fa-0a527eaf052f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7a435c-3af5-409d-9fe6-e71328533403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d56254-f681-4eea-8b23-1b8a7a3938b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5806c157-1725-4142-9064-330426018820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff52fb3a-f45e-4901-b430-f866569936d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d74bb27-705e-4d6e-922e-795424d888a5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fda2d1-ea4c-474e-ac92-a744786baf2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16639d95-506e-4a8b-abb9-e61f88d0d841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a8fbdd-0d28-4c97-b18d-bac34b55981d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d7ef12c-bddc-40c2-a050-cdc50bef1200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52bec9f1-eeb2-4868-a254-665fa805dc8e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f34f886-8aaf-47a4-ba62-16c5cd431a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e65ddf9-f7fa-48cb-913f-a4eb578a4011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8038f7d-627b-421c-9dbe-16d4ddf64958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6db65287-c6f0-4f61-ba75-1d65c16a014f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b22d49-e9df-4ff0-92aa-ae8fb550a0ee",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383316a9-67a0-408e-9f7d-f979a809f2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b68cdede-922c-4d5d-ac75-de28685393d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a586e5-9d43-4e0c-acb9-285ea39f9582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc856362-c62b-4f81-bd00-96fdbc389004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199b8104-1b99-4f47-be8b-88f1b929a671",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68784f6c-89cd-41b6-9431-726c438a3fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ea3aaa-60d8-4fe6-b429-437d9b87265b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0e1401-2047-4158-a06d-feadc365acc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "53b43d66-e8f5-4691-b5bb-50707c2a8536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80380bc6-1f28-4ae7-a218-0c2a063961c7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdb53cd-a928-4f62-97d3-5d19f7386f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed3b5ef-743c-49d9-91ad-dfba8f84289f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c856c6-efcc-4c24-941f-c69d2dccb64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b825b1-4a98-4fa3-b378-d08d6ed48c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e67b52-2c11-4c11-b39c-1e3b25eb717b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8b3673-e4e7-4cc8-8f54-35751d6f88d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0481f7ea-7381-4957-ad34-49e09dcba59c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96551b19-dfff-4c08-a348-a5f9aae49c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bf2b2fe-e17b-44f7-b3fb-50df04bc15c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b185930-727b-4b0f-80bf-e7e31d61164e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53057a2-6b9f-4b6b-96fa-4725e37c8b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5adacf91-f3ff-461d-bef3-e8ea74b698fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d4c5ee-7ca9-4674-a548-e3e3389419d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73b1242b-3f7e-4fc9-88e4-ddaaa21d89db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4914a8-ed18-403f-aa20-acf0da5afbbb",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4c5dc4-d05a-4772-895e-29b1399b251c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59a28af-6f69-4d82-be3f-06ec2da1ceee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08512056-e5c1-456e-9200-acbd764884e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30ccb80c-494d-479f-86f9-42fcc276aaca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133f9548-153d-4491-bb09-3132d47d9708",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b87fb3d-ef9e-4141-90b6-f059e9ea80ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b754ff-41d4-4c68-bf05-a64179250053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abeb134e-1d0b-4ab4-aec4-ee3fc30398eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99b00b69-d748-4b68-8171-cc3dc8d1b13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848e8866-6c9a-45c6-a16b-db52f6b32837",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf1ead3-1d92-442c-ae9b-3a2e1a6a0bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7dff927-cc3b-4bbc-80f0-b37e45067712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c9c000-e9ac-45fc-bce3-f3ba05396dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58b3d63d-d571-491d-b4be-40f4c4556889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832af529-4fb2-4897-b533-3243890bd5b0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc095ce-516f-4cf5-84b8-259cdbecb2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0951c2-449d-49e9-b099-f2fdd41e2d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309f6868-e0d2-420f-bff0-0668592accdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d1dc18c-fd15-4dd8-8269-d8de7d99fb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8128da1-5642-47e3-95d0-0d5484f4e31e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45382839-71b6-45fa-ac5d-d632594ebad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "257b2074-2dd7-4e97-8a3a-b319a17e9b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62efe593-5750-4ce4-a3c9-0d6cab530ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "25dfed01-8d2a-4c35-a931-cd0910d5104c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29f2fe6-17ab-4817-9faf-cdecaaee11e7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c99825-af67-493f-8778-13ee205d110e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db82b58b-4f08-4b2f-b9c5-221029e5289c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f1e3e1-d478-41fa-b360-d1c2866d3368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a74d8adc-d478-4097-a072-464816cb5b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290691cc-7568-4744-b265-f2e4cf747488",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6b229b-a0ae-48f5-9a97-d60a59bc5250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a80a7c-6112-4b9b-9708-6694614660ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae277a8b-2b26-464c-98e0-64792ae2dfc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbd480f9-9037-4745-bd7e-fed8a9c17ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8ae15e-0849-4f24-9c34-3d592546c857",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd8ae38-d93c-456d-9ab3-d0f588a3dac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e92124-24ff-4089-8db8-b237a8ec5f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9ac0a0-0287-4573-a98b-2e5cc5531e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a5acdec-659f-48ae-90e5-910848dbd936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171c5a93-84be-4619-888d-167b4151b4c1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759fdc5a-a4e0-4243-9e56-72e53355a10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c428a553-2de7-49bf-8566-8cc0f37e88d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ddad94-7344-453c-a338-c58523286559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7d0514-ea76-4375-a1f3-5dc4db885319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee29bf4-6e46-4cfa-86c8-cf6c511a8053",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2988faf-f341-4635-ae57-b8b065c24d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdeeb606-4e54-482d-9ffb-6268d232917b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f238dce2-531d-4815-8b85-69620f8e0565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c235769f-b206-4b76-b446-a6e0e1529610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8973fa33-c3db-447e-bafe-db3f552dd7ed",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "290b3929-598f-414e-9359-e088755521e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f44e5c-0393-4425-a990-3bb6f8f93983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9966e6a-30c2-4845-8091-d9aaa29c0eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "740e5996-d718-4a26-a35f-d827acd61071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236645ce-aff4-4904-a104-f96d5c0ca2b2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf608e8e-e4c0-4c95-a9e4-186d0796bd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e7a475-f4cc-4927-9330-e31f52449799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0748726-f854-43d4-b5dd-38be517b71e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "04ea0ac8-f81f-418f-9cc2-0fbd20d3e457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3ef9a5-fe52-45e0-9f1a-966d7ddcfc88",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2e4771-7d82-4e36-9f3d-3fb0281cb4f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede54d79-23f6-4184-bf61-eedf7c7a4c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06ec586-b590-4cd6-8c6e-31f9ded9cc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebcaa554-0af8-421d-b62c-fab6cbe82bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83c0b20-2c3e-4d3d-be87-f750ef2d336e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4222cac-b634-4b24-9f9c-caa23eb8c279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ec5898-b830-41f7-b9e6-4881b8ff386f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c73e72e-32bf-4022-9a3c-8e6d3e4763e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d599615-2dda-4565-978e-7fbb688ff1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27df894-4143-450a-9969-cb54cede2178",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9473a5d6-a099-43be-9635-f557d2645ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b932bb-7c3c-4ed7-acbd-481cbb925c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a41579d-b916-41be-96ab-c76dfa77b242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "74193f79-3da8-4acd-9e78-a31cbf1d1346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd5bd93-01cc-45b9-9d07-6bd8e08aed0d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d84ae76-f307-423a-9a35-bb18e19d590e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "82fc3704-7694-40ac-aa53-5d0b2d53fd31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ce22fd-1d20-4697-b184-5eaf42078d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff6e933-dbcd-46d1-87ae-22de07b06f2f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5fa27793-a0f5-42fc-b1e3-e6d9acc38ff4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c3f9a20-d98f-4c46-8fa6-14157c451397",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b54ad79-da16-44d6-a72b-a77dcdccb16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b845ad51-0661-461c-afd9-2fbcf7892037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3046635-4a65-4f81-8a0e-ff5e92e25f6f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f5a7327-4737-472e-98ca-093f1f8b1c38"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e697ba78-8b6a-4959-9063-f6d2d45687d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "307ce1a2-6050-4633-a3c8-05a9d60f50ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8e7013f-b51e-4634-a92a-6607213a82e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b273966c-b879-404c-8ccd-0d932e5df836"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "495988ea-a75d-45ee-acf4-374b4eec6f65",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a540b4e3-e076-4261-9831-239a100a345d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9b09ab9e-3fbf-481a-b63b-3fef4dea1e02",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8f95b9b8-c1e9-4847-a359-1505b4dd479d"
                }
              }
            ]
          },
          {
            "id": "811fdce7-da2b-4113-ac86-fff108be81c4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b6dfa955-cf93-42ae-a07a-5516249f4398",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "fb1394bb-dd40-40ae-b202-e14213934aa0",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94055cb4-670d-4f24-a050-12c5d15ea90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b7605078-4849-480f-80b1-f8b1e80039b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5af441c-b3fe-4186-b18a-edb2ae04256d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50076ef9-350b-422b-9b95-d4ffa97b08a8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f5db2a4e-86cb-4b79-8a2b-e77b305a4ffc",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "054696b1-5204-433f-88e9-53fd0bc6bd01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed05b9d2-6d74-4151-9ef7-83a28b764cc7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "487e231d-fd7d-4e9c-88a4-87d26dfd1adf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f47c2af6-e72e-4657-8bbf-af75d36c57b4"
                    }
                  }
                ]
              },
              {
                "id": "3150d02b-a180-46f8-8d9e-be101744a462",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7fd4dc5-bcf2-417c-b52f-e7b2bddf99a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19a14cc2-77c8-4dd6-bc49-bf011e3db27a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "145509a7-335f-4cc9-b6db-790de200cf6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a688daa1-eeab-4f43-955d-540dbfba7a8e"
                    }
                  }
                ]
              },
              {
                "id": "39bc0662-3045-4503-9e0a-fdfe747cbc6f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a66c8ef7-ae6c-49da-a2d2-b5a0e588bcae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "13fb3ec2-74d4-4164-a0ff-684a1692ff74"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43a2736c-1fb4-4478-bc12-7ce42c40c41f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5627b3ff-3ff6-452f-bd4a-b827598f3d23"
                    }
                  }
                ]
              },
              {
                "id": "fc2d6526-790d-47c8-8fe3-712d450ca6af",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a811eb8f-1888-4557-bed5-647600c6c946",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88bf29d5-fbb8-4eea-9ed2-ded0d559234c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68ae3ae3-bad3-4569-89a3-bc730c10fbb8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "cf44d41e-e025-4c06-97f0-ce4f0519a2b5"
                    }
                  }
                ]
              },
              {
                "id": "6cba69f5-3ffc-4c68-a609-2d5023a5187e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ca56526-7a58-4c3f-8a4e-f5bcf29d9ef9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c526c8d7-edf7-41a8-9843-ea5424c7e6b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b253ae8b-3ba9-44bb-97b8-ce0e3bfe8486",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c0bb8fbd-3112-4d69-ac2c-f906ae9f2b4d"
                    }
                  }
                ]
              },
              {
                "id": "a05f8221-b603-4fc1-97a5-4bcd62bb0b12",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4e56b46-2bc4-4f19-abe2-e981bd382ef3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "242a3a2b-8321-4e89-bceb-cb03d58c5130"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9763b622-9ea1-4ece-aae2-f1ee01899404",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2e1a778a-a93a-4a50-83cb-5ea062389ff8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9c71b227-9532-4250-adea-a60923d2e0fa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f83b420-95bc-4603-9403-6a887d7ef368"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2a03c214-f3e0-4d2e-b949-bbf1f74d9207",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "233c579e-83fa-4cdc-9886-84ba63349d35"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d894734-0fd5-41cc-ae55-a6cc96a55aa6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c1cfbf58-2ae2-4229-84be-1f934d70a824"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2f6c712-cfe4-4dfc-b859-d0eb834c779c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "710b1e2c-f6df-4e8e-90b4-9cf5cc5e49be"
            }
          }
        ]
      },
      {
        "id": "eb5b152c-a181-47cb-9195-cf433237f2ff",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1b90768b-1375-473f-8905-b49a65e76098",
            "name": "Negative Testing",
            "item": [
              {
                "id": "25e41be3-dcb5-44d5-b933-15ea604d5519",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e1d103d9-1cbf-44a4-9bda-7292ad2b1065",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c061b8a-19c4-4309-8415-33881c94562e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4888e1c7-4d2b-4c30-b8bb-d3c31246f67b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198ab300-38b2-4add-8b7a-d79f64a9069b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d09f56df-4688-44a6-b547-b33814e422bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3124bfe7-1197-4bb0-9740-c56f420a1706",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae13ffad-4473-4bb4-9780-10de5313cbf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50d40ae-1519-471a-9a74-47936253f016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3739d2-9c51-408a-bc8f-fafe41d6919d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a01e1af9-2b7d-4d75-a46f-bd6779f35657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa17359d-0b14-4908-945e-e27efc3a4ecf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9adcb3c6-1cca-40d8-b300-ae7188880d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecfe87bb-a214-4018-9dc9-2aca333ad882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2c817d-fc09-4414-914c-0ba99168b9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc92e3bd-a95a-4e47-aaf1-c89e54fc795b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea81b4a-4e9d-43f4-b466-a77dd1d6be7a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e20f5b-9afa-458c-bf4d-f2667ead088c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "703a0455-ce06-4609-89c6-ed01d39e654a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e84fdac-a0a7-499e-b315-8266b4bb8961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c83cfe67-87c2-45da-9e9e-db7bb6a123bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6ee50c-771b-407a-a223-aae1bb8487c7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1844dd5b-21a8-41cd-963d-3a91c9135f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79776b22-0f0b-46a9-bbca-f3b8b8a9bdd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52fe6f9-2152-418f-a6b3-41651288013a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d41be068-23c1-4a11-b79f-f88b3cb62df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcea31b5-f4e8-4b0f-a61a-9e2789e26495",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e62c3e-0197-49ff-b2b8-7dd1af9abe2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a32887-376b-4cd3-9193-7709b5810104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2d6d93-7255-4e2d-9a68-551000e96b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "66c47e6e-9f61-462a-b271-58df992649d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03679527-9a0c-4227-a717-c918a819041a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8da808d-45d4-4538-9394-fe3e48c25953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf264cd8-8b4f-4243-ae8e-f012e50ee76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d0bec0-36ab-4ec2-a91a-90ae32180136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8833b39-4f3d-4f48-ac43-f970aede0b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1274fb21-b804-4005-b060-240a5612604d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74aa59f6-24eb-4d6c-893a-196e35aa777b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b990a12-ccc0-43b7-a83d-bf7399cf2fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd2978d-f60c-463f-8011-5cf4ab107a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ecff804-94f8-4bf7-93ba-dae0823edea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f54b061-94de-4fea-971e-710559c16b8b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91898b25-15db-43de-8a3b-c07a114b2658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e9c342-672c-475a-8913-93d62218b760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e58d11-bd13-4e9c-a63e-d4d027aad840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05c4be0f-49ed-4637-8955-8c059157cb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92b6d8b-f9da-4b60-a34f-1c1cf7bf0e25",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbdf1b4-9218-4997-a01a-80a21896fb89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae62868-74d1-471c-8fb1-8866d88d7ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797df464-ab95-459d-bf82-db42fe9408f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab4234df-5acd-4105-87c7-7d71aa794db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaad5bb4-ce0b-42a4-84e8-db91d30b1fa1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29158c27-8f65-4e06-befb-941e9cae65a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2aad617-dacd-496b-8894-f803cacbc90a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82c7628-f30a-4a24-a741-6fa3ca05e52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "10ae9d99-2c7e-4ade-9cd4-be7afae2ad7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb76855a-91ad-4331-aa6a-094222054d16",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1962d575-3620-41d3-843f-bfc2ce855486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d8afa5b-b05c-4870-a496-7ddb21abea45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68419348-58b2-4204-83e9-f43740dcf44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "81581c6c-a076-41a2-933c-d587a1e4a1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13183b81-0101-437f-bbe1-d5f302564603",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebb2a1f-a7ca-42d4-a8df-5a03c12024e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb485b2f-1080-423e-bb9c-e9d9439b81fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60571258-135e-442e-90cf-1672bb6919ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0f8d17e-affe-4ca3-8b9f-727c36c66ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ee7571-7638-466e-844e-fc51bcd1285b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9ece2d-e24d-4563-a324-b1fc914d1cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e1bb9c-2288-4680-858a-7a8ddeb72c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62cf0a18-003a-4d04-8c86-f99bfd19d213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6565811-b49b-4c61-83d2-15ec75796ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8b4019-950c-418e-bff3-40646c61c5ca",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6577191c-21e7-4b73-94f7-e75319562dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc8e9396-ed47-45bc-99ff-28cc9654a9a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029348af-f5dd-48b6-917b-57f0bc1b09fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dcf99be-cc7b-41bf-bb2f-a72c5a1e4937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b687e84c-0945-4ddb-adbe-2481f67fd350",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bad3efe-f571-47b8-864c-d8af35e900bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed151f40-a4bd-41d0-9f0c-316b64fa622d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73a087b-7a64-40a8-9469-53639cea755e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "628f71ac-ab64-4464-9d5f-8f6909cb7f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22a21d4-3787-44ac-a100-b0753225d924",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7f46af-d43b-4980-be70-38a5899f5e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99d93b9d-ac03-4302-8920-d422118e7d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a8d40d-65a8-4272-ba3e-94fdc3248eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "55a81d6d-46fb-4d79-a557-dda12f2371c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15aff89-e325-447b-b93a-c2a836712a14",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c06550a-7d92-482f-87b4-d02cafe3a586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5753b2d1-4be6-47ab-a5b1-28acd69bac72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48439853-a7ab-4040-bf47-d54cc442565d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d332cd7-ef23-4fda-81dd-3aa9c00306b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0193a0-4e63-4de0-b277-dd9097a4e0e1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d677313-405f-4cb9-bd7a-4905d9a5cf96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3fd3b79-f89d-400d-95f7-52b4d6c597e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699f08ee-7783-483d-8e0c-6e7ccdb3ccda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91b1e975-cf7d-4bba-a4ba-184ed3e9957d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d3c3f6-d7a8-4c23-a1ea-c8603901043c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74924597-259d-4c31-a119-3e40b1b864b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5c9a97-e607-41df-9a86-bff0c73b40a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0485688c-2aec-4e3f-acef-3f131e519149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db36310b-294c-4048-9f50-801361930b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2859af-75a9-4de8-826e-59239c903969",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a63aa65-3d95-49eb-9088-b4054a1f360e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec9e376-001a-421c-a293-0148f9732ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56004cfe-2ec9-434d-9066-68b405555914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74df1e19-0290-4d78-8dd1-3b9a678b3196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd00c493-5d21-4d7a-af3c-89f951fab063",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "273e4619-7a7b-4874-b486-4535b93944f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1f80bd-7a79-4dbf-99e4-b0fa592f9ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf9b6be-b557-4266-9c77-b2dd184242ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "567d9117-0ce0-4706-bd42-8d657352792b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0131e014-deeb-444e-a860-c74e70504adf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff7390a-a08b-42e2-80bf-17c2f9f880b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2226bb7-0c94-4d2b-ae0f-848cc717f5e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eac33f8-f1aa-4af2-9830-78e285f867f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cd76e76-e259-4ec5-97ed-33549bbea3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddabf0de-4a44-45f0-8f78-efe8e62931a9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a5b94a-2a71-4a63-99ec-17c240eeb73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c45a3b5-d804-4f41-b84d-fadc3e3eabca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c8f36f-3796-4d38-821d-14c19e94c4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80bdbdf9-8d3f-479e-a802-eebdf1dbcc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16111f4a-1d36-4ea2-8764-68580128032c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31edc4bb-f560-4cb2-9b51-716537702dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7ba73d-4ad0-4e14-940c-8e41843fee8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cce6d2c-7910-4cf6-a424-08f83c811ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "332da197-4493-4d05-8455-894005e78196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ec7cf4-912b-4592-9ba6-61adb83a2f5d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d090b467-083b-464b-91b9-239288b9ae4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bed1a66-1027-4bd9-b32f-af7d08e16948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9c87f6-fe3b-4341-be3f-02d47d031906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbcf02bb-da3b-48ba-a542-eb351f1278a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bee0d42-a60a-4f55-89e8-ffb7cd0a7c4c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2899177b-e829-4db2-bb01-aa2d26324f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3e39f7-2d5a-4bc0-aab8-a990f99977f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6f9636-4a10-4b68-aa8d-d511fbf05154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62d06e48-38b0-401d-95c6-363fbf4b6fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d4dc80-ce00-41b0-a08c-52a18c083c52",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac40826-b011-4299-bd93-62055aa15e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b02edfc5-3b7b-4b1d-9035-6b6816ef2b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15179cf2-194a-4a46-92fb-152abb5e97b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3436908a-8410-4cb1-a414-6c7433f1b113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6b9055-355e-46dc-9701-30eb69ef7350",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90630b28-9cc8-4e4f-86ea-210b873e1dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ba3b3f-7195-4a31-b690-895f7fe6bc4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46f6fcc-00aa-4679-a23e-a38b65ec4314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e023529f-1055-4da8-824a-c32317c0b340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4364a3f0-f437-4750-b93c-3e5701b1756e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c254f4c1-06f4-43e9-a57c-5eee34050b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d381178c-19a4-4b36-8c1e-bd0db0da1ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1292204-505c-4f43-95ff-00cf49bd9e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12130e89-1997-4ddd-9e07-0f6641f56666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53c8b72-f594-4253-9589-b2c8e3a80268",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4388015a-1e05-4298-85be-e92d7ffe2ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c36b0754-c32e-4afb-bd62-99d6f0e91181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436d0aa6-d965-4f02-830f-c0ba78c95a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b368a09-c6cd-4854-b74f-4bcf39f30f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28b8d87-c1db-40ee-a850-f75b7b4e3577",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e1e3cc-a394-45d5-b26f-db437b78bd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf673c19-b128-4a41-a26d-d7f7fbd4da2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19804602-e117-4059-b5cb-de413b372da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03c4432e-23a7-41ef-923e-6023025306b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42556449-a97b-4c80-9819-fa28fad0b87d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed0e1ec-0085-493f-b198-114c134e33ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a7681ed-d98c-46db-9559-9c473c9776ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182a85ac-96e4-43b5-86f6-e4d5454ff592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c77ed81e-f67b-4ec3-bf03-20cdb9affcf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72363935-1be0-42d9-8734-4ec70ffbe6e7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8451e1e2-4322-4ef8-be09-c19fb9ac55eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548a7b13-6c7a-426f-a991-2fab6574b3f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451005a2-9137-42d6-9b7d-b00961220e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8afb466-3b56-4fa8-b6a5-c3a8d485160b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2388cb-5393-4338-9632-3e591ae83507",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03bb2df8-12aa-4437-bbd1-9b4ec40f0e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38cd2496-eaba-49a8-bd99-378d7dbd4712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3268100d-91ec-4147-b64d-82f987c82025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de2b7e98-6b04-4ebe-91f2-49bb040a0889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6134ca48-60cb-4e82-8fcb-9a4b3d4543ca",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6c2919-02d9-4ef1-8cf5-4d34101344c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8741a312-ff13-443c-9c85-45eb9d74e8d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ad6318-8d87-4534-893e-52b1b8652637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92d63511-234d-470c-9ab0-42eacd4fa7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3398214f-f67f-48bc-8bc2-8b0207f4c731",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af4d8fd-0958-4fea-a39f-82993af0db56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e98cbf7-e39e-45c7-8d71-091a9d0b01cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554e4da7-04e4-4467-9dc1-e9a82df88b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "686d373e-115f-49bd-9d26-72276073092c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1d34e099-5d85-429f-abc5-83002de0813b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe5983c3-d5b9-4386-969a-c2faea911714",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67501b74-45d3-40ea-ae6d-17f9e44ac633",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a734f4ad-2943-429f-8dc6-791e11c7caed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "710a4e00-b178-4577-b1f6-22f26efb4220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b4b18ad-42bf-4d55-b66c-c951aafaa874"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "193ff474-9094-4a8c-80f2-6900674d3176",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "572b8c3c-2819-475c-86bd-8889229c2cb7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0c63bbe-bcd1-4d17-817f-cb5aa18cf079",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a00bbe50-2649-4425-b117-48be18a01892"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0d74242-0c09-4339-9b1b-dcd7ea7079f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "69e991e3-f449-4d02-b64a-18aadc157f78"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ffc8e480-dc5d-47d8-a18e-e6dc6111f04f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "046437ec-f80b-45b8-b959-f0d2bd78de23"
            }
          }
        ]
      },
      {
        "id": "de34987a-8dc7-4929-9cf1-6acd3ef71d4a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3a85c9ca-3c7a-4016-b5ab-acf89bddf899",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d415d03-9a04-4bc3-ad60-0396b8a0d75a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "754dc379-290f-4739-ba7d-90b52186f7f7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614c6111-901c-4e32-b2d9-ed1164a0f9c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0cc4e80-d281-4315-8c63-5ff6b5b988af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ccde08-2407-4712-9c92-5059ea76a08a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba96e91e-94a2-4337-80e5-574c337c49aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19bd3eb4-2bc7-4903-b7fb-1964363f8a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6ced0c-2da0-475f-ae81-b27aa293b3d9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f5f0e7-05ec-44ce-a9cf-746abcc298f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a67a7bc-923b-4969-a3f8-6c960583b040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46291c82-be54-4913-a287-aa765d1e5377",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8dadd7-d382-407f-81a6-b11c7de071f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad942611-93f6-4429-8cf9-60056f4525fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcc285b-ae67-4e75-af0c-eab770d3c267",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb6f69a-7fd8-4466-9ab9-07bff537aa5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca116715-7343-48a4-b340-b8aa6a354aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32005b0b-dc8f-4223-aae2-9b03719d6af5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53aafda-27c5-450c-8678-04d75af16e14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6107acb6-ed33-47be-a9a6-c69a943adfcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ec446c-632e-4f19-bfea-03e0d54fce7b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d740d86d-67ae-4697-ba2b-6462d635eea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2357c2ab-495b-4c3b-b5ff-c72ff8e657fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cec6eeb-c6b0-4dc2-a8a3-abf709240e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e010d8c-b544-48bb-82f5-1a75fdd2d135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b902009-e209-4b37-87cd-761ad5d94af5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4caf5f54-9534-4c81-923e-55ad5bd43fcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10643518-1897-4671-be3f-dd4f14660552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00d786c-57e5-4c0c-b0a2-ae2718a778dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a0ce87-8f7c-4a3a-bfb8-adc49e2c9217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f325aa-bbd6-4170-8783-bf5be748a51c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f00bf1-7f73-49db-b106-3abb3330cd9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86be9185-f36d-4cb8-9550-913f097b2724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7dc8a79-b076-45a4-8589-93d7ac080a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e44ab57-da09-4270-be31-a875a7ff1c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7826ebf-b01e-4c9f-b500-7dee4491991e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0126b8-5b6a-4e9f-890c-24940c1d1f04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14b6fa61-f2ea-488b-82ae-37af50c8102f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5234935-5336-41d5-bae9-c9170b06dd83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a2c0f5-6516-45bd-963f-98a3cfabe27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607f9425-4fba-4c2c-81b9-004cbdc93494",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c4c328-26d3-4e9d-bddc-54104f19ce86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86afac53-0783-4372-8cee-4c52e9126009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa5dd93-3525-4ed9-b8d5-ed8ee7a9b6e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f43d2bda-1a89-47a0-8350-fa81bc7d2d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf2a3c1-c4dd-451d-b782-e5033b68f949",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4cf7501-7e81-4766-b40a-1836aecfaf1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b67b573-d9c4-4011-90ae-772bcaf6ba3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "029c25bf-2535-4286-ac0b-b999885c679d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cdd49bf-39a8-49d6-8b61-7e309c4b33ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5628a22-ac75-47aa-871d-771e927ff793",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcce88bd-b9b7-410e-ba10-0fb0de706f2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1956ea5a-9ab8-458b-b6b9-99243087fa51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7052a29-c040-40d7-82c1-ce0f3833a537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7676b0ec-293f-4058-a6b9-3bd945e49b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b323a682-9b75-46d2-b091-81dcaa3d5440",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda6f012-17fa-4051-affd-6fb760d83a9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "208630ab-3ca0-49b5-bb82-c9b82dc6c2d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12311823-5019-41cb-8262-8e3642066b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd42781-93be-4b46-9c68-0b27bf112bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e212e1f8-26a8-459a-a659-3ecdf791668c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1510f085-cb87-48ae-a521-c510e3397d0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2757fec-70bc-494f-a0b9-936b9f4c27a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2007a6-af42-4911-974e-cf4c067dafd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e297ca5-d357-4c1a-adca-25926e7beac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105d838a-f66e-4163-a40f-fde32ad38046",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2f9d14-4563-4159-aae6-ad5c2a4062c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68acb0c4-915c-474f-8b60-c73e2a184740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5a5216-0ca9-4cf9-ae5f-83887f6a0efd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a578c311-9e4d-45e3-87ea-78737cdec6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7afe8f8-efac-4c22-8875-088f4f0702fa",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2b4515-e165-479f-9e0c-c9d4a5429409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "838a50fd-e4f4-48d5-b85d-0275a957700f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f15f35-452b-4cc8-8d6b-282e14fa0117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a9474d6-79c8-4887-ac86-65f72c8ccc3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb212507-7b04-46a1-bf9e-afd26fc38147",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ca6850-8076-4a2e-be4a-f7631c718633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b3322c-3686-4c10-89ee-a6b13af316e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be01b78-825d-4a33-8e7d-497ea34c9e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d2fab4-3af6-45dc-917b-b507c2630f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c3f105-8895-4347-a902-bc9ab95034ff",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cae4eaf-a41e-425f-885f-a83901c60f9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d2e282d-0463-45a0-a936-7ea212118021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd005644-a8e9-4410-abae-49c5af749076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3af91ec-3bcf-49f9-aab7-97aead350ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c424f9e4-08a7-4514-9ed7-3a7e3d0c4d60",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18de736a-cd64-4c40-a238-3eaa7117489f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a16cfdc9-9dad-4841-af3f-e7800734d4b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01cf7078-c4db-427e-9bc2-eb33c42ff1e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2efb24ca-fb4d-4e5c-921e-249065df2f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833ad212-dcf9-4e0e-b1c3-40c46dbc2a6e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcb8a31-4447-4a55-822c-ed26546b9cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffaa9a63-d1b4-42df-b2bf-c9c9716c5bdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df55060-95bb-4b91-9945-59b1fd959efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b71bbfae-76ba-4e0b-b98f-cbbb24fb3a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0275334-46ea-4139-be06-9c8e3852ea7a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95611c8-97a2-4b07-807d-45089138238a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59cbb8d8-11cf-46a4-b721-6d42db8099fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdee1168-3453-4dba-afc4-7e0597f7eaa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d6f498-bafb-424d-8e2b-26d5b35ec5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65c8417-0dc2-43e5-b917-de7fc0d862ff",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3c9ab5-72af-4213-b797-4a73519cd5aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0110ba0-68ae-4691-9f40-f2baea8f5c84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18e1260-7746-40fd-b0da-b4e443b97c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c35a4d0d-98fd-4157-a675-dfaa197ac83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591f3b29-f5a1-4a5b-87d0-21172b422b99",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af8fde4-fcc8-4ab5-b3f2-07d07f518b0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b3a1e3a-73ed-40d6-bf28-bd05aa0ddbcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0476c22-a4d2-4164-8154-c8792ef10cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ceeaca6-1185-43d9-90b4-9c0eaadec5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc424113-5d2a-47d1-9e7c-e3ea211136cd",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c36ba77-7f69-4cd5-9d3d-b2c55e7f7eae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71884bd1-904e-463c-9596-ec455bf8c3b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "269091a0-427a-4494-8274-a326d54e0e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33344580-9cb4-4238-899b-4ab0b66876da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa973b65-f88c-4d58-9987-afba813d6dad",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf9f0a7-8d65-44ea-a51c-4bd3fc3463bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "159766c4-ca94-4b18-b2b6-d2e01c10f087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ce8441-680a-4e78-a079-215e38cbbd22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403bd508-bc36-43e1-b268-a95cbdce6131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c257cda-eea5-4ebc-b39a-2a617504e3f9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1ee2de-17ef-44a7-90f3-ebc71c38d7cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfbb2504-d860-4bc6-93f7-e5da3c613e74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86ff349-33ef-4895-b824-1119714c297f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c997b3ff-ac60-4534-a982-ac7d201af407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906e39ca-ccf2-4556-bf6b-699d3da0326d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6fc9fc-12df-47db-8d18-c774d2cc68c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39e61b8-bbc8-4bf7-9ffc-ff9925e35cfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afe3d46-30bf-436f-b99f-595719b80520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8341d8-9492-47a8-8123-53a5d94c5c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6784897b-c1f8-47ce-b5a9-1520bb70ba3e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf41260-68c1-4199-b180-47b91440fa98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f343d963-7d63-49ae-8f34-5013eb77830f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3adc5f69-889d-40f9-983c-020411d1e8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7edcd39e-8c97-4305-8b83-827fa6a50d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68d8ca6-3f1c-4b88-b69f-d64311cb9209",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b05d25-bf83-40c1-9ecd-423347009004",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f58a6548-fa7c-4b85-ab70-2295976a66bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d888dbf-c947-4c62-9631-447792061a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "469f6a05-ff02-49ed-87a4-793d0fbc8d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23995fad-2a61-4413-a238-d73f52633629",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c49f2b-a6f4-4460-96cf-2808cffcddea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "723abcf1-c139-4783-a0bf-fe9e2ec74d72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ae1ebe-e100-445f-ab14-602b81b6da4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17eada3-3e02-4e88-b622-8e7ab07e914e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aec0443-5573-4772-906c-631a1907941b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ae328f-8c03-4eaa-97d9-7477c96652aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cb365a4-f86a-43b0-a358-37afcbafec6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9540057-461f-40d0-b38d-d91c5757f5dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "650ca8a6-1b58-4994-9aea-f78f46251a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06368dc1-5166-4125-8da5-c93e805bce3f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc1ea15-9946-4b60-8062-a5a2ad746905",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4e5dab9-7de6-4e9a-8e50-221dc85c696a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89410942-0bb9-4265-b4d8-2b9f21ef2748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58db3d77-173e-45e5-9ede-141369d9902d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceac43b2-7722-4593-99a3-c66c04f5fd50",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc24fe55-b465-423b-bef4-c8e3ad6e9b0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32059127-9c8b-4ea0-b8cc-c68627cb59ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6abd45-9130-4f2f-a013-a2e817ee9985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "745d05b5-ec77-41e4-90cd-45e44329a95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501c0dfd-bb24-4f84-b2fa-d5cd6c85e511",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd5185d-ffc1-400c-a9a1-faa969731996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac1b989-f41a-4b40-b4fa-de718864fcc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e6896c-8401-4891-9545-3a0e1d3acd3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a02fc370-d782-4363-8bc9-b6b038ccb2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7d1497-0a42-4029-833d-1014c744e2c0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cd1fc0-1219-4be1-ab24-03046f1e9002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a1fa688-ccc4-4f75-9809-c789e2dede00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "625e192e-a6e2-4624-b6bb-0d89fef7ad95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f13c252-f1f9-4a19-a552-9c792f9ee0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6a4993-88d3-42bd-bae8-1627cb4cb0ba",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a08891-02d7-49c5-9e25-5ae8deceb41b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06e4bf4-2b80-406c-ae16-59580be15b64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13e8d03-1a3f-4b9b-8a25-278bf7c933f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b553e4-c5e1-42e0-bf55-05118603c41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c3f44c-8ab6-4510-8bd5-3c7a3b98de7b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a124551-50a9-4dcc-85f8-ceb5f39e5390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3061dd43-72f4-4a8e-a428-86d5775ee897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f222be9a-3e08-485a-8c5f-612f66ec25cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "452b76cc-0e89-4205-83e8-9e746ddc22a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891b1a18-b748-439b-8789-cb4d3da150e0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143990ed-8462-4d13-a3a3-e4e3ca1e79dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "335b79fe-879a-4b84-a9ae-f3f0687719d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e3b715-0c98-40c2-980c-fbe44223a08b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf57493-89a6-4b4b-8737-010a739b5d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a287aca6-0967-458d-8fbb-02c2bc6c88de",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d13777-36af-4aca-bf5d-4b85ed07859f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca55835-5401-4a41-90b4-8f19743a6a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "179bcb0e-d86b-4525-87d6-54a302acdc22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e18eee1-1a34-4048-a2c2-35c398a2390c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e885819-0648-4f8e-9d06-da9db2da35fd",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210425b5-f228-4628-8980-59196abf453d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "407feb55-5a1a-4d7f-8b0d-71d8820be48e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3001ae-d3f4-41cf-a452-5e9d94692a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753ecae1-dc65-4292-ae1a-88cdbeed2043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98452d8-b578-4c37-a37f-35fb59d8a0b1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98644a4-4fd5-4585-91db-398dbe70b29b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d38bb5e-6e96-47f4-bc3a-da49663a9d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "284eb1ee-a8b8-4d66-95ee-a291d847fa97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de06e5d-42c6-4aa1-88f6-d57db46be136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16a6b00-6519-4f95-b0f1-43bfaa6435ad",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de324d6-25d7-482a-8fa3-a5510c19ded2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a03fbcd0-eed1-4d9d-acb8-bf93f20f6f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef666cb9-0221-4792-b672-cd640251b2f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1518c66a-369b-4977-8fdb-d336181b4a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087b2926-5955-41c3-b0f8-1f8d5161cc7c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9a7b3b-dcdf-48d4-bf89-e9e8c27a43ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d594bc17-bbf4-4238-9674-e2a78b9dea42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77203d4b-551e-4e21-83c0-aef162a414bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0eb39db-9d5d-4e40-9934-b990fae33ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b115398b-bdf1-4a00-81ff-823a1d816731",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8f78a5-4e90-4251-aa6c-16a833c8970f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c473b4-6055-470c-a49b-e2cdb332c9b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c79e54f-de85-4059-8aa4-11bdc48d84b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d127ee53-b48d-4c47-808a-d77af37ed4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8794a9-219e-47f2-ac10-4ade075a225e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38aad890-62ac-4941-b3e9-e709ba947f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453e1e12-4be2-492d-a36d-191da792e576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9412b45f-20f7-45c7-aea4-ecc6bcc721af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce4d0d8-6ac2-4fd6-951c-90435ac5180e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382ccaf9-3756-4957-b167-381e123c3db7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6bec75-81a2-45ab-881e-7e8e71944153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a4020e-f1b7-4dc1-995d-ef2d1f49fa09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f785ca1-2aa9-4654-a326-da3307d9b54c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5183a0cd-a179-4581-ae94-9e0b1f430753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c955bfe-ff8b-4142-bdeb-cad897f4d0af",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f7e1e0-9f3b-4a28-90a8-2003433f6a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880850f8-6e59-4b63-84f4-bdd17bac8dce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe59d335-1956-49f9-8e3c-949e83141450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a3e6832-1960-4dd8-8085-52de7919331e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d6dce2-9561-44e1-a8e4-0a2ece04cfaa",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8edd9fb-681e-4e69-be0a-3d1547e22c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19e59aae-ecfb-41de-8da4-c16c5a3e02df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e23b9bf-5aad-42dc-b248-5520999aa814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53866d1d-c2d1-475a-b38e-7fc48773eb4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abea66e-d1d1-418c-8dde-3213e806c8b0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96dcc9fb-d1d3-4a8f-b474-3ec8006492ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bcd7221-d98d-4f25-80c7-5c0810143b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5af9b4-526a-4a57-abdb-b4f0b935fb47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3f4e50b-be99-4554-8be5-d6e8a9dc8853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde5c9c0-28da-4e65-a0d0-9a0a5c08aabc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd8ac03-1f78-43d4-b665-f08ceb213ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14469e0b-d731-48f9-910c-7d1ede4fb49b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c78d386-27ab-496f-b6df-301384aefaf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2800fc1c-a9b6-4a7a-9024-338c9e6a9493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64470aa5-d610-4813-b13d-c6d68ce603a6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ced7d2b-06f2-417d-a52c-e38f9099dced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f233696-3fc6-461a-8507-652536391f55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0412fb-1081-41a0-81fa-edaff20051f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1702439b-0129-48fe-ba5d-97ec4fa7e17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec9568b-9dc2-4ccb-810c-dbdefba7f3fa",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad31adc3-ae99-47ee-9aa2-b6869e9b0840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9982c85-a325-4eef-aba7-ab81cba86000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c0a7ea-ef35-4bfb-b83d-4efc0d807c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30ad771-c937-4ea6-879d-9fe0b21ecb8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3286807-1540-42d3-ab00-2ee5fddf7908",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45e32ea-4572-4603-a5d0-afcc82f9f399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c395907-52e5-45d4-b270-b6c80625f6a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ee208a-d20d-4bde-a86f-f47356ca432b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c44f492c-c5a8-4b88-96ab-1df7982030c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e8f411-48f1-4b07-a9a8-b217ff6014e2",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10eb107-1c66-4fbe-8a8c-819d57c57d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cda53c7-0063-4e1a-9178-74b7dbd4fdf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90db9484-1797-451d-b62c-705f364dbe8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d853947-b413-4a0a-a4df-d6fab8e971a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88686a83-0b0f-4313-b736-24e8500a2190",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f00c0a7-2728-4547-8171-ff80af8f0046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7734d1b-3d03-4aa9-9cd2-0b7da3210aab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab21b41-3bf6-47d1-a6f7-e822e03e9ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea6e3ef-7aed-41e4-9cc5-d023cbb19e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f672556-b43b-4ac9-968a-f076f4df031e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945008cc-ffdd-4a9e-8992-732f2d3c988b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23422e58-a6e6-4325-8ac7-86c6b7ef0211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e67fd3-2ca9-4137-a085-a7e00e3dbeb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0254d8ce-0138-4fd1-9d90-e39a9db6e52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc01eae-473a-4b25-8ad2-e418f80f2aa2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a7b7fd-10ae-403f-91ae-c69357cd3535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4b2f68-033a-4aa0-9cd4-df3462790992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b99b23-4bb2-4c63-89a0-c2f665f21ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28503471-2a47-403b-bae2-4aac371ff77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62b28e9-e554-442e-ae9b-65596bc51606",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7de17b-2d19-4823-8973-45f2daefabbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1020647-a35c-4dbc-a37e-7e490ea1f24c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb37585c-0581-4bd8-978c-5f4c8f1498ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b7555d-2cdf-4fc4-8273-861d7b128b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5b1a90-338e-4b30-84bd-c0da50b7d549",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43835855-9698-4c2b-b2d8-689c96e07283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67dfd71d-c664-4b39-ac2f-80ba6368e6e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a114ac97-19d7-41c1-9234-486ab14ecefc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b5cc3cc-13ce-49cc-835c-559cc2fecd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e91953-5a0e-4726-9358-8d982e997f5c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391de071-1cae-4689-a03e-f1f99016fc46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2738a81e-28dd-4545-86ef-c49ddeb63b60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9715f54-280f-4a23-ac24-a4914e07e8c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f11482e7-be6d-425c-adf0-c2ed31ba89bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549af124-1812-4904-8c85-82100ce49769",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb4c70d-d247-4412-a0c9-653aa973c85e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c562e305-f1e6-42d0-b731-c74fdd0900d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2adcf36c-6d9e-4188-ab93-f9ab9452d02b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d64de4-acd6-4d6c-b678-512c03ff8fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e6ea22-1d2d-470c-9eb6-8901dcf18249",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6f8ea0-b47c-40ee-b0d6-1b3aa23e4105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f36c70d5-603f-4c98-b5d5-30b4756ce42f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee6f04e-78cb-4b8a-a9c6-c676f5abb325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3effe40d-2fe3-49dc-bf61-bf2930f2a12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ef1559-b11d-44fe-9c6d-18ed9b68f664",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e115f2d-feb5-4155-8b7a-f4bba555b695",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "285cbee5-9239-45cb-b3cb-ae8a08961a8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa140cc8-c4a3-497e-8383-718aa3ccc04d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74685a81-cb0a-44da-baf8-e503d36a59f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1349985d-324d-4cde-8c5e-59d9b0717277",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2700492d-253b-44f0-8df3-7579dcf152b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d43b09aa-516c-4b02-bc42-33430f17b6f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25569de-ffa3-4a2b-9769-b38ea8390878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05eab3be-4586-4dfd-8038-4ff34713474c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ae0198-2360-4116-8dd4-660152828673",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b12346a-566d-4f99-b7bf-ba2b140494e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0efd425-adbc-4c7b-b3fa-b1b62d8df310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92dce99a-2109-44ad-895c-2f6c00928b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1094b6a5-2830-4c6e-938f-fb9dddbe1541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d9650c-4b7a-4984-8444-8afbdae95f64",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55943ec-0447-41a7-b0cb-30c68f65c752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebf74ff6-d626-41ab-9bc0-ebeef4a3f0e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45865f6b-5ba2-4252-97c1-7ad618fdcf9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a18a05d9-5f2d-48b3-af11-f95b472f385c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a861e53-b47d-4db1-8ef1-bd40e7ca7b54",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1bb619-ce0f-42bd-8ab0-b7298e4a9a30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d28c7008-a632-494c-b783-b61ccd564519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "298f7c47-d778-425b-80ec-f94505c20868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9290ec9-77e0-4037-9409-0f3d4c7b7261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496f0d17-21c9-42eb-acca-82dc626d63d6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a147430c-3159-4583-9cbf-778f769b40ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbe9b829-f293-418a-b10a-15e87ef399c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb03c9b4-67af-4b36-a1fc-cb08312a3868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae32558-9908-4513-a60d-ca10a7ff915f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8981522d-1f60-43b0-83f4-5b8faaf15e28",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9080138-852e-466d-8e91-66101a46443a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37359e51-6d2a-4ac3-b6de-80c3da7b9664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56643db0-ee12-4b0d-8bba-cf4546e29095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b40f7a4-8d2e-4925-becb-7434230e9793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d01bac7-3cc5-4ea6-9915-4ae56cc84252",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd43009-727e-4bf4-95c9-fc885d97947a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9df61cc-98bd-4ccb-b61d-2dd8fe261231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba51fe6b-f37c-41da-919a-40c9672123b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b217bc45-7a26-4ab6-af9b-8012cdcf1bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c7f1c6-ec40-4a74-b41f-23cd03c1b24a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ffa5d00-33b4-4a57-93d7-c1b9b9942f7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7557c6e-cddc-46f7-a157-78364d3137fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59adac61-ecaa-499c-a2ef-e560b979f5bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c47260c-fb83-48e7-8665-2355790ef3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc7b483-5a3d-48f0-9bd3-59c5647f8120",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4996060-a400-4619-b2d0-0ce11f8cdcc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eed9ea0-3e42-4058-a55d-0563c6e9fb9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be701ee-0e7f-42eb-baa0-4689d6af8457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68814bec-8001-46ee-be44-0dcd651a6c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31927f0-29d6-405e-856f-6a59869853ae",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5032482-b202-4876-afb6-b1eedcd7b5f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1fd8fa9-1614-4a87-b2c1-1d5ed39a6e86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37463af3-cd40-4b92-bb8e-2c9379b8ebf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e675b4-6835-457c-95a7-92a04f45f14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69281a7-1f07-4776-8d15-fac97b3e8abf",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b945be-9be3-41e7-9ddd-d364443f2192",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "687330e5-49c7-4012-a415-4f980d59617f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "828268a0-65cc-4df9-9537-2e29854afe1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ba9ba3-855e-48a5-a44b-4ff308c81234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d65294-b7c2-4433-94bb-7ddf6d799a94",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb3fc09-bff3-4091-ab5e-2e02b4d763d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7b9a9c5-ac6d-4fa2-8827-b13d4a4af91e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f2f0f7-95bf-4b88-a076-13ff48c4c00b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3fc72f1-cdc1-4885-b8da-64f85f099538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55bafc9-4492-4790-86f3-cf5faaf55269",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84446fa2-81d3-4de0-919b-039dce835de1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2feeb7cf-d2f7-4dd4-8102-a50aee476ad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c369ca-3daa-4d1b-bc2b-799cf7383fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a48076f5-baa5-4a1b-9108-e1d84e134cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd643d1-1abe-4348-8644-8f668f2bb673",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d698e5d-c2ff-441f-b8fb-ebf557f2e9b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "691c0639-1dbc-46c9-a931-f8ab49d1d8bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "759475ca-0634-4cfb-8100-3d4387067748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6579198-2bad-4864-898a-a7192b4d1301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900ff9f2-3d3c-4b10-a637-3ef7badeef1e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368978af-ab6b-4c68-9aaf-e60a68267da8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abe8e853-755c-4ea1-a5d9-20f0e46617bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd91c13b-1928-451a-817d-7bb2a6c20ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c81649e-5e6f-4b3c-ac26-0e023c98a024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8ed631-d132-4b44-bb26-768e605187b9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f70c5b2-d83e-42fb-92a4-b39820afcfb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37d878e3-cadd-449f-87da-617d755e7b73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a3a0c2-e369-4980-9990-da0a9344313c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6922a4eb-139a-443a-aa89-caa06f5fdadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121a07bc-3240-4c4e-a509-36d2eb30c2bc",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e733d0bb-d84f-4e8e-bd85-c2e30862fbfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae700183-11c8-4635-a25e-9e63c0df87c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f7b657-9286-4ab5-a50a-a548816b9fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f19bd368-fa5e-434b-bc85-91ca201b17d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5c85bd-2956-4d41-bea1-fe62295e58e6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1772ab65-46e8-4fab-9cf3-96e8da2b371d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d62ddd81-6726-4f7d-8878-3e9998b6fbde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a336de89-432f-4407-be48-0baf5d95a350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe98a5f-2003-4855-959b-6adb9073e46c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc33043-0683-421c-a675-0397a3c4cf6e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff92c39-75c6-41b1-92de-64061efbff4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ca2ccd8-2c03-4a24-b7af-7c1cfd67f7b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5dfb28-46a4-480a-ad81-4200d40255ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978b4d97-fac8-4f04-ac26-ce98966e2a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efda8f59-d710-4026-a71c-560f7aeef18c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83078847-6852-4e72-a6c9-71f68e083ce2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "856275c8-1376-4be3-bcfd-95bf04fc0c45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f6a6a1-c427-4e1d-9509-ca4f7bee2b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ef2b00-111b-4dce-ae7e-71601007fadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b559eef-011a-45c0-bf00-ddb88132eafa",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56615239-389f-4cd6-ae67-bf47b3f08110",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e5f4f93-6d61-405c-a01a-d7e5e591d1cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f15fce-869c-48ca-9411-052d40070d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed3935ae-72c0-4eba-9c5f-37cfd1ab271b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80234ff-46ca-42e6-ad79-dd448716a87f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa87398-b4a6-4fff-8163-1f4459bc6de4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f76c9dae-67e3-4397-b3fd-0353bf58a519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d057fe1-53f4-4bbb-b032-777b8ce1ceab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91bfa1e3-c720-48a3-ada1-13f579dcdfd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae83d448-96fc-4822-bf61-9e0ee646a7d5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f73b57e-5cf3-4903-9648-3a17004db4b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4e1cd4d-52c8-4563-9fcb-5505737c2a46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b127a5c-7c76-4fdb-ab3d-b5b9381c8b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d88018-fe4a-4cdf-86cd-e363a574d009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8fa016-d89f-4b63-be48-315dbd420ddf",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca61482-613b-4e23-9239-d01deaf37e5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ea2b08d-f4c8-492b-b7c8-d010dd4cf945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ec85f7-d622-40fc-b4d5-9af2ac0dca80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7bba75c-97a3-4627-80c3-0229ae6851f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256b378d-7bcc-4fe3-82dd-3a598c58daea",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f8beae-7e02-4cfd-9ce0-176f641fb245",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ce1de20-4a70-436d-8adb-50202b08ce8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11ab4cf-2c5a-4f49-a71f-eb1b3872c6be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa7bb802-8dac-48e3-b8bb-a573e74fb413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9e8248-4563-47b1-bfaf-369ecbd01af5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210614de-a674-42c7-8f83-88a53312d069",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf5b5e0a-1986-4828-884e-3ad42e8e0215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4660f17c-ef89-418a-932e-cc2ef1bd0222",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551bdb8f-e6bf-4a13-b88e-030bd4c92331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10c9a72-713d-4e77-aa68-49712cc3b0a3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2bfc6d-cb6f-42b4-a31c-2482cb507262",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50a1eeb2-1b71-4c7c-bb15-041e03f2b3bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "280ce87f-240e-4486-a276-2324ea7bc2a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a23133e0-6c53-454a-a64b-92c99de76a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22202adc-7b2e-4121-802a-dd561f654b74",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a75ff7-cf42-48b5-9caf-00ea7964fa8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06a139ab-49f2-453e-81b3-ea040a6bb95b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7175e5f3-60d5-4284-94f5-45dbabc9f47a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b540cf03-d8d6-4ee5-9ae7-132a406bb645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40380df-5440-48dd-8afa-c211f5e104b8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea65a59-3f6c-4b35-b2a5-eec030969b70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9fb0089-e55f-4426-9e86-24a745c82b09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a691f88-d3a3-4ebe-81e0-2819b2e50498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88cbe90f-cbef-4d87-a050-53cb41780754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13ff141-77c5-41ff-9ea1-b6f9f61e3b08",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1721ee33-8d53-4d96-95c9-d3ed13478875",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "093fc445-1234-4598-9684-cdbe60e94e4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21873266-8877-4e96-a942-45ee1ea08544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5507541c-6909-4e7c-8d4a-034cfa6e134b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b91ce5-c746-4215-b8d7-23592535b956",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721987cf-ed62-4d30-9dfa-941ce24a4a22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07639877-a74b-4d6e-959f-d2cc8a05d1bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba90eef-f0e7-4aff-8baa-729c0f5f5eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "090a5377-e768-4397-aab0-5b9cb514d9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559c6dfb-979a-4955-b0ee-876adc1f8c8b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a3edeb-240a-4575-b3db-28dec9b2c35e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71f53cbe-ee98-4e97-b761-41345f64a9bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78f9def-a29e-4ee2-8d6a-985d91f82a0c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "659c6f4e-fca5-4562-ac41-9f9d6357b91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37e5ef9-7f64-435d-91cb-eb626ba7e941",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc050fb-563f-4b2e-a725-bd1c8583ff51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7058e5a0-7bdb-400f-9556-0dccd891a3b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a90a6cf-747c-4bd9-b247-2ca5b64df0ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "338bdd5b-1674-4266-8ac4-b2055e49af72"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c87f9bc0-7c94-434c-873b-e5c74527e44e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "136afa12-e18d-4cd4-9251-95131274c854"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a393424e-1d22-4d5b-bc0e-2ae1b4438d69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a5e772e4-4153-49a9-9a6f-af12c71f8d65"
                    }
                  }
                ]
              },
              {
                "id": "1f7a405f-4112-4e64-8e35-a14bbe5d7a46",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "890a0f7f-367e-4fb9-a76e-ef468c97603e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5f5494-5e41-4703-b88b-15d05f0dfa82",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8f8fc0a4-65ae-4b15-a9eb-15eae5886818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac130ec3-1aab-4bef-b8ce-1ac779770e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6709e70b-1a08-443d-a02f-cc283c98e5e6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "040f52f8-e606-42fc-8622-85e72c415e53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "397f53ec-9525-409d-897e-6cb077dd9c95"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "14ef9a28-2d80-4c62-893e-4f450cbe4105",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b9cadca-5dd5-4aff-a9fb-a052e2af28dc"
                    }
                  }
                ]
              },
              {
                "id": "7a368263-7e61-41e9-a21a-90980ff3ecf7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "711d3d18-2dfd-4dc5-b09b-f4dd6214ed11",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e83c542-9f1c-4633-86e4-602b50151bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e125204a-2be4-434a-8721-a9b31c536142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e66d3d-3dbd-48d5-a25f-5df80b500f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1c6b94-7b3b-4ad0-a32f-33804040e9ec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "378f844d-aac2-4144-bd2b-201b105b61f2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8e3c19e2-08a4-4f9f-9e7c-36adeebf08ec",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "62de0f01-8a37-4b62-8c18-8479587035c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "eea2a206-29b2-4b1f-a762-bfd037ade949"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd620279-3ce4-4a73-a8b8-79ceeeb36ac2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7eee013-b641-47ca-be31-b333939bb537"
                    }
                  }
                ]
              },
              {
                "id": "a426124f-fe6b-4a1f-9018-eb1edaeb8fab",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33ff16c0-894e-47ba-be8b-530e8c3a0126",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "aa8db8ec-a4f2-4b74-8408-4424ccf40dc6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "691e6587-dbab-4498-8c13-e56f7769191a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1915fd90-79bf-4e22-abd1-f1289cc1a254"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f148eb6-c7c2-439f-a5ef-b1dbe17c63b8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "66d885d1-049d-43a4-a09e-60844515ad44"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87868c19-d32a-451d-b19b-1d10064bfedf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8244e102-bfb0-43c6-969a-962ea8d1bdd2"
            }
          }
        ]
      },
      {
        "id": "617581d3-ffc2-4722-bbc1-8e5159ff752c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "047781da-93b1-4480-b896-80a1c9a932a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "939b5cf7-9404-4eb9-9c30-96d2390d3ec1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ab81014-bc8b-4a4b-a7cc-0b6c167e441b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbc61fc-6067-4790-b094-ee98a3605e17",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "18434548-2fb4-4d7e-b2cf-76b59dffadd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2e0c67-e539-4354-9f3c-fc0e45214517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "347193d1-53b6-433b-ab8b-76c6f6fee3c8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "843949f2-9a52-4e71-b983-3dec8dfccb6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b5975e0-e8fb-494e-8aae-f473d08f3621"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "133f173f-5c4d-4cd7-8c39-e2ffe130a80f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b3e52ed-bf3e-42c9-89be-c28176012c35"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "606c6218-de0a-4059-b569-8788fe9fd4cf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8cc217a4-8086-476a-93e0-c245277517ee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "629444da-7816-4eb6-a077-320b1e78dfe3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "444a895f-d47a-4888-828a-cd398985ca70"
            }
          }
        ]
      },
      {
        "id": "df340522-05df-400a-a7a5-1d1d544263ff",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "06df11d2-459e-4356-83c9-95768c07f891",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e40f9860-0cb4-48b8-a02d-07b5aea926d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56931f20-4cab-4893-b69b-806c199ca685",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d23adc1-e8f1-4c78-9f7e-fc28c40fa697",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2269928-0395-4244-ae53-29e57baea0e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa5f8c7-81e8-40b9-b33b-952aa4397c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c94a5a0e-1769-47e8-b638-08edceb40956"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6cca8b63-37e0-4245-bd0c-0e8898d8c0ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38d0d131-77c1-4e56-ad94-32509331dd12"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bdee5b7-6845-4fb9-b9e5-1a7de7b11dea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9a934c3-7d0b-4396-b7a5-d05a3f3f605d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef7a34c0-f4ca-46ac-b6b1-f44aa53763aa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b89c4ba8-5bd0-4a61-8e03-0ff8313aa6d7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aba62958-1716-430d-8868-0e28397ed404",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5681eea9-f563-4c2f-a951-f2d6d1a6c29a"
            }
          }
        ]
      },
      {
        "id": "32975b72-fde9-4ec2-8d1a-3a18d1339967",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "53994305-6fd5-4d0a-8ece-70200ea76fb1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21ad4ad0-cf2c-408f-bfc3-3d0f70dc284d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d36e943b-5587-48cf-9866-5319dfd4acd8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad15420-a3dd-47e5-9b4f-f991866253e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8254e16-9778-400b-97db-6a9baf6a4cfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f96624-adda-445b-a9eb-823a93b51c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73326673-4199-4b6d-87c0-9bf091ecab2f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1bb69195-51ed-4bc4-a45d-807956d1aad7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7207c53-dad7-4231-b02b-3c1b65ec9cb3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2ccddb3-26be-47e4-b141-2f4fc264bbc8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "177937b2-c5fd-4522-9f12-082a26eb3236"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "727c2284-259e-4e88-94a9-71a32f5307ee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5bd0f06b-4f8d-4649-9473-615bfd509a16"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c002acb2-1ee7-455f-a229-f777074aafda",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37d762f2-17dd-4816-8403-6def76ce8b46"
            }
          }
        ]
      },
      {
        "id": "8b66cf0d-2b5e-4122-aa1a-be1b4fe2a39d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6af29bff-7ab1-4448-a1d0-5736d2526633",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3c84f29-0e62-4783-8560-fb5aaab1349f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "63f5398a-cbb3-42e3-ba52-a010c1bc2bea",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab4f7b3c-9a51-4330-bdb6-a1f5ab036602",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb1c5b8a-a12b-49a4-aa91-6ac0b43ed37e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 90.94444444444441,
      "responseMin": 11,
      "responseMax": 6548,
      "responseSd": 476.30813698489834,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1718843849499,
      "completed": 1718843880739
    },
    "executions": [
      {
        "id": "255b9dc8-b3ec-4f46-8423-f388b0c81efd",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "59dffacf-8bcb-49d7-8c3f-0cbc5c7c3b8c",
          "httpRequestId": "6e2c2cc8-758d-43cb-b4fe-cabffa95e9fa"
        },
        "item": {
          "id": "255b9dc8-b3ec-4f46-8423-f388b0c81efd",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e3324930-18b1-46bc-9bbd-f7ae3d4c095f",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "7c393f60-1fa9-4f0c-b49e-ce16d1b56e57",
        "cursor": {
          "ref": "e2b9f54b-9b5a-452e-a18c-63dbb7526903",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d716bece-60ce-4c43-978b-854cad4ad712"
        },
        "item": {
          "id": "7c393f60-1fa9-4f0c-b49e-ce16d1b56e57",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0b698cf0-8d6f-439f-bd98-cbcd1917ce33",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "ec3b5f10-3df3-4216-92a5-c032a5c6b972",
        "cursor": {
          "ref": "b7b09916-aedb-4037-a511-9d86b7fcd40b",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5151f495-6a22-4c20-adef-47f379b53d24"
        },
        "item": {
          "id": "ec3b5f10-3df3-4216-92a5-c032a5c6b972",
          "name": "did_json"
        },
        "response": {
          "id": "550e7ef3-7b28-417b-bcf8-7d4f8de5f366",
          "status": "OK",
          "code": 200,
          "responseTime": 266,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308248e2-e703-49e9-911d-70f70fa66847",
        "cursor": {
          "ref": "aea723ff-879a-4b39-af0a-c4781e1af948",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "517b77a2-1452-4556-9a67-bcc320b8ab5d"
        },
        "item": {
          "id": "308248e2-e703-49e9-911d-70f70fa66847",
          "name": "did:invalid"
        },
        "response": {
          "id": "fbc4de06-650f-402d-a73b-84311953a052",
          "status": "Not Found",
          "code": 404,
          "responseTime": 392,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308248e2-e703-49e9-911d-70f70fa66847",
        "cursor": {
          "ref": "aea723ff-879a-4b39-af0a-c4781e1af948",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "517b77a2-1452-4556-9a67-bcc320b8ab5d"
        },
        "item": {
          "id": "308248e2-e703-49e9-911d-70f70fa66847",
          "name": "did:invalid"
        },
        "response": {
          "id": "fbc4de06-650f-402d-a73b-84311953a052",
          "status": "Not Found",
          "code": 404,
          "responseTime": 392,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f96c37-65af-4953-89f5-be7445c941e4",
        "cursor": {
          "ref": "2801197d-3123-4a68-a41e-2501e42d1e99",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8a6fbb49-eb68-4448-be53-3ed77549fab4"
        },
        "item": {
          "id": "a1f96c37-65af-4953-89f5-be7445c941e4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b84f640c-35a0-4a1a-bbca-addada09bd1a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 55,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361dac3e-f133-44fb-88ed-3a2f97f18b6a",
        "cursor": {
          "ref": "6fa78c49-ee8e-4ae5-ba70-4f6785e5ca64",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5fbb3277-7f00-4b6b-a0f5-252fb6f0884c"
        },
        "item": {
          "id": "361dac3e-f133-44fb-88ed-3a2f97f18b6a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6d4fd381-d7cf-45d6-9b66-edaa0ad84d71",
          "status": "Not Found",
          "code": 404,
          "responseTime": 43,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eadc5061-c3ed-4414-9250-7c1d9a1b11b1",
        "cursor": {
          "ref": "16c9d3f6-1064-4e3b-a2ca-b456b71d1b0e",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d487dea9-6e03-4677-806c-ceb732bf9eda"
        },
        "item": {
          "id": "eadc5061-c3ed-4414-9250-7c1d9a1b11b1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1b8b0679-791f-4b61-9cf9-0f4e2ae7869b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690c3382-b398-43b1-9d1f-b1c40cf967fe",
        "cursor": {
          "ref": "6dd337f7-13a9-4fa4-8bb0-b4f2765dd89a",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a339448e-6cc2-423f-aa4b-7fdb73088210"
        },
        "item": {
          "id": "690c3382-b398-43b1-9d1f-b1c40cf967fe",
          "name": "identifiers"
        },
        "response": {
          "id": "35509863-6ed3-49ff-9e6d-cd0de660bdc0",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d2b28c-8323-460b-8cfc-acc4c426a9f2",
        "cursor": {
          "ref": "1e952218-610b-4aba-907b-ffdda7682b7a",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "12eb0dc3-aef4-4755-9d7b-5fa9b48fd396"
        },
        "item": {
          "id": "08d2b28c-8323-460b-8cfc-acc4c426a9f2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6da60b5b-808a-4fd1-b76b-52d6cb4f3c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fa71a2-ac91-4783-9b29-482b59c495bc",
        "cursor": {
          "ref": "f0174ca1-ae68-4103-8ea9-cf39313f2dac",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "31c960a1-a55e-4ff6-9235-f44ea65d8c3b"
        },
        "item": {
          "id": "d1fa71a2-ac91-4783-9b29-482b59c495bc",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c2e74674-4cc8-4ee1-9fd6-1ab26cf49371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d68e383-4e2e-484e-8709-38e16e62cb1d",
        "cursor": {
          "ref": "d9e6afa9-c982-4cee-bdb5-c18bb4a1b242",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0c64a755-5e64-4d8f-8b0e-64980e9ca183"
        },
        "item": {
          "id": "7d68e383-4e2e-484e-8709-38e16e62cb1d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "bb5ffed9-e3de-4a44-9920-ed42942ca16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d797aca9-5699-4d03-93dd-b9969b8d8a36",
        "cursor": {
          "ref": "557cf9cb-5124-4e78-b5e3-84e4a6ca941f",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ca992ee2-c3c0-41cb-b151-ac26695de108"
        },
        "item": {
          "id": "d797aca9-5699-4d03-93dd-b9969b8d8a36",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "901edfa9-93b3-46ab-8e09-03400c94b8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3b627c-df78-4b7e-a157-124208b24780",
        "cursor": {
          "ref": "8e1a6289-8ae9-4c75-8304-ab5caabd791d",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8c14d265-8eb1-4733-a24c-0ed78f8f0f31"
        },
        "item": {
          "id": "da3b627c-df78-4b7e-a157-124208b24780",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8537646e-0a6c-4f01-a69f-57861dfe7172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51da5986-b1be-4312-a6ec-0f82d74b435b",
        "cursor": {
          "ref": "472eec76-47ac-4a62-86ad-b201ecbc9c27",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "779c7172-95ee-4d94-827a-4c25faa79051"
        },
        "item": {
          "id": "51da5986-b1be-4312-a6ec-0f82d74b435b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "23bb7c2b-de1b-4131-b1d7-b0c00e1bf238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb6d4c6-5960-45b5-aba9-2285e04a0de9",
        "cursor": {
          "ref": "5a5d0d57-125f-499e-83c0-c4f31ad55999",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ecb48847-0612-40a5-9ace-4a528159376f"
        },
        "item": {
          "id": "bfb6d4c6-5960-45b5-aba9-2285e04a0de9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c393b78a-beda-43b0-91f6-f35a317f0854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3719e865-8aab-43ac-a312-aad4e9dae655",
        "cursor": {
          "ref": "1d4c57c1-67f6-4c4b-9f63-0554160dc0f4",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "83153fe5-f8fe-4691-977f-e5688c1f5ae0"
        },
        "item": {
          "id": "3719e865-8aab-43ac-a312-aad4e9dae655",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "336eac08-c0bd-4dbd-8a77-2b389a7fca5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e8c5cc-a134-4f7d-bc79-89e041f98fd9",
        "cursor": {
          "ref": "2f2e6e02-4b1e-486e-b1d5-4847bb0db05a",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "860ecd68-5bc7-454e-a9c3-0a0bc83b788c"
        },
        "item": {
          "id": "58e8c5cc-a134-4f7d-bc79-89e041f98fd9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "10854b75-d996-40e0-b655-bcf242b42c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b442eb19-c634-481d-9f8d-640db59da4dc",
        "cursor": {
          "ref": "823d5380-e6fc-483a-b514-eb5294fea785",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8f88c677-a2a4-4119-99b0-8cbee20029c4"
        },
        "item": {
          "id": "b442eb19-c634-481d-9f8d-640db59da4dc",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7708e619-765c-44d1-95bb-2c73e34b35a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe60069-3e33-460c-9feb-b64ac8b9cc60",
        "cursor": {
          "ref": "b815f4a2-f42a-4aeb-87fa-057f54fec4e5",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5d095720-ae8b-4f06-bbde-74299930a0be"
        },
        "item": {
          "id": "dbe60069-3e33-460c-9feb-b64ac8b9cc60",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0083baa3-98c0-4aa9-b012-49c11c7e8e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a1508c-f91a-4882-9ea7-be14623fc16c",
        "cursor": {
          "ref": "aa74511f-e3bb-4594-bd21-bd114042d6c3",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e598a58b-e385-4b34-a031-d86ebdd5779a"
        },
        "item": {
          "id": "f5a1508c-f91a-4882-9ea7-be14623fc16c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4b154dcf-7756-4e36-a2d2-284a00707c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9dcd28f-64ed-4a5b-97ca-f0df5a431d1b",
        "cursor": {
          "ref": "cc633686-5798-47f2-bbe9-633d4269eab9",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "80ed2ef2-1677-4cbe-a432-77f4d7cd61dc"
        },
        "item": {
          "id": "e9dcd28f-64ed-4a5b-97ca-f0df5a431d1b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "225963b3-d156-4d10-8257-801c4e68cede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2243b2ea-4d24-4004-8bc9-85c74ae5923a",
        "cursor": {
          "ref": "248fbda3-a8d2-4eb3-92df-6166893e2c3d",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f38d67fb-d3bc-4440-bffd-01e47f0326a2"
        },
        "item": {
          "id": "2243b2ea-4d24-4004-8bc9-85c74ae5923a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ddf31e3f-1c7a-48c4-9551-6321a3c4c647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf93e94-75bd-40a4-b2bf-7e6bb0fc6674",
        "cursor": {
          "ref": "8bafac29-4c6b-4661-82b9-0d3e401f2d3a",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7d7953e2-b3fc-4844-aa5b-1e0bded262df"
        },
        "item": {
          "id": "faf93e94-75bd-40a4-b2bf-7e6bb0fc6674",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d72a3b78-8c32-4b5b-8ae5-72733a9537c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e1c451-9e05-4103-8247-006b336c8a4f",
        "cursor": {
          "ref": "9c98445b-fae0-4b48-a805-9e9d60a7ded9",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "10fa7eec-2f6a-401a-9bf2-c83773e80f6f"
        },
        "item": {
          "id": "c0e1c451-9e05-4103-8247-006b336c8a4f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "107da197-9a0d-448f-a5d7-e1ee94872195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec6c1bd-53dc-4255-b69b-460c99a2b468",
        "cursor": {
          "ref": "edd4a773-2a48-44b8-8613-a06c7ce483e8",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "989c22c8-0e07-42a5-b0f5-9c3fb8434acd"
        },
        "item": {
          "id": "6ec6c1bd-53dc-4255-b69b-460c99a2b468",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "529d99a3-5ccf-4787-9a34-dd619f155d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d563ac8-d3a6-47cb-9731-a1bc306e48ed",
        "cursor": {
          "ref": "3355ea8c-20dd-4f9e-bac2-22289664c684",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "76f104b0-9785-4ff8-8466-7732da24fcdb"
        },
        "item": {
          "id": "4d563ac8-d3a6-47cb-9731-a1bc306e48ed",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6beac573-ab56-4271-afa2-45eff752f4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb10c3e0-bf64-474b-b277-7b2de7877667",
        "cursor": {
          "ref": "0945b125-35ee-4cc6-bc9c-1573ba106dba",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b632c490-9a32-430c-9583-a79f1cf68ee1"
        },
        "item": {
          "id": "eb10c3e0-bf64-474b-b277-7b2de7877667",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "969d0a07-4392-4659-a14e-bd58e8897e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271d807d-82ad-426b-8ead-bcc2d1f6f166",
        "cursor": {
          "ref": "c97bb4da-09b2-4e51-9e30-5b67038fba5f",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "32830800-313b-459f-8d0a-541c9b733f88"
        },
        "item": {
          "id": "271d807d-82ad-426b-8ead-bcc2d1f6f166",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2fa9faed-67aa-4f6e-a4fb-9ae3cb96e9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b42a777-7621-4417-94eb-e67b20b067c6",
        "cursor": {
          "ref": "b2b7b1f7-8bcb-4379-88ac-bbf3a743c73e",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "be9467c6-569a-4927-81d2-3248ae322e75"
        },
        "item": {
          "id": "5b42a777-7621-4417-94eb-e67b20b067c6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a252a6a3-1d58-49d5-b630-76bb855d0864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a04ab2-6175-4d4a-b40c-fbb1c19031c3",
        "cursor": {
          "ref": "687c43c5-d08e-457e-b6ce-d081687c34b0",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "65dc731a-59ff-4304-9702-7d7b3f984682"
        },
        "item": {
          "id": "10a04ab2-6175-4d4a-b40c-fbb1c19031c3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a1dfe93f-584e-4287-86e0-6ebd0458dc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecfa596-2e82-4ee0-9a04-4acd25070ec2",
        "cursor": {
          "ref": "1b225463-8c0f-46e0-baf6-c2c9761b9dc7",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "cd0a2f3f-549b-4465-917c-72ea6a258dc3"
        },
        "item": {
          "id": "4ecfa596-2e82-4ee0-9a04-4acd25070ec2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4baa4522-fe9b-48ce-9e5f-b7c5f6dc5451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0d5490-cc66-49f7-a991-69f375817573",
        "cursor": {
          "ref": "a5a3c422-cce6-4df7-b39f-6c4c47b8f3c0",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ec8459a6-c9e5-4f41-a57c-f5a949b7804e"
        },
        "item": {
          "id": "df0d5490-cc66-49f7-a991-69f375817573",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "94252f20-da8a-4bb8-a3c9-c86ccc2dded1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ae6991-b3ae-4781-87d4-c47adf79df95",
        "cursor": {
          "ref": "dffb9aa6-63aa-424a-ae1e-67ab463945e5",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4062ee06-ca4b-4d5e-a9e6-078499e46f5e"
        },
        "item": {
          "id": "66ae6991-b3ae-4781-87d4-c47adf79df95",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3a2255a5-b6ff-4467-bf11-25a78a6672b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d20a48-584a-4a0d-9063-828460acfd10",
        "cursor": {
          "ref": "b41f24f9-ff66-44bb-896f-f5773a44e691",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9fcab591-f55a-49c6-b8b2-1f86173b2695"
        },
        "item": {
          "id": "38d20a48-584a-4a0d-9063-828460acfd10",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6842e049-7644-489e-9a9e-89555e2c2664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd1e2e9-8d47-46e6-8f3a-032bae98020c",
        "cursor": {
          "ref": "d6fb2e48-f04f-4fc8-9583-a6ee5b938188",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "51289de6-1900-4247-9fb3-e1a70725061b"
        },
        "item": {
          "id": "bcd1e2e9-8d47-46e6-8f3a-032bae98020c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5a205d97-61fc-4978-8028-cec641f2a20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2466533-ced1-439f-a650-705e67a22130",
        "cursor": {
          "ref": "7ed25fd3-3e59-4f1e-8604-16e8bd76cea8",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e8e5fce6-f52c-4e4d-8010-a017ffbcc22d"
        },
        "item": {
          "id": "f2466533-ced1-439f-a650-705e67a22130",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7bd8e05b-1320-455c-af29-81b717e80139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cdf3f76-4b5f-4d12-94f8-c308907f3137",
        "cursor": {
          "ref": "5154d7a0-edbf-4f86-b23f-f4c176607c9f",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0efa7f7d-5519-4c85-930f-b8ccd8d92be4"
        },
        "item": {
          "id": "5cdf3f76-4b5f-4d12-94f8-c308907f3137",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e802da9c-b1a9-457c-98e7-326a98762cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad406ba-1745-4dd2-9750-fe0a31bf17fd",
        "cursor": {
          "ref": "e9e0fbe7-acf8-49cf-befa-97d68a485772",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "58dd9198-fee2-4b21-965a-9534b2f84509"
        },
        "item": {
          "id": "6ad406ba-1745-4dd2-9750-fe0a31bf17fd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d9c98069-edae-46f5-ba2b-682bb5d2dbbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b45a9e-5e27-4df3-9ee7-f6e4a1b5c11a",
        "cursor": {
          "ref": "c770519e-20b0-4298-bca7-097c53e8680c",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "eda836b9-ff03-443f-8a63-9569fd9329d3"
        },
        "item": {
          "id": "a9b45a9e-5e27-4df3-9ee7-f6e4a1b5c11a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6eb548ab-3a71-4a99-be74-2428d237903f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e023ae-887a-4fdb-a422-c2301a0b1898",
        "cursor": {
          "ref": "77ff12c3-df15-404e-86c0-3eb883c81a58",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5e1cda63-90bf-4c94-9f08-376bb6f73606"
        },
        "item": {
          "id": "c3e023ae-887a-4fdb-a422-c2301a0b1898",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6b005c2d-1dc5-4c76-8938-c3b075b023b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a19e3f-7731-46d3-973a-90c65cbca9c3",
        "cursor": {
          "ref": "1c18c52a-c415-4b38-90ec-2a321ece7227",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "004b2cb9-326c-40ea-89ca-52d11bd0f95f"
        },
        "item": {
          "id": "89a19e3f-7731-46d3-973a-90c65cbca9c3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "800a9e0e-fc66-428d-8997-8fd7c2e5a927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2875c9-5e64-4315-ae67-710a08ff7228",
        "cursor": {
          "ref": "f6e77cc8-8109-409b-802c-d3cd1043035a",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "22c3ade3-c7c0-45da-8261-372f571c556e"
        },
        "item": {
          "id": "fc2875c9-5e64-4315-ae67-710a08ff7228",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4fd5ef88-fe38-4ede-a4f3-a4fa660e7725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec47919-7d80-43b1-a9dd-37ef01b07e54",
        "cursor": {
          "ref": "17a59f14-f08e-4ac9-8155-93eba5a3b886",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4bf4262e-3a2d-4a98-9433-a0af9d9239dc"
        },
        "item": {
          "id": "7ec47919-7d80-43b1-a9dd-37ef01b07e54",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0699729f-3b1d-4bb6-8733-4b85373eafff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d625e4-9aaf-48ef-9853-96c837c3077d",
        "cursor": {
          "ref": "3e0d5938-2b1c-48c1-9421-26da39131c3d",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7b137b8d-fefd-4213-b4a3-992f077f94c9"
        },
        "item": {
          "id": "a4d625e4-9aaf-48ef-9853-96c837c3077d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0c33e327-31c9-424c-abbf-c95fa51850cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd4cf19-48fe-4c46-af31-4c4934376563",
        "cursor": {
          "ref": "e0b702ea-6b69-4569-b346-dda44d13fe85",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "20a2cbbf-e2d4-4c83-bfcf-661b6f659131"
        },
        "item": {
          "id": "ebd4cf19-48fe-4c46-af31-4c4934376563",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ec1780d9-f79a-437a-86ce-e07eb4a8c867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6a2313-77dc-4fee-ae66-456868b6260c",
        "cursor": {
          "ref": "510a6bf2-36a2-4704-9a83-60721407bacf",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8245faf6-5121-48ff-821f-569cd009c169"
        },
        "item": {
          "id": "4e6a2313-77dc-4fee-ae66-456868b6260c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e7dfbfb1-1aab-4541-82ba-39d2a37fc7c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33655741-0046-48e3-a427-0f109bfa7920",
        "cursor": {
          "ref": "06394a23-5dfd-4324-8a29-875943a40220",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4061dc5d-67b4-47e9-93a5-b0ef0ca5eced"
        },
        "item": {
          "id": "33655741-0046-48e3-a427-0f109bfa7920",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "844ba6bb-3497-4d41-9efa-ade846137b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fffb2ff-a424-4832-80f7-4f6e6cf5f866",
        "cursor": {
          "ref": "682da05e-4195-492d-a43c-87ad4ec948da",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f860536c-58b5-4388-83c3-1932b38a4a36"
        },
        "item": {
          "id": "7fffb2ff-a424-4832-80f7-4f6e6cf5f866",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ecc482e4-a858-4309-bd21-bd600439dc62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999b9e3a-d32d-4225-97a6-081d795e4f99",
        "cursor": {
          "ref": "cc46370c-e503-47a3-a924-ca1882ee8acd",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8f65888f-9550-4bce-aa3a-f6f868f4e770"
        },
        "item": {
          "id": "999b9e3a-d32d-4225-97a6-081d795e4f99",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3189bef1-2a74-45bf-90bd-342f7af7dcc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0642828f-b34f-499e-affb-71fad9b9998c",
        "cursor": {
          "ref": "d4880a23-83ce-4874-afb8-de9b4410edcf",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "dde1d2ab-1450-4a56-b95b-ae1dc1df0700"
        },
        "item": {
          "id": "0642828f-b34f-499e-affb-71fad9b9998c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "64da56d3-83e7-486d-966f-1b16add7baf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328814fd-0f37-4889-9e07-c325ecb3e8df",
        "cursor": {
          "ref": "2fdd30e7-6682-49ec-b498-eb0dc10727c5",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9e037f10-c78e-4c23-9e58-813cbfa50c85"
        },
        "item": {
          "id": "328814fd-0f37-4889-9e07-c325ecb3e8df",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "53b287ea-9b22-47fc-a82a-85d440406659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff9b005-a83c-4449-895b-10e600500714",
        "cursor": {
          "ref": "7f248837-db2d-49aa-9e6d-d7d8f0850d96",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bb2db7d7-ab7e-4104-b244-0cbe94011130"
        },
        "item": {
          "id": "8ff9b005-a83c-4449-895b-10e600500714",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fbc55477-369f-4806-bc18-0aaf09c0c604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf804db4-ee09-4868-b7da-3f9f025ee1db",
        "cursor": {
          "ref": "366297f2-9b52-4900-ac7b-223be7cfdb63",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0f6fc305-bcba-4b2c-9fe7-8ac6185e490f"
        },
        "item": {
          "id": "cf804db4-ee09-4868-b7da-3f9f025ee1db",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4ae95391-9cf2-4299-a13c-3f1ddc1d4bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced6580f-50ec-4228-90d8-23409facd240",
        "cursor": {
          "ref": "57c8b86d-c83b-4700-9bad-4d62818925a7",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c32cd150-8ad8-4ec4-b315-adb78d6ea5ce"
        },
        "item": {
          "id": "ced6580f-50ec-4228-90d8-23409facd240",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d2d6125a-69e1-4612-b9a8-68c145ac00c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c702c9-8e67-4c69-9bbe-0bdcc2b44d7a",
        "cursor": {
          "ref": "9d978057-c86b-4d08-9322-ba76ab751640",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f025aa70-05d2-460c-a504-a542376b10e2"
        },
        "item": {
          "id": "00c702c9-8e67-4c69-9bbe-0bdcc2b44d7a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9de7c573-ac62-4fdb-bfc7-d4246442d1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ffcf15c-4c4c-46c2-acae-05052bfbddd2",
        "cursor": {
          "ref": "be995966-1470-4af7-800a-7fcf459ea98d",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "73ea8247-4491-4927-9404-e7b75682d792"
        },
        "item": {
          "id": "1ffcf15c-4c4c-46c2-acae-05052bfbddd2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "711b23c0-75eb-4b67-8520-ad774ad5ca3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0029aa-1fed-4958-b03c-5d8b33f3331e",
        "cursor": {
          "ref": "e979f6d7-7c1f-49f1-b083-d30100eb4e8b",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "07a74df0-dd8a-4fd4-8f28-b0a67cbf8b94"
        },
        "item": {
          "id": "fc0029aa-1fed-4958-b03c-5d8b33f3331e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fd706f67-cb6b-4b86-9ebd-1a33505edba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23947ae-b591-4504-a2a4-fe21bde0fe19",
        "cursor": {
          "ref": "73727087-afa2-4b8e-8639-316fec2e867f",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "183e78f0-11ec-447d-97ff-f6ab5d59eac8"
        },
        "item": {
          "id": "f23947ae-b591-4504-a2a4-fe21bde0fe19",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "19bda5f5-6af2-4fbd-a07b-89d4b92e462a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8bb9fe-ab25-458c-96cb-7d5c69860e7d",
        "cursor": {
          "ref": "f298465f-9e58-423e-9aca-a08e69d5d26e",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a5e38d52-4f65-4a24-bc88-5ef36a218abc"
        },
        "item": {
          "id": "5d8bb9fe-ab25-458c-96cb-7d5c69860e7d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ce675a3a-adff-424d-87c3-ea1c50daafbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c26e167-b6e4-43af-b545-89e14c0a42c6",
        "cursor": {
          "ref": "f03f4a69-c420-4978-b2c7-f9ea1ec1e9fe",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c26abe2c-fe95-4e10-bf26-12afe2d46f06"
        },
        "item": {
          "id": "8c26e167-b6e4-43af-b545-89e14c0a42c6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2a3bd390-0827-4bf0-a312-2eb9673e3f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91b3e93-645e-4d69-837f-49b7d00a0afd",
        "cursor": {
          "ref": "c94c7365-e7de-4778-81e1-75f7e78e17e1",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5e3ceeea-f243-480a-a005-288f2239b2c4"
        },
        "item": {
          "id": "e91b3e93-645e-4d69-837f-49b7d00a0afd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "65b38ad4-8942-43bc-9c80-7839d648b2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94427cc7-548f-4555-838e-c0697c9082f8",
        "cursor": {
          "ref": "af61bcbe-6fb3-4db7-80ed-a02e027ad77a",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a6981dc3-cb80-49c6-b1a8-f822cc6ead36"
        },
        "item": {
          "id": "94427cc7-548f-4555-838e-c0697c9082f8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ea1e8538-a40f-4dc4-875a-e8600b076ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2fdafa-152f-48b0-9188-b508925ec303",
        "cursor": {
          "ref": "72f86d8f-2139-4a2b-b244-4c73ebd07b66",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f2769fc5-17bb-4937-a354-19e597f974b9"
        },
        "item": {
          "id": "ae2fdafa-152f-48b0-9188-b508925ec303",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "49f7f088-2418-4467-a32f-0c34114348e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3dbcfe2-260a-491f-9ea0-e2525de3edb6",
        "cursor": {
          "ref": "326f93b1-2dec-429a-9bbf-c352abb40c19",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ddfcf090-2fa0-4be5-b258-8babc1f3c9dc"
        },
        "item": {
          "id": "f3dbcfe2-260a-491f-9ea0-e2525de3edb6",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e78a99fc-c93a-4574-96dd-9850b013bead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40ef88b-bdce-4aec-b2d1-c096080b7d49",
        "cursor": {
          "ref": "62b9cc13-2a5f-4709-a16e-88e871715938",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c034873c-fd8b-4c57-aa6a-f3ba69bdbadc"
        },
        "item": {
          "id": "e40ef88b-bdce-4aec-b2d1-c096080b7d49",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "04d7b0a7-1fa5-4c92-b066-257c16ab5f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d4ba39-0d51-49ad-96c2-7289e89b312b",
        "cursor": {
          "ref": "bfb1fdb1-330f-45a0-a575-817aad197fcc",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f82623ae-a0b3-4cbb-b238-280c75bdf8dd"
        },
        "item": {
          "id": "e7d4ba39-0d51-49ad-96c2-7289e89b312b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a967c4d3-4b25-4595-ad9a-37acf241bf2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a07aba-3049-4cbd-92ff-0c97035ab18e",
        "cursor": {
          "ref": "48a29646-f0b8-4569-99a6-05900f211435",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5260750e-5973-4c1d-be2b-212273155b39"
        },
        "item": {
          "id": "58a07aba-3049-4cbd-92ff-0c97035ab18e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f4523772-0aa0-4703-8b49-ebbc6bc12c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a8700a-7ae2-4310-b6f9-82dd1eb369f3",
        "cursor": {
          "ref": "0198bb74-0eec-40dc-bfde-75379faf94ab",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8c4f9c4d-24c2-4d1c-be13-4273ceeeaef3"
        },
        "item": {
          "id": "c3a8700a-7ae2-4310-b6f9-82dd1eb369f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1766fe10-ce6c-4068-91d9-10448e1460fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92277d83-d4a2-4103-bbfd-3e1a012e0434",
        "cursor": {
          "ref": "4bdb3236-14af-4344-a7a4-3ca15193c944",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7d4db490-95bc-443e-a032-0eb1a883c377"
        },
        "item": {
          "id": "92277d83-d4a2-4103-bbfd-3e1a012e0434",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "affcd58f-3cd1-4a6f-9e1e-6422e3377bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d7bd75-fddc-4bfa-ab4e-cf94cfea8450",
        "cursor": {
          "ref": "5ac4678b-62ed-4faf-b308-cb6673c6362c",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5d4fa898-8cf4-4b2f-a6e6-20ad2b8d2c8c"
        },
        "item": {
          "id": "15d7bd75-fddc-4bfa-ab4e-cf94cfea8450",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e7a235bf-d25c-427d-9869-18452d195b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a29b3ce-a5fc-4ae7-b781-9cbd20f8086d",
        "cursor": {
          "ref": "a9c8a9b6-0c63-4302-8556-9bfd8eec2990",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8cec2ec8-9443-4c2d-89cf-2d66528ed598"
        },
        "item": {
          "id": "9a29b3ce-a5fc-4ae7-b781-9cbd20f8086d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "562a05ed-a3d1-43b9-80ae-95c23d2b8777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12d3b78-82ed-4599-a45f-92c8f9c05d83",
        "cursor": {
          "ref": "f45a07a1-5d94-4da5-aaed-da4415f516c9",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "14f4e7de-583e-4b53-85f6-a99aa58d5555"
        },
        "item": {
          "id": "e12d3b78-82ed-4599-a45f-92c8f9c05d83",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "af699f03-678c-48aa-9b08-da414362f801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20e9a7b-f02b-4b5f-a2c8-cfb8b5b80ae7",
        "cursor": {
          "ref": "23dfd7d1-d044-4485-a80b-9e11d8edbb41",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cbaef492-1696-4207-b6f0-8a2afbcb8762"
        },
        "item": {
          "id": "c20e9a7b-f02b-4b5f-a2c8-cfb8b5b80ae7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bcde4698-74bf-4a2f-800b-c7c6332d790b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56f052f-e2b6-4f9c-9eb7-49fb4ae85dae",
        "cursor": {
          "ref": "556ed3b8-f72f-4294-9c71-63a9eb3503d5",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "37f697a0-11eb-46ad-a4e3-16623d5e66a4"
        },
        "item": {
          "id": "e56f052f-e2b6-4f9c-9eb7-49fb4ae85dae",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "540aba99-90a0-4547-8117-264b136c446f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373fac53-8c4e-47a7-bd1a-cd551af349d9",
        "cursor": {
          "ref": "2274a228-1735-4cc3-ad79-db5434cdac01",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "34d202a8-3b38-4599-87fc-0b2b112abc07"
        },
        "item": {
          "id": "373fac53-8c4e-47a7-bd1a-cd551af349d9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "60fe13d8-4a36-4244-bb31-4169480d2c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fbd1ae6-4e7a-4240-ae9d-8ed83ce6db93",
        "cursor": {
          "ref": "4fcd7837-dce4-48a4-9495-af60e6869517",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "59c3bc53-c8fe-47e8-a355-99da39d42425"
        },
        "item": {
          "id": "3fbd1ae6-4e7a-4240-ae9d-8ed83ce6db93",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "251f950c-ba84-4aab-a0c2-2141a3a55429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d235e75c-28ce-4bd5-a0fa-0a527eaf052f",
        "cursor": {
          "ref": "7af03d4a-7557-4f58-af88-5030833135ba",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ff999305-a105-486b-b6ac-71ba8724b8ad"
        },
        "item": {
          "id": "d235e75c-28ce-4bd5-a0fa-0a527eaf052f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "771ac6b7-0742-4c3b-99fd-2d3cbd19e6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d74bb27-705e-4d6e-922e-795424d888a5",
        "cursor": {
          "ref": "8879640f-9f04-46bd-96e1-e8b345094553",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6feab847-dff1-4840-a90a-c0e2d865b269"
        },
        "item": {
          "id": "8d74bb27-705e-4d6e-922e-795424d888a5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "73c55722-9d8e-48db-8312-80aa027bcb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bec9f1-eeb2-4868-a254-665fa805dc8e",
        "cursor": {
          "ref": "e362d846-d396-437b-ba99-5de1db855106",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7b27fe94-4c5c-417d-b675-02907ac8c9c7"
        },
        "item": {
          "id": "52bec9f1-eeb2-4868-a254-665fa805dc8e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f34ef67d-e760-4b7d-9f9b-862808814409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b22d49-e9df-4ff0-92aa-ae8fb550a0ee",
        "cursor": {
          "ref": "19a0157a-7cd9-463e-bb11-7776c05d4482",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9b162a3e-d8aa-4371-bf10-38a09c776d48"
        },
        "item": {
          "id": "86b22d49-e9df-4ff0-92aa-ae8fb550a0ee",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a7defe4d-32c4-4f40-a3b4-e1654f7086fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199b8104-1b99-4f47-be8b-88f1b929a671",
        "cursor": {
          "ref": "f34a04dd-9c92-46c2-ab98-be57cc5ed063",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "04506a95-605f-4b86-b815-a56bc23c63fd"
        },
        "item": {
          "id": "199b8104-1b99-4f47-be8b-88f1b929a671",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a20ca9cd-6ce4-4cc1-be0f-8c9003ff1d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80380bc6-1f28-4ae7-a218-0c2a063961c7",
        "cursor": {
          "ref": "df56c800-8f33-42d9-9f30-e12ec76d23a4",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "31a8c1ca-7137-4363-b117-fd4e5bb15a5f"
        },
        "item": {
          "id": "80380bc6-1f28-4ae7-a218-0c2a063961c7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "25b290b6-891c-478a-b985-e20f3a91de92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e67b52-2c11-4c11-b39c-1e3b25eb717b",
        "cursor": {
          "ref": "f842f155-e884-47af-bd5b-0c90e27d3a04",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6f238ec0-c80d-4b98-b597-7fbbe18f2180"
        },
        "item": {
          "id": "b8e67b52-2c11-4c11-b39c-1e3b25eb717b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6ddedb66-5317-4dd8-b8b0-53172b1a07e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b185930-727b-4b0f-80bf-e7e31d61164e",
        "cursor": {
          "ref": "1b80e238-0a76-419d-9935-8f3e27dac9f4",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "317fdc02-4014-4317-b44a-ac5b2d0835e5"
        },
        "item": {
          "id": "3b185930-727b-4b0f-80bf-e7e31d61164e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6788ff87-17b0-40cf-901a-e68a98e9f116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4914a8-ed18-403f-aa20-acf0da5afbbb",
        "cursor": {
          "ref": "98d521ba-5bda-4ae7-b637-017e0e2895a5",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "704dfff6-a68f-44b7-bff7-d454039a0aaa"
        },
        "item": {
          "id": "2a4914a8-ed18-403f-aa20-acf0da5afbbb",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8ee904fb-2450-4054-ab05-38cc1d0058a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133f9548-153d-4491-bb09-3132d47d9708",
        "cursor": {
          "ref": "09324adb-27f6-4b8c-b3f5-d312ef073224",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f54de55a-7755-4b2d-9545-2a2b53fe5459"
        },
        "item": {
          "id": "133f9548-153d-4491-bb09-3132d47d9708",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e2e99f2f-4ca6-4597-9b31-94f8c8bdd7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848e8866-6c9a-45c6-a16b-db52f6b32837",
        "cursor": {
          "ref": "3c30f63b-8b95-45cc-8f76-1242fb9dfde8",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "528beffc-f97a-45af-98df-019ad4c53569"
        },
        "item": {
          "id": "848e8866-6c9a-45c6-a16b-db52f6b32837",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "448bd92a-1a4f-4c7b-b346-aa32bbfefd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832af529-4fb2-4897-b533-3243890bd5b0",
        "cursor": {
          "ref": "a9206e3f-7497-43b5-b160-08cc33a06518",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f3d37e1d-aeee-4e58-b081-1d794f1778fc"
        },
        "item": {
          "id": "832af529-4fb2-4897-b533-3243890bd5b0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0865e47e-3332-440b-b98d-c3ddecf82d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8128da1-5642-47e3-95d0-0d5484f4e31e",
        "cursor": {
          "ref": "5341a381-44fd-4951-8b9b-a2eb0cb0fce6",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "738ab034-591b-46ac-9dad-f0faf450326f"
        },
        "item": {
          "id": "e8128da1-5642-47e3-95d0-0d5484f4e31e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f699a61d-12f1-409e-9850-36f28afadff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29f2fe6-17ab-4817-9faf-cdecaaee11e7",
        "cursor": {
          "ref": "159817da-3acd-417a-806f-a76c0d29d320",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ae5aead2-03cd-4955-8852-b4ae96fbd215"
        },
        "item": {
          "id": "c29f2fe6-17ab-4817-9faf-cdecaaee11e7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2cba914d-6fe6-400b-b827-3ed9e08f7e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290691cc-7568-4744-b265-f2e4cf747488",
        "cursor": {
          "ref": "9f6048d1-4561-4c05-8eee-de452341d42d",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "63dac205-06f6-41ef-8278-e53366ed87b2"
        },
        "item": {
          "id": "290691cc-7568-4744-b265-f2e4cf747488",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "659716c0-798b-4e3a-8867-f6b04c1da8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8ae15e-0849-4f24-9c34-3d592546c857",
        "cursor": {
          "ref": "1df30008-6f75-413e-8c4b-faa4c12f235b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "29a1da86-92b6-4c70-81b3-24f469c3535d"
        },
        "item": {
          "id": "8c8ae15e-0849-4f24-9c34-3d592546c857",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1e6ad6c4-d2a4-4f3f-a9b9-5d3ec7f82a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171c5a93-84be-4619-888d-167b4151b4c1",
        "cursor": {
          "ref": "61210e11-9a34-4242-b241-79483653f190",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ed319db0-c643-4ac3-acb9-235af533360c"
        },
        "item": {
          "id": "171c5a93-84be-4619-888d-167b4151b4c1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fba6dca2-de20-4e11-815d-015ebb8595da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee29bf4-6e46-4cfa-86c8-cf6c511a8053",
        "cursor": {
          "ref": "af1a0f3a-efaf-44e7-896e-a0d74004e9f1",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "09842f34-b20b-4de1-85e0-83d4f737172b"
        },
        "item": {
          "id": "aee29bf4-6e46-4cfa-86c8-cf6c511a8053",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6eece61b-4914-4a6b-9770-1ad02c958e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8973fa33-c3db-447e-bafe-db3f552dd7ed",
        "cursor": {
          "ref": "a84fe689-2736-4644-b4cc-064c1526903b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fab932b1-7d59-4ecc-b327-3741a2d8f191"
        },
        "item": {
          "id": "8973fa33-c3db-447e-bafe-db3f552dd7ed",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f3752e6a-3020-44a7-a96c-10b167a3d8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236645ce-aff4-4904-a104-f96d5c0ca2b2",
        "cursor": {
          "ref": "68286a85-d993-44b8-97d5-89212ff7acc9",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d37998f9-08db-4b25-930d-fc1d3f1542ba"
        },
        "item": {
          "id": "236645ce-aff4-4904-a104-f96d5c0ca2b2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "38006f50-016a-443f-ac44-7c0205ed06c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3ef9a5-fe52-45e0-9f1a-966d7ddcfc88",
        "cursor": {
          "ref": "e0f0230b-b035-4680-a0cb-300682459b51",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ef26a53b-4994-40df-84d7-1282728782bf"
        },
        "item": {
          "id": "6d3ef9a5-fe52-45e0-9f1a-966d7ddcfc88",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "fbc0f1d3-613c-4ee7-8a6b-1b1a0504f5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e83c0b20-2c3e-4d3d-be87-f750ef2d336e",
        "cursor": {
          "ref": "ffc6cab4-06f0-4bd5-843a-0717eadfa3f3",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "27bafb59-7b2a-4561-8f8b-99781cd1ca60"
        },
        "item": {
          "id": "e83c0b20-2c3e-4d3d-be87-f750ef2d336e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f25b1a0d-b9a6-447d-a12e-28b496cbf8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27df894-4143-450a-9969-cb54cede2178",
        "cursor": {
          "ref": "b699f88f-4ae2-469d-8ea5-04434e8a37c6",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ca4f4864-124d-472d-bb0e-3928413ef3d6"
        },
        "item": {
          "id": "e27df894-4143-450a-9969-cb54cede2178",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "03b549d2-0d73-4c3e-9f8d-ccd4956aa38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd5bd93-01cc-45b9-9d07-6bd8e08aed0d",
        "cursor": {
          "ref": "d35280d3-e029-4db9-bd89-a905250f01ba",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "40073da2-d3ca-4c9b-b0ec-dd23f664beec"
        },
        "item": {
          "id": "ccd5bd93-01cc-45b9-9d07-6bd8e08aed0d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5366d687-9ab7-4219-83cd-b9df8838942d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3f9a20-d98f-4c46-8fa6-14157c451397",
        "cursor": {
          "ref": "d05e46c3-6cc8-4e9f-9292-7fcd5d2a226a",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0cd9e237-c05d-45ac-a664-3d3b8e4a4dec"
        },
        "item": {
          "id": "1c3f9a20-d98f-4c46-8fa6-14157c451397",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ff7f25d4-d1e6-448a-8c22-06926bdae7a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1394bb-dd40-40ae-b202-e14213934aa0",
        "cursor": {
          "ref": "78235295-7816-4ad9-b42b-e855b29ae8e0",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b8c37cf2-704f-4725-a15b-05d4237d6e78"
        },
        "item": {
          "id": "fb1394bb-dd40-40ae-b202-e14213934aa0",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e6e5da61-5d15-436c-8b26-cfec8c7aceee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f5db2a4e-86cb-4b79-8a2b-e77b305a4ffc",
        "cursor": {
          "ref": "2ae49ede-d3eb-42ec-9f22-124522390d39",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "902fd276-5e40-4ed2-93a4-9644fdeb6f57"
        },
        "item": {
          "id": "f5db2a4e-86cb-4b79-8a2b-e77b305a4ffc",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d0facdbf-ede3-4db9-b319-52b46e1f92cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "3150d02b-a180-46f8-8d9e-be101744a462",
        "cursor": {
          "ref": "a2e469c0-e362-4581-80db-ac3af124369d",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5d860a44-d5fc-47c9-83d6-18b5c4e41200"
        },
        "item": {
          "id": "3150d02b-a180-46f8-8d9e-be101744a462",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "08f8f5b9-d92d-482d-8f34-95240cd0a2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "39bc0662-3045-4503-9e0a-fdfe747cbc6f",
        "cursor": {
          "ref": "6f2d6ee5-5b4c-4224-812f-cc69376b3037",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5fa8387a-c0fa-462b-aa9b-de87ed69f177"
        },
        "item": {
          "id": "39bc0662-3045-4503-9e0a-fdfe747cbc6f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4fe54457-822b-418b-a3eb-93cb706826a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "fc2d6526-790d-47c8-8fe3-712d450ca6af",
        "cursor": {
          "ref": "28748bfc-bb54-46d8-b458-7c4a8d088241",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "eaa54a9c-17b4-4931-be68-d8d4812e1105"
        },
        "item": {
          "id": "fc2d6526-790d-47c8-8fe3-712d450ca6af",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c235c689-59c2-43bb-b890-c90e96f757ff",
          "status": "Created",
          "code": 201,
          "responseTime": 6548,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cba69f5-3ffc-4c68-a609-2d5023a5187e",
        "cursor": {
          "ref": "462bcad9-d6e1-4c9c-b5b5-b17f390dd40c",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b4a4c153-4898-4028-991b-641a26dafb8b"
        },
        "item": {
          "id": "6cba69f5-3ffc-4c68-a609-2d5023a5187e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "fff5f6b0-dc48-43e9-b1b2-fe54f366c1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "a05f8221-b603-4fc1-97a5-4bcd62bb0b12",
        "cursor": {
          "ref": "a40ae0b0-2711-4de6-a8e0-a1faa581025e",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8bca4b12-e2eb-45bf-8721-03d1594b58a1"
        },
        "item": {
          "id": "a05f8221-b603-4fc1-97a5-4bcd62bb0b12",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4ad43091-eeef-4c25-b03b-b2ecb3a693a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e1d103d9-1cbf-44a4-9bda-7292ad2b1065",
        "cursor": {
          "ref": "a87fca40-6030-42bc-bfd2-dacbd30528f1",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8d412bbd-594f-4546-92e5-fdbec0670b2b"
        },
        "item": {
          "id": "e1d103d9-1cbf-44a4-9bda-7292ad2b1065",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "244634ef-ae0e-4a9a-bcba-6427b9fd52ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3124bfe7-1197-4bb0-9740-c56f420a1706",
        "cursor": {
          "ref": "d9bf5ee3-e7b8-4c5b-bc0d-61e3ea866e26",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "afc22e0f-a41b-4539-a754-f2f42ed4f00c"
        },
        "item": {
          "id": "3124bfe7-1197-4bb0-9740-c56f420a1706",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "41e47121-fc58-4f78-8543-fd68281173d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa17359d-0b14-4908-945e-e27efc3a4ecf",
        "cursor": {
          "ref": "15290cd4-77ef-4997-ace3-893c43aa39bf",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3b1710aa-7c0a-4fa2-b9f8-07ead510056b"
        },
        "item": {
          "id": "fa17359d-0b14-4908-945e-e27efc3a4ecf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b2adb937-8f63-4efe-aad4-a43f46b1dc68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea81b4a-4e9d-43f4-b466-a77dd1d6be7a",
        "cursor": {
          "ref": "01a9fa60-0889-437d-a359-94c83adb777c",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3d5866e9-ab8a-4d3a-8adb-e0979f597e80"
        },
        "item": {
          "id": "cea81b4a-4e9d-43f4-b466-a77dd1d6be7a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "10d068fd-d32e-4518-9026-4b7d96129445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6ee50c-771b-407a-a223-aae1bb8487c7",
        "cursor": {
          "ref": "0190c869-290e-4f87-b8f9-744b3437dbc7",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ecf01e7f-c6de-4844-87fb-149ba41f5716"
        },
        "item": {
          "id": "2a6ee50c-771b-407a-a223-aae1bb8487c7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "867c9d26-6aea-4ae2-9a6e-2352cc6df932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcea31b5-f4e8-4b0f-a61a-9e2789e26495",
        "cursor": {
          "ref": "7186191c-33ab-4ce4-a300-bcafd7d56514",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ce1342af-8d7a-4f9a-8275-018bb43a7ba4"
        },
        "item": {
          "id": "fcea31b5-f4e8-4b0f-a61a-9e2789e26495",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8baca940-3657-4f53-b5ec-4162fec56d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03679527-9a0c-4227-a717-c918a819041a",
        "cursor": {
          "ref": "23887928-5d6d-4679-a48f-d35014c73791",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6130e0b1-d1e8-4e86-93e3-4b5a575c74dd"
        },
        "item": {
          "id": "03679527-9a0c-4227-a717-c918a819041a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "83250bce-0a4d-4df4-9e2c-dff9972987f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1274fb21-b804-4005-b060-240a5612604d",
        "cursor": {
          "ref": "e22ca9cd-20c5-4ffe-a67d-9bcfa57f221c",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8794d63e-5892-43d7-9b96-16954a55eeed"
        },
        "item": {
          "id": "1274fb21-b804-4005-b060-240a5612604d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0c5a8f56-40bd-4a2c-9c1d-eecbaaa2cdcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f54b061-94de-4fea-971e-710559c16b8b",
        "cursor": {
          "ref": "475777e3-8c42-431a-b54f-92129fbd12d1",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4dba4dd1-0af3-4eec-804e-f7d575252097"
        },
        "item": {
          "id": "1f54b061-94de-4fea-971e-710559c16b8b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "023702cc-d84a-479c-8964-0a1d2c1be39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92b6d8b-f9da-4b60-a34f-1c1cf7bf0e25",
        "cursor": {
          "ref": "27411c75-b408-4362-bebb-f26e8d06450d",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "03ad5287-ad9b-4780-b432-d289b42c9d59"
        },
        "item": {
          "id": "e92b6d8b-f9da-4b60-a34f-1c1cf7bf0e25",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d7ef590c-35f0-4d1a-90ca-d0bb06e773c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaad5bb4-ce0b-42a4-84e8-db91d30b1fa1",
        "cursor": {
          "ref": "ecc5a22e-3200-4715-a7aa-ef5506d395b7",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "35bbb130-6e9e-415f-9c09-9fc3da1ff97e"
        },
        "item": {
          "id": "eaad5bb4-ce0b-42a4-84e8-db91d30b1fa1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a83a146e-4852-4286-83ae-26324da5e89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb76855a-91ad-4331-aa6a-094222054d16",
        "cursor": {
          "ref": "2403d7d4-d17f-4663-ad43-ea4c4894f76d",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "73aceb98-426d-4bfd-9338-4f54348b6083"
        },
        "item": {
          "id": "eb76855a-91ad-4331-aa6a-094222054d16",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a0704b27-aa4b-4d05-8978-209102522ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13183b81-0101-437f-bbe1-d5f302564603",
        "cursor": {
          "ref": "894e8ad1-5da8-45af-ba75-25670383ee77",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8d3256f4-e9ca-490c-84a8-4ffeb326b654"
        },
        "item": {
          "id": "13183b81-0101-437f-bbe1-d5f302564603",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ebd7e4d7-9b37-43f9-8877-0ca1caec5a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ee7571-7638-466e-844e-fc51bcd1285b",
        "cursor": {
          "ref": "832c789f-cdec-41e4-9cad-f3fb50e4b99c",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0192bc7f-164b-4050-94cb-11522e3a1dc1"
        },
        "item": {
          "id": "64ee7571-7638-466e-844e-fc51bcd1285b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6c83ebea-96f3-49b7-ac45-dd0d0ffd6d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8b4019-950c-418e-bff3-40646c61c5ca",
        "cursor": {
          "ref": "b4d252af-c71e-4b3c-8a0a-c3e954055cbd",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "707b6ed0-e017-44e6-81b8-5e10b15bd5ba"
        },
        "item": {
          "id": "6a8b4019-950c-418e-bff3-40646c61c5ca",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "856a7f29-b897-429d-8ac6-2b4ffb76b3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b687e84c-0945-4ddb-adbe-2481f67fd350",
        "cursor": {
          "ref": "6703438d-24c9-4614-ac39-99420e112c77",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "41467136-4ed9-45a2-a579-cbd99c5adffd"
        },
        "item": {
          "id": "b687e84c-0945-4ddb-adbe-2481f67fd350",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "efab777f-dc13-43ea-a362-ac9c620a8913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22a21d4-3787-44ac-a100-b0753225d924",
        "cursor": {
          "ref": "f46fb3c9-d3ff-4280-a1d4-e384b002ce9b",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b51d1b39-b35e-417f-a531-820b559f910b"
        },
        "item": {
          "id": "d22a21d4-3787-44ac-a100-b0753225d924",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "98a6b334-5c79-4aea-8b8b-572500103cd9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "e15aff89-e325-447b-b93a-c2a836712a14",
        "cursor": {
          "ref": "521449cd-b7af-45c9-85a3-a22c1b3294d8",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "eb1cb85e-6eab-4b32-bed0-521cdcbfcb75"
        },
        "item": {
          "id": "e15aff89-e325-447b-b93a-c2a836712a14",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "08f9671b-a335-466d-8c94-13e347dfb13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0193a0-4e63-4de0-b277-dd9097a4e0e1",
        "cursor": {
          "ref": "9fff023b-294e-4324-aa87-5184351fa630",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "06dbc6d1-864e-407a-95cc-2ecc9e4893ea"
        },
        "item": {
          "id": "3e0193a0-4e63-4de0-b277-dd9097a4e0e1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cb7761a0-f511-480c-9748-6e15d13338a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d3c3f6-d7a8-4c23-a1ea-c8603901043c",
        "cursor": {
          "ref": "103f509f-0748-4c0a-bb94-9eab944cdb93",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "862bf7b1-7061-4830-af58-66c654c6baa4"
        },
        "item": {
          "id": "61d3c3f6-d7a8-4c23-a1ea-c8603901043c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "228ddcc3-766e-475c-a4a1-04b50cc26779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2859af-75a9-4de8-826e-59239c903969",
        "cursor": {
          "ref": "d67b5d71-8bf7-4847-aa20-3d0e8bcda210",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6a1c3ac4-3c69-4b1e-841d-db66f839c2a1"
        },
        "item": {
          "id": "df2859af-75a9-4de8-826e-59239c903969",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f7e16504-feda-40ad-b3db-72a44b361536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd00c493-5d21-4d7a-af3c-89f951fab063",
        "cursor": {
          "ref": "9a0fda03-d82f-4f01-ae33-2537aa446dc2",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1e28e077-e6b2-4511-b7f4-a4f8c04f32fa"
        },
        "item": {
          "id": "cd00c493-5d21-4d7a-af3c-89f951fab063",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "39a791cd-3704-462d-b5ea-7b6b5eff1932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0131e014-deeb-444e-a860-c74e70504adf",
        "cursor": {
          "ref": "930ded6a-99b6-46b1-b158-e78b8c38b8b8",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cc662ea7-348e-4158-9486-c439a2accec8"
        },
        "item": {
          "id": "0131e014-deeb-444e-a860-c74e70504adf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "568f2fd0-0955-4711-a388-994b4fb33119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddabf0de-4a44-45f0-8f78-efe8e62931a9",
        "cursor": {
          "ref": "d1378657-185e-460e-91e1-66a048f51009",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ccb1d69a-e3e7-4a60-9c69-a5b705023511"
        },
        "item": {
          "id": "ddabf0de-4a44-45f0-8f78-efe8e62931a9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1b549ec4-9525-4b54-8cc1-3f6a2ebf5af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16111f4a-1d36-4ea2-8764-68580128032c",
        "cursor": {
          "ref": "a4a6c9e7-dc5f-4b4a-99b3-f204554c0e52",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f7192bcf-7978-4d9c-92c3-a217c58d8e15"
        },
        "item": {
          "id": "16111f4a-1d36-4ea2-8764-68580128032c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cf44ce41-7440-4650-98ea-aa568f0c7c41",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "b5ec7cf4-912b-4592-9ba6-61adb83a2f5d",
        "cursor": {
          "ref": "31d284b3-a387-4053-a68a-bc7823a4d363",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "10fde1c1-f870-4959-86b0-2ffe5fbaf0e3"
        },
        "item": {
          "id": "b5ec7cf4-912b-4592-9ba6-61adb83a2f5d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6ad9d859-7f84-4307-a9aa-56f12525666a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bee0d42-a60a-4f55-89e8-ffb7cd0a7c4c",
        "cursor": {
          "ref": "6650a5f5-55cd-4660-ba84-d98b0e7da95a",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3cde524c-70dd-4cf3-857e-a98eb552ee98"
        },
        "item": {
          "id": "3bee0d42-a60a-4f55-89e8-ffb7cd0a7c4c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cb8e6ba6-b051-4345-8d14-cf3a0d8c47ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d4dc80-ce00-41b0-a08c-52a18c083c52",
        "cursor": {
          "ref": "6a6c93b5-1b7c-46e9-9306-f1596f15a73b",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8615265d-a70c-4324-a514-68864ca646cc"
        },
        "item": {
          "id": "e2d4dc80-ce00-41b0-a08c-52a18c083c52",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "30233455-ea60-419a-91f9-715ca15e4a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6b9055-355e-46dc-9701-30eb69ef7350",
        "cursor": {
          "ref": "e1535ec4-221c-42ad-9925-d9b1d81eb40b",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0ad2540b-8e14-4f7b-aa4c-f6b7aef20f7e"
        },
        "item": {
          "id": "0f6b9055-355e-46dc-9701-30eb69ef7350",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a85e7c4b-2528-4992-b85c-f98d7d363c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4364a3f0-f437-4750-b93c-3e5701b1756e",
        "cursor": {
          "ref": "9b7d2f82-4045-4696-aca7-139609e6dd35",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5a2f14a6-9327-49a0-8563-8dadb9fd5cac"
        },
        "item": {
          "id": "4364a3f0-f437-4750-b93c-3e5701b1756e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c3655b29-3162-40d4-8b5a-0c737e3bec73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53c8b72-f594-4253-9589-b2c8e3a80268",
        "cursor": {
          "ref": "fe26f44b-db18-45a9-b86a-36a28eb9d5d2",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8b99ccc2-995f-4f22-bf3c-c13d08f1436c"
        },
        "item": {
          "id": "e53c8b72-f594-4253-9589-b2c8e3a80268",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dc8ac6ca-a650-4539-a96d-f05564e84411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28b8d87-c1db-40ee-a850-f75b7b4e3577",
        "cursor": {
          "ref": "25ddd2e6-2a7b-494e-8a12-de955fb2a306",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "89d496e2-33da-4659-9d0b-d4142b36ff01"
        },
        "item": {
          "id": "f28b8d87-c1db-40ee-a850-f75b7b4e3577",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0d03fc38-1271-4712-97a9-9cfdcd310b08",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "42556449-a97b-4c80-9819-fa28fad0b87d",
        "cursor": {
          "ref": "efb78644-805c-4909-b29e-2c8de1fc2b75",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b3d4809c-c91a-4b85-9d40-8ab3a6bc53d7"
        },
        "item": {
          "id": "42556449-a97b-4c80-9819-fa28fad0b87d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ff8b0989-b4f1-42d1-97ba-21734e513edf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "72363935-1be0-42d9-8734-4ec70ffbe6e7",
        "cursor": {
          "ref": "fd8e8c8f-d4d2-429c-96a2-9ec8807342e8",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "dfd5dfbc-3455-4be5-b6ed-4ac5aa1309bf"
        },
        "item": {
          "id": "72363935-1be0-42d9-8734-4ec70ffbe6e7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0091cbcb-100e-4f71-ab5f-38ac3eb7979d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "be2388cb-5393-4338-9632-3e591ae83507",
        "cursor": {
          "ref": "784aeea7-c572-45f2-b3d7-203c979e787e",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "942d6526-c468-49f9-92ac-35406bf363c9"
        },
        "item": {
          "id": "be2388cb-5393-4338-9632-3e591ae83507",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8afc2dee-1dbf-40df-b2f2-2732cabffca3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "6134ca48-60cb-4e82-8fcb-9a4b3d4543ca",
        "cursor": {
          "ref": "ac31842f-116c-422e-8704-78bb0a772a43",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8ef74702-9c33-4e64-ad59-cbdf8575e5b1"
        },
        "item": {
          "id": "6134ca48-60cb-4e82-8fcb-9a4b3d4543ca",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6a4955a1-958a-47c6-9af5-71acf7db12ab",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "3398214f-f67f-48bc-8bc2-8b0207f4c731",
        "cursor": {
          "ref": "598e80ba-5435-4ca1-8c07-0fce6225161c",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1f13342e-1410-4f4b-8c3f-a938a093372e"
        },
        "item": {
          "id": "3398214f-f67f-48bc-8bc2-8b0207f4c731",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "437c85d3-efd4-4cb7-ae6d-97eb6e28e76c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "fe5983c3-d5b9-4386-969a-c2faea911714",
        "cursor": {
          "ref": "93b091b6-4aa3-42b2-9406-e30c6cbacdc3",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a62cf8b4-ee02-4ca0-abe3-89d20264342d"
        },
        "item": {
          "id": "fe5983c3-d5b9-4386-969a-c2faea911714",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "528ef74c-700b-49fc-bd1d-6bbc9750b58e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754dc379-290f-4739-ba7d-90b52186f7f7",
        "cursor": {
          "ref": "aac57cc7-1ab4-40a9-836f-8c24b6f7a324",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "821090a6-39f8-4492-9543-fc1f61d9f562"
        },
        "item": {
          "id": "754dc379-290f-4739-ba7d-90b52186f7f7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f1153170-5a83-4a8f-934c-5bd17e0db3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ccde08-2407-4712-9c92-5059ea76a08a",
        "cursor": {
          "ref": "b2fb2bd3-a198-4704-8744-8f5ed27cda24",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "193ae05a-88db-40a1-bc32-c7c5ae9833d1"
        },
        "item": {
          "id": "34ccde08-2407-4712-9c92-5059ea76a08a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "361efbcc-4a35-419d-9dfc-72671844eedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6ced0c-2da0-475f-ae81-b27aa293b3d9",
        "cursor": {
          "ref": "b920ca1a-b16c-4ba3-8cf6-c50e55351377",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "92f80b8c-4c79-4fe1-86af-f08556c23002"
        },
        "item": {
          "id": "cb6ced0c-2da0-475f-ae81-b27aa293b3d9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "27f31421-3d9c-41f6-9afb-07e1bd7edf4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46291c82-be54-4913-a287-aa765d1e5377",
        "cursor": {
          "ref": "07c252ec-599a-47fd-b460-2823ed42720c",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "28f6a0b1-9330-4875-941a-cecb67db4b07"
        },
        "item": {
          "id": "46291c82-be54-4913-a287-aa765d1e5377",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "906b25eb-9be6-47b6-83ab-6e2a8cd03094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcc285b-ae67-4e75-af0c-eab770d3c267",
        "cursor": {
          "ref": "d0d65121-a46d-440f-9e96-1b94acef0d3f",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a93b5fee-22a3-4a0c-b3af-bd03e3f0e490"
        },
        "item": {
          "id": "ffcc285b-ae67-4e75-af0c-eab770d3c267",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "411d0eab-6b2f-4279-b7d4-39568276c401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32005b0b-dc8f-4223-aae2-9b03719d6af5",
        "cursor": {
          "ref": "b1e43c58-bb4b-463f-84f7-2eab5c2e23ea",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "455a34a4-b05f-43e0-9642-59ed15270d23"
        },
        "item": {
          "id": "32005b0b-dc8f-4223-aae2-9b03719d6af5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "52d8fc8c-3c94-48d6-9f73-7e0a3e531c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ec446c-632e-4f19-bfea-03e0d54fce7b",
        "cursor": {
          "ref": "e0bbb519-8c2c-4eba-9ea4-d6ea288ed075",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "27b6024e-9da8-4f60-903e-e2a3b3c444d9"
        },
        "item": {
          "id": "c7ec446c-632e-4f19-bfea-03e0d54fce7b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "54f9e225-ab94-42cd-a303-5d320868f4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b902009-e209-4b37-87cd-761ad5d94af5",
        "cursor": {
          "ref": "00d8a576-e607-41a4-a99f-65d658e15ff4",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f8c6feb0-fe2d-4c1c-b701-993c989ba91b"
        },
        "item": {
          "id": "1b902009-e209-4b37-87cd-761ad5d94af5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6d198a80-ef97-478b-a960-5f47cfa4a39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f325aa-bbd6-4170-8783-bf5be748a51c",
        "cursor": {
          "ref": "142d9557-881e-4e04-88a5-0dc46dbd9a17",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "40925faa-a432-44cb-b17e-940d8ab3e59a"
        },
        "item": {
          "id": "36f325aa-bbd6-4170-8783-bf5be748a51c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4c7a02ec-dce9-4114-9006-3602ca49ec52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7826ebf-b01e-4c9f-b500-7dee4491991e",
        "cursor": {
          "ref": "3406302f-f251-454b-b926-44a1c867e72e",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "096889e9-8268-46d2-b80b-b5709741fd19"
        },
        "item": {
          "id": "d7826ebf-b01e-4c9f-b500-7dee4491991e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "68fdeba8-e9da-47f7-bb71-b2a366ccbef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607f9425-4fba-4c2c-81b9-004cbdc93494",
        "cursor": {
          "ref": "b11ca3e2-e59c-465a-b31b-db6c80f3ff56",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "af6548cf-372c-4280-bc59-54dbb0edd847"
        },
        "item": {
          "id": "607f9425-4fba-4c2c-81b9-004cbdc93494",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "96f1dbf5-c22a-4f22-b63c-cb0dc55182b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf2a3c1-c4dd-451d-b782-e5033b68f949",
        "cursor": {
          "ref": "679cb2ff-041a-436b-ab4f-e4687aa39c74",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "062b60a6-13cc-4592-9e4e-7c81dffa7c4a"
        },
        "item": {
          "id": "adf2a3c1-c4dd-451d-b782-e5033b68f949",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b1593ed5-1a8c-4c90-9108-3b51bb3a41e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5628a22-ac75-47aa-871d-771e927ff793",
        "cursor": {
          "ref": "5d4d1669-aaaf-4a0d-8f5f-c912b8d08ceb",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3b4f8824-d1d8-4dc5-9e47-d11882b123bd"
        },
        "item": {
          "id": "b5628a22-ac75-47aa-871d-771e927ff793",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a0b4da89-74ba-4819-8d5b-c2850b223c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b323a682-9b75-46d2-b091-81dcaa3d5440",
        "cursor": {
          "ref": "b3e246dc-ec00-437d-b924-9b6b48116e21",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d55ca819-de25-44c0-b8c4-159949826024"
        },
        "item": {
          "id": "b323a682-9b75-46d2-b091-81dcaa3d5440",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d3eb159b-4e6a-42d9-bdf3-009d3248021c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e212e1f8-26a8-459a-a659-3ecdf791668c",
        "cursor": {
          "ref": "6bcac0e0-d285-450e-b829-b9c974dbe21f",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e4464a26-f9ba-4e73-9a03-0476a01d0c23"
        },
        "item": {
          "id": "e212e1f8-26a8-459a-a659-3ecdf791668c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "87586bf5-958a-43de-8a42-65cbc1fc1c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105d838a-f66e-4163-a40f-fde32ad38046",
        "cursor": {
          "ref": "14586cef-f88c-462c-8ef9-fdc3c582782c",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1a57c9f0-2858-499e-b04d-6a3daa8766e6"
        },
        "item": {
          "id": "105d838a-f66e-4163-a40f-fde32ad38046",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2e711fc7-0ad1-47aa-b5d3-a6265e1821ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7afe8f8-efac-4c22-8875-088f4f0702fa",
        "cursor": {
          "ref": "5894037b-41b2-440f-bae4-e8a4304bc2fd",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a7b46eef-7f4f-4eb6-8612-973fe44f1c9b"
        },
        "item": {
          "id": "e7afe8f8-efac-4c22-8875-088f4f0702fa",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5a4a4f26-b3ce-4952-b196-1d4b1d35ee1f",
          "status": "OK",
          "code": 200,
          "responseTime": 112,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "eb212507-7b04-46a1-bf9e-afd26fc38147",
        "cursor": {
          "ref": "0ec9e5d0-c45f-448c-9527-7926a3b9c893",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e7829f0f-b050-4213-811e-d6cb291ec0aa"
        },
        "item": {
          "id": "eb212507-7b04-46a1-bf9e-afd26fc38147",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "252f96d5-4e63-47ae-af49-d185f2ce402a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c3f105-8895-4347-a902-bc9ab95034ff",
        "cursor": {
          "ref": "9a84bde5-067c-48f9-8c88-a8552fc3a2d2",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7d2af73e-62c1-42b8-9752-053406668393"
        },
        "item": {
          "id": "a4c3f105-8895-4347-a902-bc9ab95034ff",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "dacef2b8-b1aa-4158-974a-f9267f911bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c424f9e4-08a7-4514-9ed7-3a7e3d0c4d60",
        "cursor": {
          "ref": "69a0cdf4-8a69-4f92-9e9b-dd00875aaca5",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3ab6456e-d54f-44d3-a09c-bcff94136547"
        },
        "item": {
          "id": "c424f9e4-08a7-4514-9ed7-3a7e3d0c4d60",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3fa5a027-d769-449f-85e9-5f9c552f2374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833ad212-dcf9-4e0e-b1c3-40c46dbc2a6e",
        "cursor": {
          "ref": "3fa6819b-2c7a-40a4-86ae-8aeee428cea5",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c21350c4-3fbc-4605-8270-edcce1ca3020"
        },
        "item": {
          "id": "833ad212-dcf9-4e0e-b1c3-40c46dbc2a6e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a6653439-e0bb-4d52-944d-9e1a81ae5c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0275334-46ea-4139-be06-9c8e3852ea7a",
        "cursor": {
          "ref": "669951e7-1e20-4cc2-bf1e-2a7cef2d7d89",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "55118412-0b0f-4004-8e23-a8b8d37af9b0"
        },
        "item": {
          "id": "b0275334-46ea-4139-be06-9c8e3852ea7a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "aee8cd96-10c9-4fb5-9877-1653d4fd268a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65c8417-0dc2-43e5-b917-de7fc0d862ff",
        "cursor": {
          "ref": "23104597-c156-45ef-9981-ddcf58e3737b",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ff0e1d58-e58f-4e01-990f-ebe717cc7d28"
        },
        "item": {
          "id": "c65c8417-0dc2-43e5-b917-de7fc0d862ff",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "59ef951a-5294-4d33-b70f-b6fd1e89213b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591f3b29-f5a1-4a5b-87d0-21172b422b99",
        "cursor": {
          "ref": "339561cf-d97a-4742-aedb-07f00869003f",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "21202f86-2164-470f-91fb-707117bc1195"
        },
        "item": {
          "id": "591f3b29-f5a1-4a5b-87d0-21172b422b99",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "90293700-1fb7-4d3c-80ad-5f2518f4cdef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc424113-5d2a-47d1-9e7c-e3ea211136cd",
        "cursor": {
          "ref": "282893dc-df5f-43b9-86b9-93d7c2221505",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c6a2bfba-0d4b-4b0e-acf1-486e02daabb7"
        },
        "item": {
          "id": "fc424113-5d2a-47d1-9e7c-e3ea211136cd",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7f1ce24c-69fe-402c-bd5b-7f2937d380c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa973b65-f88c-4d58-9987-afba813d6dad",
        "cursor": {
          "ref": "1323c57c-ab30-48b8-8838-7eafbe4842d7",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fdf538c7-8ce1-45b5-a12a-d555da26ad14"
        },
        "item": {
          "id": "fa973b65-f88c-4d58-9987-afba813d6dad",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "01beb40e-602f-4dfb-a744-25244f152039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c257cda-eea5-4ebc-b39a-2a617504e3f9",
        "cursor": {
          "ref": "3c88138b-b5d5-4171-a372-09754bfe5475",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2c3a2826-c719-4b82-b0c9-049760536892"
        },
        "item": {
          "id": "3c257cda-eea5-4ebc-b39a-2a617504e3f9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "fbaf896d-cb0e-4068-a197-629446e3c793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906e39ca-ccf2-4556-bf6b-699d3da0326d",
        "cursor": {
          "ref": "8614e2c3-d7cb-4256-8991-242653c728f9",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "70c55ae0-4e0e-4314-9e40-e2a9315ba977"
        },
        "item": {
          "id": "906e39ca-ccf2-4556-bf6b-699d3da0326d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d0d1cdea-7e19-4af9-928e-b5faff7b7197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6784897b-c1f8-47ce-b5a9-1520bb70ba3e",
        "cursor": {
          "ref": "c39e7d37-6ac7-4556-a9ab-4e885cbecf12",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b50b22ba-1193-49dc-ba73-d31f742bc1c4"
        },
        "item": {
          "id": "6784897b-c1f8-47ce-b5a9-1520bb70ba3e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6803ad37-6216-4e7d-839c-634b334b4ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68d8ca6-3f1c-4b88-b69f-d64311cb9209",
        "cursor": {
          "ref": "d3246160-1c04-4aa3-951e-d37333af288f",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "98c15b88-ee6a-49ee-be01-c45076224b82"
        },
        "item": {
          "id": "f68d8ca6-3f1c-4b88-b69f-d64311cb9209",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "dda38e6f-37bf-4cc5-be83-4df2c21c4a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23995fad-2a61-4413-a238-d73f52633629",
        "cursor": {
          "ref": "0bfb560c-9c30-4ce9-93c5-5721a2509475",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0d2e6328-b815-4a2e-b719-257f356e6495"
        },
        "item": {
          "id": "23995fad-2a61-4413-a238-d73f52633629",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "61f2efb5-bff2-412a-88fd-9a3fcb9afc26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aec0443-5573-4772-906c-631a1907941b",
        "cursor": {
          "ref": "f8e87836-accd-446f-a1ab-ea42fc827dee",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ec7e1629-5c34-4798-b238-d7fd14d4a206"
        },
        "item": {
          "id": "8aec0443-5573-4772-906c-631a1907941b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1322a91c-f089-4971-a9bb-d95657ad8ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06368dc1-5166-4125-8da5-c93e805bce3f",
        "cursor": {
          "ref": "a8b5fdd0-cb29-479b-b533-28ee148cd495",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e92977a0-a433-4f26-a1bf-979e58c2534a"
        },
        "item": {
          "id": "06368dc1-5166-4125-8da5-c93e805bce3f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "48bbcb52-5311-4741-a6b1-8258d8cb0f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceac43b2-7722-4593-99a3-c66c04f5fd50",
        "cursor": {
          "ref": "50416454-db44-4889-94c0-d2a94c6504b8",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0562e118-f001-43ed-9ce6-e4f8c3330d01"
        },
        "item": {
          "id": "ceac43b2-7722-4593-99a3-c66c04f5fd50",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "dd4c2b11-e4f5-4457-aba3-d61a896686e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501c0dfd-bb24-4f84-b2fa-d5cd6c85e511",
        "cursor": {
          "ref": "90834635-7de9-414a-8949-1cf668874add",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b16a0bea-7f9c-4e1e-a3b1-7a15766d4525"
        },
        "item": {
          "id": "501c0dfd-bb24-4f84-b2fa-d5cd6c85e511",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "213dc81e-7a06-4dc4-bb42-d2e4a0f88ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7d1497-0a42-4029-833d-1014c744e2c0",
        "cursor": {
          "ref": "bff14aa5-66f0-4ea4-a7ef-b7f0985f829d",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "71fec43b-4820-4989-bed7-32db0e94b8ed"
        },
        "item": {
          "id": "be7d1497-0a42-4029-833d-1014c744e2c0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "991071ee-fcbc-4647-82e9-0e95c56003ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6a4993-88d3-42bd-bae8-1627cb4cb0ba",
        "cursor": {
          "ref": "2968d0ee-6654-4594-8e6d-8ee9b122bcce",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c0baa860-57d8-4749-aa35-827127ecd986"
        },
        "item": {
          "id": "5e6a4993-88d3-42bd-bae8-1627cb4cb0ba",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0ed5cbaf-d765-4fdf-a484-2116c672bd7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c3f44c-8ab6-4510-8bd5-3c7a3b98de7b",
        "cursor": {
          "ref": "11361433-d828-4b2a-b778-2562c3b66ca7",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4a1fa423-7793-4d57-99f9-40da37a4c654"
        },
        "item": {
          "id": "86c3f44c-8ab6-4510-8bd5-3c7a3b98de7b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8c0bcce8-6afb-4d11-8a20-05d679d7fa91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891b1a18-b748-439b-8789-cb4d3da150e0",
        "cursor": {
          "ref": "bc0a3fa8-263b-44b0-91d9-346c776c688c",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "113e30a6-cf3b-498e-8257-8c2953975c6f"
        },
        "item": {
          "id": "891b1a18-b748-439b-8789-cb4d3da150e0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a82561f0-dd0a-4d85-848f-21e80bac7612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a287aca6-0967-458d-8fbb-02c2bc6c88de",
        "cursor": {
          "ref": "99644ef1-4438-49bd-9b8c-4ddd65fbc052",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "58566057-f2fb-47a7-84a2-1d405d358c6c"
        },
        "item": {
          "id": "a287aca6-0967-458d-8fbb-02c2bc6c88de",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "86cf79d9-8159-4df3-8964-879f89d63753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e885819-0648-4f8e-9d06-da9db2da35fd",
        "cursor": {
          "ref": "a2f34bff-7680-452a-9009-52cea61676f6",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "91360da6-c94a-4ed6-8040-f5a6e730e82b"
        },
        "item": {
          "id": "3e885819-0648-4f8e-9d06-da9db2da35fd",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8e9e6bb6-0b7b-40ab-8b6a-cfe1297ff5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98452d8-b578-4c37-a37f-35fb59d8a0b1",
        "cursor": {
          "ref": "68159eeb-6024-4fe7-8c81-7567bb67f9c5",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9517c88a-f617-433d-9e83-06945f6b3e75"
        },
        "item": {
          "id": "b98452d8-b578-4c37-a37f-35fb59d8a0b1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7b10d887-7688-4d2a-8161-ae2e90cce4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16a6b00-6519-4f95-b0f1-43bfaa6435ad",
        "cursor": {
          "ref": "2ccb6d7b-6d88-48ee-89fb-ab5e35455deb",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b887251d-b970-4e31-853b-2886d6b6519d"
        },
        "item": {
          "id": "c16a6b00-6519-4f95-b0f1-43bfaa6435ad",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "97225e15-8d5d-4a2d-acaf-f52cc5f90655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087b2926-5955-41c3-b0f8-1f8d5161cc7c",
        "cursor": {
          "ref": "6f2eab47-8234-4e34-9c9f-45446e731004",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f3556669-de21-4956-8dd2-406f26fec224"
        },
        "item": {
          "id": "087b2926-5955-41c3-b0f8-1f8d5161cc7c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "52b454b2-b1dd-44b4-afda-f76af0183670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b115398b-bdf1-4a00-81ff-823a1d816731",
        "cursor": {
          "ref": "68cc1a01-09cc-4ea5-99e5-0c8dfe356547",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d7747e3f-f05d-4b67-92b3-4749e047ec4d"
        },
        "item": {
          "id": "b115398b-bdf1-4a00-81ff-823a1d816731",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b7edb98b-e77b-4a1d-ab2f-cb95a3ae6fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8794a9-219e-47f2-ac10-4ade075a225e",
        "cursor": {
          "ref": "416384e7-5831-409b-8ca4-74795fbae5c2",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "15c6e6f9-0735-4826-a070-3b28a2cf1b7f"
        },
        "item": {
          "id": "8f8794a9-219e-47f2-ac10-4ade075a225e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "400fdfbc-1b7c-4e0b-a7d2-69a18a985e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382ccaf9-3756-4957-b167-381e123c3db7",
        "cursor": {
          "ref": "870df60e-f619-476c-bb9a-3477665c1c80",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2212b957-1834-4a81-8b6f-0ec4b9531169"
        },
        "item": {
          "id": "382ccaf9-3756-4957-b167-381e123c3db7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b83d62aa-014c-4b96-97e2-13eb05ee7079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c955bfe-ff8b-4142-bdeb-cad897f4d0af",
        "cursor": {
          "ref": "d231c060-2f55-4e58-9f82-bde65564616b",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "db505f4b-c3c6-4a62-96b7-e93ad56a16f0"
        },
        "item": {
          "id": "8c955bfe-ff8b-4142-bdeb-cad897f4d0af",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "20ab4305-d361-40b5-9578-bcf7b11fd0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d6dce2-9561-44e1-a8e4-0a2ece04cfaa",
        "cursor": {
          "ref": "effd6d6b-b2e3-47c2-b0cd-9485bb8570ce",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e5c8c33b-5333-4f5e-af4d-7ad60f8907e5"
        },
        "item": {
          "id": "d2d6dce2-9561-44e1-a8e4-0a2ece04cfaa",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "702b7562-38ed-49c5-a137-972f5b91ec18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abea66e-d1d1-418c-8dde-3213e806c8b0",
        "cursor": {
          "ref": "f4885597-399e-4bb2-a188-d8dc45231c71",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "71967516-edaa-4b14-ad48-acdcf1317142"
        },
        "item": {
          "id": "6abea66e-d1d1-418c-8dde-3213e806c8b0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cf5ef43d-6a9b-412b-a544-69354749fa6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde5c9c0-28da-4e65-a0d0-9a0a5c08aabc",
        "cursor": {
          "ref": "e3b460a2-b709-4fd8-9ae6-3528c3366cf4",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "96f8e035-e416-4340-bf4f-6ae28661f160"
        },
        "item": {
          "id": "bde5c9c0-28da-4e65-a0d0-9a0a5c08aabc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8102d5b2-26da-4dda-a448-9113429633c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64470aa5-d610-4813-b13d-c6d68ce603a6",
        "cursor": {
          "ref": "4dbc14d8-c29c-45df-92e6-ba4f2239750a",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b680d87c-ca6b-46c8-84d9-60316b724c79"
        },
        "item": {
          "id": "64470aa5-d610-4813-b13d-c6d68ce603a6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3836e221-099f-4e9e-9994-af5d0153cf8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec9568b-9dc2-4ccb-810c-dbdefba7f3fa",
        "cursor": {
          "ref": "b24d0fd0-8fa6-41b9-b65c-7856f18e8de0",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ad05fb7d-b55e-496b-889b-1b5fb38a417c"
        },
        "item": {
          "id": "6ec9568b-9dc2-4ccb-810c-dbdefba7f3fa",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "23f34bf5-9ec1-45be-ab4e-9adc5ccdddd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3286807-1540-42d3-ab00-2ee5fddf7908",
        "cursor": {
          "ref": "a9368eba-f092-4a09-8236-7574288042f4",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "42851639-b017-4db9-8acb-0a4e1de1f832"
        },
        "item": {
          "id": "b3286807-1540-42d3-ab00-2ee5fddf7908",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "16600d8c-2bbc-4df1-8390-86b63fed6806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e8f411-48f1-4b07-a9a8-b217ff6014e2",
        "cursor": {
          "ref": "c66d4e49-907b-4f56-a0ed-bf04fe2cb3a0",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "286867b5-ce53-45cb-8d06-910974b4b5a5"
        },
        "item": {
          "id": "b6e8f411-48f1-4b07-a9a8-b217ff6014e2",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e4d1fac0-803e-4afe-98c5-21f529cd1827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88686a83-0b0f-4313-b736-24e8500a2190",
        "cursor": {
          "ref": "4112a5d3-b0d3-4c3c-b32c-9fb6a5d4e5b2",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7deb983f-3ea6-4906-8b5a-5cfd0cebb3db"
        },
        "item": {
          "id": "88686a83-0b0f-4313-b736-24e8500a2190",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "721eb711-454e-4a3b-b67e-aba0558f9038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f672556-b43b-4ac9-968a-f076f4df031e",
        "cursor": {
          "ref": "f8beed86-e998-4d71-8101-d398ab4361a4",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c0b17e51-8301-4ac3-b53d-a02af87cb9e6"
        },
        "item": {
          "id": "3f672556-b43b-4ac9-968a-f076f4df031e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "519b5748-2d31-4a3f-94c1-2cd6e9c6866f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc01eae-473a-4b25-8ad2-e418f80f2aa2",
        "cursor": {
          "ref": "0eeddf27-c357-4042-9755-d36695cb532b",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5b8e9d86-5f4a-40c1-9252-f85eb960c750"
        },
        "item": {
          "id": "dfc01eae-473a-4b25-8ad2-e418f80f2aa2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a4a99424-a7e1-4a5e-b218-a9e1233afc57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62b28e9-e554-442e-ae9b-65596bc51606",
        "cursor": {
          "ref": "6d2c25af-073e-4bf7-873e-e732ef41d2ea",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e4c6a467-a205-4ba0-91a3-4fcfcb5ca179"
        },
        "item": {
          "id": "d62b28e9-e554-442e-ae9b-65596bc51606",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8c9a755c-9f4e-40cf-aa9a-365b57676a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5b1a90-338e-4b30-84bd-c0da50b7d549",
        "cursor": {
          "ref": "732ab1fb-7c3b-44a4-afb5-2ba85382ae36",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1a44fe97-689d-48ae-bf8f-a5275bccfedf"
        },
        "item": {
          "id": "2b5b1a90-338e-4b30-84bd-c0da50b7d549",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "74b7de7f-9d95-4a47-979e-8274e08a1a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e91953-5a0e-4726-9358-8d982e997f5c",
        "cursor": {
          "ref": "ab97345d-51e4-47d3-9c0d-c97ecf5f0bac",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9bffb81a-31d8-4a25-a9bc-a6ba70e361b9"
        },
        "item": {
          "id": "a4e91953-5a0e-4726-9358-8d982e997f5c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4d32117f-4701-4e27-acc7-52d2f7feaf06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549af124-1812-4904-8c85-82100ce49769",
        "cursor": {
          "ref": "00a710a6-9086-4d7f-8d97-7f354d2e54c0",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "aa110966-6344-49b8-91a6-388bd11b4ff9"
        },
        "item": {
          "id": "549af124-1812-4904-8c85-82100ce49769",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "80d628fe-42dc-40c4-971d-067953bb38f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e6ea22-1d2d-470c-9eb6-8901dcf18249",
        "cursor": {
          "ref": "198eb5d8-a94c-466f-9a88-9bf5082a6d2b",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4a0a5076-959b-47d5-8381-c04c7abea3b1"
        },
        "item": {
          "id": "84e6ea22-1d2d-470c-9eb6-8901dcf18249",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "43a0d56f-d842-42c0-9d26-f4968bcddeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ef1559-b11d-44fe-9c6d-18ed9b68f664",
        "cursor": {
          "ref": "e6086a12-b9d1-4d15-bcd9-6a24398af967",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "68f6e3f9-b169-4a9d-ac11-675a7b99b345"
        },
        "item": {
          "id": "80ef1559-b11d-44fe-9c6d-18ed9b68f664",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5f10e933-3df9-4a5d-810c-44d1f62d705c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1349985d-324d-4cde-8c5e-59d9b0717277",
        "cursor": {
          "ref": "18563a25-60d4-48a0-8068-54945ce223a1",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3f037e9a-f5f2-4eef-855d-060c6658855a"
        },
        "item": {
          "id": "1349985d-324d-4cde-8c5e-59d9b0717277",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e9a360e0-438e-4052-b193-5139d0bb12a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ae0198-2360-4116-8dd4-660152828673",
        "cursor": {
          "ref": "01f386e5-2900-4aa4-aa64-86d9d7f5bbbb",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8c21861b-e06e-4cd5-a14d-9b443c20f94d"
        },
        "item": {
          "id": "a7ae0198-2360-4116-8dd4-660152828673",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3f79f944-5165-4bed-be08-97b7de7b0f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d9650c-4b7a-4984-8444-8afbdae95f64",
        "cursor": {
          "ref": "175d0d51-c8e2-45ad-819b-91ff5539cd0e",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6f5aae02-3f5a-4028-8bf2-90a222e89a04"
        },
        "item": {
          "id": "10d9650c-4b7a-4984-8444-8afbdae95f64",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1739bd8d-849f-4104-a315-6630101a5a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a861e53-b47d-4db1-8ef1-bd40e7ca7b54",
        "cursor": {
          "ref": "4dee783b-acae-41f8-b1f9-d2114ae349bd",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7dbef4f9-99b3-47d7-ab0e-62c04205ddd3"
        },
        "item": {
          "id": "8a861e53-b47d-4db1-8ef1-bd40e7ca7b54",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6bc9a2ca-4a6a-4587-b3b0-4dd57c8855cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496f0d17-21c9-42eb-acca-82dc626d63d6",
        "cursor": {
          "ref": "38c789e2-2634-49cc-a452-78bc29649cf7",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "105f35f9-4df5-4613-8354-2710d117a2d5"
        },
        "item": {
          "id": "496f0d17-21c9-42eb-acca-82dc626d63d6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3c2bac4c-37e5-4c62-8fe6-a21f587eb8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8981522d-1f60-43b0-83f4-5b8faaf15e28",
        "cursor": {
          "ref": "edb12450-4eac-4fc0-b036-80a2e0e71a68",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fd88b786-363c-4e87-9f3f-f39ea61443ed"
        },
        "item": {
          "id": "8981522d-1f60-43b0-83f4-5b8faaf15e28",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "71c5f726-ed6f-4e65-91c4-7a88450a80c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d01bac7-3cc5-4ea6-9915-4ae56cc84252",
        "cursor": {
          "ref": "f94c5b01-25a0-45a8-a79c-ae28378dd7d2",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5e0bd1fb-91f3-472b-900d-f62063776717"
        },
        "item": {
          "id": "2d01bac7-3cc5-4ea6-9915-4ae56cc84252",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bc8e13f3-c289-4aeb-a397-78aed94aacfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c7f1c6-ec40-4a74-b41f-23cd03c1b24a",
        "cursor": {
          "ref": "db07b3fc-a2ad-4736-b1d9-ca10ae52a606",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "dc64709b-ac30-4270-8ad1-7f6811ed98c3"
        },
        "item": {
          "id": "15c7f1c6-ec40-4a74-b41f-23cd03c1b24a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2679e1bf-6c61-46ac-a16e-40bcfe5451c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc7b483-5a3d-48f0-9bd3-59c5647f8120",
        "cursor": {
          "ref": "10ab8808-d08b-42d4-af9a-8b556dfeab05",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a4a6f86f-2a1a-4df8-b085-c6153dfc28d9"
        },
        "item": {
          "id": "ddc7b483-5a3d-48f0-9bd3-59c5647f8120",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1c28c3c0-2e9c-4097-824e-93a587858cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31927f0-29d6-405e-856f-6a59869853ae",
        "cursor": {
          "ref": "4ce46932-a7a3-49c3-a24e-48f193fadf14",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6f0ec754-210a-4790-a79e-264701e26fc1"
        },
        "item": {
          "id": "c31927f0-29d6-405e-856f-6a59869853ae",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b5a35bad-9995-4eb5-ab25-7ebaa0d3a435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69281a7-1f07-4776-8d15-fac97b3e8abf",
        "cursor": {
          "ref": "2246d2b7-f4f8-46f0-9807-30c51f8bf83b",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5ddc9da5-502c-4ed9-ab18-1ab9f425488a"
        },
        "item": {
          "id": "b69281a7-1f07-4776-8d15-fac97b3e8abf",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1fca2af5-0685-41a4-acd2-1cd480727752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d65294-b7c2-4433-94bb-7ddf6d799a94",
        "cursor": {
          "ref": "49724cda-1872-4b2d-a5d4-d24233d2f7eb",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ed494a7e-c3a8-46c2-a42e-702d59397446"
        },
        "item": {
          "id": "77d65294-b7c2-4433-94bb-7ddf6d799a94",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5954c5e7-6be3-4662-860b-178a86493d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55bafc9-4492-4790-86f3-cf5faaf55269",
        "cursor": {
          "ref": "de60c871-2ef3-45c0-af9d-222f01ca69e1",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "627e12f1-8df6-40ca-b0ce-d21ab02f4ab6"
        },
        "item": {
          "id": "f55bafc9-4492-4790-86f3-cf5faaf55269",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a4351924-92de-4c61-8827-87c7f36a35ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd643d1-1abe-4348-8644-8f668f2bb673",
        "cursor": {
          "ref": "314e27ec-0f58-488e-a328-8914f30b6c4d",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6d8934a0-fd8d-4c90-856c-02a84f4b9fe8"
        },
        "item": {
          "id": "8fd643d1-1abe-4348-8644-8f668f2bb673",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "57d2d764-a393-45a3-837d-072f80fb8cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900ff9f2-3d3c-4b10-a637-3ef7badeef1e",
        "cursor": {
          "ref": "564d18b4-fe74-4f71-9651-c5edf73f68a2",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7b1aef0f-c07a-488a-b832-95bd43c4319e"
        },
        "item": {
          "id": "900ff9f2-3d3c-4b10-a637-3ef7badeef1e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "31004b7d-af3c-400d-a2be-98e5d727dfb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8ed631-d132-4b44-bb26-768e605187b9",
        "cursor": {
          "ref": "ced244e8-e781-414d-9c25-1e836ced9514",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e3ae56bc-70ec-46bf-b471-12a02ad00ba9"
        },
        "item": {
          "id": "2c8ed631-d132-4b44-bb26-768e605187b9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c5cd8c40-a27a-4745-a891-a7d081c599cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121a07bc-3240-4c4e-a509-36d2eb30c2bc",
        "cursor": {
          "ref": "f728b355-ee98-4a9d-bbc6-06d0c08ba8df",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e9ab9917-7c9d-4e75-882b-1c4a8cd80c69"
        },
        "item": {
          "id": "121a07bc-3240-4c4e-a509-36d2eb30c2bc",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "84e79266-d703-4f87-8296-3356c41497ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5c85bd-2956-4d41-bea1-fe62295e58e6",
        "cursor": {
          "ref": "9e017f70-987a-466b-afa8-23ac2f8d168f",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4c767b62-2aad-4f8a-887e-7619c8d431de"
        },
        "item": {
          "id": "be5c85bd-2956-4d41-bea1-fe62295e58e6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c9f92477-edf4-4632-aa7f-2133a93accf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc33043-0683-421c-a675-0397a3c4cf6e",
        "cursor": {
          "ref": "aaa55540-a778-4ad1-acee-bd5287aa4953",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8112fef4-65df-4dc3-b6ff-6a3c77b68dcb"
        },
        "item": {
          "id": "1fc33043-0683-421c-a675-0397a3c4cf6e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c14a771b-6c59-4eb6-aa2f-0d2739b0647a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efda8f59-d710-4026-a71c-560f7aeef18c",
        "cursor": {
          "ref": "7215bc06-2317-4e7d-98bb-403584b24bbf",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6f2075c7-0e63-41f5-9c45-35118b6d7f44"
        },
        "item": {
          "id": "efda8f59-d710-4026-a71c-560f7aeef18c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8572675a-b3fb-4f01-9222-b57447be7071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b559eef-011a-45c0-bf00-ddb88132eafa",
        "cursor": {
          "ref": "544b0563-267f-455e-9b9a-b28f682a0c91",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e1447214-5ede-4298-aef9-333941baa088"
        },
        "item": {
          "id": "1b559eef-011a-45c0-bf00-ddb88132eafa",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8a59d4dd-d8bc-47d9-b101-f49fbe6cf72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80234ff-46ca-42e6-ad79-dd448716a87f",
        "cursor": {
          "ref": "ea43ea4c-647c-4eb0-a025-9a8ce4867cc8",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "021fd8d0-e507-4786-b783-3bbde9e53d76"
        },
        "item": {
          "id": "e80234ff-46ca-42e6-ad79-dd448716a87f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4de551fb-ee0b-4109-b0f3-95d243941a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae83d448-96fc-4822-bf61-9e0ee646a7d5",
        "cursor": {
          "ref": "49f016fd-9873-4a81-bc0d-a40ba5ceb0d5",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "42920857-a0e2-461a-a727-09a832718eff"
        },
        "item": {
          "id": "ae83d448-96fc-4822-bf61-9e0ee646a7d5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1f1c96a0-39bc-48a3-a88a-8189604c89a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8fa016-d89f-4b63-be48-315dbd420ddf",
        "cursor": {
          "ref": "057da3dd-1e0b-4d49-9bc6-98c50b0978a2",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ec0703cb-9402-4dfb-8c31-4ac5745acf97"
        },
        "item": {
          "id": "0a8fa016-d89f-4b63-be48-315dbd420ddf",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8b755e2a-825b-46ec-b008-1a030834b2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256b378d-7bcc-4fe3-82dd-3a598c58daea",
        "cursor": {
          "ref": "250ae4b3-38fc-4ca5-871a-e337392d82b9",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "89abfc76-dde5-488e-ad2a-d6625cfcd887"
        },
        "item": {
          "id": "256b378d-7bcc-4fe3-82dd-3a598c58daea",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "69c81223-a488-4904-9a12-b392c9e789b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9e8248-4563-47b1-bfaf-369ecbd01af5",
        "cursor": {
          "ref": "f669640a-9274-416b-b1be-1d2204503f56",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7298b840-fccf-4224-bfad-864ebe1988af"
        },
        "item": {
          "id": "6c9e8248-4563-47b1-bfaf-369ecbd01af5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "23835f32-4dab-42c3-820e-9792431f54bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10c9a72-713d-4e77-aa68-49712cc3b0a3",
        "cursor": {
          "ref": "230bf0f9-4914-4c23-8699-b985a40f7105",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2ec0e63b-6fe1-4320-bf92-0ac27805f936"
        },
        "item": {
          "id": "f10c9a72-713d-4e77-aa68-49712cc3b0a3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "89a50818-945a-48c0-86a1-04556552481c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22202adc-7b2e-4121-802a-dd561f654b74",
        "cursor": {
          "ref": "de3f243c-e612-48b6-a193-d7ec2a17d1f2",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7c70ce1c-e6e8-4a4c-886d-1e0cbf955c43"
        },
        "item": {
          "id": "22202adc-7b2e-4121-802a-dd561f654b74",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "97f28e3b-ada8-45d3-95be-8c1a3b4fdcc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40380df-5440-48dd-8afa-c211f5e104b8",
        "cursor": {
          "ref": "be0d5443-18bc-48ff-a403-c359975da9b7",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f6bfa821-106c-4cbe-9401-b5d00f4b5fe3"
        },
        "item": {
          "id": "c40380df-5440-48dd-8afa-c211f5e104b8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "569041f0-9422-4655-a34e-8e99d299d9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13ff141-77c5-41ff-9ea1-b6f9f61e3b08",
        "cursor": {
          "ref": "396b087c-b1ff-4237-9421-1362d3e5a26b",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5c836add-3780-40db-9890-ce1b0affd6da"
        },
        "item": {
          "id": "e13ff141-77c5-41ff-9ea1-b6f9f61e3b08",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "dc12b1aa-e299-46cf-9bf6-d9d3fe465442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b91ce5-c746-4215-b8d7-23592535b956",
        "cursor": {
          "ref": "aa461960-81f1-433e-bf98-43dc5a6532df",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9135bde1-0f2a-4f2e-bd06-324a1b5e68a1"
        },
        "item": {
          "id": "e2b91ce5-c746-4215-b8d7-23592535b956",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "12e91e21-5571-4de7-9315-0213e70f087e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559c6dfb-979a-4955-b0ee-876adc1f8c8b",
        "cursor": {
          "ref": "65b73dc4-ff10-4370-8d0a-6b916701f883",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a1fe57ab-2331-4ccc-9b10-6a8811056c16"
        },
        "item": {
          "id": "559c6dfb-979a-4955-b0ee-876adc1f8c8b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ae330d48-e102-41c1-b733-f1b81fac7374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37e5ef9-7f64-435d-91cb-eb626ba7e941",
        "cursor": {
          "ref": "49183a12-fe7b-483d-9cee-6a52431ed62b",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a0d3ff11-0a30-4c5b-8ca6-dbec28810b9c"
        },
        "item": {
          "id": "c37e5ef9-7f64-435d-91cb-eb626ba7e941",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "969190c7-f046-4c3b-8932-73c6afe5c6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890a0f7f-367e-4fb9-a76e-ef468c97603e",
        "cursor": {
          "ref": "0ac8fa45-3980-4bc8-98e9-7dfb9a2b4b8c",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b73c1182-a045-4dfe-8490-a92d1cbc52f7"
        },
        "item": {
          "id": "890a0f7f-367e-4fb9-a76e-ef468c97603e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e42cc5a8-3e03-4f2e-a876-71a0a2788626",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711d3d18-2dfd-4dc5-b09b-f4dd6214ed11",
        "cursor": {
          "ref": "d7aef36b-cfc9-40cf-a313-5e4fcc62f520",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e68406b5-ec87-46ee-af56-b058de126048"
        },
        "item": {
          "id": "711d3d18-2dfd-4dc5-b09b-f4dd6214ed11",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d0303b29-d1ae-48e0-aba0-0fbac30a11c1",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3c19e2-08a4-4f9f-9e7c-36adeebf08ec",
        "cursor": {
          "ref": "460f630a-384e-4192-af80-cc3b1fa07e14",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "70685b9f-77a7-4b57-a5f4-b1dee8883993"
        },
        "item": {
          "id": "8e3c19e2-08a4-4f9f-9e7c-36adeebf08ec",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c16d154e-b5aa-48f0-b912-f1741a52aeb2",
          "status": "OK",
          "code": 200,
          "responseTime": 3093,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a426124f-fe6b-4a1f-9018-eb1edaeb8fab",
        "cursor": {
          "ref": "0a27e791-7ec9-46dc-8122-78d173858b4f",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e3ab9641-0fad-4453-aea4-c70e0c1bb96f"
        },
        "item": {
          "id": "a426124f-fe6b-4a1f-9018-eb1edaeb8fab",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d28148d6-bafb-4c51-8683-11d02ef7b571",
          "status": "OK",
          "code": 200,
          "responseTime": 2406,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab81014-bc8b-4a4b-a7cc-0b6c167e441b",
        "cursor": {
          "ref": "b511d233-9c40-4ab1-9100-69a6056b005b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "48fdd462-34a9-4a54-bcf0-eb0dbedb96cf"
        },
        "item": {
          "id": "0ab81014-bc8b-4a4b-a7cc-0b6c167e441b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9cce1a9d-267c-4afb-b306-0ae3eddb8258",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab81014-bc8b-4a4b-a7cc-0b6c167e441b",
        "cursor": {
          "ref": "b511d233-9c40-4ab1-9100-69a6056b005b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "48fdd462-34a9-4a54-bcf0-eb0dbedb96cf"
        },
        "item": {
          "id": "0ab81014-bc8b-4a4b-a7cc-0b6c167e441b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9cce1a9d-267c-4afb-b306-0ae3eddb8258",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56931f20-4cab-4893-b69b-806c199ca685",
        "cursor": {
          "ref": "f6fbc9c7-23b7-401e-bed2-6fd3324a6b3b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "06de1734-58f2-4877-8575-e403f6e490cd"
        },
        "item": {
          "id": "56931f20-4cab-4893-b69b-806c199ca685",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "42ca9326-d030-4cf7-be24-14791758a0c6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36e943b-5587-48cf-9866-5319dfd4acd8",
        "cursor": {
          "ref": "af826ed8-a130-4605-99e1-049a240bbfe7",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "fa07ef4c-d418-48de-8bc5-a7648edc35f7"
        },
        "item": {
          "id": "d36e943b-5587-48cf-9866-5319dfd4acd8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "13433e0d-166d-4d6a-8ac4-a9f9494b107f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}