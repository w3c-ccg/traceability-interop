{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c4f98864-b078-4816-bd60-1e3b5bd99a31",
        "name": "Clear Cache",
        "item": [
          {
            "id": "059c82cb-de76-4953-a1ee-95f61b498a1f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "58d279eb-79a5-47e2-91cd-a68e5695fa05",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4e395aaa-69cd-410b-8c49-936a3ea289df"
                }
              }
            ]
          },
          {
            "id": "c414b1a7-1723-49f0-813d-b8c9533e842a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fba887dc-085a-49d2-a4d9-75bb03bad638",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "07de766b-3a30-44c0-a192-7204a313ab7a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f879b136-45af-4bd7-b35c-5964efc20add",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d25fac42-bb16-4a07-a285-0059858a72ee",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0f1aaff7-faeb-457a-9199-2af800be291d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17a15496-00b1-43b6-ac58-0f440f785588",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d4636db-b507-477f-acde-0bec6855e716"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9b44e268-e5c8-4d2f-ab3d-ae92c3c6c17e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "967e5edd-83cd-4bc1-b7b6-8a34c9890c0d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a3bf077d-2bd9-45b7-a6b2-21952117a2e1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6fb21a3f-2c37-4ce2-b4b5-39981786da18"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce0f2460-da16-4143-8d3c-c4312389dd9c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2f01ca50-d69c-4ce0-90c5-d31ecfe168f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "73e0b90a-7cb2-48f0-8d42-f9e5a8260388",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "652bf413-a6fc-4af4-86e9-de8650dfb6e7"
            }
          }
        ]
      },
      {
        "id": "1dfbda1a-9c10-4a64-b344-ab0f79426431",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b7ac5dcf-3069-4bba-a0bc-068fb9cd964f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e251ea2b-2b9f-49af-973b-40906b229270",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9666f287-1ab5-40e9-a027-a3687ec99e5b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c3f8ff-b36b-4422-8bfd-915348a9c314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34a233fc-407b-4c34-8c90-fd3194264c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988867e6-88bc-48a0-a0f1-150b900b62c2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9e102e-1d59-4554-a389-f396e78e8003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cdf199c1-c87c-4237-b9e4-427fcf07967d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38cda306-1b0a-465b-8b5f-041f9cce9b83",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec7d26b-1ed6-4749-9fb7-27f5ad9da880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6a1ad21-863e-4518-930b-27a1bf10aab0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bd78ee7e-fff9-431c-99c8-517358291f61",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f95e40c-84c4-41c9-a036-dc941bdcfd96",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78203e69-26b1-4d26-b858-30bee1b41f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "730b060f-159e-45a2-a8a7-7e0a641b552d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3b725b-4c52-4f73-a0ce-b7358bc185d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b8c1ce-ac29-4ed7-a413-1c196abd0f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3705f1c1-40e8-4c0d-b6fe-1e74f659c41b",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48f3866-2df1-43cd-a78f-31de7c7c3c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0336cb4d-d56f-4256-b708-9242a81c2ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793e3fca-8db5-44d9-982a-aa3243bf1cb3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "53d71762-a2bf-45aa-9e14-0f577f3d9728"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "45cf1314-2599-487a-a92b-829ff31ba870",
            "name": "Positive Testing",
            "item": [
              {
                "id": "679dbd8d-012c-4598-a0dc-40dc85b615c7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d5e2d31-2c84-4d02-afca-5c4832663eff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "98fc2800-0c3d-4712-9752-25670c7c5fea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45ef327b-277f-4e7c-be08-5a647a6aa360",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "a79566c5-04be-4689-92d4-eb517f388537"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "905e159b-4c33-4586-8be1-3f1b63e33201",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a19474f-f3c4-4c04-a658-bf3c2ed6f931"
            }
          }
        ]
      },
      {
        "id": "7ba5233d-1077-48b0-ac94-56982375fcde",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3f89ea93-8cad-4a30-8b95-48ef1c836021",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e16432b8-d0d2-4ee2-b540-fffbadda62c5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8a0446b2-9f57-4283-b10e-79d32194f670",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daee268a-20bd-4533-a500-34d3caaca96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4867790-4b4e-4b1a-9510-5cb8ab87b31a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86624b4-725f-4204-a0d9-ab5557b65601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88c5cbab-4075-4a89-b370-b1b5765c723e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a321c4-8c9e-4db0-ae2c-44686f7f24cf",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd7887c-b714-475c-9917-1b5fbfb7c9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05186114-daa3-408e-9de6-84dd6ab20b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9a56f3-9967-4949-9105-7af8a4b73f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52adef0c-0a74-4ade-b3f3-c01b49ed54a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aade64ec-7f1a-4bed-81ab-1157305dc917",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c7ec55-cd1e-49e7-b052-887d524858dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df8e6a5-2d3e-471b-98cc-43def0b442c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22b1e71-cc58-4b83-b2ef-c04b9693370b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5c7bde1-4e41-409e-b054-94ae39dbdc60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f88f788-eeb9-44ca-8d0c-d12dfbe4be33",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8bdb73-2fa9-4635-ae2f-7945b7e7ccde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb20199a-b0b4-425c-a9f7-0b3090ebfebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f661c7c2-f75f-4d0c-9590-3cf8b455da5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "800ebfeb-f7c0-4287-b0d0-f76fb1a188c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727c50a4-24a9-4932-b8d4-2febbf68917a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7173fe8d-dd80-4417-9a61-fa77a349fb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6efc01dd-015c-428e-9ef4-51ed4de1ed74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6776665-d4d0-4032-89d2-3b5ceaceb4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a8ac71c-ee48-49bd-a551-37a30dad79f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e137e3-5fba-435f-85ab-6ebdad271b9b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e5e529-2aaa-4bcf-a0e2-cff68a97677f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b12090b-5605-4623-a868-0e8172c1c642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae9946b-f1e0-43a4-ba04-735b5510a1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15c8fe19-fc53-4c26-bd97-442b7a774a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc95ade-5397-468d-8016-a8f6d19b2fae",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7beea1df-809f-4673-89b6-d603e6ace574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9238cd-5ffc-4657-bd54-8c9ae5dd0f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94007ca-9378-4078-88a6-e4ac1921f023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "667acfcb-c4cd-4826-8e4f-edb745266e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59282cb6-8c0f-4f7f-a67d-5bf803c7a8b5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4881c8-d031-4e42-bb59-d90d2c188b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd996e2a-febd-4760-bac8-46127176944a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922b48c5-36b9-4422-b168-acf33a9b063c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f92953d-3823-4501-a7ed-29ca012c18f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44669838-f82c-4436-85ed-0c365b12f58f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d52dd11-be7e-4f67-bdcb-84df1c96971a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ddac9fd-8632-4ca4-ba8c-85a5fc6188da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ad126c-1f96-43f1-b851-e87f59e950fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "274bdcfa-a20b-484c-843f-6a715109f607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b935542f-2236-4f36-9b2d-9ea01bcc7fc8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ccb6cd-f96a-4534-9e44-9efcb39eeda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75cfa5c5-df97-445a-8819-81918a2027a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd51a2d-7279-4668-b4ab-0e74c9191e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09cc7938-a123-4626-b533-389f6cfbe57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aab02ec-e7a2-4a30-9e99-bdb711e1d08d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6299ebba-5ac3-4679-bfd1-d86b62fcac3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc8b88a-5259-465c-974b-39f02d114aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da314840-8fc5-4c03-9760-0a63b30db50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd4311b8-152f-46f9-8976-9c31e72952c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a2ff61-18f8-4bac-bc83-7dcb6a8757f6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874d80a9-208e-4eae-b9ba-402974958ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc67d0e4-9075-45c6-a3ef-2e42d8beabf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab844932-4db1-49f9-ac57-4f7ebf42dbfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9576612e-0b03-42cf-ac1b-27363b82eb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cf0bc2-ae2f-401e-8d42-f602734e95a5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b93c0b6-c9b2-45cb-9abc-fb6c484fb1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7309162-15e6-4d0f-b615-93b22e6f2edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7f46d6-8c31-4ae4-958d-1743ce6f955b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cad9bbc6-0fc2-4186-ae5d-3cc39a709e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e547ed63-79a0-492b-9c6b-44748db0ce85",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd765bd-1359-4284-ae7d-ce4c1e872936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d0b239-440b-46b8-bf73-b7e510409e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef78cb2-b7bb-47fe-888d-bb55d6e8750f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5017e31-cacb-47e1-b798-ccace9ec0d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f168e53-0371-40a5-9731-51125acbec17",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbf1e98-3051-4b9c-8b5b-93f927b115a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67576c02-5ebd-4f2c-9b58-6b016fb1f8ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72350680-8080-4bff-8b6f-50933f5c1594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8033275e-f47a-45c6-9765-06bbc826bbf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fe64fe-c493-43ba-abe9-b3f66f5fdeee",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e4d744-e340-4ed4-8432-fce499c363d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aece469-bd5e-4025-98b8-6b4044e86970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de38ae0-e4d4-41b4-90bb-fad79a56dd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4d6736b-1f78-4c28-ad5e-20e08bcd7fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42356c3c-e63c-4e31-8b4d-8bca0af37aa6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e1e996-d791-4f77-ac7e-cda5d9fe458c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eafb8098-2334-4404-9be0-256f07f7f218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e75aa4-5792-4c2e-9d7a-3907ad7f8337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89519eff-fc94-420e-a3bf-9f2dc0ab3f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98d054a-b95d-4052-a0a8-004983871f5c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f6735d-91d3-45d3-80c6-e801cbda8a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58cd931a-5e81-4d27-8e7d-249f5cfb77bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f4261b-ac4a-4add-a5d2-1ec380172316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a00c21f0-b11c-44bc-bd33-e18032988d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2eed7f-3288-4b77-974e-f1640e5769ab",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8dbe189-b9cd-42a3-9bca-a5685b2e322c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e94653-84ff-4209-951e-3f6c325a94a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9f78a0-0642-494d-9cb8-5a6f87ce26aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "448d4607-cb42-4803-a752-6ccce0986ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c01831-f5b2-48af-ad37-de261976fe36",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42833566-1744-4520-ba17-8187fe620d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e692ee84-b6f0-4254-9a90-b8423be285dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3d5cbd-ce57-4eaf-876a-81b1734795d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea5800e6-881d-4637-972e-27455be6d829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eac54d2-d18f-4755-a8b8-6f114a2f0792",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a66b5a-0dd2-414f-9e20-ed50e7212482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c5f51cf-9ee8-448e-ac9c-a0c70cf2900c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5965fb-eae8-444e-9752-153de1f004e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "730cf477-db3c-4a53-ad68-ebddc5b529ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6e467e-bc4c-4d9f-8cca-f6fbd8f48e43",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c3a0ee-5f50-4a49-bcab-44edeac664f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93574cf2-02a9-45bd-86d2-2fa35afcbf04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45284de6-dda1-4bc1-a8eb-1324655ec433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b5f453f-e9a2-49b0-ab6f-5f646310d068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777655f6-ac34-4c6c-9760-13df5cde5657",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871e799a-0e52-49ed-a65c-d5ca7e2d02c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f1d450-2104-4ae1-94c5-efe586806166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f75efe-ea4c-456b-8326-94e12e1a5c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53cac26e-6396-46e8-98c9-aa0e25045b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5319b14b-2b71-4be6-ad6a-55c9ca5d5b30",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eee10e1-eb1b-47c5-b0f5-1e4a7abbfba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e082d8-c8a6-4050-9a3c-9f7b8d0d844d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44226954-cc6e-4adf-a654-86e5c2912dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba496e20-6fbe-4e49-bf64-7c1efff59b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c4ba69-c330-4f29-a2d4-51f5cb6b46c0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6865dee9-6504-460a-8fb9-54691c0a5d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3401a3e9-fd7a-4188-b701-9f2a5a2b6c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758c3142-9cb5-4e46-8378-5f43505ea19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f433bb46-b95b-47ff-b19c-691edeeeb948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a42f6c-2ec5-4dd8-8da2-42b6aee09b3c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00033585-d9c4-4e18-9140-19f4b47a5212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab259f5-f1c2-4739-8d47-46323106d1f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f156c2c2-a29a-40c5-99d4-066582316e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "163e7ea9-ce36-4aed-b787-14cff0fbd8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8c5e2f-3914-40cc-aea4-d465b310d0e2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c808e62-c96b-4326-a4a3-3fde6355d85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa1ea79-87d6-4901-8da6-63b89d5a46be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600a4fc2-6085-40c9-8c6c-120df22d6e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a1f4908-1cd0-468a-9736-4836c51870e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40fe283c-8f6e-4965-8d68-228f4bfbf8e3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b4351b-807d-476f-a3c8-6f90531ce54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efcf4308-5f94-4497-92e3-56865608c886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc6d504-0044-4a3d-94b5-34cf5712efa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bda7951b-da1a-463a-8bf0-7e3f7fb7f74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136e0d0b-4890-4e56-9447-161e903c3470",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f21a029-31c7-4213-81a1-703c3088cfb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd0937b-c004-45ef-a7b9-886018145d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c682284-afc1-4e1c-84a2-103863028943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc00fd24-879b-4606-bd53-5cd04779b8a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed4d9e9-6e90-4a61-a836-514fc15564a8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9601777e-dfbc-4164-a44c-07e2f047aeba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35debdea-fe98-4009-8ed6-f614b36f3f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c774107e-f57c-4869-8580-18305f4fd9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "289dddd1-f300-465b-9c19-ac4c1ffe1d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e515ea-7d28-4587-a72c-c927de7d587e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f0ca6b-e678-46f8-9048-ed261293322c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d616f1-1940-443f-8518-042fc51bee5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b36d5fc-852a-4393-8cf0-7fdc0e80205e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fec0216-86a7-40db-bd7d-33695ae3fa2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739dcbb1-16bb-457e-b3af-565ff99c8105",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262da6d9-ada9-4f7f-81d7-4a1d6b55b889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d07cf39a-56b3-4c2e-bdee-91d0b30d4a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cc0e68-d5f1-44d6-a5c7-aa3482910445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "39c4cd60-69ec-4362-a596-f114f147d015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef74bcae-a9ff-4bd5-9c58-6013c022346b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e458bdd-8446-4214-bad7-1db9b99605ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd784b7-05ff-4020-8500-9dceea9fcdea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f2d0cc-2fc7-43ac-9bcb-72ef24ff4f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "921eb98f-972b-4647-b91e-883c2a153724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be1a168-0355-43e0-b861-7d0143c654b3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac81d61d-22b1-4cca-ab5b-aeb1c910163f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0eeddb9-12b7-4642-80b4-28ed103f03fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9486e9c5-c8ab-423a-8e78-3a15bcf8f027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1600617-2190-4fe8-8ff5-5942516029d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34856821-54c8-4d79-8534-e59a651b958b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72cd8bc1-4a8f-4210-beba-01de54ec8e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a55c7c-8171-4c38-b61f-3b524301176f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f631b3b-a35a-4a2e-be0c-f501c2532d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "013985d5-96f9-44f5-bf13-5434db31e53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f41a005-da33-4c53-b938-f7814678c3cf",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a225f3-7012-4a6a-b9e3-58cc2af33ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a5ea55-0653-4dd1-b9a0-aeaccf607134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d20be7-fb3b-4abe-9221-3904d839c58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc90465-d051-4ea3-824a-26858458009b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a283a2-6c05-4038-beab-6532aa9d319d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248f3332-6d0c-4ea7-a973-9e7943076d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7e5317-77c0-4b12-895b-8901dd27e27f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2e0ac7-84f8-4d09-997f-19fddbed2893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cd702db2-0c59-4ea1-a606-24b43c51623f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a669bb9c-8e65-4f67-bdac-b53a3a27705f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1017f4f-be46-4fcb-82dc-7901d2bfa1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33477bef-7167-49ca-bf7b-3a508624767c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a7bad3-5820-461a-900e-200a31855b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b265e5c4-92c4-42d2-9e1a-f7de9d2bb4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c935c39f-1c0b-4875-a452-7345204f82db",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e8a0a7-f0c1-4351-ba28-50a2cb436dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1193cd4-3ac1-4cd5-9f89-0eb75339987e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e8588e-42af-4fb2-9b38-70130ac2dbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "945986b8-e181-4bf9-b547-bb681f09e724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf7ae15-4050-4fdb-9e2c-6445d9130277",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c54eed5-54dd-451d-9099-a24f28a0d414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad886c12-b521-4846-bbab-b097c2390211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b8046c-40b7-4f3d-afb5-38a5104ae11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "127650db-04eb-470f-8d0c-3054ea9e5e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af0b195-ded3-4161-872a-88933dfb1d3c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d15a4c0-cacc-4e59-8105-8293a531e3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a12b2e1-c24d-4e4a-9112-8930a5b33f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc25b7c2-35d9-48bc-bd40-2dd75b78472c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4923649-6f79-44ac-9b64-e93a55dd15ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03895e38-80f4-471b-8316-ace81560d735",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f92fc5c-1225-41da-9558-ca089ebba372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f392b17-7d8a-48d3-8bbf-be41ebb1e44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18aaed00-f0e3-4f84-9a78-0f547472b57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f934eb58-72cd-42f9-9496-a92d14dad3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7847b7fb-eb18-4c6d-a503-0fe33aa29e32",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22d7670-f6b4-4046-b026-8e63ececa31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182f87a3-3115-4cc7-b40b-05b353f3ee93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498bccb8-904a-4c46-ad01-ffca3bd88678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0a304e-a334-402d-ad05-1490b7ec5202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74e0f4d-1747-44db-9076-7dc75e43795f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f85784-9ef4-4f61-98f2-2eeee870bb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11ef89d-a435-4e49-ad40-3e5a042bb363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e47c0e3-3986-454d-94ba-9bdb6520dda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9b5fb891-b476-4f98-a92e-530849ed1329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62075507-f2ed-4599-bd23-4c5109ff82b3",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471fb92b-c991-47c5-bce7-edb10e110cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c7c63e-0341-47b3-a209-7650fa846b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e3de45-df7e-40c7-98f9-1044d7d20f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "22026ebb-203b-42ca-b928-29c5a0ff12eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d48d73-e892-4e21-8eef-be742b92b423",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3173205-0616-419f-a37a-1703a1bbd840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698e26a3-90b1-46ab-bcc2-ff8cf451f6a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f052428d-0cba-4651-af5c-552075c2749e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2afa2bc-3b8e-4be6-91f5-b29689b0e319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd218aa-3129-4aed-9ac9-d73e1723f081",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "226d18b4-1ccb-4316-9e68-9748e51c6c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7194cc7-29b8-45c6-87fb-1a5e041d9be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2d8ad2-2956-4d08-9768-f391db7141ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6b21d2-2866-41be-a422-5fb3efee0103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d86c7fc-08c5-459e-888d-f76e6727dfd1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acf627c-543a-4d17-97ee-2bbcf798d69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d60222-1854-48dd-a6d0-d516d55aef1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4fc870c-b8c8-43dc-b715-a5bdc2e92c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d174484e-6804-4cc1-856b-4d4bd597ff63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fb1bec-26b5-4280-98be-2fd09366d39d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "032ed75a-11c8-42ff-859f-e40c7409e2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073c4614-9c44-497c-918c-7ebfd5cd6d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fa4dc0-fedd-4227-b917-ad91415bfb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "310c4b65-2381-445a-90e2-e6d2f8980cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae36600-3676-487d-9872-c9b2c34ce9fd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "309861eb-734b-4b7b-aba4-281d4128c2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25067bc4-df82-4924-9b64-79581ce619ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2251a77-a060-4a95-8fb6-b699eb7d994c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "082f70cd-1d39-4dae-863f-a4ecd54f6b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c75744-fccf-44d6-8bcf-6a37dbfae7bb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a140f28f-c41a-40fb-ad74-55b8c94efbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e33f18e9-0566-4d01-b918-e3c260402b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799f1635-3b2e-45c0-aa28-e1ec05cf865f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51d35403-1f26-4cf0-aa44-f18769e0f399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee9c5c7-d273-4db6-9a3b-3cecb9ce919a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea28844-e6a3-440a-b573-7f8ee01b7995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d86319-18ef-480c-bda0-9f091fb183f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cab0b9-1011-48cc-8e1a-74e65c743cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55ce30ad-5548-451e-9319-b9e93548bf0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9140d3a-d839-4cbb-8436-f61e87e66c97",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b936163a-01d2-42b9-a36b-0d5e0a568743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce9f9601-8691-495d-8e28-187a1f679500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef805de2-a52d-4bfa-b299-aef86bd491c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d49b6394-0ccb-4952-a00b-a45234799acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccb2bc3-2cef-4c99-9a43-c51d3bbd85db",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1ea2a9-61dd-4997-acf7-138f199bd918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4c0bdb7-0d4b-4fcb-9477-836aa73b172f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313bc50e-d824-44b8-821d-0d89c01644e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5644294d-73f8-497e-a0fb-5046b37beef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e12280-e54b-40fd-8523-35d00752c538",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da4a8e1-021f-4fdb-9d65-5e6a308a5939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4bdfd90-762f-4798-baf8-8f15d3565a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c74039a-e359-44d2-909e-d8574b8993f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d2b4c90-5950-4cd2-87dc-dfc19e7d0f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526f5901-da1d-4150-9bd4-9213fc6c8d6d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "391f1ec6-c047-401a-b0b5-58ea0598758b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33db245-d252-4bc5-85fb-07b0288d85ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c7b831-7359-4fc5-b94e-894db94c9d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c027553-e02a-4c77-aede-93d466b432da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1496cfb-d280-4109-a00e-b01debe9cc5f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f32297-bafa-41cf-ad46-59bbf989343e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fccf49e-1ad8-445f-9029-0ff8d72470cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4fca5e-c782-44d0-aed8-a331811b2253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bdf0b02-7fb1-4eb9-8570-d3a41bf317dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b7cd81-0af4-45a3-9c42-561be03a88e3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bdced0-9747-461b-a314-55bb4bc6bec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c56cde5-f2ef-49cb-a63e-d5b934199c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793f1a88-f6f1-4723-9f11-9e2085ce831c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0160d97e-c39b-472f-815b-bdc1b196d8c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a990551-3c03-4a9e-9993-ae22bd25cf6c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "841ba20e-382d-4d57-9e97-69f097211063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f695cf8c-4b7e-4fd9-8ba0-f417a66a8984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbb26bd-e675-463e-ae52-ceb3470beadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a721f045-f596-4067-ac86-c9b19ee8c479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5582a926-213f-44f6-bae9-b2ac68fbb80a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9696fea-b987-4dd1-9a07-d5382e35ab47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cbd24fd-3a30-45cc-a8b4-fc9c4a4737b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ab4697-34e6-402a-992d-48d783fee6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed578e75-eac9-4156-8785-caed543ae75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e363c76b-fe64-46b1-9ce3-7862e0ab7cce",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0258dac8-b63c-45bb-9cb5-30111f4e2791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94eea37c-098d-4916-a4d6-3f8613a9952a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2280b18d-c9ad-46cd-945a-90a26adbda9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c9088d-65b6-42c6-8b2b-fa5f5d8dd05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f46ba3-4054-4d7d-8cea-6ccb6fb3e28b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8fa27b-0b86-4a89-be0f-b2d483ff3cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a88e573a-40b1-4674-b819-7b43643267ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6cc74a-8bd1-4e81-805a-2fc5936fb2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc9f7ac-7830-495c-aa47-e55d2367e529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddb858f-26a9-41c4-a88d-fdea0ff5ea67",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b03d425-28e7-4f88-a723-2947a8d0cbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff7301d-6cb1-4dc7-9a30-53736a060310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfde0e6e-ad0e-4a9e-90a8-c53294d5e814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ecce901-c115-4569-bf2e-b110efcea1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f15711-8f98-4ce7-a05d-66ecc53f8460",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22190d5d-b303-4a61-8576-e0ca9d536957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8463625d-9510-440d-98fa-e4995884c0b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b44b7a-e8e6-40ae-ab58-cfd6514bbcf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "177eaca9-a164-4c98-b40a-7dd14e75733b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d21a80-e625-47fb-bf6d-771b592c4ca2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71708aca-6926-4d4c-a355-6e9c5fe9e7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43972e85-33ef-4339-b905-f9c4abe9b18d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfce598-4593-4511-8b9e-ece7af753c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "89fd0503-f038-4d7c-95c1-20b14152a485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf5c076-b6df-46b1-8c06-6728e934acd3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a170c6-002b-4d54-9b19-9369f526f767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c099a2ed-492e-4c6c-9a9d-bf08c4e3e14c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ddafc4-87e9-4868-8169-64461fa0576f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6bcf3c7-c2ca-4c0d-b2fa-93846e95cf82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c827d4-2deb-48ea-8753-64f86130b02b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddea71c8-1172-42cc-b5d9-b9c280087465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd99ac9b-53f5-4e13-a732-3ba95505c298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722ac6ce-0236-4906-abe9-910cebd43e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f814e592-5107-490a-9c17-b1b7a577471d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea26714-f1db-4985-9768-dc3247941a5d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f23247-438f-4c96-ba8e-1e98288c16d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415be2ad-3f9f-4a04-9b5a-5060d18dead1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ce50be-5f6c-43d8-a3cc-36ddbdbada6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ab53ed-1739-4fa2-9dcd-86d6439065e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61704edc-effb-4469-a64c-e6d0896001c6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ddd3d54-2cad-4cbf-a48e-319cbcb784bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d601bfff-1679-47e2-9979-c7e814a4ac8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0528d98e-2c0b-4401-9c96-bd17fbdf6693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "52482789-d3ab-44c5-a728-a0ced63d472f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c448478-4d16-4099-98e7-9aef9f9df1d4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb4eabe-99aa-4b54-8628-b403331f1831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91cc6d57-22b2-438d-a540-c0227c4518b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0deed8-c102-45b4-9cda-5fbb377af269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e92375bd-0648-4574-b4f6-8241aa42ad84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f69baf8-ae9d-4ce2-93af-5a8439ffd0ba",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b5c506-cc1a-49eb-b68d-5d5eb821a629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a4283f-6e31-47de-a7e9-b9d67f7ccb97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd449586-e908-4c48-bae1-6b3e0ed0b456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf7005c2-8674-4293-8d73-aefbcebf5d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8765551-5144-4bf0-a080-896f161389ff",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060a1fff-af99-4535-9554-9d1b161179b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07eef63-2b4a-489f-a5f1-04d5c3422f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4357f9-eaa7-43c5-a3de-39a4ef1f38e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee745e21-19b3-4b43-9ae4-12729c9b986b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c185476-1a15-435e-8511-b5feb0ef82fa",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02e6d53-27a4-4b24-9916-b1d97d7e3c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a561cde6-791e-4e70-a6b1-7787f7f1d28a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024718e7-23a9-4e3f-87aa-2b48d9070c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24e20cb0-0e7b-404f-b159-187e110d1069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c28d2b-438c-4fe7-9423-3bbbdb255cb2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e77682-b155-4be3-b3ed-537f6c65476b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03474b36-e623-438b-b1b9-bb61bdcc7ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc9ea5c-9d65-43de-9427-28bad2aa8298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad8cba8-491d-4895-833b-6099f5557b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3480e00-c43b-4ba0-9d30-393b046ae166",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0bbe039-a1f6-4449-8ecc-258e61e38cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89a9cd3-40f7-4df4-989c-34a1495340b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbe0cbc-0cec-4a2a-9ebf-84f29f74b8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e9b1b7b-3ffa-4818-bfab-90fe206c08c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1997393f-df9e-4a40-af16-54844b654da6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fed9d89-5c75-4bf3-b7c7-0b09b0e984c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106b0dd0-0064-42b8-b925-e2ffcfbf1e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df1cd5b-2b96-4d82-a875-f311e95d5971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "652650be-c739-44c8-93e9-b4c1d61d1a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e9c637-4e51-4832-b80c-36f7348d22f3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a22f5d-47a5-45d7-bb33-8dbc3c052012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "828f9d2b-e1be-4ffd-8282-30026baa8355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b583dec5-40de-4ebd-bcc6-7534d150c2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f126648e-f115-4894-bbca-121ed2478eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8707772c-122d-4f1a-8267-6c2829343953",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4339f7-c843-4ee3-bce8-6d822328a88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e410092-c409-48a3-b9ef-e08bd674551c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97fedacf-77e6-4453-8546-b0c93508eeb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7110eee-0ff7-4c57-8ad3-fcd8e97a0cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3079bf19-e892-4662-98bd-36c6131dc158",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0798cf74-d16e-40c2-b148-45512ed603c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0a1944-b67b-4d5d-91b8-ca89aa85c30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6760449e-8c28-4746-9f51-15ab4491fb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec01bc3d-ee27-4de8-a9d4-29d30f30ff97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8ebd21-99d6-49ed-bc3b-7f0fc5951566",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163ac067-64be-478c-aff1-ad8f0bc9866c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28cc8b7b-b02c-433c-9693-f602e09d4398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7b57df-d554-48ec-8050-311f8d5610ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e7a4d59-01d4-4dbe-90dd-bdef3c3e7987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b62da2a-3dd0-482d-9dd5-20148294d110",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d172eca-3e18-494d-876b-9f0d3365b3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721edc8a-4ffd-45a1-952b-ab558cbf49f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494ded1a-034a-4179-abee-3acfe5ef3a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6510eb83-7c01-4f2b-986b-0591c56897b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4998aeb3-adbe-409d-8be4-a29d0c5b5eab",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a670ccd-90b8-48f8-9107-0ec3ff09d7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a386b4e-d1b8-4250-8ca7-ebede02e9948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6782b2-df51-4cad-b0e1-e16e11c31e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a440c73-eb01-48e1-ba9a-f1d9a94297f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31916a8-8d70-449d-82d6-3dd41ded4276",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac12e512-7574-49ca-8dfa-e65dc1568120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d552ef-a9b6-4824-810d-470c5a004621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98a7840-cad1-41ae-a1c8-2349e0f136dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "49b90c04-5e1d-436d-8e5b-381d6abd8c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153bd228-6606-46f4-89ab-0355458a090e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d578d0-577c-46ab-8fce-a2de221731af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a9a735-da49-44b7-b4c3-d7203837c632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f15a18-aebc-450f-9787-51525a08c588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e47cac6-1fc0-45e5-a196-e8cf1fe83d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b43ad3b-7a27-4afe-94d7-a7bd11c33ab6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c680e2-5915-4ce7-9f43-a5c9529acd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d61bc531-4484-42c6-9623-7695970aee4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58363a1-5284-4980-bc6d-7b7ff4647233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "904d77e8-46f6-4437-95af-ef8c25a2025f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a29d0a-44e2-4f7c-90e5-6a452509a743",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49bc39c3-2a68-4a6a-b837-438d8b9a2620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef6532d-1862-405f-ae26-dbafc7179fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901374cb-dc8a-482e-8691-690399d000ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52e8509a-22c1-429b-870f-59fc097755a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5691c8-6657-4b49-be40-5b55d9d1bc1c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186d2fd2-83c6-41ea-9f67-0b96d6384bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "356eec95-08ca-4794-9864-44fe7ea6de59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c413aec7-80a5-432a-89c3-9a7c4b946d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "215e8199-98e2-4bbe-8075-2b9d8d52c0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7b6487-bdbb-4cd4-ad47-34ec3ca76404",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aeeeee8-0acb-4e0f-a04e-7c9ab62bd94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b21a6306-b3e5-4b78-abe9-432c2139d2ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547c2269-e60b-4caf-bf61-1daac3d05944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d5a0081-78ed-4f0d-b147-e2eaad410251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0eba1d8-9894-4b66-9a91-0838de9748b8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f69dcc8-87ab-4a3b-9a58-28d504a80ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7412cf2b-621b-4ffd-85cf-ae84965efb9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d74c5f-b88a-4f54-8800-317fd9a32842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "269b1ba9-264f-4a30-9da8-916e3cf2d72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4fdc31-8f88-441b-8ca0-d6400873307c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde7fccd-1c62-44dc-a36d-b4c007144b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ffe9435-2a26-498d-aa23-80ec81112964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4398f97c-3e9c-42dd-a186-92726b0e3e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a52d56f-0ead-41c0-b057-a3d03ab1d497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b9961e-3785-412f-9596-8b5fe080b965",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ab45b2-3edc-4561-a4bd-8d3e9211b18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6219353e-ac3f-41a9-9114-8c0d9121dde8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e66be7-6acc-491c-acb0-159255acd2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f71171-1f43-4f5a-9252-89a363ab3923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978c3111-0eae-441e-a49e-0d3a9f14ee02",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcc4fcb-7293-4231-b77d-f0cec4d61c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43c2c17-a613-4084-a21b-9075e3b3e04c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2304b927-c337-4ed6-b31c-50ccce518e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "48757137-58fc-438e-ba8a-626dae736868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e756ed-8b2a-437c-959a-bdc2fa014b2a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6cafac-11dc-4968-bcdf-ed5515125c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7fd8dac-7290-45fd-81b3-bf81832ef06b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850e1888-7c9a-4c18-abdc-9e4e8825075c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "31166e72-495d-4f33-9eea-3e66dd995255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee932fe4-8a12-4146-aab0-1fbaf9b6361d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec82535-19e6-4a70-a65e-edf87fc1deac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4190619c-73b7-4e62-b4aa-7983aef6af78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7409f6-6ca2-47e7-ae9f-f126aba7986a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e503308-69af-4690-a1c9-5407e051dd15"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7de86269-7518-4896-99c9-9105e226814c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b310be48-a62b-4d9a-93a3-7104f46105ec",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d743d2-7ab3-4a28-9435-ebe5e66b41a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba5d7b3f-c326-4a59-a94f-76378bc9c09b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d68f51-5c35-4f53-b6fa-77c36175cda8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "81339bbf-6066-498a-8428-14573d74eb06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4923b9b-df3f-4b17-a333-421e300f1f32",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93b4176-eb0e-4ef0-ad28-e181d421d8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f85d9d4b-0370-4bf3-8f2e-6a958ddcf157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18442ebe-dddc-46e3-b8fd-7dac8b131672",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "0222b056-57e4-4c55-9d3a-c3b642feb894"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef7897a7-a405-465d-913d-0ce7d85bc81f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a843903-fdbe-44b4-a6b6-dba992e2b14c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cfa5895-846d-41bb-9f85-753081ddac62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9421858c-7cd6-4245-85f2-f5469e7e42fe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0b3f7d5d-f855-404a-b827-9ecf2f02a04a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0f59ab34-ca9a-4d22-81ee-cadee271adfd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8b20a1e3-dd9e-4d7c-860e-4eaee0b66bc0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "27d08024-5a5e-426d-81be-5c3b70c239bc"
                }
              }
            ]
          },
          {
            "id": "5aedd6f8-b304-4b3c-b71a-2af476db3f1f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "59b0a3b6-f613-4cad-8022-5566e8882bee",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8e1b08f-8ae5-4d0c-a560-416f49622098",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9017aa2e-bb05-46f1-8e16-d1ad9fb76781"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a7b385a-2291-42f8-9a46-842e14aa1888",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "65bba2c6-d82a-4fba-a2c9-bc4a87c21683"
                    }
                  }
                ]
              },
              {
                "id": "2c6e0e74-276e-4812-bc0f-17751ad231d2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a16ebd3-3346-4e1d-8f8e-bb5a24422dbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "137e0d2c-ab29-432f-a256-240e2b07e32f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebf74296-cb5b-485b-b0c6-07dd0ca9d07a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2df2e2b7-ddd1-407b-8bc9-13d447145da4"
                    }
                  }
                ]
              },
              {
                "id": "2c59bccf-ef5a-4abb-be33-fa3208c7d388",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51a08508-d0bd-4973-8858-68120791cb26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3011a8fb-9d46-44c1-ade3-c1adb6a607c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7039973b-9f5d-435a-94af-a304659dfee6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "87e8ae84-a124-4447-9bff-6859f6e89d00"
                    }
                  }
                ]
              },
              {
                "id": "fe66f570-7af0-4b5c-a84b-14a29ea126dd",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe3b4de5-9a39-4da8-81bf-21df58811f99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "277bf277-8fa7-4035-b0c4-61d835ac0b39"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa266269-6f60-47a1-9ad9-8f97d61cc00a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c39e2ece-0f06-419b-a8e3-f36344b797c8"
                    }
                  }
                ]
              },
              {
                "id": "d73869ec-72ec-4771-9323-801f707b05f4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b03312c-33cb-433b-8b84-54b585129e56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d9c4a66-2bf8-4f83-bf68-4deb54da5e70"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "470770ce-2d66-477d-9dd0-21a135325e76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5559fa16-1f46-4fdd-9578-c0df7f6022c0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ff3694ba-279e-4d1a-8470-bdd7a4591a24",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bd749210-6ae9-41d4-8a8a-40191ae90c9e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a5292571-1acb-4976-bc32-2bd6aa3f2044",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d51f81ad-6e3c-4b0d-a015-3032709c50b5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d85eea06-4ea4-429b-a450-a14a134bf7d4",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "35f0edeb-a149-416c-9482-cccbd1484190"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da3ab9fe-c043-40a0-9a70-25b01b78049b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eeed0c52-4ecc-4397-91f2-b5bec7a1757d"
            }
          }
        ]
      },
      {
        "id": "c68d2b28-737c-4f11-b822-3be0de1f4901",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5c9d859a-28e5-4e33-86a6-f9a46a97350f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3eb41d3a-d9ad-4ebe-97c7-cb38252b41c4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b51ada5c-fc62-4acd-8fc5-c4153e27d381",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba89eea-4dd2-4cf0-bce5-515e5e0be8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa18984d-c03d-4af6-89a5-ecfa3661263d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e103b24-c108-43b8-bb1d-d8cf5732a35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "498bf3e6-7aef-4031-be8d-9abc40954a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9d0cbf-5737-4995-851b-013470a348fe",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b419c2f-bd95-400e-a124-6fdaa9fc6556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13831dc0-3e4f-4ea5-b397-6118f7779550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806bd1f0-5fbf-41cd-a9ac-25d469e2f5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "97a9bd29-9dc9-4d43-8c46-4867a69a09ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ddc4ad-3319-4231-b1a2-687145a873b4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d546aa3-e9cd-43ee-b236-c99300d5eb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae729c2a-11b2-4dad-9837-0b29e3ba1875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc7913a-7423-4f84-ac58-6e0c58845a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0bb01bb-8211-4cd0-8e91-08ded1984733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35667ce7-2685-438f-b7b2-cb5f3c3a8f7f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee188264-5efe-4b32-845a-dac2687f7db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23cc8c1-8db1-4763-ae81-3d4b5ef49118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f050b45-53de-457d-a9e4-e108d4ceda5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ecbbbb-6886-476e-95ed-0244ce45ed93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b300cd8-21d7-4f59-b59d-887caa512949",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d16733-96df-4763-82af-d6f30c170971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc1757f-6f46-445a-a93a-ef8964698c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d229b36-be75-4451-a45f-efa25c0e7d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c25ddb1-53c0-4ab4-82ea-3b21ba4461ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39b906a-0f9b-40f7-9602-60566cda6f6d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a58d2f-a3f1-4767-860e-e459f3d769e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15413161-2024-46c4-86e5-15d1d899ed73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f01419-80f4-49cd-8417-adea807d0f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c1c10ac-4a79-4916-9d1b-a5a75acda831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad22670-6ccf-47ce-b742-a5586c5e4e85",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f028f9d-0c18-4f20-98cc-e2f9c050a670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "815ed695-6d2b-4101-8e71-f3a3b8b66327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b82801-67da-4faf-b7b2-2264d7496b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c6a609d-defa-4997-ae20-1399bb15337b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112208d1-0e5b-4407-8fc2-439b42e5ae74",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a035efc-4146-463e-8d94-0d2a4730bf5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa364c92-cf92-42aa-a154-20a41419f903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ae1dab-dc4f-4aab-aaf2-1f1fad73d268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b06aee7-567d-455b-831a-09df93b7ab2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3474fe3e-20eb-475d-a6a3-d2ecb4bffd2d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376f72c1-ca19-4662-bff6-5ec5e06c66a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d180fc-15f9-4d1b-9f2b-79a05d1d673f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1fd46c-ebfb-4149-a822-8e5249bd7c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1499cb22-f007-4082-8273-968c2665a9ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25aa8671-132b-491e-92c6-794bc09e70e7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3520dcb5-105e-4f95-b0ca-af5034d2a9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3935398-01a0-4a64-b7d2-15bcf395454c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cab434d-ab2d-4616-8e26-d5100d9a7fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e58e0d32-b21a-4ec4-8a54-d04495b9d9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df32710d-e7fb-4ca6-b918-f859be141b63",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "187f6261-c40e-4aac-8f2a-7f9d95d32bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b3b9d3f-027a-40f1-abac-99087acae058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6838bb-88ab-4e7d-bb13-6b8550491d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4ebee6ef-5f0d-46fc-b21e-1b138551483b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a9e0e2-c060-47ff-919d-64a82da80bf0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d99b882-2c70-4c6f-ba91-e14cae1e30f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "026f4598-03cc-46e8-ad07-50a371b92170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e4e597-30e6-4c59-8e80-eaa1ffacc3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "15e80c81-3e93-49c0-acd3-843c6050baba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce46f975-5b3a-402d-8aa4-477f62d2d132",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568e8254-57b2-4617-9ca6-7f68b2a60764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9ea88e-2ef7-4320-8747-a788d721ebcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b441edb-58fe-40cf-bfdc-ee08cb1c521b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "821ea8d9-e583-48b4-bec4-be420d05ecf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe9d519-5958-4659-b8e9-16e5323ceaff",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caff5626-aa2a-4b03-9688-2e71acca8b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26615e2b-adef-4312-8908-c08bb0a04bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e775f8-6c16-49f1-af5f-bcc7cc41e887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc8759a-dc1b-45aa-b732-34575cdc6a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfa2957-a6be-437e-9f87-e9067371ce1b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f7cf54-515f-4ebf-af03-a9ea12ef88c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df5ec233-f0f5-4c3c-9b5e-c89e7fadbd86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad6fbed-34a9-4c3e-9954-41369c3e8d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea367721-3a16-47f1-9117-ff575a09c7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479ffe19-1640-4d8b-93ce-3c5ded97081c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3b0182-f6cb-4ad7-874e-6b6dac2492fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff73660-fd6b-4b12-94fc-7a6b6639c2bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601bc29e-108a-47c5-b545-3cbf3f2b0fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8c5625-76cd-409c-a6a7-4a6c1fe82ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107012e4-f809-4d6e-a6b3-85aff934df98",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a42d5cb-2393-4049-9e2b-e1c68fb9f106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "076eb4e7-a1fb-4256-b42f-4c84a5589053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4bd0f6-8d5a-415e-8804-5f6a7bded40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "30762684-c37e-4643-9a38-011be0759d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9818c56-b937-4cfa-83dc-50d50ac35f31",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffa10bd-776d-4836-a3c5-64c7e3ef507f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d8b3f96-4d40-4310-871d-bf4ee678f9e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb31f4e-95ff-4732-8646-97a2bea3151d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "acbba710-dfde-4ac2-ad8c-16c1b9cac218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033101d6-b9f2-4702-b791-c22fa29e848a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bdbb76-f057-48cc-85de-c9d4fde99969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf91ab6-03e8-4c50-a6e5-0cca92bce3ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1935ac-39c1-44c6-958c-59d89da9ddea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6a5601-e45d-44ac-8341-a2232719d50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d8e6bd-a4c2-4cd6-bd9f-ced2dba1246a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893815c2-f546-4181-a893-242f882ea5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01030bc7-8919-4abe-bb13-a7d1912911f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be5ab31-3091-4e76-99d7-2451a2b56bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c259c7-0c00-46ab-bf21-b3dacbfb34f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b70b0d4-84f7-4f47-8b6a-f48d6d789df0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfada99-61b5-498b-8975-dc20d240a8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e531795-01c6-422b-81a1-9b59ad379fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfabcd9-63d3-4c9c-892d-230bafaf8aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1dc9687-7bb9-4cc6-88bd-a7de197cb51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af31c2c-6e5d-49f8-82ca-ba8225e8b7e2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2afd4d-619c-4b43-a04c-75d5397fd5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d107045f-f191-4abc-9c3a-6c48fcb24538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52691da7-66f5-46cd-aa61-f98837cc3e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37a89aa0-c971-4486-b904-4d64a7eb21f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13fa2a0f-c5e7-423d-8af0-7f81710d0880",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42244e06-4fbf-44b2-bb5e-6272f47ac08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d4dadb5-48a7-44ed-b56f-d3f665de4cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4aec34-71d2-437c-b8b0-06f9619e5fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13a158b8-59f7-498d-9904-bfb34cd17e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40af3c9-963e-4bdd-9027-67d654f33a13",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d49b02-4013-4c3c-b4c7-050b52367845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd1d0c6d-7816-4c61-ba7a-d202b443ddea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a1428c-58ff-4a1d-82c4-916be8e58140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3be752d8-92e2-4b6d-a3d7-00dd2176ca54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f089691-78fe-414a-a528-83dd1cc143ed",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f6c48f-4865-41de-a58b-98443842e69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bca587c-565d-47c9-ba07-36368e705ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab92608-ca49-4a79-a88b-bee9cdf38449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2eef6dac-8fb8-4354-94f8-d9a6232c4caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba015ce-4ef7-4f0f-adf7-99ad43280ae2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cde73c8-9747-4a01-838e-e8c3b270b885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a8db31f-27bc-45f0-bf5f-c5f06da41813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ba89cf-b76b-4900-bc69-e227a5c8471e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "385b4222-e24a-4bf4-9bcf-4be26c23519f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5691fc-aa87-4a9b-9c9a-2da7467c323b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "652dd458-0a7e-4137-a532-a59e391de987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "301b6f59-6c46-45a0-a27c-f85ce886a186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a46f4e-27b5-473b-af06-d76bc83382c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47be6b79-1ac5-42f1-8560-9d8ad33a25ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaae43d7-168a-444f-b97a-758e0faa2065",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013aa3bc-e45d-45c6-8761-c214db627c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da06b71b-ec16-4fd6-b8ef-24304a0082b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a99b81-8e56-46ad-bcba-6836a38a49df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2dc02d-f731-4649-8a23-bfc5ab93f1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b420c63d-fee2-4eaa-9684-11da0cb79236",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e788b57e-c83c-4686-8877-37507a24f0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a4fa0bc-99c5-4289-ac58-a36d2bbcf69b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5193d086-afed-42e4-a1dd-9f3b72b98749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c51410e1-00ac-4caf-ac82-5732688e9ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac28a49-62a0-479c-a1d1-a4a8915ac24d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9784bde7-9be2-403a-8113-c7cdb5ed5de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78493b2e-63e3-46f4-999a-625e414099bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eaffb6e-f748-4272-9758-8a744b9b28b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53691234-d937-4aee-8aa8-451cad2ea438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006a5575-35de-46ce-bb0e-0877d1823600",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbf9ed1-5f64-4e98-b0d1-869d1dd85386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79786e80-93c3-4735-a09e-781f3f721def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4578eaee-72bd-4e3f-a2a2-4011d6eeb29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e56816aa-bd71-46b7-89e7-1f894b1b00a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b4d5da-67ec-4be6-b56c-56867c33aeed",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c269184-ac2d-4654-b14b-594b13319119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ee3d67-7dad-477f-a684-a3b34746779d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b28f097-e3fe-40e9-af33-59a4d51d38f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97bf7ea5-c730-4391-84db-5f000e695c00"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "02f690f3-58d9-4c80-981a-c2b5eb6d274f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b117302b-dfc6-483f-bd53-fc03bcc25c98",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd32c2a-964e-4ee9-97bd-2d2933d2a2c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0cb7a85-4b9e-42c3-8ca8-8432eaa0abb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0727fc74-ae02-438a-8485-36487bc13d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9fa603b-f9d5-40c5-a45b-bbb8f221d9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61cbeec-8f34-42aa-a59c-dd87450a5e5e",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c89038-39e5-40f9-817a-5baef9910e9d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "252dd2bd-eb54-4770-a815-c2c405e842ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd7bd01-655a-48fb-afc2-5020344936e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86a20bfb-8cc7-4a54-9f4f-e2a34870395b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ee1b8ea-8299-4777-b213-603bb2e8dfc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "745f655c-5480-4769-9195-55da45fea8fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5658cad3-f542-40f2-8ebe-f7617931d671",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "453b253a-c36d-4fb5-8d1c-7b0161d76b9f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd00e394-0e4e-4723-bed9-968e9ba57af1",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bbb4d6c1-54d5-4360-9c70-5786e99dcab9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e671fb99-8232-4467-88dd-1026ec1b1c3a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ce65f9bf-ae3d-4d57-91ee-154273a1c43f"
            }
          }
        ]
      },
      {
        "id": "8bfbdd2e-6249-4279-9f7f-1755d6f64d0d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7dad461b-ce80-4d3d-82db-f8a7715d11c5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b49cd22-edd4-45c0-8d3b-04fdb42a1a32",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "66d60b0d-7dbb-4f3a-ba4d-7faf2fb7f79a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c56bf75-5b64-43dd-9a06-1b7318711ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2348e567-91ef-4dd6-a8f8-3986a3703cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f23e6b-5ebb-4373-87f4-46d4ac1d8403",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55af6ee6-bc93-4dc9-9607-d3b349cff82e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac9ff54-37c6-4329-9af6-bca14e38e6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee307e35-0f35-4728-8b93-deea4878610c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c918da9-b1e9-4e94-9cdf-ebd90b6e04f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acdcdaa8-1239-4755-823c-b097203facb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f905ac53-8a7c-4135-9922-e7c4cdb81927",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc14c250-6c86-4884-b58a-9e62731a7deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aced40fa-48d4-49b9-8802-9ff7a4e5d090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f45793-a651-4b95-b81f-b9886672de90",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34493f00-6cc1-4e12-982d-643d3418d976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d792d0-32d2-4d06-bbcf-0145957bcac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d76ec3-5f09-42f0-8032-bc590c070ae7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4902ecf5-3ae3-4e43-b110-173679b551fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "989ad039-bf50-4c59-887c-40e63456fe1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab3d6fb-6ba3-408e-b104-539ad6154cc5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4113f29-7ee9-4c15-8e12-d490ace77196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf4640f-ce05-40c1-9f09-d58a866d4512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d3e2b8-4c25-4025-b45f-f4eba1990bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96fc8287-48ba-4cf6-8a2a-14379d46e9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22721b19-6b76-491c-9be0-d43a173ecc92",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b32aa2a-d5c9-4ede-a3dd-51347d9bad2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2d4250f-d6a1-4cb7-b514-52016852daf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d5f6ab-0f4a-49ac-8073-03810fa921f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "346a23d3-3a70-40a2-a508-c4c901fd374a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8616810-c1e2-4a9f-bcb9-4773a265d78f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2373a66b-512e-462e-a87a-a0ffd70ee13d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1a49ffb-6639-4d20-b350-3e1b3bcb7a99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "515ce0bd-790c-4725-9298-e7289e6e62b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53781cb-3996-48d8-8a0e-9b8f02284adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0610bba1-47f5-4019-8a68-271729df916d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42f98d2-1fca-48ec-a3eb-84992dc84a22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "463aa256-99a3-4c3b-b3b5-aa36b472aee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57aa01be-b75d-44f8-b7c6-8634f88b3092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0747a13b-1614-4540-aefd-5dc0f13c3642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72536a57-d2ec-4bad-a3bc-e195f52fdf69",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3231570e-f589-400f-be00-7e219dcba137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f80a0d6f-99c9-415d-b460-bdcbd243e946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4081f68f-102c-440f-a7e4-0a9da315f7a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b451b0b8-98f1-46f0-aa39-5c8c5839193f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcc12c0-d509-47e3-9259-7a5418f32b94",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e624dc-3bcc-4284-84de-0b041baa113c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a79ac6-5eb4-4e5b-8ec3-718f89c4ac8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8227b6-e54a-44a5-850c-cfa6672db2a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf13dde0-a160-470d-97d0-7123639382e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c29d8d4-4b49-40aa-bec1-82fcf7407cc1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5a667c-6eb8-4075-9231-f565241a14a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afb1f890-b92f-43c9-8c5e-dc216370a144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "904a00de-e15f-428b-91a6-bcf23bcf3525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3a7b3d-c1c6-41f6-9d23-1142ec67443d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d77735-df62-4f6b-9056-6bb6d0403525",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea816b3e-bcb3-42e7-9c63-6603e6a7b3f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9973d63-0114-4593-a428-49c65f9e47fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92921c39-95c8-402b-9bc0-ff5b04a57075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a240a5-6aba-4fb1-a005-bc05f498a456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f25e50-214f-4dda-8479-5fdf166dda20",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565c4645-1f94-4857-9f18-17150acab1f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae351691-bae8-44c2-9d5d-94ab1e830767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0ff54f-f8a9-4c7d-a2b6-a2e892b8fc47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df50efc-af55-4838-8e84-1aa1b9ad2442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd86bab-0e4d-442e-aa69-0ab373a349a0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39225f2-bbac-4f88-a7e4-272fe8a7bfa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29512c53-bb9c-4e18-9689-991b05cbe6ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "273e38fd-85e7-4da3-92a3-45b96114ed9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a7e9292-42e3-4459-8558-2e14eb419f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e6e9ec-bbc1-46dd-8600-aa93da401663",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f3c639-7e56-4ccb-ae7e-6d2d129f41a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a263d8d-56a7-40ba-ac73-573e0b1da478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df476ee1-8d11-4835-bf7e-31648dcbd901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9bf3e4-bc7e-4284-ac50-ccd10544ef8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561f89a5-9066-4a9d-91de-029eb9a70e38",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05968da-c15a-4cbc-8fdd-b189026b6870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2280cdb1-597d-4612-9af7-a0ace81a954e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be6de86-5bc9-48c2-ad09-3e1d7e797b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0218e5-048c-49d0-b74c-9bf8e1d4d0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96cd533b-cb6b-4633-84c7-04b7d7e1e849",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c9b047-8743-481a-a441-fcda02cb1942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1811708d-c72a-4fdb-914d-9d4886e4f057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d6e990-79a9-4236-a217-bb9ca1089e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821a3f64-d0f6-4a0a-8629-828e46130329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64dd0faa-5b14-4f42-9f8b-6e3aa2f72e48",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88094700-5639-4d95-9356-e20bdb084860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a17d93d8-c099-4142-b54d-2d132db7a819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced30794-6be1-4852-98dc-513ff38e828b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc16f79-7e36-4f40-8aeb-ad960429bcfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4278c0-75f7-4c3c-90d3-3e27d5011675",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e109b80-ba19-424a-ad67-8021b61ed8db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1ffbb4-9092-4006-8a4f-50a69873d4a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d6062e-1d91-4026-8d1f-7859a7201959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "787dcb33-d406-4c27-bbee-e83bf9e2bf51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e72ebf2-78bc-4603-8912-cce15d934a38",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609ec363-7e82-4bbf-9e56-3cdb07a431b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0658b061-b9c6-4bcd-b907-2c591222fb90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a299f4-6a2c-4948-bd0c-d406227d782c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2129b013-67ae-4519-9b6c-56a6bbb5f54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57902c8b-2b51-4bec-b2e0-ac5204f49fb8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727533bc-04a4-4e66-8797-3f28abd8936b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98cf6e66-2b5a-4ff9-83c3-bdba16fd0c43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fe9507-cf66-4f6b-a027-1396bd8f3244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1300262-941d-4c04-ac8c-51f62bb6213d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971b6613-4a40-4485-8813-c9d689e489fe",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76016717-286d-466c-bdf9-f0b34deb1010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8373788a-0154-437d-977d-e5d0e854fe2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "366e0909-e8a3-4e3f-8a0b-991c60132e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0925294b-a17e-486d-b93e-f92f094127fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afed4abc-1b0d-4ac3-9a51-b92436833b5f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c093902a-be7e-4b88-aeb4-d0f66a7de84b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "509c4358-b0f8-4014-9e43-75d14b5d4571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36054c2-ecdd-4d68-a0cc-aeb301c94b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298be0d6-1988-46bb-9836-695dd55f6c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b00118-46e0-440c-bdf8-8a612e684b4b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59a2f03-01bc-42c5-a890-f37c72df582a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42cf3ed0-876b-45e9-bd8b-41ecf4438526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f4ac0e-76c8-45cf-9d48-8a403a76b3ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c42c0f8-0501-4d8b-890e-dac17d620242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49cef498-84e3-4419-a70f-ebfa70b38e6c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7c40f4-f30b-4493-8519-0699882c4f2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34a5ca37-710f-463a-9896-62b85a9c7243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "122b3e70-dd1f-4680-a33c-0be7a546888f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63c65f7-c80b-44d5-bf31-b7c723fe7d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474ee30d-7d22-4802-8092-fde990287efb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3881a44b-4204-4c4a-bc94-943db55636bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a22e0387-4fcb-4a7e-9f0a-3d943d5ccd17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac5378a-4a2c-4e10-bb6d-47b1bdbd4cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b543985-7f26-4387-bef1-864474d48f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef3bdba-697a-464b-b88c-dcbe1a3b8bc8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849593b2-8c4d-4d67-9365-ff8fe3dff57d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777c6856-11ce-43c0-b79f-9eb50bd9d532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e50c768-21fd-4ce7-8b4a-765bd6078737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84241caa-ee14-44cd-8fd7-d7e941b41347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a9b591-b29d-410d-9bc1-6c2befbdb24f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf20b3d7-0802-4a77-9837-1175433cda6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc920f0b-ccfe-4b76-bbba-811f3cf6f2ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a018332-90e8-48f2-9d41-6a46d287310c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e77a185a-3427-4f5e-971a-b7d433a5175e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cdb301b-e510-4eab-bf3c-eebe0c0a582f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50bb94e-fc21-4e2f-847c-1c9439724ffd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42bce10d-8ca8-496d-8585-efd773a7c72e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2495b46-911e-42b4-b40e-57dd89e8ba01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a61040f-0963-41ec-a290-8988dc8a596f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c699356e-1795-4d7c-9a06-c25dd4f836d1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441b3825-cb8b-46f8-82bf-5f75b3c1bfda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1a942a6-9d8b-4bba-b14c-3d5c4f292be9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06701ab3-87b3-4c47-9e05-361df0b483d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2109c1e-fa35-422f-87c1-4267a6e4316d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7830e9be-f4c5-4d9a-8617-dab1075ea6e3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e3dd00-2891-42cd-91bc-033382d9918d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66a1880b-0572-41ce-9fd8-e5bd3166b85e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0989c081-7c9c-43be-ac4e-02a551e86c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e185e612-e3e8-4c59-bae9-7481cbcf54d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbda7efd-480d-4546-8e39-422a6332dfde",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3996f3fa-c1d1-44cd-b415-6079e3c555c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3ef1468-6c51-4315-ad85-ac6c96464b26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f884947f-0326-4b64-aaa2-3b943031a475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b083dc33-fc74-4c48-b729-2396db507576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7540b5-93a2-478d-8a8e-43dd57352afb",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98cbf134-3c34-4115-a88f-84f77e89c07c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ef083c2-fb7e-48af-a8ce-e494590839cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b02478-4112-4266-aac8-33a0f5f617c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e461a6d-d37e-4873-8670-aaff88349f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0880fd8-a045-4558-8271-2ba5d6c5506a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f465ad50-0574-41a5-8645-0079476c1010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b6834d-627b-4425-8e12-d7bd21a856b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1f4712-4669-46ad-868c-145bf072da28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff0ed4e5-034d-49e2-9bde-6ddbe13e6a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54adcbba-72da-4d7e-aca5-42357579ae2a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca7da6c-6d6e-49d5-a724-6e89013a5030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea0db8c8-460f-4b3d-a056-30080b02f7ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39544a5-3e18-4d72-8ea9-f0b29c87b83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b4db0c-a73f-4bf2-aed6-6e73054eb815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc6a5b3-757d-4084-926a-1a56447e36bf",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72939a7-1d74-4468-ac2b-531e19ecd679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b050170-3fa1-468d-80aa-44fa6b5ccd88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "915b9787-a022-4694-a374-bc87ae1d1c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971580a1-fd7d-455e-970d-30d5ac17526f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4553527e-1931-4740-83dc-249e10e4ed25",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3695ac8a-99cc-40ac-9970-d911d02c45a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "504b1a3b-007b-42e4-b311-fb98e397cf51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "652b191a-b718-4b5b-a8ed-935912f94f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0acfc184-8db4-4cbe-a4c2-06b39477e225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf9b000-61a1-4dbd-a832-7ec011b9d63d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7295265-a895-4f2e-ac04-5501b9be915e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "842ce332-4227-4c63-9d2a-15e44aa90fdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "456cae2c-7a75-4ff7-98e6-86eb67fe0fba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9435043e-a660-4e2f-b6ac-eae2c83d319d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da97f11b-b33b-43e7-b4c0-346b5b28e15f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caacb06d-d949-4015-a4ab-92db879b5839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f007a8b-1f7a-4665-906a-c7cc97d9cda6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d885a224-82b3-43e0-ae70-10e7422c472f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1a5ac9-5b65-48bf-b2e3-2e714d5d6e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8220606e-399d-4901-b001-bc6baa6c2333",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da9bec5-561d-4a59-acb5-be783dc645f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d938922-6729-4669-a5e9-856333aa43d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8941931e-c9a5-4ec2-bc56-1b38b63f981b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fddf182d-9138-4a10-bab7-c3fd1e36a0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942e0729-f92f-4487-a72f-692ea7bb373b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197b2b8f-57fd-4d87-a3cf-23e019f7a507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0360b0a4-7986-4ad5-a409-32dfbdc1cad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d392ee-2376-4c4c-b141-b0e831bdbeba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a1f9c9-3caf-4e27-b22a-ecaeca1f0b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f4ac5b-f3dc-4f81-83d2-a014e15074d4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107968ae-b361-4060-afca-3c6a78a15fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fce4d2b-4e6c-460b-a683-16d465998815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35db0b8-1484-44f8-ab15-2f8b55b2933b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d734721-528d-4453-8181-d238c9897086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25f17d1-a164-43df-89de-45ab8c2904c2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8581d98-499b-4f50-99f9-266f2110c653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63f1ada-2226-4625-b9c1-60b4e52a4207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ff3239-83f2-4d37-aefb-cd43ca93f2c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d9a89a-9d9d-468e-a799-f3664346ab9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce82894-5bb1-48f8-9881-b71cfa04325b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7acd3e98-8c93-4a9f-a24a-52d2d987aea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b775770a-e232-4351-9c26-d4a96c2afe96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3dec4d-dad4-49f7-a1b5-dca48d0801f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb4e79d-1bad-441d-9def-dc021291c8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba7d286-0fdd-496b-a991-9646df0a189c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cd67a6-b9a6-478e-9d57-70685c3ee945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1cccd11-6b15-42e0-a425-53718391c8cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a35914b-400e-466d-b44a-ab5f664d5f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49410536-ff66-410d-b1d3-e23c16432569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1acab3be-0ddf-40e0-aea0-35a4bbea0b5d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37d168f-c5f0-4c2c-9e3f-baff9b720e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4405df5a-95ec-4278-9491-ae8ed6286063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0b1274-0fce-43bf-9fc7-f28c518274b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1833f8be-99ce-432c-884a-89312749133a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c386606-6ee6-4dac-b58a-8c84a9ff0340",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adad8615-3de2-4c47-ae52-7cf18ae7925d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e09fdd94-14d3-478e-bc8c-16e5f0a6e917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75035f87-1b2a-41b1-af20-ee96c3d5ac1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf5a7fb7-4c85-40cf-9e96-b5d260833008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68b0adc-8445-4d9d-8f06-46182adf94e7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ecccc44-4dbe-4285-b157-4b257bd55c41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241967ab-687c-4b11-8e33-1b929dc853b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c80455-7b42-4a8c-8c91-ab8732ded589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e8f869-8537-449a-aa04-8ccc0821a7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2f6660-589a-4ece-b1d8-d1b6f1d48bd4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26119b0-a7cd-461c-8724-1b5daaf9fb5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c719fd6-591a-4035-b732-2111968486fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc72bc0-2ed8-4d96-a42c-872446e635e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15faa55c-b082-44f6-9f56-6011732f147c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e87a31-a94b-4862-b037-9aafceaf6218",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41deeb47-bd60-459f-a0fd-5ec25d4615c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6953e15c-1ec9-4207-a707-9c2561af8781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fe6476-c22d-40e7-b2b1-b19b3f772ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10bc7e89-c7cd-4a89-a583-e574856dd8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaee4669-ab9c-4af5-abae-67173491d8d1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb817fe-b131-4c5b-b51a-864da88ad7de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf3ce45-eee0-42dd-9052-ea6480c49a4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42f6bdd-8c07-469d-9156-7e22e2e47bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62868c87-bcb3-454b-bfb7-ce9bc3758faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338e1237-a43d-43e3-8669-6c912815fd50",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33983e80-5b69-43a9-9900-e805e67944b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f22019-3d89-43e3-9949-474d5bad3b7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "260c48a0-ed5c-4783-9052-ec41b13b4047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a867dc6a-d7fb-4304-b7ab-24898df60b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a5afbf-a8dc-4e7e-8b16-97776d83cc02",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5783979f-c39f-4f07-8bc2-8a4121f35e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28330e02-ad07-4bee-a5d5-0857d2a0055b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01494fb8-0a9c-4736-99b8-9a89f299d316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6483f1f6-1261-4f85-a7ac-da0ce48e16cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28eff982-2530-4e0f-b39c-c798d0ddfa0c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cffdb52-ab12-40a2-84c3-30975659c58b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "283af4bc-ba07-4db6-8de2-3762fc8b9f86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88adb6af-dc7c-42af-ac55-b05c4696950e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529370cc-e330-4918-8d59-7247ec666545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a825ce-1fd5-48b4-86aa-e65415765ac0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ee8fcf-960a-4417-b50f-5784b1e466e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7eb66a3-37cb-4564-8fa8-caf52014cac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fece11-256a-4668-b391-bc8cd2f12aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52ec5eae-95cc-4533-b1b5-c222ebc41f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9adb7ef0-23ed-49b4-8979-ceec357449e5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd76882-516d-4ca0-ba16-d7eed2b44424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea4d302-9903-4f0f-a064-d6ebd09d1dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5df82c-9147-4732-86a4-444ec14c9d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2535bb0-58a9-48d0-99b0-bddabba246f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60519e4b-f68b-42c7-8504-4f2e73cd40ba",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b510017-87d3-4d8d-8aad-927a8599a9bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "969bca4a-5f04-403a-9b9a-485edf32b0f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0d5682-95b7-45b1-b2bd-d2015129ec22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aef8bea-b294-4a95-9dbb-e9b539f0d952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09a249a-cfc5-4794-ba53-773d3e8cc8c2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0cf02c-d598-4bc7-a5b6-c73288602360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235858ff-d631-4e92-a15b-7892792854bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8eee5b9-dc9b-479c-9aac-ae377a734d97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21fc6e98-a48f-44d8-9727-6a3524835bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3172f3-ddb7-4f04-8ff0-9d2664ba8a25",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891448df-2227-44f3-870c-5ccb3776e068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aedabd93-6165-43a1-8252-fe9d81ae7e71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a821f19-2a66-4cf0-a4fd-390caded2c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301de294-b504-43a4-a1aa-8398d4f17834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5eb58f-f92d-4038-8cc1-b5f8101769cc",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f34cf5-b031-4c1a-a9f5-8800e4739590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24dfa27-722d-45ae-9a1a-6d83333ed202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96f76af-2e2c-44b0-a4cb-5193d7e90b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d118b10-7a6e-4c0c-83d9-0623c93539bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da88ede-9de0-4aa7-8d4e-636e2ccad68e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8bb63f-e959-4657-9604-ce01d9353548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6799405-b721-4a85-89cf-9985bf8d4711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "419b0647-6211-407b-b1b7-f4a867006706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be929e3-c007-4aa4-b184-0a3625af7123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd1a4d7-81f0-4c34-ad0c-cf6690d442b5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de192393-52b1-48a3-9021-90d906ebaa90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e752ef-1873-47e1-99f0-f80cf49d8a6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffad998c-ea71-49b0-a650-cdcf657ce45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea324ecb-8afc-4799-a7e4-ceb725fbdfd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeabface-6d57-432d-9452-3e8b9653e5e5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7624bd10-e6da-4eda-a150-67d578d63753",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa9d7913-ebbf-43b0-ab5e-814c9fd6b379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8157c8f-16fc-44d0-b425-a15dc5d7ed65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e45fe846-a33f-41e7-838a-0d16163fb292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc7d16f-053a-42d7-ac85-28bdf86d7b16",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad30d47-2fa7-442f-98b4-cafd9d75e364",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9e0b81e-0896-42d2-821d-a0ae623c3784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab18401-d1f9-4c42-937e-285e833094a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29461761-5596-498f-9503-90ad677ee68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f9fe79-2b4d-4bb2-aa71-9e33c49b5427",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daddd825-f9e7-4151-af20-af05c3bfc241",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa1e1d35-e4db-44f8-9b1b-7b1462835324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "289174be-76d4-4435-825f-32fb87ecd2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b1df76b-ec70-40a4-a8e0-d9dae36127b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaac0c50-89fd-4537-a8cb-4a2844faf749",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9609c3-058d-4dcc-ae62-41c978abf942",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f2e48f6-d7bc-4457-aff1-82208de89a51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f80a8f-aaf0-4647-ac20-a5b2a53c453c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3201f3-1add-43df-bd45-684caa1cc582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47264893-930e-40c2-92b3-e8780198c457",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bdb9c6-3f11-49d4-82e8-72395a89a5c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "035278cf-d54c-4396-864d-89fb059def4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba89da28-b045-4f02-8bc8-1b11b2c2d1eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d23b577-c589-4d71-8be4-08c49da9adcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c54db75-8d7c-4c66-ab13-16a9c14738b5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689b0f32-39a0-4b4b-9dff-66c1800d23aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23daf013-6abb-4752-b23b-1e51448660c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a18984b-82ac-4aa0-b653-6f09cee4c365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a7b721-aaf5-4da5-b424-15e01c65e816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3e99ae-faf0-403a-a88b-1a22d866e236",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7697b49e-10d1-4a53-8992-bef2bae87213",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "188ed554-6114-425d-a9d1-3d08d3b61ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ac273d-81a4-4ee3-b7f7-94e03ce47ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e477d2-17d6-470a-98aa-c043bd51a935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f010929d-4d22-4ec5-b9e2-26882cfaa7a9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62849f5c-c05a-4e5b-9ed6-d82af1e44028",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5b7ceed-a0c1-4862-973d-65beb68b51d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06af3a27-7bdf-4abf-ab7b-d04e8bac2f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da0ed62-5f3b-49d9-b4cc-67d1b15695ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d82bda-ca16-4dfd-b2c5-41f5789aea1f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a202baa-4aa7-48af-88d4-827b7d94582e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6c1ba64-68a6-48e3-a075-b4e2667579c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "319927b9-63ab-428d-b249-eb0167ec2010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e0275f-78a0-4f7b-844f-ce0683520cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a064c75-ae9f-4186-9770-f7e97e8bc5fa",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798655cb-4251-4663-a25d-2df89981091d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9fdc3c0-8d34-46eb-a9a9-6fac9260ae25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf532dea-03c7-44ca-875c-cd9a5b7c8624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb484667-3e4c-4c7b-b57e-ba3921c28d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a176a92-60d4-4230-a178-063c97b14bd9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51423e5-8021-4315-aa7f-05f7ee44bbff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6883dbc-a1b3-4bb1-9706-347704a30caf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5c7c63-8784-4286-ab6f-010eb9cd4347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cd43490-40ef-4259-87c6-34f6031f2066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765c0cf4-7beb-4545-be91-4d8fe4e9a2e3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33af091f-156c-417e-bed4-96fb935bcbf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8fab25e-bc1e-447e-860e-549167d6a420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85732415-7b3e-49c7-a4be-2d1aad691970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04df84b9-0a94-4068-99d2-555a2768c795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582f0060-96fe-4add-aab8-7a5e2c8a1b2e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b60aad5-d425-4620-88c3-b2c59522590f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39024f55-8916-4d59-8a0c-ca3d684d159c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b590d9e-c0ff-40e2-92e5-56050fb7ffc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a34457-284c-4bd2-ba04-325ff9a39e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0390d81-6d22-4fd0-b2ec-d8063e804269",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb55100-e64f-4c5f-83d3-2a016ebd8e9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40f95ccb-21eb-4558-a692-438a698498f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a949ff42-d64d-4dbf-a66b-d2b47dfb6d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27aa1f74-d63a-42c4-a34d-aa5bc3c5a864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7d0d2f-7e4e-41a1-8e78-d639184afada",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f30c840-b1bd-4092-9048-df82d42d0fe7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eca43a48-47b5-4a14-88b3-2ef112ccff8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fa66f1-8cf5-4b3d-a85f-11d9af6cc2fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e6f12f3-3f45-44b3-83fb-04c3917af7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874babab-a754-47ba-8857-b3afd3023007",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d32211-765c-4b2b-8335-cc13dc7f86bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "600087af-3790-4757-bfae-2b8829901436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7dcdde-debb-4599-b6a8-8a5bcc4b2ab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60927b25-dc02-4427-8668-b081f16bd04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d3809f-c253-4705-99ab-2caf001776af",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35482c08-ef6f-48e0-8cf6-e07aa25dcf1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "838b9f82-2fec-4772-9a4d-9ee7e08c2bb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d1f53a-6eba-469a-9321-3f826e9afcbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a8aeba-92c2-4720-a3c1-56bff0e10a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82549d8a-4d26-482a-bd2a-af630764d72c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b994d876-e9f5-41e1-9a7f-84027615b543",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cfc72e9-2d70-42ae-8587-d92020a8cf86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af1dcb0-8dff-41b8-9fb4-a373a93f43d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b82771-5389-4cde-9a9d-5b91a004f96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82419cce-fcb1-4fca-b76d-a2bfe96d08ac",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1d00d8-d131-462f-920c-79ee443efad6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ca9984b-d250-4b7b-aac9-debf2f91c5a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf04ab43-1392-408a-8fd4-501e732504a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d274c6b1-2326-4f1f-ba86-0b49acef2f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c02203f-984d-4491-91ce-91fcdb5d6ff1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d3486e-3847-487d-a117-40633b9a8ed4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "460ce419-ca91-48a2-8a0c-f4e37d617d30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea25d12-e807-4145-b3d9-0cd5d430eb9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69df8c0b-dc72-4b4a-bfbf-e5ff2cdfb102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c95864-59b5-4664-84be-0322857e8634",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe74c560-2ab5-41f6-9174-2e76932ac4ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdce6ce4-45f6-4665-ad0c-e42a204b7ae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00d7e24-a21b-4acd-984b-544dd14b586c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "083598f2-9afb-4363-9452-1b8e80cc8de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e462624-e349-41cf-8da0-47091cd87d26",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1595a9c-8252-4b57-b361-527e46ae75a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f77e5819-0d23-4f51-94e9-04642b685fb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7021522-c119-4a99-80e3-8dee7251f11d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e1851c-3c7c-4b8f-81ee-7cbbd89ee67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0294f65b-999a-4dab-8c91-bf03ffcef8a2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de16be8b-2e9a-4cd9-89d6-9e782324d684",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c547dcf-68d9-4c81-a6ca-ff505fabf833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5fa37aa-0d2b-4986-b2ee-88d4ca8b32a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b7f6de-8fd3-4488-967b-a9707489fcc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1b5935-c706-440a-8d59-8519008c1039",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf70837-f16f-4a3c-9536-5bf5d5e368ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75151167-058c-4f6e-b7ae-f537e48168fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11b5d62-11bd-444c-8343-4988d61d3f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4235e322-68ef-4a96-b582-8fe125787b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca201df9-73bb-4fe4-be6a-37deb80893a1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f331303-bf1d-494a-9551-a607fdaefc7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f358c5b-fbe8-4925-ada6-4712477f4270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa36cfe-30f9-4ea5-ade9-100348fc7b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0024ae47-792f-4161-a121-799435fa56d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa761a4-bf02-4ca7-aa93-4d741f3563a3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff930f6b-a890-4803-b24d-e125b417f190",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bb4d9f9-64f2-44dd-9aaf-42f02d3e0558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ec7afc-116a-4641-99c3-83071b007602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94fa3d5b-d0ba-4092-a3e9-b063d68d1132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1810487-c28d-40d7-9f0e-09c83ec9a8b8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb4bbc5-59ec-466b-9cd4-b23dc926bbc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed2b07a9-5b52-4528-a04e-aeaaf267affc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f51d64d-74a4-4aeb-a473-689eb34c788f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1490738f-a0f6-4e05-b05b-ac2cecfbf079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bd99e9-9c16-4979-8911-f1e9b835b67d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5df267-6e68-49bd-9106-26bda6937750",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93847f19-3dca-4580-98cb-ef27c9e21937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6245cd38-a1ac-4360-b755-9b95fd2b95be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c8e94f3-4c7c-4443-bc60-c50d5eac0631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1255fe92-b208-4df5-b4e3-e52269cc8f23",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce74813e-b305-4c8e-8e21-6a7a0d834f7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53969c86-eee4-4cc1-b678-619a8c650df5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad44f4e-2e15-4b5e-9197-21b6acdcba6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad4ff24-0259-4b55-a43e-4ce33e07e5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21823d92-ef6e-44ce-95dc-079cfb2fc48d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d90d0b0-c49d-4c27-88eb-8e9f0ec77b10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2276fff0-5426-45e6-a78a-8db6c9685298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf7bb3b-69dd-4e2c-b641-7cfddc8927b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd91a00-bc6e-4be0-a88e-f263ab60639a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ef8556-7a9a-4ff3-af80-b7ea1fa827a7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c11d63b-78c7-4992-81cd-fb7e69528ca1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aca0badb-c4a8-46eb-b394-741a37b26627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8fc9c61-587f-4d4e-802a-d7faaf0c4e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549d8042-31c8-406c-9448-ae756d438a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9995089-cef4-4203-af1a-1005a051449c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d15dab-21d2-4aa8-b5d2-5b356a8f7e98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eb682da-1602-4599-a72f-a7ec206e755e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0fcf141-fd6f-4b59-99e0-4a08b471a05d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb79ad3-4e98-4684-b0b5-b707f1d9a2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10dc2ac0-a223-4e40-86a0-928bb4a74a0f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6597103-e9d4-4087-b99d-36ea7830a060",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffaa9068-1c27-4e02-b951-b8c126af6c2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d6e66e-6b52-4185-8cd0-aeeb77763df7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db7596af-e7d5-4bb2-b0e2-c397d6820768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b25da78-89f3-44eb-9d2c-97509a58abb4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac21da4-8c36-4cac-be05-fb06f573e255",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e12207b-9caf-4cbb-b4a6-2a277593ac54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "307facca-ab99-423b-950a-eba1a3f233a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fd59f15-c1c5-4638-8ff7-2d459cb0dbd4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05df3622-5345-4c8c-868a-5a97d3eebe29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e9583f6-b443-4290-8dc9-2712be4fb3bc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f3becfe-6f43-42ac-90e0-7cd47d0a91e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b1c9cb9d-f319-40c5-80d1-bd02b7012ace"
                    }
                  }
                ]
              },
              {
                "id": "594afdec-cb8f-4dbe-b7ff-7cc843a56537",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9dd12369-3ddf-49ef-9d58-d519a320b1f2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a187451-3c00-465b-9133-48bfae694402",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9dd8ee09-96a5-4b39-8b4d-68cbb07f74ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48fa8bb-46fd-4cef-ac4e-7186e3781491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c1e831a-9cf2-4683-b9d2-82aaea1ddec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82bdc2bd-f357-453a-ad52-dd207108c89c",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5871e982-fe0e-4932-8aca-ea1a818d87ac",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2d2c2083-ac9e-495f-8282-aef071ea02df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e70d854-eef6-4589-9f57-a70b55be9ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51024180-e2c4-4da8-a7c6-a284bdc74510"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b295ffd6-c836-4ca5-8211-e1c7beb5ec4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d3ab28d-9f55-49da-9c6a-eb99667a9616"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84fe69e0-389e-4664-bcd6-29768d81537c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f5f923d-c72b-45bf-b2c6-68cf02c62da6"
                    }
                  }
                ]
              },
              {
                "id": "68070cc9-2b72-41f8-94af-4b92fbe5c0ec",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9dcbb6f3-09ad-4e5b-978c-b21494c83758",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc151556-8168-42af-a027-55f637253d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7abceae6-783b-41f3-9ff7-8b6423282ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24494fc-9ad4-45bb-9f91-44d363fd0cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31b57fa3-656a-418b-883d-e467a6df478c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "05fc5b80-00ed-4f9f-821f-80719f9b49c0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a6e963fa-c524-4803-9596-a9f268cffc10",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b155578-1b3d-4f0d-a193-05d8f09a2d1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dcebf786-fe08-44ce-ad7d-15fa053a5690"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a186357-f68e-4553-b6fc-e94c5a8a0f4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be44bf53-404c-4d1a-a2d0-98782768721a"
                    }
                  }
                ]
              },
              {
                "id": "d3f6305d-6113-4130-816b-641c11d5aba8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ed89bee-a607-4a24-ab79-2d8f176bdbf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5b39f904-7a28-46e3-9be5-9a3c84dba796"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e85caefd-26bb-4916-bfcb-5ceafd40d934",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72c875ed-ad86-447c-b481-e28560523784"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0416c0cd-e3b8-447d-9980-ffb6c52df228",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9bbc5097-0810-44e9-b140-eed7a04fdea5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ed2e258-5585-4c0c-bc2b-b5888c41e5ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "83206074-615b-4df7-8c96-afd84f59b620"
            }
          }
        ]
      },
      {
        "id": "97ecb4fe-d3e8-446b-90fc-c81b7bf8ca76",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5f73584c-63d0-49ce-a7ee-922d23dd05c8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "40907898-f6b9-4f29-bfea-333324622eeb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d8d6c99f-ab91-43ac-aec0-dc4b71cb1a08",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568c3d71-ee8e-4edd-8923-28e16a9fd6c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2bd54963-3ae3-4903-b5c4-65a767f46e46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3f094c-a7b4-4d08-9952-11cb49b7714d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c10a42b1-0f0e-473b-981e-5aae23511a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490ddaf1-f1b6-4aef-84f4-8e6d8a98a95e",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2ef6d7-05ee-4faa-831a-05e58b3087ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "aa156c0f-d57b-4f14-9a47-7450d5ed8673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f1f84f-e177-4be9-85d2-1f631089716d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a094c97-d2f4-4761-a6d1-6859aaa513c9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58907601-8b64-4197-9379-5881a772451c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b467eefd-6684-42ac-8841-d0217e8c3ede"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "858b80d8-c2f6-476a-adc1-ea1323efb2ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db4a1cfc-0ea7-4147-896c-9f6208f92a2e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef304625-1cdc-4c17-847a-14456e59c2f6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "515549a5-0321-4934-bcd6-108b49b08e75"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7bc87086-465a-44e9-adc1-598ce331646e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc39aada-7f16-4f3c-8b6e-e216650a6e85"
            }
          }
        ]
      },
      {
        "id": "55adbb7d-476d-4994-8002-0fb5dccb0088",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "81f01504-8b76-40ad-88b4-cd335b28608a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d739676-c804-4531-8e4c-7155cacd527c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7fd39de6-ebd4-4a08-9c86-29c4b058faaf",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658cb9db-82a6-48af-8652-d05b76de7903",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6515c940-cf7b-40e2-986a-6d3d8bac1a5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf1fb4c-b1f1-4642-8aa3-668347966ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "498976e5-659a-4357-a7f2-7acafc246663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b38020-55b1-466c-b9b0-576345062b14",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf98530-4181-46fe-b829-a28addc21ca5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "600b654a-4065-42ff-bd1a-39c1c022df5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fc1bf1-fc34-4034-a541-8c50a908dcdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb737b27-eced-4351-b0e0-ac0a894da6a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0d0b1af-5ea0-43f6-a5b0-ec2cdd1921d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a25b7628-5130-4a1c-87ce-8ca8674ebbb8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cee1f788-ba25-4ea8-a054-c3434135f169",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08118c37-1635-49be-a944-3b8c3051d730"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4bb8ac1-f1dc-4f06-961b-c076fbf3a340",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5d211a3d-9a0c-42be-af6f-595f91b622c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47812827-602f-417d-ba37-28c3eab3f2eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "388e2265-4689-4cbf-aa1c-67db75681c04"
            }
          }
        ]
      },
      {
        "id": "d36df4a4-ae14-48e4-ba90-9cd463f59661",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fb72230e-538b-46aa-9329-3d9164192117",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2511bf67-3f4c-4822-aa95-e00f0f8dada9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bf0d1e3c-a81d-4bf8-9a6a-1947f0e6e158",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31cf036-24fb-4ad2-910c-9ec19173bd87",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7c9fa0ca-b1aa-463d-8b93-f1cff68372a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be1686f-e6e3-4704-bbd5-cdee5103258e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4867fd33-5c17-43e3-9656-537bb09dfdef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618fcfdc-28b7-4f72-a2e0-eb137cf269f5",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cddcbc35-67b4-4e8f-b751-9c592fbaf5be",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "40821ba6-2c7a-41f3-a7c9-7f2b83114ef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "348ff83d-2a3a-4c80-805c-9568443b55d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19c99303-1451-4d34-bd77-f401674c7b33"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "edb2adb4-2630-4c1b-8b2f-91e8dff5797b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8fad2dec-7a99-4ee0-b435-d263d427adcc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46f9c1c8-290c-42ab-8036-cc995651984f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2cf92961-9673-4285-9c6c-5ad5549e4ece"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81a8a82f-0f1d-4449-8613-9e24d0ec2689",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c59cdd9b-e41a-416d-abf5-d3f710533744"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d09dee3-6f0e-4069-ade0-ad5934667844",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81ca17ee-beed-4e51-b162-619a85970d4f"
            }
          }
        ]
      },
      {
        "id": "deb3ad61-8792-4125-81f9-307424e2181c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6440a6d6-1715-4f6f-bdfb-2bd8b1e230a8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd2eaf61-9198-4e72-a7b2-fc836e42c01e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ae32ddfa-d3c8-4623-b9dc-eb40f86b39be",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19ccf565-fcfe-4c27-9e50-521fa94f786d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44166e8a-1c3b-4d37-bd7c-914a75daed4d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 624.1450381679391,
      "responseMin": 19,
      "responseMax": 5873,
      "responseSd": 710.0018505742721,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1673483990674,
      "completed": 1673484165417
    },
    "executions": [
      {
        "id": "059c82cb-de76-4953-a1ee-95f61b498a1f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0402255a-cea4-4ad4-89fa-b91036e49f26",
          "httpRequestId": "6d5d75f2-ed23-4423-bce2-ba8dd0221344"
        },
        "item": {
          "id": "059c82cb-de76-4953-a1ee-95f61b498a1f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "73c58b82-85ca-46f8-bfc3-da4b804a8ade",
          "status": "OK",
          "code": 200,
          "responseTime": 119,
          "responseSize": 0
        }
      },
      {
        "id": "c414b1a7-1723-49f0-813d-b8c9533e842a",
        "cursor": {
          "ref": "677e3138-96a4-487a-8cc1-a7f5df8a0a8b",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6ce217c0-a47b-4224-ad32-994759295e23"
        },
        "item": {
          "id": "c414b1a7-1723-49f0-813d-b8c9533e842a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a4895b29-e94d-4e49-8f9f-d788a7d07253",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "0f1aaff7-faeb-457a-9199-2af800be291d",
        "cursor": {
          "ref": "dd2abff8-3cff-441f-8ddb-afe133f72885",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "baa66af5-4ae5-4176-bace-cdaed2294a5b"
        },
        "item": {
          "id": "0f1aaff7-faeb-457a-9199-2af800be291d",
          "name": "did_json"
        },
        "response": {
          "id": "db0dd35c-32f2-4d4b-aef3-8f2d435b73a1",
          "status": "OK",
          "code": 200,
          "responseTime": 681,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9666f287-1ab5-40e9-a027-a3687ec99e5b",
        "cursor": {
          "ref": "cbb0c1c2-e063-4fee-b4c8-83dc35767a26",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "18356e25-39d9-4ddb-8376-41efa1404cca"
        },
        "item": {
          "id": "9666f287-1ab5-40e9-a027-a3687ec99e5b",
          "name": "did:invalid"
        },
        "response": {
          "id": "8cab9c04-b880-44aa-9d57-e8dc26cd72b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9666f287-1ab5-40e9-a027-a3687ec99e5b",
        "cursor": {
          "ref": "cbb0c1c2-e063-4fee-b4c8-83dc35767a26",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "18356e25-39d9-4ddb-8376-41efa1404cca"
        },
        "item": {
          "id": "9666f287-1ab5-40e9-a027-a3687ec99e5b",
          "name": "did:invalid"
        },
        "response": {
          "id": "8cab9c04-b880-44aa-9d57-e8dc26cd72b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988867e6-88bc-48a0-a0f1-150b900b62c2",
        "cursor": {
          "ref": "7583b515-dc21-40cf-9606-20cc63de6350",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "652ba72b-ca3d-49f2-98da-a68a8de95da3"
        },
        "item": {
          "id": "988867e6-88bc-48a0-a0f1-150b900b62c2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b600ba6a-8aa6-42ae-af5b-d996966c19a3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 636,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38cda306-1b0a-465b-8b5f-041f9cce9b83",
        "cursor": {
          "ref": "5da842bf-c695-45a8-981a-93ac6b30ef65",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7ef17783-e058-43e9-b56b-b07591f10860"
        },
        "item": {
          "id": "38cda306-1b0a-465b-8b5f-041f9cce9b83",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c30bfb02-0688-42f9-a147-e9c28f37c943",
          "status": "Not Found",
          "code": 404,
          "responseTime": 550,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f95e40c-84c4-41c9-a036-dc941bdcfd96",
        "cursor": {
          "ref": "88aaca48-863a-46cb-9166-3a9b68bfb408",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "61bdcf75-ac6c-41ff-b28d-19f64c73cccf"
        },
        "item": {
          "id": "5f95e40c-84c4-41c9-a036-dc941bdcfd96",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4a1baf4d-dfac-4e68-a082-d13f0dbc3d2b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3705f1c1-40e8-4c0d-b6fe-1e74f659c41b",
        "cursor": {
          "ref": "a09e4d3b-2ddc-4e3b-b6a9-b810887b3e1e",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "81186824-b138-439c-b970-dab625f918cb"
        },
        "item": {
          "id": "3705f1c1-40e8-4c0d-b6fe-1e74f659c41b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "fb8098ef-eade-4c9d-818b-503f105ccda9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 497,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3705f1c1-40e8-4c0d-b6fe-1e74f659c41b",
        "cursor": {
          "ref": "a09e4d3b-2ddc-4e3b-b6a9-b810887b3e1e",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "81186824-b138-439c-b970-dab625f918cb"
        },
        "item": {
          "id": "3705f1c1-40e8-4c0d-b6fe-1e74f659c41b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "fb8098ef-eade-4c9d-818b-503f105ccda9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 497,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679dbd8d-012c-4598-a0dc-40dc85b615c7",
        "cursor": {
          "ref": "06cf4e49-ca6a-416e-989e-a57ee203b904",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a150aef9-3766-4562-a14f-64255b566105"
        },
        "item": {
          "id": "679dbd8d-012c-4598-a0dc-40dc85b615c7",
          "name": "identifiers"
        },
        "response": {
          "id": "e0c1911b-1b15-4eb3-adc2-0cb11e0f9960",
          "status": "OK",
          "code": 200,
          "responseTime": 895,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0446b2-9f57-4283-b10e-79d32194f670",
        "cursor": {
          "ref": "eeaac9a0-6df9-4b45-abbe-195a8bca38ab",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b51fcc61-111b-44cf-8006-1b94bc201abf"
        },
        "item": {
          "id": "8a0446b2-9f57-4283-b10e-79d32194f670",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "245091cf-6868-46d1-b1c7-f9e2bdb04e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0446b2-9f57-4283-b10e-79d32194f670",
        "cursor": {
          "ref": "eeaac9a0-6df9-4b45-abbe-195a8bca38ab",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b51fcc61-111b-44cf-8006-1b94bc201abf"
        },
        "item": {
          "id": "8a0446b2-9f57-4283-b10e-79d32194f670",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "245091cf-6868-46d1-b1c7-f9e2bdb04e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a321c4-8c9e-4db0-ae2c-44686f7f24cf",
        "cursor": {
          "ref": "93945345-68fd-4acc-878b-5fb57fb8362b",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "679d6521-39ed-4ea9-a08e-6635cd64048f"
        },
        "item": {
          "id": "58a321c4-8c9e-4db0-ae2c-44686f7f24cf",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "01dfa1d4-27ee-42d1-93a0-17f7e5a2df67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aade64ec-7f1a-4bed-81ab-1157305dc917",
        "cursor": {
          "ref": "6a67627e-75b9-401e-8356-79206040b1ad",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "19ce499f-1f41-4136-a372-02b656bfcdb0"
        },
        "item": {
          "id": "aade64ec-7f1a-4bed-81ab-1157305dc917",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "a4386389-a9df-4a58-a8d8-cd90b88f5edb",
          "status": "Created",
          "code": 201,
          "responseTime": 2544,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "9f88f788-eeb9-44ca-8d0c-d12dfbe4be33",
        "cursor": {
          "ref": "7fc8f41b-f286-4c70-bdfc-1f89a30c94da",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cd5bc62a-7d8d-4f33-a924-e148a00faf03"
        },
        "item": {
          "id": "9f88f788-eeb9-44ca-8d0c-d12dfbe4be33",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "bd075295-0416-4044-8679-d55cbd275e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727c50a4-24a9-4932-b8d4-2febbf68917a",
        "cursor": {
          "ref": "d1158057-5605-402a-a28a-2da4fd01779a",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5269a4b1-c116-44b3-8b8a-d3f2c9cef604"
        },
        "item": {
          "id": "727c50a4-24a9-4932-b8d4-2febbf68917a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "882cba88-f5c3-4ddc-aa3c-8258f6d9b459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e137e3-5fba-435f-85ab-6ebdad271b9b",
        "cursor": {
          "ref": "bdf275d6-be91-47cc-b182-78eb28e01734",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "35aaa109-649c-4ead-9b1b-590c7597865b"
        },
        "item": {
          "id": "98e137e3-5fba-435f-85ab-6ebdad271b9b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "83e7f758-bccb-435b-b63a-48ee2a5db398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc95ade-5397-468d-8016-a8f6d19b2fae",
        "cursor": {
          "ref": "9f80eab5-6d11-472b-829d-afa983a3f60f",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0e38c5f6-9a9e-4ce6-91f8-ce70f0089735"
        },
        "item": {
          "id": "fcc95ade-5397-468d-8016-a8f6d19b2fae",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "344173ad-9db2-438d-a274-cc43a9d3a875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59282cb6-8c0f-4f7f-a67d-5bf803c7a8b5",
        "cursor": {
          "ref": "9c814c2f-11a2-4ea4-a7bb-5d46194bbd0a",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d16402d4-112b-494e-a60f-790eb7baf4d3"
        },
        "item": {
          "id": "59282cb6-8c0f-4f7f-a67d-5bf803c7a8b5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e88ffafd-608f-4b94-815f-20815096c753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44669838-f82c-4436-85ed-0c365b12f58f",
        "cursor": {
          "ref": "6dd2d965-c10d-458f-8cc4-80933eea0812",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "40977501-80a9-47d0-befe-380338570d7c"
        },
        "item": {
          "id": "44669838-f82c-4436-85ed-0c365b12f58f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "db3867f2-f2e0-44ec-88fd-d8d4f3efe861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b935542f-2236-4f36-9b2d-9ea01bcc7fc8",
        "cursor": {
          "ref": "7682e47e-d0e8-4b18-95c4-cfabc613f175",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "73a31a66-0604-40aa-93e7-bb4f8753d492"
        },
        "item": {
          "id": "b935542f-2236-4f36-9b2d-9ea01bcc7fc8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "39951b4f-4877-4f75-a47e-fd25e1f7b2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aab02ec-e7a2-4a30-9e99-bdb711e1d08d",
        "cursor": {
          "ref": "207669de-b5c6-4afb-9d5a-7397e6757919",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "23ab8b7e-aca5-4b12-91da-6cf7c3d3af2e"
        },
        "item": {
          "id": "6aab02ec-e7a2-4a30-9e99-bdb711e1d08d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f2c9e6d2-c407-4530-96de-f5f7fd06fa75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a2ff61-18f8-4bac-bc83-7dcb6a8757f6",
        "cursor": {
          "ref": "e4dd0f78-6ec2-4315-9098-9160cf43701c",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "030a08ed-75a2-4ff5-b2b9-64b2ce3f9b3b"
        },
        "item": {
          "id": "f8a2ff61-18f8-4bac-bc83-7dcb6a8757f6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d81244c7-7789-4d34-b7fe-13e4cf9a15a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cf0bc2-ae2f-401e-8d42-f602734e95a5",
        "cursor": {
          "ref": "78ff4b2c-8293-4199-91f9-f8c48cdd4b3c",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f449a1e2-7575-4af9-82c3-399515374c5e"
        },
        "item": {
          "id": "90cf0bc2-ae2f-401e-8d42-f602734e95a5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a4e45ab9-b8a5-4619-8237-ac0910a238e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e547ed63-79a0-492b-9c6b-44748db0ce85",
        "cursor": {
          "ref": "1fed8b1e-1b36-44d3-941e-d054045152ee",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "262abe56-8420-4b81-8d77-84c4bd9270fa"
        },
        "item": {
          "id": "e547ed63-79a0-492b-9c6b-44748db0ce85",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "988da452-6ee9-4879-8ff4-d4202c2fb93f",
          "status": "Created",
          "code": 201,
          "responseTime": 5717,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "8f168e53-0371-40a5-9731-51125acbec17",
        "cursor": {
          "ref": "a15c727c-ddc8-4734-abbf-5e0e5c4f4c07",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6e9b8e1a-d03c-4020-b406-95658c638055"
        },
        "item": {
          "id": "8f168e53-0371-40a5-9731-51125acbec17",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "15ae82d1-9e74-4c43-83f5-fb1bff7921c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fe64fe-c493-43ba-abe9-b3f66f5fdeee",
        "cursor": {
          "ref": "6a76cec8-3956-4628-b867-f1a31b5d1703",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e4e8d865-4c2e-4ad0-b207-2b166e5c0419"
        },
        "item": {
          "id": "50fe64fe-c493-43ba-abe9-b3f66f5fdeee",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a6a8cc87-08e0-4786-875d-efac99381e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42356c3c-e63c-4e31-8b4d-8bca0af37aa6",
        "cursor": {
          "ref": "b342ed1c-e653-4a41-914a-3d27be939f77",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "05bc7052-7ae5-4a2c-ae8c-441fa2eefd85"
        },
        "item": {
          "id": "42356c3c-e63c-4e31-8b4d-8bca0af37aa6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f9c023fe-5f8c-4309-b2a1-5d338434bb43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98d054a-b95d-4052-a0a8-004983871f5c",
        "cursor": {
          "ref": "349c7c83-2f14-44eb-a935-04a5ef9404b7",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9592cc41-2459-4c7e-b4dd-fa891d94a06d"
        },
        "item": {
          "id": "f98d054a-b95d-4052-a0a8-004983871f5c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7e9d52e3-e1a5-43f3-92c9-6d3d28d9138e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2eed7f-3288-4b77-974e-f1640e5769ab",
        "cursor": {
          "ref": "80780c05-56af-4168-a643-bcf66f1e5cb6",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "64a6c1db-2e5b-4e54-b473-1a5230d498b6"
        },
        "item": {
          "id": "1f2eed7f-3288-4b77-974e-f1640e5769ab",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e1626437-bacf-4882-9768-1407d139d8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c01831-f5b2-48af-ad37-de261976fe36",
        "cursor": {
          "ref": "c7e6d84d-713a-4ac6-8356-91cacf34e0ec",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "34b3e477-102e-461d-8eb6-341e7e45613c"
        },
        "item": {
          "id": "d9c01831-f5b2-48af-ad37-de261976fe36",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ad936c07-c9ac-4f63-a612-b9313a724c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eac54d2-d18f-4755-a8b8-6f114a2f0792",
        "cursor": {
          "ref": "b1a81119-f3ca-4e3a-af1d-f4a9a8a38f8d",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c757de08-d4bb-4385-a6d4-97f970687057"
        },
        "item": {
          "id": "6eac54d2-d18f-4755-a8b8-6f114a2f0792",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d0595f1a-9a32-45e8-ad6b-da91e4c69b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6e467e-bc4c-4d9f-8cca-f6fbd8f48e43",
        "cursor": {
          "ref": "2c1a8019-b7e3-46dc-9c05-fd70a764e21e",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e9a84250-0cff-4d24-a649-cbf50fba8218"
        },
        "item": {
          "id": "7d6e467e-bc4c-4d9f-8cca-f6fbd8f48e43",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d808f666-94a6-4c3f-8ac2-20f1354eaef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777655f6-ac34-4c6c-9760-13df5cde5657",
        "cursor": {
          "ref": "35d2d155-addd-4936-80b3-e5841617ae71",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d1e344e4-e99e-4428-a9eb-4f362311b791"
        },
        "item": {
          "id": "777655f6-ac34-4c6c-9760-13df5cde5657",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "593e9ab7-9338-4b43-9e91-a7890b88d77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5319b14b-2b71-4be6-ad6a-55c9ca5d5b30",
        "cursor": {
          "ref": "260729dd-5076-4b15-a032-c40a4d065ca0",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "091c405e-8ec6-439d-8a73-55770812708b"
        },
        "item": {
          "id": "5319b14b-2b71-4be6-ad6a-55c9ca5d5b30",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a3ca233e-3b99-40b6-94d6-5ce8f382c789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c4ba69-c330-4f29-a2d4-51f5cb6b46c0",
        "cursor": {
          "ref": "f1e13901-a423-4298-96c8-1453a1356205",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e574188a-4428-4a5e-ae80-7c343e3f9014"
        },
        "item": {
          "id": "01c4ba69-c330-4f29-a2d4-51f5cb6b46c0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7b26f610-0a7b-4ed0-b9d6-1b0575a942dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a42f6c-2ec5-4dd8-8da2-42b6aee09b3c",
        "cursor": {
          "ref": "911611f1-5994-426f-9440-d8363884a4cc",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d4af5dd4-0754-4ef5-adf6-4414826b6f0f"
        },
        "item": {
          "id": "98a42f6c-2ec5-4dd8-8da2-42b6aee09b3c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2103b20f-3786-4201-bd63-1c8697cfaf01",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1844,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "1f8c5e2f-3914-40cc-aea4-d465b310d0e2",
        "cursor": {
          "ref": "3c6b8eb4-9967-4c23-8255-c258fc8ebf81",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a8110bbd-74db-41da-8c6a-6c67be2bd521"
        },
        "item": {
          "id": "1f8c5e2f-3914-40cc-aea4-d465b310d0e2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a490d959-0198-42f3-8a3d-1215aa66573f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40fe283c-8f6e-4965-8d68-228f4bfbf8e3",
        "cursor": {
          "ref": "317f02a2-bb9c-457b-886b-c4e8ffa70f59",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2039c6ad-f030-47c9-8a13-848ada05199f"
        },
        "item": {
          "id": "40fe283c-8f6e-4965-8d68-228f4bfbf8e3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d582d868-151b-4b40-b9d6-3cc6acf6c9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136e0d0b-4890-4e56-9447-161e903c3470",
        "cursor": {
          "ref": "0942aa8b-cced-4c98-bea9-c9a1f73e3d8f",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5f901fd7-c668-4fec-a676-f3d5352678e7"
        },
        "item": {
          "id": "136e0d0b-4890-4e56-9447-161e903c3470",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "421e345f-055c-4cf8-9d6d-ebffe20d7b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed4d9e9-6e90-4a61-a836-514fc15564a8",
        "cursor": {
          "ref": "83f087c8-1fc5-4862-97fc-f0e281e25c71",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a5140c62-bb39-493d-bf52-d6733668932c"
        },
        "item": {
          "id": "eed4d9e9-6e90-4a61-a836-514fc15564a8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "890f058e-d439-43d9-8a91-4758c2b3f54a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e515ea-7d28-4587-a72c-c927de7d587e",
        "cursor": {
          "ref": "d3f5d733-572a-4004-a221-d7385c0ce4b2",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7be783d3-4220-4b2b-b29a-ca763e678ee9"
        },
        "item": {
          "id": "60e515ea-7d28-4587-a72c-c927de7d587e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a427d02f-7014-439a-9ca6-51aefdde3e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739dcbb1-16bb-457e-b3af-565ff99c8105",
        "cursor": {
          "ref": "409185ac-e64f-4716-8f33-08188700c318",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5eb70318-e992-4685-9803-e8aef348839d"
        },
        "item": {
          "id": "739dcbb1-16bb-457e-b3af-565ff99c8105",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "148146b6-9b96-430a-9fb4-d7f3cf98981a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef74bcae-a9ff-4bd5-9c58-6013c022346b",
        "cursor": {
          "ref": "7bf2127c-d091-4662-88b3-64cb258b9390",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a7978af0-c0d5-47f9-8290-9665d1303595"
        },
        "item": {
          "id": "ef74bcae-a9ff-4bd5-9c58-6013c022346b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2766742d-9907-4dd5-81b5-41e835386eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be1a168-0355-43e0-b861-7d0143c654b3",
        "cursor": {
          "ref": "f773ba36-1af5-4321-b6bd-e1b530497e75",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "baa26bc9-dd88-485d-87b7-15b6a1c09cbf"
        },
        "item": {
          "id": "7be1a168-0355-43e0-b861-7d0143c654b3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "08a68396-f39d-4dad-98bd-42bbee530343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34856821-54c8-4d79-8534-e59a651b958b",
        "cursor": {
          "ref": "3939a329-0a92-4d32-83b3-9d02e97da2eb",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b796a91e-62b2-4237-b014-3d3ed01fb51b"
        },
        "item": {
          "id": "34856821-54c8-4d79-8534-e59a651b958b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b8fef7dc-d074-4e26-94a3-b9c8d7c375ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f41a005-da33-4c53-b938-f7814678c3cf",
        "cursor": {
          "ref": "c9277670-45b5-4647-b5ee-5c0bf616bc06",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6445530e-a266-40c1-9b9d-23dff45af76d"
        },
        "item": {
          "id": "0f41a005-da33-4c53-b938-f7814678c3cf",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "46f74168-6595-42eb-b206-bdaa1323c11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a283a2-6c05-4038-beab-6532aa9d319d",
        "cursor": {
          "ref": "a4aedb11-c0dc-4dca-87fe-ebffe377a638",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "caf72180-242b-41e7-a272-6dbe21fa0595"
        },
        "item": {
          "id": "f0a283a2-6c05-4038-beab-6532aa9d319d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fea6fd3e-0cf2-4b86-a88a-3694d8620bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a669bb9c-8e65-4f67-bdac-b53a3a27705f",
        "cursor": {
          "ref": "7fcf1368-1399-4a75-b0b8-fee22fd88583",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ea0bb2cd-c84b-4688-9aad-ccb7c05abec4"
        },
        "item": {
          "id": "a669bb9c-8e65-4f67-bdac-b53a3a27705f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6668bc87-3623-4357-9ef2-fdca6be5497c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 634,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c935c39f-1c0b-4875-a452-7345204f82db",
        "cursor": {
          "ref": "ae1aea65-c298-4661-aaed-16f755253e96",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c959a2b5-6919-4acd-94c6-dc2112748008"
        },
        "item": {
          "id": "c935c39f-1c0b-4875-a452-7345204f82db",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4bc4cbd0-7978-4898-b0a4-8c1000228781",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 565,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "fbf7ae15-4050-4fdb-9e2c-6445d9130277",
        "cursor": {
          "ref": "1868ef6d-6821-4c95-b5d4-274ed2dab3b6",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3bb95698-2762-4f11-9f13-65bacc2a0d9e"
        },
        "item": {
          "id": "fbf7ae15-4050-4fdb-9e2c-6445d9130277",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "810dfb40-8a5e-4d67-9f31-2ad04d9c6c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af0b195-ded3-4161-872a-88933dfb1d3c",
        "cursor": {
          "ref": "3e13c433-60a9-404f-a6a5-a638126bbe1f",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7ad5c76f-539f-44ad-9893-e17117f54a4e"
        },
        "item": {
          "id": "5af0b195-ded3-4161-872a-88933dfb1d3c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8de5849d-da3a-4b70-b1fc-a3763542a377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03895e38-80f4-471b-8316-ace81560d735",
        "cursor": {
          "ref": "d7d4b7d7-b0da-4b4a-b8c3-95c6f80debc2",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "112e7911-f52a-43ff-b96a-0b2283f8c436"
        },
        "item": {
          "id": "03895e38-80f4-471b-8316-ace81560d735",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "992f17eb-8bbf-402f-8b3e-e513e6812b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7847b7fb-eb18-4c6d-a503-0fe33aa29e32",
        "cursor": {
          "ref": "62aa338a-cccf-469b-a129-4e1a635f449e",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1d189048-df3f-4b61-b5df-b0fcecb58459"
        },
        "item": {
          "id": "7847b7fb-eb18-4c6d-a503-0fe33aa29e32",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c0cf71f0-8586-4f92-93e9-09d09eb7a2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74e0f4d-1747-44db-9076-7dc75e43795f",
        "cursor": {
          "ref": "52538e4f-b09a-4426-bf6b-27f75922535c",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "599a39ce-c9ee-4f23-bfa8-270fcfbf1981"
        },
        "item": {
          "id": "c74e0f4d-1747-44db-9076-7dc75e43795f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "bd869ed3-8129-470f-bbcc-aba139aaab54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62075507-f2ed-4599-bd23-4c5109ff82b3",
        "cursor": {
          "ref": "467263c2-ddb7-404f-a013-8cae57e0f527",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e7120a35-0123-4939-9610-3b9c2b574872"
        },
        "item": {
          "id": "62075507-f2ed-4599-bd23-4c5109ff82b3",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "57c4d45f-cc3c-43dc-8326-156566e9b52b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 595,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d48d73-e892-4e21-8eef-be742b92b423",
        "cursor": {
          "ref": "1b240211-7997-47a2-8069-8b2794ac1e7d",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "93dede53-9b50-4b65-b1c1-f809462f6ae1"
        },
        "item": {
          "id": "69d48d73-e892-4e21-8eef-be742b92b423",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fed5509a-ca2a-4782-97f1-418d43c1fc04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd218aa-3129-4aed-9ac9-d73e1723f081",
        "cursor": {
          "ref": "929b406f-6877-412b-a1f0-290333e8495f",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ed340578-fd3f-4840-93cd-6ee724b61669"
        },
        "item": {
          "id": "8fd218aa-3129-4aed-9ac9-d73e1723f081",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6ecf90a6-4fb6-4b7e-bfec-f5216785d070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d86c7fc-08c5-459e-888d-f76e6727dfd1",
        "cursor": {
          "ref": "efa57c8d-74c7-4b73-949b-a162e68efa1e",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "549b061c-b3f1-4186-91c5-367ade738593"
        },
        "item": {
          "id": "5d86c7fc-08c5-459e-888d-f76e6727dfd1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0767ba9b-4309-4a6e-b5ca-c7b331ae4c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fb1bec-26b5-4280-98be-2fd09366d39d",
        "cursor": {
          "ref": "d61780c7-e061-4486-bec3-43ace9d5bfa8",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b66187b2-a3ca-48dd-8618-dc1af31881d6"
        },
        "item": {
          "id": "29fb1bec-26b5-4280-98be-2fd09366d39d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "77ff7666-9530-4d7b-ab36-c8e411b606c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae36600-3676-487d-9872-c9b2c34ce9fd",
        "cursor": {
          "ref": "d957da67-71bc-47a3-b015-a88ce3328e28",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "43e57968-81b0-4f2d-ad14-9bc7bb72c092"
        },
        "item": {
          "id": "9ae36600-3676-487d-9872-c9b2c34ce9fd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4f8d2f29-b908-46d6-a0c7-111372ef6201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c75744-fccf-44d6-8bcf-6a37dbfae7bb",
        "cursor": {
          "ref": "268c571f-dd25-4526-aee2-c0d1bfae9d84",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a8c96ae6-e885-49f1-85a6-23ddb6d114a8"
        },
        "item": {
          "id": "d4c75744-fccf-44d6-8bcf-6a37dbfae7bb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "786a09dc-3cc9-458c-abf3-ae5ca29ba9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee9c5c7-d273-4db6-9a3b-3cecb9ce919a",
        "cursor": {
          "ref": "5e18c2e5-1cc6-4e54-b09f-3dad692f27a5",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "688d55f3-efaa-4bac-aa86-45ed78754ea7"
        },
        "item": {
          "id": "0ee9c5c7-d273-4db6-9a3b-3cecb9ce919a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "de3a8db9-da4b-404e-b8ec-f5b993a932f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9140d3a-d839-4cbb-8436-f61e87e66c97",
        "cursor": {
          "ref": "2724903c-080a-437a-8c4f-afb3ea67a560",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "edd6281d-3928-4dd5-be58-ee8eb3b9adb1"
        },
        "item": {
          "id": "a9140d3a-d839-4cbb-8436-f61e87e66c97",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d5d8c731-f4be-421d-b6b8-43aa87453939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccb2bc3-2cef-4c99-9a43-c51d3bbd85db",
        "cursor": {
          "ref": "e017463c-63f6-4ad4-ac5d-7c0c56db9a62",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0b0701e6-cc97-4530-a902-3aa8430ba6f1"
        },
        "item": {
          "id": "4ccb2bc3-2cef-4c99-9a43-c51d3bbd85db",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "41a50e8c-1d42-448b-9d3d-d989f70de413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e12280-e54b-40fd-8523-35d00752c538",
        "cursor": {
          "ref": "d7ef39cd-949c-447f-bdd0-d529706d90ac",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "df5c5e84-ad1d-4151-8411-e3192a5af89f"
        },
        "item": {
          "id": "40e12280-e54b-40fd-8523-35d00752c538",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "763a9d93-6f80-452d-a8d6-ef95997a218d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526f5901-da1d-4150-9bd4-9213fc6c8d6d",
        "cursor": {
          "ref": "aabbca7c-890e-4d1b-b93a-97530c8a7d3b",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ae1ea692-cb0a-4177-a638-a3f1077da061"
        },
        "item": {
          "id": "526f5901-da1d-4150-9bd4-9213fc6c8d6d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "76691fbf-7299-461b-a619-8dbe3803af7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1496cfb-d280-4109-a00e-b01debe9cc5f",
        "cursor": {
          "ref": "a8d28d34-140c-418d-badb-712f2f82f82f",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ba07aba0-cc6c-441f-9ae3-f3d00b352429"
        },
        "item": {
          "id": "b1496cfb-d280-4109-a00e-b01debe9cc5f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d1bf6ad7-5713-4207-89c2-6c689c6bc710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1035,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b7cd81-0af4-45a3-9c42-561be03a88e3",
        "cursor": {
          "ref": "3a5a0b78-737d-499d-9583-cbf199690697",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "113dd94e-867a-44b8-816c-89f1ef545c51"
        },
        "item": {
          "id": "b9b7cd81-0af4-45a3-9c42-561be03a88e3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0a07f2ec-f149-4928-aeaf-e977107016d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 892,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a990551-3c03-4a9e-9993-ae22bd25cf6c",
        "cursor": {
          "ref": "5c71050e-c2cf-41aa-af88-ff5c532be5d6",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7565c686-59e5-4f1b-bcae-3a9723db3016"
        },
        "item": {
          "id": "1a990551-3c03-4a9e-9993-ae22bd25cf6c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "18e2c0bf-4acc-4f6c-ae7e-85800b4eb743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5582a926-213f-44f6-bae9-b2ac68fbb80a",
        "cursor": {
          "ref": "7fd058e4-0a42-4571-9a6f-ea10e3399f2e",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "117fdb70-23dd-4f57-98d6-bd9e4abcfebb"
        },
        "item": {
          "id": "5582a926-213f-44f6-bae9-b2ac68fbb80a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f3591f33-84ef-4c0b-9048-5f3fe61c78f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e363c76b-fe64-46b1-9ce3-7862e0ab7cce",
        "cursor": {
          "ref": "eb90f83c-0d3f-40ac-bd81-1baf86ad2d83",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d7dc27bb-cb73-40f3-9696-dac240c53013"
        },
        "item": {
          "id": "e363c76b-fe64-46b1-9ce3-7862e0ab7cce",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "499885ff-88bf-4fc0-b2d7-f30dee879ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f46ba3-4054-4d7d-8cea-6ccb6fb3e28b",
        "cursor": {
          "ref": "2b382deb-334c-4fdc-952b-4bc662147165",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c9ad60bf-0f0e-4c80-91d9-e3eb503836e5"
        },
        "item": {
          "id": "78f46ba3-4054-4d7d-8cea-6ccb6fb3e28b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bd8bad7d-1164-496a-9d2b-4fb6334f0e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddb858f-26a9-41c4-a88d-fdea0ff5ea67",
        "cursor": {
          "ref": "7b821bda-ea67-4704-a659-b7a37bb0c2bb",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "65f7f854-3d98-4d37-a941-b4dcf81437ad"
        },
        "item": {
          "id": "8ddb858f-26a9-41c4-a88d-fdea0ff5ea67",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f3f3bd96-8983-4c85-a106-db596eb331f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f15711-8f98-4ce7-a05d-66ecc53f8460",
        "cursor": {
          "ref": "6cce654f-7608-489a-b724-e492175e2a11",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6304db7e-3b1c-47d4-b489-1db6c4a8889d"
        },
        "item": {
          "id": "f6f15711-8f98-4ce7-a05d-66ecc53f8460",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "88bf8388-0b80-49ca-8a67-e46e3419b1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d21a80-e625-47fb-bf6d-771b592c4ca2",
        "cursor": {
          "ref": "5ef7963a-2599-47ea-ba4d-93776552b692",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ccee7b69-fe46-4ffe-8f69-ffb4c7fd41ba"
        },
        "item": {
          "id": "49d21a80-e625-47fb-bf6d-771b592c4ca2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d866b3ae-2f24-472d-9238-6710db646454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 923,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf5c076-b6df-46b1-8c06-6728e934acd3",
        "cursor": {
          "ref": "863a81e0-9499-46f6-8e70-b9d3e20e3d83",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8452c2f9-f6b9-40e6-a6fc-b1cb9393774f"
        },
        "item": {
          "id": "dbf5c076-b6df-46b1-8c06-6728e934acd3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ae029a31-549f-44de-8fea-08b67062fd95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1009,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c827d4-2deb-48ea-8753-64f86130b02b",
        "cursor": {
          "ref": "a196b89f-c5f4-4fd4-9791-a8624b03c22c",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c0ddb348-8871-4d16-b03e-518cfcd47875"
        },
        "item": {
          "id": "e2c827d4-2deb-48ea-8753-64f86130b02b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b2739a3b-6b66-485e-b7f4-09efa7a841e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 910,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea26714-f1db-4985-9768-dc3247941a5d",
        "cursor": {
          "ref": "97eb5f9c-20ac-4dfa-b016-4389c08e9e84",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "11e04fcc-38e4-4ddc-a6f6-4e86eef0b9bc"
        },
        "item": {
          "id": "7ea26714-f1db-4985-9768-dc3247941a5d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "41302abd-1af8-4580-b1aa-d1e00d8a7bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61704edc-effb-4469-a64c-e6d0896001c6",
        "cursor": {
          "ref": "06ab2817-ecdc-49d5-84ab-9485f335af71",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ed4edbc2-b178-418c-bc30-61f4c74d2ee7"
        },
        "item": {
          "id": "61704edc-effb-4469-a64c-e6d0896001c6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4b8655a8-2405-45a5-b124-bd080eec67bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c448478-4d16-4099-98e7-9aef9f9df1d4",
        "cursor": {
          "ref": "e9709bf6-3328-421c-8e15-b0e531709efb",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bdf2e512-9ab3-4e8f-86a1-d84451e7606a"
        },
        "item": {
          "id": "4c448478-4d16-4099-98e7-9aef9f9df1d4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5a517c20-c188-4150-90ef-c20e15c5c7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f69baf8-ae9d-4ce2-93af-5a8439ffd0ba",
        "cursor": {
          "ref": "cb87d1e2-c53f-4b4b-8323-ec998b11cbcd",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "57e6cedc-24e2-440f-a44c-840007012417"
        },
        "item": {
          "id": "9f69baf8-ae9d-4ce2-93af-5a8439ffd0ba",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a82a14f2-0346-4e79-9a74-c800a0ee6b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8765551-5144-4bf0-a080-896f161389ff",
        "cursor": {
          "ref": "d95410be-fe5d-4ace-9609-771a6f34d794",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cf8542a9-4f6a-4ebe-933d-c7dc9eec1376"
        },
        "item": {
          "id": "d8765551-5144-4bf0-a080-896f161389ff",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "fca50c9e-94dc-4bb1-a9a5-8bc64cc44d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c185476-1a15-435e-8511-b5feb0ef82fa",
        "cursor": {
          "ref": "4d595c27-5eb1-4c48-9521-3fbbd40a25b9",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c171a593-763d-41ef-8d03-e3639b4031b1"
        },
        "item": {
          "id": "2c185476-1a15-435e-8511-b5feb0ef82fa",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "282e75e5-67d0-4f29-ad27-2ad8f0506d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c28d2b-438c-4fe7-9423-3bbbdb255cb2",
        "cursor": {
          "ref": "5773f03d-9312-493e-ad99-13c81f0bee4a",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "547a9c20-446a-425c-bf29-28cd1b8fb8de"
        },
        "item": {
          "id": "b8c28d2b-438c-4fe7-9423-3bbbdb255cb2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e3fe7378-58ac-4d0a-93d7-0d28e26671ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3480e00-c43b-4ba0-9d30-393b046ae166",
        "cursor": {
          "ref": "9ab876dc-b925-4b21-9848-308900c54c5d",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f0936122-29a7-43ab-a2de-d5593491c658"
        },
        "item": {
          "id": "c3480e00-c43b-4ba0-9d30-393b046ae166",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "37448708-61f0-44ca-ad5b-87f4c0a05c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1997393f-df9e-4a40-af16-54844b654da6",
        "cursor": {
          "ref": "e9c662d1-e1d2-4205-a915-dbb6d6e713c2",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e4c73400-4b08-49a7-91fa-cf637f6ceffb"
        },
        "item": {
          "id": "1997393f-df9e-4a40-af16-54844b654da6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "95cb4d98-2a8d-49b1-afc5-cc09a9eefbac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e9c637-4e51-4832-b80c-36f7348d22f3",
        "cursor": {
          "ref": "ed32d16d-a7be-4753-9a5b-b64b7f9dfe3f",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "703ce60e-cfb6-41ce-ae77-36db6d866fb8"
        },
        "item": {
          "id": "78e9c637-4e51-4832-b80c-36f7348d22f3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "dbfafad7-713a-400f-9f3c-0bb9c9a3bb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8707772c-122d-4f1a-8267-6c2829343953",
        "cursor": {
          "ref": "b33ff47d-558c-4e71-8e12-c571f85fc6f0",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "be601354-7d4b-453a-aa68-00ab4a4d2ada"
        },
        "item": {
          "id": "8707772c-122d-4f1a-8267-6c2829343953",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "32b4e55d-9097-4bf0-a518-042524df3c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3079bf19-e892-4662-98bd-36c6131dc158",
        "cursor": {
          "ref": "f57f888d-cf9d-4ccf-93a7-20231e90b54b",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3a584c42-5d15-471e-916a-88e63e7372d4"
        },
        "item": {
          "id": "3079bf19-e892-4662-98bd-36c6131dc158",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "844c7af8-c08b-4cc4-9580-51a75c2a3a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8ebd21-99d6-49ed-bc3b-7f0fc5951566",
        "cursor": {
          "ref": "8b1747c9-982c-41bf-9dca-3182518915a0",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "edb70176-0fc0-401e-a7ec-7e0e1aab726d"
        },
        "item": {
          "id": "8f8ebd21-99d6-49ed-bc3b-7f0fc5951566",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e1c29bb8-2598-409d-a013-78e49c76121f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b62da2a-3dd0-482d-9dd5-20148294d110",
        "cursor": {
          "ref": "3f00e503-81f6-497c-a634-14232397113a",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "73bf44f6-6f3b-40cf-abe7-1ef9eac339ac"
        },
        "item": {
          "id": "9b62da2a-3dd0-482d-9dd5-20148294d110",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "81d52353-5601-40fa-9048-83e7c240a04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4998aeb3-adbe-409d-8be4-a29d0c5b5eab",
        "cursor": {
          "ref": "0fdd454d-5199-41e0-97fd-bf33720ddf7b",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d880cb3e-2145-4184-869e-620f351bef99"
        },
        "item": {
          "id": "4998aeb3-adbe-409d-8be4-a29d0c5b5eab",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "88cb27a7-499f-499b-a097-cf2cb4f04b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31916a8-8d70-449d-82d6-3dd41ded4276",
        "cursor": {
          "ref": "6b535176-05d4-4beb-972c-366ff202e3d7",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "30e8cb96-edd1-4ff8-bb69-35b57cba36d5"
        },
        "item": {
          "id": "f31916a8-8d70-449d-82d6-3dd41ded4276",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0b8e3e59-1681-4cbd-84f8-34a77f9f2969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153bd228-6606-46f4-89ab-0355458a090e",
        "cursor": {
          "ref": "e4818554-dff9-4a02-9dff-463df0abe57e",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0ab3ca65-8d24-4b29-998e-0d7f74ed517f"
        },
        "item": {
          "id": "153bd228-6606-46f4-89ab-0355458a090e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9daa56d3-243b-4ba7-83fd-7872d9159ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b43ad3b-7a27-4afe-94d7-a7bd11c33ab6",
        "cursor": {
          "ref": "ef3135c5-ee9c-4eb4-ac20-fc47bba6206c",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "74e5c0e4-68c8-4fa4-9aa7-cba70670f94b"
        },
        "item": {
          "id": "0b43ad3b-7a27-4afe-94d7-a7bd11c33ab6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4e93f503-9365-4910-b084-dd82383b2f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a29d0a-44e2-4f7c-90e5-6a452509a743",
        "cursor": {
          "ref": "d051e7a9-cfd0-4f6f-95bc-48448a1ade52",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7d8f53a4-59e0-4d76-aa7a-d82e435b5f2c"
        },
        "item": {
          "id": "a1a29d0a-44e2-4f7c-90e5-6a452509a743",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "eef88d42-ef95-4561-92a5-13cd35c36eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5691c8-6657-4b49-be40-5b55d9d1bc1c",
        "cursor": {
          "ref": "45810b5e-a0d4-4821-9502-6383e5f793b2",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4bac0113-a15a-412c-aeb4-2e9bcce3b900"
        },
        "item": {
          "id": "dd5691c8-6657-4b49-be40-5b55d9d1bc1c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6ca80aaf-42b3-44da-b246-d2b3ed47663b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7b6487-bdbb-4cd4-ad47-34ec3ca76404",
        "cursor": {
          "ref": "f6297671-5710-4d2c-bcae-6d1912b7a916",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a1d4be49-58ad-42af-935a-f17be04e0e4e"
        },
        "item": {
          "id": "af7b6487-bdbb-4cd4-ad47-34ec3ca76404",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "eec3fb02-95b7-4afe-8d2d-e19ef8383044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0eba1d8-9894-4b66-9a91-0838de9748b8",
        "cursor": {
          "ref": "4cee437f-2704-44ac-a704-0d6eec664993",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1ebd3637-a154-4859-8bec-b95aa4394260"
        },
        "item": {
          "id": "b0eba1d8-9894-4b66-9a91-0838de9748b8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8abf4c4f-8ea8-4ffb-8e34-56d32b472031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4fdc31-8f88-441b-8ca0-d6400873307c",
        "cursor": {
          "ref": "6fc4882f-a6dd-4e72-9865-d3dd3b04ac5b",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "77cf98f3-551a-4132-b7b3-002d49be86e9"
        },
        "item": {
          "id": "6d4fdc31-8f88-441b-8ca0-d6400873307c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f20e387e-d84f-4d38-89b9-a124573b4c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b9961e-3785-412f-9596-8b5fe080b965",
        "cursor": {
          "ref": "88f7a56a-470a-46cc-bbf7-ef60be98b11a",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b7bacebd-707d-4a50-82c4-33d47c4c1228"
        },
        "item": {
          "id": "31b9961e-3785-412f-9596-8b5fe080b965",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c6d73f5f-ba08-4630-9a5b-6e8bc5ca874e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978c3111-0eae-441e-a49e-0d3a9f14ee02",
        "cursor": {
          "ref": "eebe4358-a526-455f-8cf2-cc275caf2b1b",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f291f01e-9c71-40ce-8bc0-4de3f482d424"
        },
        "item": {
          "id": "978c3111-0eae-441e-a49e-0d3a9f14ee02",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "be04a540-28db-4507-ae31-c09f3ec56bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e756ed-8b2a-437c-959a-bdc2fa014b2a",
        "cursor": {
          "ref": "4975f6eb-89ad-4bbf-9902-d1057e63f083",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e2b9d94b-04c8-4062-8a0e-51ab4df83f5d"
        },
        "item": {
          "id": "a2e756ed-8b2a-437c-959a-bdc2fa014b2a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "338167e4-25ff-4037-9559-b429ac5a5c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee932fe4-8a12-4146-aab0-1fbaf9b6361d",
        "cursor": {
          "ref": "61e2c190-cc6a-4527-a69e-19b3ab27758f",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7883877d-bb72-4b6a-b6a9-bc38aa5f0f84"
        },
        "item": {
          "id": "ee932fe4-8a12-4146-aab0-1fbaf9b6361d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6141c5bb-3afd-4c45-861c-196190c5c3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b310be48-a62b-4d9a-93a3-7104f46105ec",
        "cursor": {
          "ref": "0d996379-6b28-4f96-b078-1fd620418527",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "24f7f9f3-0b47-43bf-83f6-89b4b50fb7b3"
        },
        "item": {
          "id": "b310be48-a62b-4d9a-93a3-7104f46105ec",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "51795adc-be2f-4112-a5d7-46c327dfdea7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4923b9b-df3f-4b17-a333-421e300f1f32",
        "cursor": {
          "ref": "9009f132-239c-4004-a0fe-a85fed1eee4b",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b4a6038e-971a-425d-bcb0-a5784ca1cb16"
        },
        "item": {
          "id": "a4923b9b-df3f-4b17-a333-421e300f1f32",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "b82e8fed-4bcd-4f95-bcde-a19306df7a85",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 693,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b0a3b6-f613-4cad-8022-5566e8882bee",
        "cursor": {
          "ref": "bb036c81-2618-4b92-8981-d7bb846e98aa",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8226a6e3-6d78-45b8-a774-444ac14b73b5"
        },
        "item": {
          "id": "59b0a3b6-f613-4cad-8022-5566e8882bee",
          "name": "credentials_issue"
        },
        "response": {
          "id": "edadf857-975a-4284-b2a3-5c7e5ac6049e",
          "status": "Created",
          "code": 201,
          "responseTime": 5873,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "2c6e0e74-276e-4812-bc0f-17751ad231d2",
        "cursor": {
          "ref": "c88459b3-c95b-4111-a76d-25d643a10dd0",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3785fec7-e475-4e66-9804-d7087c8db42a"
        },
        "item": {
          "id": "2c6e0e74-276e-4812-bc0f-17751ad231d2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "77c1f13c-f05f-4c84-bde8-3eb87c3e0bdc",
          "status": "Created",
          "code": 201,
          "responseTime": 4257,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "2c59bccf-ef5a-4abb-be33-fa3208c7d388",
        "cursor": {
          "ref": "62432576-33c5-4151-9fab-af9f003d51f0",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3b028e62-abca-46b0-94b9-0abec9924640"
        },
        "item": {
          "id": "2c59bccf-ef5a-4abb-be33-fa3208c7d388",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fc8b2fec-f390-4475-bb99-bf5f42234de7",
          "status": "Created",
          "code": 201,
          "responseTime": 4057,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "fe66f570-7af0-4b5c-a84b-14a29ea126dd",
        "cursor": {
          "ref": "7b2ee2d2-b725-4125-95cd-02459d3f24a9",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7ed19e3c-3810-4c24-a3b8-05833f086988"
        },
        "item": {
          "id": "fe66f570-7af0-4b5c-a84b-14a29ea126dd",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "af1ed184-2e5b-4bb3-8a12-49baf617ea37",
          "status": "Created",
          "code": 201,
          "responseTime": 4267,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "d73869ec-72ec-4771-9323-801f707b05f4",
        "cursor": {
          "ref": "df80d902-df32-4503-b6e8-5ccc1b4ff4e2",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e79a0351-863b-48a6-8c7f-adb52e543307"
        },
        "item": {
          "id": "d73869ec-72ec-4771-9323-801f707b05f4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ce2a6ba1-2c6d-4c69-88d0-dafc8976cf23",
          "status": "Created",
          "code": 201,
          "responseTime": 4900,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "b51ada5c-fc62-4acd-8fc5-c4153e27d381",
        "cursor": {
          "ref": "5e18fe08-349f-4c10-8831-e39962d83d4b",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5a67d9e2-af95-436f-9d5b-6d965b79cbd6"
        },
        "item": {
          "id": "b51ada5c-fc62-4acd-8fc5-c4153e27d381",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b14ff30a-2913-4f71-991b-17105e6feedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51ada5c-fc62-4acd-8fc5-c4153e27d381",
        "cursor": {
          "ref": "5e18fe08-349f-4c10-8831-e39962d83d4b",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5a67d9e2-af95-436f-9d5b-6d965b79cbd6"
        },
        "item": {
          "id": "b51ada5c-fc62-4acd-8fc5-c4153e27d381",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b14ff30a-2913-4f71-991b-17105e6feedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9d0cbf-5737-4995-851b-013470a348fe",
        "cursor": {
          "ref": "f4389c68-00d3-402e-b5d3-114fb1a02cad",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9484f4ad-36bd-4b06-8b72-b4ddd9c234c7"
        },
        "item": {
          "id": "0e9d0cbf-5737-4995-851b-013470a348fe",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6be9bf8e-9616-4749-9227-192291889a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ddc4ad-3319-4231-b1a2-687145a873b4",
        "cursor": {
          "ref": "3bb23fc3-b73d-4516-aa25-3280e45672ae",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3af9a28e-57b4-4b93-b082-7f95d8a79a6c"
        },
        "item": {
          "id": "97ddc4ad-3319-4231-b1a2-687145a873b4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "34de62e4-c93a-4631-8176-1d942e4cf582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35667ce7-2685-438f-b7b2-cb5f3c3a8f7f",
        "cursor": {
          "ref": "c952da24-7c4e-4475-8eec-78e83e10391f",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a6cc857f-752f-4204-a62e-d7b8e14a6adc"
        },
        "item": {
          "id": "35667ce7-2685-438f-b7b2-cb5f3c3a8f7f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "81b1a85f-6d17-4b6b-8c50-d4aff9f2deab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b300cd8-21d7-4f59-b59d-887caa512949",
        "cursor": {
          "ref": "b61d7b91-c0fa-49cb-ba27-967beedf4d84",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2348e9f4-58cb-4a66-add6-c227a2dfe00d"
        },
        "item": {
          "id": "9b300cd8-21d7-4f59-b59d-887caa512949",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "71118175-49be-450a-9545-a127832ed8fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39b906a-0f9b-40f7-9602-60566cda6f6d",
        "cursor": {
          "ref": "bb10308b-e666-4c09-8e50-f486e7daaf9e",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3f645d62-9123-4bb7-8947-58deb5b29d23"
        },
        "item": {
          "id": "d39b906a-0f9b-40f7-9602-60566cda6f6d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "38b7774b-97f6-4cb2-8fad-96e55e65ed35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad22670-6ccf-47ce-b742-a5586c5e4e85",
        "cursor": {
          "ref": "17b9341d-456e-444f-8a9a-192adb0c0218",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c00f0369-b51c-493b-b4ad-1358e0a9f49b"
        },
        "item": {
          "id": "2ad22670-6ccf-47ce-b742-a5586c5e4e85",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bfe9cb52-b9f7-4823-ac09-9aa4002905b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112208d1-0e5b-4407-8fc2-439b42e5ae74",
        "cursor": {
          "ref": "1dd119bd-7519-4a23-97ef-c97c83f343fe",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9dc23cfc-cf73-4706-882a-9d42b3f829f1"
        },
        "item": {
          "id": "112208d1-0e5b-4407-8fc2-439b42e5ae74",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a39b4537-f18e-4b4f-882f-d6d7b137df7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3474fe3e-20eb-475d-a6a3-d2ecb4bffd2d",
        "cursor": {
          "ref": "4c766004-92a5-451e-a818-986ace95aa86",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "24a008d6-4196-46f2-8ee2-ddf28c60232d"
        },
        "item": {
          "id": "3474fe3e-20eb-475d-a6a3-d2ecb4bffd2d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1c4dddf0-4c3b-4aa8-863f-daca7a7374da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25aa8671-132b-491e-92c6-794bc09e70e7",
        "cursor": {
          "ref": "15d709a2-3717-4cfe-825e-db6d05015487",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c34bd0b0-be85-42b4-87f9-ed34eecc13ef"
        },
        "item": {
          "id": "25aa8671-132b-491e-92c6-794bc09e70e7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0dac02bf-d133-4962-ad68-494f73295e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df32710d-e7fb-4ca6-b918-f859be141b63",
        "cursor": {
          "ref": "60d84c76-aef8-47bd-a466-d9fb241df3b0",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bf7cde6e-ba8b-4a54-840d-a7c19731f2cf"
        },
        "item": {
          "id": "df32710d-e7fb-4ca6-b918-f859be141b63",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "92461d07-a5d9-4d4f-ad99-3bfb800522a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a9e0e2-c060-47ff-919d-64a82da80bf0",
        "cursor": {
          "ref": "ede34f02-eee0-40b1-9022-f2b987caa282",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1126a6e1-598d-4336-b8ec-e8e1e3be24ee"
        },
        "item": {
          "id": "d7a9e0e2-c060-47ff-919d-64a82da80bf0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c38950d8-e952-456d-986b-285fa1f4bf9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce46f975-5b3a-402d-8aa4-477f62d2d132",
        "cursor": {
          "ref": "30cc9874-9509-4fa9-84a1-20678d26eb31",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "51af488e-cc29-4ea0-9f71-9116763cc276"
        },
        "item": {
          "id": "ce46f975-5b3a-402d-8aa4-477f62d2d132",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7de0ce08-045c-4994-ab35-533e3df079e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe9d519-5958-4659-b8e9-16e5323ceaff",
        "cursor": {
          "ref": "63f80548-7b2c-4af2-a601-224e69d999f8",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "73faefd0-55d6-4aa1-9165-48ee92516af4"
        },
        "item": {
          "id": "4fe9d519-5958-4659-b8e9-16e5323ceaff",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "236f2ab8-7857-4d16-88f7-b52e3fbd2f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfa2957-a6be-437e-9f87-e9067371ce1b",
        "cursor": {
          "ref": "6f2aee59-3bb2-4663-aa68-86b2379a2bb6",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "156a254b-c609-445b-8c36-16b19e244aac"
        },
        "item": {
          "id": "ecfa2957-a6be-437e-9f87-e9067371ce1b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b3c2ecd2-bfb4-4753-8b61-86ebdb0b19f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479ffe19-1640-4d8b-93ce-3c5ded97081c",
        "cursor": {
          "ref": "a632d56f-88c0-4bb7-a3d0-c646d058c685",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ee25d225-1fa9-4dd6-ab7d-05baab0b3c1c"
        },
        "item": {
          "id": "479ffe19-1640-4d8b-93ce-3c5ded97081c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "08f429b2-5739-4a62-bfc4-9e32a7d5c2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107012e4-f809-4d6e-a6b3-85aff934df98",
        "cursor": {
          "ref": "c8ceac68-ec46-4fea-8d64-079df5112b09",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9d54222a-cf22-45f6-989b-883a8511f024"
        },
        "item": {
          "id": "107012e4-f809-4d6e-a6b3-85aff934df98",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d730afa8-b389-47b0-a602-4668e64c29cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9818c56-b937-4cfa-83dc-50d50ac35f31",
        "cursor": {
          "ref": "ae8e26f4-88dd-44f8-bfa1-7642343946b5",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "dc110c09-466a-462e-92cf-6c6a7dea75ed"
        },
        "item": {
          "id": "f9818c56-b937-4cfa-83dc-50d50ac35f31",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "37ac435a-f904-45c2-8e2b-bdc54088cb52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033101d6-b9f2-4702-b791-c22fa29e848a",
        "cursor": {
          "ref": "58568be0-06fd-43d1-80a6-7a017b15f85e",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "93dbdc7f-6293-48d6-aaf6-3dd90996e345"
        },
        "item": {
          "id": "033101d6-b9f2-4702-b791-c22fa29e848a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5fc7c05c-c69a-4c78-893e-ab5a9fd7ff09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d8e6bd-a4c2-4cd6-bd9f-ced2dba1246a",
        "cursor": {
          "ref": "b2ba0b19-b0fe-49ce-816d-78d98707d63a",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "88774f8f-1599-4727-a9fb-0e83c64de59e"
        },
        "item": {
          "id": "f9d8e6bd-a4c2-4cd6-bd9f-ced2dba1246a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ddf5ef15-32e9-4a4a-b9b1-2b1e67830a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b70b0d4-84f7-4f47-8b6a-f48d6d789df0",
        "cursor": {
          "ref": "ccb8668a-402c-4cb6-b67c-b9d6786835b7",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "08e9f29a-618a-43a7-a473-d9a5c762fd46"
        },
        "item": {
          "id": "3b70b0d4-84f7-4f47-8b6a-f48d6d789df0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6df704b1-70ce-4eac-921f-f307823933c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af31c2c-6e5d-49f8-82ca-ba8225e8b7e2",
        "cursor": {
          "ref": "48946133-9d6e-4d48-bdd4-001e28b59c41",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8db7ece1-34b8-4432-8abb-4085ec4d3e6c"
        },
        "item": {
          "id": "4af31c2c-6e5d-49f8-82ca-ba8225e8b7e2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5f23724e-07d8-4e07-8f53-c0ed42957370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13fa2a0f-c5e7-423d-8af0-7f81710d0880",
        "cursor": {
          "ref": "08916d3a-f682-4026-a82d-97fa9db5e2de",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "23af94f3-75f1-4899-9977-e9d8162cad3c"
        },
        "item": {
          "id": "13fa2a0f-c5e7-423d-8af0-7f81710d0880",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a6b1ca30-6acb-4706-a630-2d3be0427ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40af3c9-963e-4bdd-9027-67d654f33a13",
        "cursor": {
          "ref": "85995a89-d04a-46c7-990c-264bdb1dafb1",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d1fbdb46-59d3-48a9-9ffc-25b8d5a45eaf"
        },
        "item": {
          "id": "b40af3c9-963e-4bdd-9027-67d654f33a13",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "090dc9c0-1835-4b66-874d-c9f5b69f8ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f089691-78fe-414a-a528-83dd1cc143ed",
        "cursor": {
          "ref": "4e8a4671-8df6-428e-8c8a-7b12ad138059",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a65521c9-4267-4093-857a-118f732f41a7"
        },
        "item": {
          "id": "2f089691-78fe-414a-a528-83dd1cc143ed",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a6808bfd-9dc0-446c-b1a4-1224a112ca3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba015ce-4ef7-4f0f-adf7-99ad43280ae2",
        "cursor": {
          "ref": "37467718-1327-4cb6-a74d-6f794444f2c1",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "00de0ed9-96a7-4aa0-b9eb-4b0003188c3b"
        },
        "item": {
          "id": "cba015ce-4ef7-4f0f-adf7-99ad43280ae2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d8672971-78f5-46ba-87b8-927f9c735f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5691fc-aa87-4a9b-9c9a-2da7467c323b",
        "cursor": {
          "ref": "2bda820b-1fe4-4c3c-8317-ca1647e7687a",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b027421f-4cb1-4561-a65e-1ec64768efb2"
        },
        "item": {
          "id": "5d5691fc-aa87-4a9b-9c9a-2da7467c323b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b3315627-83b4-4575-968a-8156b8cfe68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaae43d7-168a-444f-b97a-758e0faa2065",
        "cursor": {
          "ref": "28f38f06-4648-4290-9a8d-ed36b464117f",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6c51f5ce-db36-4a46-87a8-dabe91a1dc15"
        },
        "item": {
          "id": "aaae43d7-168a-444f-b97a-758e0faa2065",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f1890642-8103-4b27-85ee-86b9221ac974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b420c63d-fee2-4eaa-9684-11da0cb79236",
        "cursor": {
          "ref": "a113d3f9-2c72-4267-82bf-1bd6cf6f0dc7",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e9b904b2-6abe-44df-9df2-b1e01f417b38"
        },
        "item": {
          "id": "b420c63d-fee2-4eaa-9684-11da0cb79236",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e8a47809-e9b8-40d5-8f07-ec99217e5cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac28a49-62a0-479c-a1d1-a4a8915ac24d",
        "cursor": {
          "ref": "97dcc763-21e5-43d7-9e61-61073e04640e",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d35fd25f-a20e-453a-b842-d64dfbc72726"
        },
        "item": {
          "id": "fac28a49-62a0-479c-a1d1-a4a8915ac24d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "de4e4a70-c9f1-4563-876e-ad6e6c103697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 943,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006a5575-35de-46ce-bb0e-0877d1823600",
        "cursor": {
          "ref": "c4dcdaff-841a-4efa-87ff-4e0704bf925d",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6c124506-2704-4d95-976e-4e5eff336657"
        },
        "item": {
          "id": "006a5575-35de-46ce-bb0e-0877d1823600",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2a570af9-7a49-4c3d-a56f-7e18a0576da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 933,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b4d5da-67ec-4be6-b56c-56867c33aeed",
        "cursor": {
          "ref": "7cfdf6da-71b0-4a3b-b961-7a5a9c3dc7d4",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c08bbbc4-66bc-4c02-8146-aea98e908302"
        },
        "item": {
          "id": "53b4d5da-67ec-4be6-b56c-56867c33aeed",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c0e3e9f4-fe65-4d00-990c-0784ae54b6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1032,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b117302b-dfc6-483f-bd53-fc03bcc25c98",
        "cursor": {
          "ref": "599ef029-7877-4c3e-80c3-3f7c9eaac349",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9206d722-665d-4692-af6b-844aaf75e44d"
        },
        "item": {
          "id": "b117302b-dfc6-483f-bd53-fc03bcc25c98",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d829b7dd-36b2-4a77-ba8a-89218540500f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61cbeec-8f34-42aa-a59c-dd87450a5e5e",
        "cursor": {
          "ref": "6826bde6-f53e-46d1-8268-516a458727df",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "88ce9ef7-55cf-4bc6-8615-5f84b0f9f19c"
        },
        "item": {
          "id": "e61cbeec-8f34-42aa-a59c-dd87450a5e5e",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "8fb9c4ed-0bca-4196-bffc-111a7355e120",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 870,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d60b0d-7dbb-4f3a-ba4d-7faf2fb7f79a",
        "cursor": {
          "ref": "0982db72-f9fa-4627-816a-002387494631",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9df12dc5-f241-49ec-aecc-caf231b3cf80"
        },
        "item": {
          "id": "66d60b0d-7dbb-4f3a-ba4d-7faf2fb7f79a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0b444680-004b-4937-a65d-e26d7c892ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d60b0d-7dbb-4f3a-ba4d-7faf2fb7f79a",
        "cursor": {
          "ref": "0982db72-f9fa-4627-816a-002387494631",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9df12dc5-f241-49ec-aecc-caf231b3cf80"
        },
        "item": {
          "id": "66d60b0d-7dbb-4f3a-ba4d-7faf2fb7f79a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0b444680-004b-4937-a65d-e26d7c892ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f23e6b-5ebb-4373-87f4-46d4ac1d8403",
        "cursor": {
          "ref": "646292e3-6995-4c23-8ef3-02c3dadcf6df",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "30b05576-c040-4506-a488-61f633e3c1c5"
        },
        "item": {
          "id": "a8f23e6b-5ebb-4373-87f4-46d4ac1d8403",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "631a6f6c-c527-4549-ba46-f9477b90287c",
          "status": "OK",
          "code": 200,
          "responseTime": 359,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "ee307e35-0f35-4728-8b93-deea4878610c",
        "cursor": {
          "ref": "827a4205-d708-4bd7-b370-e36ddbef84b5",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "20eaf7e4-2ab5-4c72-9c92-eb61c1c3e111"
        },
        "item": {
          "id": "ee307e35-0f35-4728-8b93-deea4878610c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "55fb4d13-586d-46cb-a6fc-2df87408c84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f905ac53-8a7c-4135-9922-e7c4cdb81927",
        "cursor": {
          "ref": "d518d2ba-e476-4a94-8391-d6f75af51169",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b1a21b76-7f76-4449-9fd4-fe3929155b97"
        },
        "item": {
          "id": "f905ac53-8a7c-4135-9922-e7c4cdb81927",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "328ed10b-9f85-48fa-99a4-641797ec31c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f45793-a651-4b95-b81f-b9886672de90",
        "cursor": {
          "ref": "b87e5d28-5d6d-422b-8d4d-b56e9b51db33",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3170bcc0-adc9-4061-b43f-7a32bfa25b78"
        },
        "item": {
          "id": "f2f45793-a651-4b95-b81f-b9886672de90",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9a61bd48-c0be-4f4f-b9fe-83d38e3ee227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d76ec3-5f09-42f0-8032-bc590c070ae7",
        "cursor": {
          "ref": "223e3314-4e9c-47b8-aca6-0a696a88bf2c",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3e37ac45-954c-435d-b957-4b2023940715"
        },
        "item": {
          "id": "a3d76ec3-5f09-42f0-8032-bc590c070ae7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "075c7ad5-14a6-4801-82a0-d2a7b8220068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab3d6fb-6ba3-408e-b104-539ad6154cc5",
        "cursor": {
          "ref": "7091aa10-2fbd-41a0-bc8b-9c6a2a972ad8",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "38d922ef-517f-4b08-86fe-887fd117ac4e"
        },
        "item": {
          "id": "6ab3d6fb-6ba3-408e-b104-539ad6154cc5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "edff5c9d-3013-4a9d-b18b-cfe76a8d0ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22721b19-6b76-491c-9be0-d43a173ecc92",
        "cursor": {
          "ref": "5c1f42b2-dbe5-4b73-a3d1-2ecaf11af931",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "79bfc38e-b4ba-415c-a20d-cd1a8057316d"
        },
        "item": {
          "id": "22721b19-6b76-491c-9be0-d43a173ecc92",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ae1a7c03-4fbf-4e49-b609-98273369b294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8616810-c1e2-4a9f-bcb9-4773a265d78f",
        "cursor": {
          "ref": "93553c1a-8598-4220-8c13-413aac8c0688",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "67c146a5-989d-4829-afd0-3389e5c90ddf"
        },
        "item": {
          "id": "c8616810-c1e2-4a9f-bcb9-4773a265d78f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "47c62168-0609-437a-9287-a521248e9a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0610bba1-47f5-4019-8a68-271729df916d",
        "cursor": {
          "ref": "e4bc1c4f-3815-424b-8db4-91b4271b6249",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7a7fcee2-ac8d-457b-ac84-04c82e9eb31c"
        },
        "item": {
          "id": "0610bba1-47f5-4019-8a68-271729df916d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f0289ad1-d8d6-45bb-9ae2-f73738e09d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72536a57-d2ec-4bad-a3bc-e195f52fdf69",
        "cursor": {
          "ref": "6160cf10-9126-4712-837d-a6ec919f46f6",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8086a594-69b1-45b8-9cad-96940feeb680"
        },
        "item": {
          "id": "72536a57-d2ec-4bad-a3bc-e195f52fdf69",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "81415b5d-0afd-44d9-8b2b-da204bb5a6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcc12c0-d509-47e3-9259-7a5418f32b94",
        "cursor": {
          "ref": "7952d4e0-eca1-490c-9fee-b1ed3c938879",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "59601957-bd07-43a2-b618-58fcc54f1bd6"
        },
        "item": {
          "id": "1bcc12c0-d509-47e3-9259-7a5418f32b94",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "06512e4c-ae93-4ba3-b1e0-600253a58e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c29d8d4-4b49-40aa-bec1-82fcf7407cc1",
        "cursor": {
          "ref": "af24b8ad-8dce-4d91-9a99-f0e34ba988fd",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9a834e3b-dc40-404a-8c85-c07fd2b0efbb"
        },
        "item": {
          "id": "6c29d8d4-4b49-40aa-bec1-82fcf7407cc1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "05893dac-7853-4541-b301-0b98b6bd6479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d77735-df62-4f6b-9056-6bb6d0403525",
        "cursor": {
          "ref": "6784241f-630a-4461-8a33-14dafd80d0bb",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "72a0f36d-41a6-4794-80a9-367bcea6cf4e"
        },
        "item": {
          "id": "91d77735-df62-4f6b-9056-6bb6d0403525",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2dcba2e7-b877-4c98-8d42-653e05f782ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f25e50-214f-4dda-8479-5fdf166dda20",
        "cursor": {
          "ref": "bd986ac5-85e3-450d-9439-ee52d88c1f49",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ab9c0dd3-f2a7-4301-961a-935fff1e0b38"
        },
        "item": {
          "id": "87f25e50-214f-4dda-8479-5fdf166dda20",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "65aee99f-5d47-41fb-9e39-c42f7e6f4e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd86bab-0e4d-442e-aa69-0ab373a349a0",
        "cursor": {
          "ref": "9c8c35ca-1047-4cdd-ab5d-539bc1f095e7",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "19b1a425-15e9-4b05-b5b7-8ee0f998fdb7"
        },
        "item": {
          "id": "3bd86bab-0e4d-442e-aa69-0ab373a349a0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "88898fad-fc52-4330-a110-349030d5e9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e6e9ec-bbc1-46dd-8600-aa93da401663",
        "cursor": {
          "ref": "bcacf271-2e10-4fe8-a00b-a7dab11bac10",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0e3e6201-3209-4320-9a28-e81ed594661b"
        },
        "item": {
          "id": "d2e6e9ec-bbc1-46dd-8600-aa93da401663",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "50d89b70-07b5-4b04-99c7-4a4beb8dc8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561f89a5-9066-4a9d-91de-029eb9a70e38",
        "cursor": {
          "ref": "65d861f2-0da9-45bf-80e1-07f73cd05680",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b00e2a7b-d128-44d6-951b-f071b7a81a4b"
        },
        "item": {
          "id": "561f89a5-9066-4a9d-91de-029eb9a70e38",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "d9719ab0-60e6-410b-858a-b41941ebb1dd",
          "status": "OK",
          "code": 200,
          "responseTime": 2149,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "96cd533b-cb6b-4633-84c7-04b7d7e1e849",
        "cursor": {
          "ref": "676ba313-16a5-4cee-b725-b60fbb0b5bc0",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a408b474-ac53-4015-9548-b81db10dd5e2"
        },
        "item": {
          "id": "96cd533b-cb6b-4633-84c7-04b7d7e1e849",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e1899a9e-071d-4d71-97c8-2ed937d81081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64dd0faa-5b14-4f42-9f8b-6e3aa2f72e48",
        "cursor": {
          "ref": "b837f49d-aa49-42d2-b270-f56f04685d40",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0254ede9-ec3e-4b7f-a0dc-d0330facb871"
        },
        "item": {
          "id": "64dd0faa-5b14-4f42-9f8b-6e3aa2f72e48",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "92e23b13-826f-453d-94b3-85737459abeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4278c0-75f7-4c3c-90d3-3e27d5011675",
        "cursor": {
          "ref": "264d1451-6ab8-437c-a4c5-059064334666",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0e2fe0c5-50d5-48cc-9dbc-a9b119458bbb"
        },
        "item": {
          "id": "1c4278c0-75f7-4c3c-90d3-3e27d5011675",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "59df3d36-5489-4d11-8a87-ecb1fd1426d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e72ebf2-78bc-4603-8912-cce15d934a38",
        "cursor": {
          "ref": "6494382e-ee7a-4338-9b0e-2b1f1315a429",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a1b56815-88c1-4a18-b966-9de582d0b1e1"
        },
        "item": {
          "id": "2e72ebf2-78bc-4603-8912-cce15d934a38",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "daf10e09-cc62-4101-9775-ee42c01236d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57902c8b-2b51-4bec-b2e0-ac5204f49fb8",
        "cursor": {
          "ref": "e9c32cb9-6e2c-495d-8cdf-605cda22db71",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "39295ea5-da55-47e4-aa83-5bb39cb39bd7"
        },
        "item": {
          "id": "57902c8b-2b51-4bec-b2e0-ac5204f49fb8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "978bb887-d848-46c8-b1ac-fb92bd7d34e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971b6613-4a40-4485-8813-c9d689e489fe",
        "cursor": {
          "ref": "b6c00233-f16d-4774-9b31-fc73cbbaf399",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0cccb81b-8bec-4894-b201-a11d26658170"
        },
        "item": {
          "id": "971b6613-4a40-4485-8813-c9d689e489fe",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "efd64f80-d304-4b68-8e5f-0176258298a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afed4abc-1b0d-4ac3-9a51-b92436833b5f",
        "cursor": {
          "ref": "8c4255a1-8a05-4821-af42-d2bbce8e2cd4",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "20e325ae-6d85-4b32-ba97-78bbcbd96e50"
        },
        "item": {
          "id": "afed4abc-1b0d-4ac3-9a51-b92436833b5f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e9d73efe-8819-4fa3-999a-77522e1f3d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b00118-46e0-440c-bdf8-8a612e684b4b",
        "cursor": {
          "ref": "d9ce5154-5f96-4b25-aa1c-f2bf1d356ae1",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7d24e3ef-b305-46e3-badd-5489652449e9"
        },
        "item": {
          "id": "39b00118-46e0-440c-bdf8-8a612e684b4b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c523142f-6da9-4905-b6ed-8e332a397bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49cef498-84e3-4419-a70f-ebfa70b38e6c",
        "cursor": {
          "ref": "235cfd5d-82b9-4755-9996-bf4818b2e562",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "dac761bc-c6c2-40a2-bfc9-9709baa28c0f"
        },
        "item": {
          "id": "49cef498-84e3-4419-a70f-ebfa70b38e6c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6d80bdbf-8f0b-426f-b31c-000c3774301b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474ee30d-7d22-4802-8092-fde990287efb",
        "cursor": {
          "ref": "7242f416-7a85-4998-aa36-c3056f5e9267",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d8e13c0b-e17c-4073-881a-e5d22c709e8b"
        },
        "item": {
          "id": "474ee30d-7d22-4802-8092-fde990287efb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9deeaf27-ee1f-46f6-a820-ef4514834eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef3bdba-697a-464b-b88c-dcbe1a3b8bc8",
        "cursor": {
          "ref": "a80bf3b1-68c4-4543-8fdb-9fdc1c4bf694",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "efe4e4bb-f5b4-44a2-a4a3-6bf7eecc902f"
        },
        "item": {
          "id": "7ef3bdba-697a-464b-b88c-dcbe1a3b8bc8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e28a2267-99e6-4c65-99e7-273f4f9de471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a9b591-b29d-410d-9bc1-6c2befbdb24f",
        "cursor": {
          "ref": "80fce49a-8e41-49de-a880-bd2975831f75",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f4dc6a71-01e9-4e76-9efa-8111e25d166f"
        },
        "item": {
          "id": "93a9b591-b29d-410d-9bc1-6c2befbdb24f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "299bd5b2-c91a-45b5-a156-7c5d77c69796",
          "status": "OK",
          "code": 200,
          "responseTime": 354,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "7cdb301b-e510-4eab-bf3c-eebe0c0a582f",
        "cursor": {
          "ref": "612aef38-9159-4b0a-a261-7c74250590a6",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3a80311a-f788-48ea-b0c3-08ecae8319f4"
        },
        "item": {
          "id": "7cdb301b-e510-4eab-bf3c-eebe0c0a582f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "de27ba03-77e8-4177-846b-522668f7678c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c699356e-1795-4d7c-9a06-c25dd4f836d1",
        "cursor": {
          "ref": "f2b9dcd3-218c-42ec-9548-6a15ead832ff",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "bd956bf3-875b-48f6-9621-b827cb388d33"
        },
        "item": {
          "id": "c699356e-1795-4d7c-9a06-c25dd4f836d1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ad51b075-3540-4edc-adcb-6e9578033816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7830e9be-f4c5-4d9a-8617-dab1075ea6e3",
        "cursor": {
          "ref": "10b369da-9303-4f47-bcf1-557b446d8aaf",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "25b96b2a-0aff-485a-9beb-d5b398e2743d"
        },
        "item": {
          "id": "7830e9be-f4c5-4d9a-8617-dab1075ea6e3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8b424aaa-ae98-4d24-a501-c99f1a396cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbda7efd-480d-4546-8e39-422a6332dfde",
        "cursor": {
          "ref": "fc4babdc-b91d-4685-9265-19839c08b157",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "beac06bd-4060-4152-b879-691dcff1dd12"
        },
        "item": {
          "id": "dbda7efd-480d-4546-8e39-422a6332dfde",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b30714e0-9030-416d-bd6f-4e463473117c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7540b5-93a2-478d-8a8e-43dd57352afb",
        "cursor": {
          "ref": "c8869aa8-f2c5-4bfc-a47e-386e60dcd0db",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "68c04f3d-9a30-497c-ac63-0cdfb5d1f3d6"
        },
        "item": {
          "id": "ce7540b5-93a2-478d-8a8e-43dd57352afb",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7b34049b-c30b-4eef-8b5b-a787eed39116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0880fd8-a045-4558-8271-2ba5d6c5506a",
        "cursor": {
          "ref": "99b50c30-cb56-4e64-b88b-12e55d9f22b9",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "055ca658-6927-4f36-85e3-cd03548c6b4c"
        },
        "item": {
          "id": "d0880fd8-a045-4558-8271-2ba5d6c5506a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f97c5d8c-353f-48ab-a3a6-ec95ccd14430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54adcbba-72da-4d7e-aca5-42357579ae2a",
        "cursor": {
          "ref": "dfa6a0f2-015a-4b6a-9144-b7ac72ba3765",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "06d4164d-f32c-4891-82e8-339c584b2928"
        },
        "item": {
          "id": "54adcbba-72da-4d7e-aca5-42357579ae2a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4ea307e0-64f8-455a-8d07-b15475d4783f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc6a5b3-757d-4084-926a-1a56447e36bf",
        "cursor": {
          "ref": "8e6b9922-a0a1-4b61-b6fb-28a3d84f9d33",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1aa65f93-3460-438e-83ce-bf19a6aff9e0"
        },
        "item": {
          "id": "bcc6a5b3-757d-4084-926a-1a56447e36bf",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "86c068bc-ded9-4324-a666-bd256aaf51ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4553527e-1931-4740-83dc-249e10e4ed25",
        "cursor": {
          "ref": "1e2f9620-19a8-4444-8a73-16b17b7428ba",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "cf7faaf1-54fa-4461-a827-82b2c5a9d78c"
        },
        "item": {
          "id": "4553527e-1931-4740-83dc-249e10e4ed25",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9e8ff54a-4a7d-4edd-a838-8ba92e0d1525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf9b000-61a1-4dbd-a832-7ec011b9d63d",
        "cursor": {
          "ref": "a68d70e8-8bfc-482d-92ef-60380161d7c1",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3caa0764-b1c4-49d6-88e2-7a796c0708c2"
        },
        "item": {
          "id": "6cf9b000-61a1-4dbd-a832-7ec011b9d63d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a106e133-f6f0-4ff8-a53e-7f795f458c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da97f11b-b33b-43e7-b4c0-346b5b28e15f",
        "cursor": {
          "ref": "d9c19991-5d98-417b-bda0-554c6f063e74",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c6c16199-46b2-4f6a-a83d-3fb3ce21120d"
        },
        "item": {
          "id": "da97f11b-b33b-43e7-b4c0-346b5b28e15f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "dbcf5aa0-367c-4978-ab72-46fd98faf4b2",
          "status": "OK",
          "code": 200,
          "responseTime": 362,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "8220606e-399d-4901-b001-bc6baa6c2333",
        "cursor": {
          "ref": "a57d7e0b-dc6d-4680-8f1c-3031d24b0e76",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "092f67b6-c262-4b94-830f-9f6355d6d5c2"
        },
        "item": {
          "id": "8220606e-399d-4901-b001-bc6baa6c2333",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4e8207d2-acd1-4653-9f00-6c078cf047fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942e0729-f92f-4487-a72f-692ea7bb373b",
        "cursor": {
          "ref": "de4424d1-25d8-4bdb-80d8-9da67978a913",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "948b561d-bf28-43d0-9825-5a8a276edf96"
        },
        "item": {
          "id": "942e0729-f92f-4487-a72f-692ea7bb373b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "767aac6c-49be-4c4b-9d99-5e70f713df67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f4ac5b-f3dc-4f81-83d2-a014e15074d4",
        "cursor": {
          "ref": "b972a9eb-a92c-4f6e-a3d9-98bd68782f0d",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f7989550-08cc-447e-bb0e-3ba11521e9fe"
        },
        "item": {
          "id": "09f4ac5b-f3dc-4f81-83d2-a014e15074d4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "81e03d03-1272-417e-a28f-f170060854e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25f17d1-a164-43df-89de-45ab8c2904c2",
        "cursor": {
          "ref": "2690614a-a8d6-4f35-829a-82db39017dda",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b1bd2af2-d505-496c-9f78-1ccf27dd09f9"
        },
        "item": {
          "id": "b25f17d1-a164-43df-89de-45ab8c2904c2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "04123a1b-ed8a-447e-8a4b-f49479903dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce82894-5bb1-48f8-9881-b71cfa04325b",
        "cursor": {
          "ref": "449cc4d9-d8e3-4db7-aa9c-2960959344f0",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f3622ce8-8ae0-43ca-bb9d-16d01ee0b9e1"
        },
        "item": {
          "id": "fce82894-5bb1-48f8-9881-b71cfa04325b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "48b94484-6b1f-421e-8ecc-f75801bd0bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba7d286-0fdd-496b-a991-9646df0a189c",
        "cursor": {
          "ref": "82b5acc2-e396-44b0-a036-96df44bbaacb",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fd9aa4f9-a20c-444d-9ed8-88274267935d"
        },
        "item": {
          "id": "aba7d286-0fdd-496b-a991-9646df0a189c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "427280c6-f5c6-477e-9692-30a7abc6a138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1acab3be-0ddf-40e0-aea0-35a4bbea0b5d",
        "cursor": {
          "ref": "1df00a0c-10f6-4fde-b1d9-456ab1a31466",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1a3139be-cea8-4093-9163-0837971c73b5"
        },
        "item": {
          "id": "1acab3be-0ddf-40e0-aea0-35a4bbea0b5d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "197f1712-590e-4310-8555-2dfe9b212fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c386606-6ee6-4dac-b58a-8c84a9ff0340",
        "cursor": {
          "ref": "9f3d03fb-809d-412b-944f-29a107330aef",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f18474c4-0777-4aac-b8e6-1ed3149b58fd"
        },
        "item": {
          "id": "5c386606-6ee6-4dac-b58a-8c84a9ff0340",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6b2473be-acfe-4292-bd53-0be5e45373ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68b0adc-8445-4d9d-8f06-46182adf94e7",
        "cursor": {
          "ref": "cf83fb4d-70c5-42be-8e1c-97d9e8e8b223",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1e79f695-4665-4392-ac0d-6e578d4df514"
        },
        "item": {
          "id": "b68b0adc-8445-4d9d-8f06-46182adf94e7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e48b622a-3164-4f58-b8e4-e90e38486617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2f6660-589a-4ece-b1d8-d1b6f1d48bd4",
        "cursor": {
          "ref": "7e206a1e-29e3-4291-8643-ecee9b9ecbc4",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "18270059-9fee-4f0a-8a5a-0de4f26b5a0c"
        },
        "item": {
          "id": "2e2f6660-589a-4ece-b1d8-d1b6f1d48bd4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "27f4c8c4-8de4-4fb0-b05f-14b49c23ccfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e87a31-a94b-4862-b037-9aafceaf6218",
        "cursor": {
          "ref": "3313d33f-3fdb-4e0f-ad3f-cc1585df4ed2",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "10bda03a-a431-438b-bd2d-4137e1e34847"
        },
        "item": {
          "id": "29e87a31-a94b-4862-b037-9aafceaf6218",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2107ae0c-8637-47a8-95fd-fc2820a5b290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaee4669-ab9c-4af5-abae-67173491d8d1",
        "cursor": {
          "ref": "434a42b1-17ff-4a5d-8a40-faad1e617dd2",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4aad0478-5a3c-47d4-8a4c-8f114f23f3c1"
        },
        "item": {
          "id": "aaee4669-ab9c-4af5-abae-67173491d8d1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5d86533c-22db-4748-8306-f78485a214d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338e1237-a43d-43e3-8669-6c912815fd50",
        "cursor": {
          "ref": "0fefa799-d620-4d28-a024-ce25f74c34b6",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "cfb2b74b-aebb-4f7d-ab1d-86508453f1fb"
        },
        "item": {
          "id": "338e1237-a43d-43e3-8669-6c912815fd50",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "59dcc1dc-4480-46f9-ac2f-e7e532069f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a5afbf-a8dc-4e7e-8b16-97776d83cc02",
        "cursor": {
          "ref": "c38e98cf-5699-45f7-935c-3e52fb4e684e",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "efadb682-109f-47e4-9880-f7e85fa71b31"
        },
        "item": {
          "id": "47a5afbf-a8dc-4e7e-8b16-97776d83cc02",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f7b59407-afb0-4813-b94b-5cb3d564c0e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28eff982-2530-4e0f-b39c-c798d0ddfa0c",
        "cursor": {
          "ref": "a4200968-6cea-4439-b4e8-3f328591117a",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "92a4310c-599c-4a48-b124-d08a6e8aebe5"
        },
        "item": {
          "id": "28eff982-2530-4e0f-b39c-c798d0ddfa0c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5ac1c35a-ff9c-4a4f-9ab1-b4ae6ce6bcd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a825ce-1fd5-48b4-86aa-e65415765ac0",
        "cursor": {
          "ref": "080d771b-ea4f-48a6-9dc9-d178fda3a24d",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ad034c87-73f3-429c-917e-44c472936cf5"
        },
        "item": {
          "id": "f1a825ce-1fd5-48b4-86aa-e65415765ac0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0c3eb7b8-27bf-4399-a6f4-c40bd5398aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9adb7ef0-23ed-49b4-8979-ceec357449e5",
        "cursor": {
          "ref": "aa2209f0-2c9d-46f2-8986-722273c6196e",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "de364673-c48e-42fd-832d-c9a4ce4f4791"
        },
        "item": {
          "id": "9adb7ef0-23ed-49b4-8979-ceec357449e5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9409bba7-7d8b-4989-92e2-6d03258ff7d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60519e4b-f68b-42c7-8504-4f2e73cd40ba",
        "cursor": {
          "ref": "9c9de265-8530-4fb4-89c3-875322321f77",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d4fef138-0d08-4bf2-9dbf-d03c14ec0f3b"
        },
        "item": {
          "id": "60519e4b-f68b-42c7-8504-4f2e73cd40ba",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6e2237ba-f526-471f-846b-d9ae5fb177a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09a249a-cfc5-4794-ba53-773d3e8cc8c2",
        "cursor": {
          "ref": "b32c6546-1243-42c0-8967-438f40142d92",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "88ed312a-2614-4ec3-b497-3864d0888831"
        },
        "item": {
          "id": "a09a249a-cfc5-4794-ba53-773d3e8cc8c2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ab064bb1-5787-4b1c-819a-3370bfd32666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3172f3-ddb7-4f04-8ff0-9d2664ba8a25",
        "cursor": {
          "ref": "aea6cfaf-e4b4-4601-ac1e-d271a511f08b",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "eec2f998-dc23-4471-8613-aaf41ab9bf50"
        },
        "item": {
          "id": "6e3172f3-ddb7-4f04-8ff0-9d2664ba8a25",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "91f10e8e-1e76-4514-8216-836ac7812ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5eb58f-f92d-4038-8cc1-b5f8101769cc",
        "cursor": {
          "ref": "08b1f5a6-55f3-45f6-bb7b-5b13d6556cb9",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "424f57e0-2f18-496d-b51b-8d41c599df82"
        },
        "item": {
          "id": "4a5eb58f-f92d-4038-8cc1-b5f8101769cc",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b33ebfd9-36ec-4c03-9ac3-c57d5d2f63b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da88ede-9de0-4aa7-8d4e-636e2ccad68e",
        "cursor": {
          "ref": "c7c6345e-9e23-436f-8f56-6104d0baad07",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "08be94ea-462c-48f6-bf7c-f4d4f8a21b78"
        },
        "item": {
          "id": "6da88ede-9de0-4aa7-8d4e-636e2ccad68e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f0c89940-98f6-401a-9158-fc6f4d05ac62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd1a4d7-81f0-4c34-ad0c-cf6690d442b5",
        "cursor": {
          "ref": "21541e9b-8947-48b9-8b78-cf8b4ac82cab",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7c4cfe21-7207-4830-8742-8d991b7a37fe"
        },
        "item": {
          "id": "edd1a4d7-81f0-4c34-ad0c-cf6690d442b5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ade5f6ab-7876-4859-8dd0-0f8d61e4f28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeabface-6d57-432d-9452-3e8b9653e5e5",
        "cursor": {
          "ref": "602c3f4e-90af-4d75-b6b0-ca89cb5f82f6",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "75cb2e5c-760a-4771-a203-9fd6279d16f1"
        },
        "item": {
          "id": "aeabface-6d57-432d-9452-3e8b9653e5e5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "50299293-49e4-404b-9080-d2a5d786a4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc7d16f-053a-42d7-ac85-28bdf86d7b16",
        "cursor": {
          "ref": "6df27da1-8ea4-471b-8a7d-64f596542d1e",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1be25c38-ea0a-4874-8d56-ea788481e141"
        },
        "item": {
          "id": "ffc7d16f-053a-42d7-ac85-28bdf86d7b16",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1f7da1ac-ee1d-47aa-81c9-9c8ad14b9a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f9fe79-2b4d-4bb2-aa71-9e33c49b5427",
        "cursor": {
          "ref": "9a7145eb-82e4-40b7-9526-6342d9ac4b61",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f7b271c2-0e47-4ef5-9d71-41c5f8b9fe78"
        },
        "item": {
          "id": "42f9fe79-2b4d-4bb2-aa71-9e33c49b5427",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "155dcd17-5a9e-4b70-a0e5-ddb454095978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaac0c50-89fd-4537-a8cb-4a2844faf749",
        "cursor": {
          "ref": "3794089c-914c-4d1c-bb0a-aa402bbcac7f",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d463ace5-96ad-4b18-bf24-1a77934e3f92"
        },
        "item": {
          "id": "aaac0c50-89fd-4537-a8cb-4a2844faf749",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d87e5f88-dce2-4ba0-b59b-9b4b8cb28832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47264893-930e-40c2-92b3-e8780198c457",
        "cursor": {
          "ref": "3a2080dc-bdda-4022-a6b2-c871bc2755d5",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "857073ed-1639-4e07-86a0-ab739bb241dd"
        },
        "item": {
          "id": "47264893-930e-40c2-92b3-e8780198c457",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fe7bf9db-b7b3-4c48-832d-ea1eaf115ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c54db75-8d7c-4c66-ab13-16a9c14738b5",
        "cursor": {
          "ref": "1625fb98-eef2-4b9c-a3ec-a4215a4c7d22",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4af5c837-33f8-400a-a0ff-da8cbf1bab1b"
        },
        "item": {
          "id": "1c54db75-8d7c-4c66-ab13-16a9c14738b5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "28292a63-5453-4610-abd1-737fb3a18e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3e99ae-faf0-403a-a88b-1a22d866e236",
        "cursor": {
          "ref": "226263d6-51e5-409e-acf9-8658d7459281",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0d270b95-2726-45fe-88c2-cf4b16d5306d"
        },
        "item": {
          "id": "ce3e99ae-faf0-403a-a88b-1a22d866e236",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ec176764-13bc-4dc3-aacc-516840f4fda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f010929d-4d22-4ec5-b9e2-26882cfaa7a9",
        "cursor": {
          "ref": "199098d6-885b-4705-aa2b-68cdd6864f92",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "cdded29f-2fc7-4466-bb6f-9c3a4b79aafb"
        },
        "item": {
          "id": "f010929d-4d22-4ec5-b9e2-26882cfaa7a9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0a5649d1-9bf0-4d9a-b8e3-6ed4f7c2bf08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d82bda-ca16-4dfd-b2c5-41f5789aea1f",
        "cursor": {
          "ref": "85faec34-a51a-4a5b-a568-b13f1e5caa12",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "845726e9-22b4-4b39-bcdf-023aedad4467"
        },
        "item": {
          "id": "89d82bda-ca16-4dfd-b2c5-41f5789aea1f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0a9b99a4-da24-4a05-8708-510553ffcb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a064c75-ae9f-4186-9770-f7e97e8bc5fa",
        "cursor": {
          "ref": "660f8347-d494-451c-9dcf-80623a298c0b",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "60650829-5f9d-42b3-96ac-4bcaeba38b0f"
        },
        "item": {
          "id": "1a064c75-ae9f-4186-9770-f7e97e8bc5fa",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "11d37566-9044-478a-abd9-1d59fc08813e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a176a92-60d4-4230-a178-063c97b14bd9",
        "cursor": {
          "ref": "88cef60b-2549-443c-bbee-73834dea54d7",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5dcd8453-c5d9-42d1-859d-58ac703aac12"
        },
        "item": {
          "id": "4a176a92-60d4-4230-a178-063c97b14bd9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c4c3e054-0a87-4613-a40f-07c5f426db77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765c0cf4-7beb-4545-be91-4d8fe4e9a2e3",
        "cursor": {
          "ref": "f8cfd06b-bfd0-4c96-be15-a3a030abf1f8",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cb305da1-81f4-48ad-bf06-718c8d82e1a9"
        },
        "item": {
          "id": "765c0cf4-7beb-4545-be91-4d8fe4e9a2e3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bb8d6bdf-0645-4243-99e0-9491c0ca0673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582f0060-96fe-4add-aab8-7a5e2c8a1b2e",
        "cursor": {
          "ref": "d69ba35c-51de-4440-b881-bba7d7d7ea14",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3eca223a-b935-4e9e-907d-3142d073a725"
        },
        "item": {
          "id": "582f0060-96fe-4add-aab8-7a5e2c8a1b2e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "182ee216-804e-4dab-900c-d53b69b9785d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0390d81-6d22-4fd0-b2ec-d8063e804269",
        "cursor": {
          "ref": "fcb881a5-8efa-4bb0-ac25-1f32999ff508",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0391379b-e8ad-44ae-8eac-f77c768bdc3d"
        },
        "item": {
          "id": "c0390d81-6d22-4fd0-b2ec-d8063e804269",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "aa36b33f-6649-446d-bbbb-996459318f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7d0d2f-7e4e-41a1-8e78-d639184afada",
        "cursor": {
          "ref": "e7164d61-9fca-4830-ad80-3e5ae3e7abb6",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "37bb05f4-e52d-42f7-825b-52db9b2a34bf"
        },
        "item": {
          "id": "7f7d0d2f-7e4e-41a1-8e78-d639184afada",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ff7a7748-0bcd-4487-b7a0-7b8b00bdab5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874babab-a754-47ba-8857-b3afd3023007",
        "cursor": {
          "ref": "5fe61c62-2497-4711-86f0-6e1162ef136f",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7c2c2b66-f639-43ec-801e-cc9445a80177"
        },
        "item": {
          "id": "874babab-a754-47ba-8857-b3afd3023007",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f57cc763-1480-4dc7-aa81-4f2d8f75e3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d3809f-c253-4705-99ab-2caf001776af",
        "cursor": {
          "ref": "f5223699-bd4f-4483-85ee-9e0efce4a191",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3058078b-d3ec-4194-9b73-6b16f68e60fb"
        },
        "item": {
          "id": "f2d3809f-c253-4705-99ab-2caf001776af",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a776fc29-9cee-48d4-b38c-cf9a97dcb0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82549d8a-4d26-482a-bd2a-af630764d72c",
        "cursor": {
          "ref": "791ffd04-0069-466d-bce9-122884cb154b",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "047d5772-6c4a-4d4e-886c-04ffc026270b"
        },
        "item": {
          "id": "82549d8a-4d26-482a-bd2a-af630764d72c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5a7a831e-dc65-4941-bfc8-5dd4b94f45c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82419cce-fcb1-4fca-b76d-a2bfe96d08ac",
        "cursor": {
          "ref": "24cdccab-84d7-41e9-8cee-d4cdd49e1b39",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bbd5f29c-f509-4973-8514-38e76a99e88c"
        },
        "item": {
          "id": "82419cce-fcb1-4fca-b76d-a2bfe96d08ac",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7d1d9b6c-1d66-41ca-9e79-10c1e4ae9f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c02203f-984d-4491-91ce-91fcdb5d6ff1",
        "cursor": {
          "ref": "15c202ef-eb56-4645-b174-2d0425e26c36",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "02c8f6cf-0b03-4b00-893b-850dc55632c2"
        },
        "item": {
          "id": "4c02203f-984d-4491-91ce-91fcdb5d6ff1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b8283b59-c24a-417b-b6fc-b5817a7447ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c95864-59b5-4664-84be-0322857e8634",
        "cursor": {
          "ref": "15da09bb-fd66-482e-9b2e-89724ad7c1ac",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7a0e082d-ac90-49f9-9451-17362e4ca1b9"
        },
        "item": {
          "id": "65c95864-59b5-4664-84be-0322857e8634",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d6f7f37d-4530-421d-a336-d0ce722d8961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e462624-e349-41cf-8da0-47091cd87d26",
        "cursor": {
          "ref": "492bfbd3-46f5-494f-a2cf-afaeff3f52ee",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c977fcf3-869d-46be-828b-4ed4b19a04b4"
        },
        "item": {
          "id": "8e462624-e349-41cf-8da0-47091cd87d26",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "69c117ec-59b7-4e3b-a4d9-f728066d87f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0294f65b-999a-4dab-8c91-bf03ffcef8a2",
        "cursor": {
          "ref": "871cab31-b41a-44f6-86d2-4767aa09f68e",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7d2b34cc-d09d-4f09-a459-cf4d0db52b0f"
        },
        "item": {
          "id": "0294f65b-999a-4dab-8c91-bf03ffcef8a2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6ec05688-0534-4d48-903a-48621891825a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1b5935-c706-440a-8d59-8519008c1039",
        "cursor": {
          "ref": "551dba01-7e87-4ec8-9832-2bf16495e274",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6c5ba72a-dd98-4914-b5f6-b96042296a0f"
        },
        "item": {
          "id": "7d1b5935-c706-440a-8d59-8519008c1039",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "83e1693c-1f8e-4e41-8d69-1b8460ec86d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca201df9-73bb-4fe4-be6a-37deb80893a1",
        "cursor": {
          "ref": "89645fd8-65f9-413b-8b46-c8187418d72f",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "318c0a16-806c-4944-8d50-2514735638b3"
        },
        "item": {
          "id": "ca201df9-73bb-4fe4-be6a-37deb80893a1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1a8d4546-7f0c-4557-8fdf-12ef27adda32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa761a4-bf02-4ca7-aa93-4d741f3563a3",
        "cursor": {
          "ref": "825b742a-d17a-4ff4-9a83-f970e9ab5a9b",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2cf87fe9-4c76-4e99-b636-9022a3d77adb"
        },
        "item": {
          "id": "efa761a4-bf02-4ca7-aa93-4d741f3563a3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f9dbefee-c457-4215-b1f1-e7be412de3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1810487-c28d-40d7-9f0e-09c83ec9a8b8",
        "cursor": {
          "ref": "2949030b-e18b-49e1-b86f-36ba3dfef0ab",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0592863b-ba95-47cb-b7bc-2148508e5446"
        },
        "item": {
          "id": "b1810487-c28d-40d7-9f0e-09c83ec9a8b8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a45f2bab-28ee-4f67-ac74-a902cff0afab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bd99e9-9c16-4979-8911-f1e9b835b67d",
        "cursor": {
          "ref": "a563be8b-bc04-4123-a563-c0f02e728f6c",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9aba9519-1d9f-4c3b-aac2-d9bd61f07d40"
        },
        "item": {
          "id": "a4bd99e9-9c16-4979-8911-f1e9b835b67d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8cb2641a-7857-4571-9815-e4db490301e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1255fe92-b208-4df5-b4e3-e52269cc8f23",
        "cursor": {
          "ref": "36dfa68d-9209-4e1d-ae86-34578abf738b",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f1dafa95-ae58-4486-9e68-5adccea686e3"
        },
        "item": {
          "id": "1255fe92-b208-4df5-b4e3-e52269cc8f23",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4d271ed7-a7a1-4c36-a5b4-c2e25d52d38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21823d92-ef6e-44ce-95dc-079cfb2fc48d",
        "cursor": {
          "ref": "d6760bf5-4153-41fa-a93b-77dadfc53fa5",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8cdb4fec-ff4a-4e84-a3da-f2ef50c3d6bb"
        },
        "item": {
          "id": "21823d92-ef6e-44ce-95dc-079cfb2fc48d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "08a7d8cf-b2eb-499c-8f8b-a2cd4b468785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ef8556-7a9a-4ff3-af80-b7ea1fa827a7",
        "cursor": {
          "ref": "9520e512-0d43-40f4-95ea-2e74ab20022e",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9fb7ea61-f6a5-4dd2-b908-6a8eaa309acb"
        },
        "item": {
          "id": "50ef8556-7a9a-4ff3-af80-b7ea1fa827a7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d78d1e70-58e3-4b64-b4ae-48afd16cbd09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9995089-cef4-4203-af1a-1005a051449c",
        "cursor": {
          "ref": "d6e9af1f-ddda-41e2-94ed-0efd1d622b32",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f314082d-790b-4499-b9f9-1e6cfe701dde"
        },
        "item": {
          "id": "e9995089-cef4-4203-af1a-1005a051449c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d9848c7a-c924-4eae-a4e1-08c6de2ce5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10dc2ac0-a223-4e40-86a0-928bb4a74a0f",
        "cursor": {
          "ref": "c0fa42b8-9488-4aa4-bd8f-3819ad52d826",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ec10c7b2-7649-4c1c-a795-101096183ba2"
        },
        "item": {
          "id": "10dc2ac0-a223-4e40-86a0-928bb4a74a0f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3bc0de2c-6873-40f8-85c1-7e3dec4e4be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b25da78-89f3-44eb-9d2c-97509a58abb4",
        "cursor": {
          "ref": "301a8dee-648a-494a-a9e0-7493c12fc3e7",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d555068f-4a16-428b-ad06-9094071effc3"
        },
        "item": {
          "id": "3b25da78-89f3-44eb-9d2c-97509a58abb4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4bada171-e431-47cb-8ee1-adb8f15181e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd12369-3ddf-49ef-9d58-d519a320b1f2",
        "cursor": {
          "ref": "897f3b98-3d6e-43fe-8020-ee86725a4bb0",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "67f0b4d1-f7b4-4889-8ab9-1423c7fe3b4b"
        },
        "item": {
          "id": "9dd12369-3ddf-49ef-9d58-d519a320b1f2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "18d4666b-519e-4492-b323-9dd0046e27ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82bdc2bd-f357-453a-ad52-dd207108c89c",
        "cursor": {
          "ref": "d908b541-948e-49a6-8fb6-3d358f3b7721",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "730cb0cf-950a-45f7-b434-0cd64e35da11"
        },
        "item": {
          "id": "82bdc2bd-f357-453a-ad52-dd207108c89c",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "07fba11e-9988-433b-9883-647de5b7ff48",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 332,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcbb6f3-09ad-4e5b-978c-b21494c83758",
        "cursor": {
          "ref": "7af9cf0a-845d-4065-965c-517449bedb7e",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e37d4750-bb9f-4712-bb61-fba081e0ab37"
        },
        "item": {
          "id": "9dcbb6f3-09ad-4e5b-978c-b21494c83758",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "fb796ef2-931d-4ea8-9685-a0e7ae5067be",
          "status": "OK",
          "code": 200,
          "responseTime": 410,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e963fa-c524-4803-9596-a9f268cffc10",
        "cursor": {
          "ref": "1b258040-9adb-41b8-9946-4655ed6ff8f2",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "15c9f6a9-90f1-4450-9ad1-3f546b98f915"
        },
        "item": {
          "id": "a6e963fa-c524-4803-9596-a9f268cffc10",
          "name": "credentials_verify"
        },
        "response": {
          "id": "231756d9-0443-4958-a0a7-8074ceac3fc4",
          "status": "OK",
          "code": 200,
          "responseTime": 1950,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f6305d-6113-4130-816b-641c11d5aba8",
        "cursor": {
          "ref": "26adf866-dad0-4973-8f07-036ff9399f4a",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "84745115-21ff-45b9-801e-0d796e3251b0"
        },
        "item": {
          "id": "d3f6305d-6113-4130-816b-641c11d5aba8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ac4cca8c-aed3-4514-83ab-9476ed806829",
          "status": "OK",
          "code": 200,
          "responseTime": 1756,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d6c99f-ab91-43ac-aec0-dc4b71cb1a08",
        "cursor": {
          "ref": "a9d10fcc-61cc-4d78-b389-02b40df3f8f6",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7160b965-d2af-4dcb-8b28-9d0dd5f24bc3"
        },
        "item": {
          "id": "d8d6c99f-ab91-43ac-aec0-dc4b71cb1a08",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7a5e016d-a106-4207-ac61-5ed618d35f28",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d6c99f-ab91-43ac-aec0-dc4b71cb1a08",
        "cursor": {
          "ref": "a9d10fcc-61cc-4d78-b389-02b40df3f8f6",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7160b965-d2af-4dcb-8b28-9d0dd5f24bc3"
        },
        "item": {
          "id": "d8d6c99f-ab91-43ac-aec0-dc4b71cb1a08",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7a5e016d-a106-4207-ac61-5ed618d35f28",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d6c99f-ab91-43ac-aec0-dc4b71cb1a08",
        "cursor": {
          "ref": "a9d10fcc-61cc-4d78-b389-02b40df3f8f6",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7160b965-d2af-4dcb-8b28-9d0dd5f24bc3"
        },
        "item": {
          "id": "d8d6c99f-ab91-43ac-aec0-dc4b71cb1a08",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7a5e016d-a106-4207-ac61-5ed618d35f28",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490ddaf1-f1b6-4aef-84f4-8e6d8a98a95e",
        "cursor": {
          "ref": "19a6383f-96fe-4d96-ba05-8d7df5257f93",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c3b6f1d4-0a89-49cf-b71d-c511f759e4fc"
        },
        "item": {
          "id": "490ddaf1-f1b6-4aef-84f4-8e6d8a98a95e",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "7c71f08e-3c94-4f0c-8583-1f3848ff6aff",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 344,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd39de6-ebd4-4a08-9c86-29c4b058faaf",
        "cursor": {
          "ref": "c6e629f7-a6f5-4522-a8ca-f4d04c4d597a",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9d4cd0ed-fa39-44f9-b37e-f7dfb891a9a4"
        },
        "item": {
          "id": "7fd39de6-ebd4-4a08-9c86-29c4b058faaf",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "12ad2a89-0152-4422-8dfe-939fa08842ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd39de6-ebd4-4a08-9c86-29c4b058faaf",
        "cursor": {
          "ref": "c6e629f7-a6f5-4522-a8ca-f4d04c4d597a",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9d4cd0ed-fa39-44f9-b37e-f7dfb891a9a4"
        },
        "item": {
          "id": "7fd39de6-ebd4-4a08-9c86-29c4b058faaf",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "12ad2a89-0152-4422-8dfe-939fa08842ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b38020-55b1-466c-b9b0-576345062b14",
        "cursor": {
          "ref": "b9263268-ea28-4274-a691-f522ab38b400",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1c88a40b-5c31-4758-bd07-9305c321cefb"
        },
        "item": {
          "id": "e3b38020-55b1-466c-b9b0-576345062b14",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "39542cab-d024-48cc-bf9c-d2883b44aa00",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 569,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0d1e3c-a81d-4bf8-9a6a-1947f0e6e158",
        "cursor": {
          "ref": "2acf9719-cf7e-4813-a0c8-a50f7157ce31",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "30043063-f09e-42f8-b2ce-d1b5d9dec6b7"
        },
        "item": {
          "id": "bf0d1e3c-a81d-4bf8-9a6a-1947f0e6e158",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "af1df19b-d603-43ef-9874-bda9e590f4e1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0d1e3c-a81d-4bf8-9a6a-1947f0e6e158",
        "cursor": {
          "ref": "2acf9719-cf7e-4813-a0c8-a50f7157ce31",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "30043063-f09e-42f8-b2ce-d1b5d9dec6b7"
        },
        "item": {
          "id": "bf0d1e3c-a81d-4bf8-9a6a-1947f0e6e158",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "af1df19b-d603-43ef-9874-bda9e590f4e1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618fcfdc-28b7-4f72-a2e0-eb137cf269f5",
        "cursor": {
          "ref": "45326970-885b-4b4a-98a3-d36c76892a25",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "5a3a80d0-f524-43de-889a-8eb121699f33"
        },
        "item": {
          "id": "618fcfdc-28b7-4f72-a2e0-eb137cf269f5",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "6313b467-07ff-40a2-87d6-89273c537e19",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 575,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}