{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "57385173-3e98-4746-9c24-1431bb11f4be",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ab2df08d-c818-4215-8503-3ac6e67c1583",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e17ed1d4-f2b0-4513-8d3f-ecd610ecca1b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "73e9f4a1-20b9-4cc8-9c30-30c1dbebe0f0"
                }
              }
            ]
          },
          {
            "id": "a69a4395-aff0-43db-8263-0266b171dcda",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c6dca5bd-40ac-46ff-b1e0-4328702f1ea5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "745d1514-bd55-4ac2-af16-49b188f1a872"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8371ac7c-52b2-446e-b086-f98b40a9bcf8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8fa1380d-b265-4def-8fb1-a3a5f2106add",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4c49e8e2-09ea-4e36-b6ac-013591e067bb",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab9ad198-371b-452c-b163-4151b8ed0fad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7aba44eb-e435-4670-919f-603e9099b54b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cf1759d4-9d82-462f-a769-9ed319a560e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aba0c60d-7da7-4fa2-bfca-8d53a933876c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "45f2c4ad-96c8-432d-9c86-01ec3277d3dc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2cbb7c30-12ba-4eb0-8af9-ec193c4f39bc"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36e8dc0d-8569-4355-8bd6-85d826bb83f6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e01111c4-bd0a-49d3-99fe-d63b6ada8e29"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d1f37d0-fc8c-480d-ae8b-b51982da2610",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "296b16a9-dcf9-446f-930d-0bc011d64155"
            }
          }
        ]
      },
      {
        "id": "60c34aae-5e11-480b-8241-5494050c6170",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2437bd44-cca5-4f62-8cd8-2b49beb01a1f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5cedbe18-9158-4d01-a10e-f13cb6ec6650",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "66821cda-0047-4839-804e-b61890ded9e9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036cf319-125b-42a8-a212-2842763cac9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d004638-9b33-4d68-bed0-ca4517554479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9408caa9-ede2-42d5-aa67-8c6d2b365161",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9441c1fb-ab88-456a-bb6b-f11b3b6d142b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ad91fd7-9d93-44c0-b362-f130253f8699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896f7c6a-8a4f-4253-9854-c282bb9e38a6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b33c46d-b378-4b30-b026-c2ffbbc08718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "072d3587-f916-4c0d-ae5b-8de83a76db50"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "254afb3a-78d3-4e9f-badf-f4d96f3b01d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "edf00d3c-6df0-43f2-bba5-a04071467253",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d828d5-7b1f-4346-a406-3c74445b6afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "532fccb9-5a48-466f-ac33-cdf180a6ad63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2de6d09-7aba-4a0a-9e7d-95e9f1c70ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d96b501-329e-4a5f-8133-f13aff98842b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1c26bf6a-01a1-4262-b654-0076e7f605aa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "39a325c4-3d6f-48f7-b4ad-afaac51b9f8e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00b976ee-15e6-406d-99d9-5bafb970bd52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d8b949df-9630-40f1-b518-da20d1f82dee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b49e8c7-1c36-4031-8830-2ec5d04d41ff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7f99d3d9-77af-4ebc-b293-36f13185198e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "288c97e7-fa6c-4a42-a0ea-5a90f9bda1e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0c078319-5f69-4ecb-ad5e-b03bb638681b"
            }
          }
        ]
      },
      {
        "id": "858231ab-0a4b-496a-a844-2fa1a8bb5cd3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "740d722d-ed81-4529-b241-fb7e9d2f2788",
            "name": "Negative Testing",
            "item": [
              {
                "id": "82db4017-fecc-42c5-9010-e0025ff5db35",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b9862332-7e86-433b-99ed-1e79a5ea2e87",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7d44d9-fba6-44d4-93a4-fb3c85c7c429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b05b74a-7e60-4812-b450-7641892d2e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a3dfda-bd64-4a59-8873-7d054885f38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b4f3f93-ff1b-46e8-9030-81fa768ee42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17849cb-3794-42a1-9066-354692f819fc",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b227facc-e46d-4d38-af95-14b14529d60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567bf656-4803-4d93-b152-0868b429dfab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64668b03-d967-43e6-a057-9a4030e7474d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6999ed80-d846-4cba-90b9-3ac23ba13a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606db415-8015-4f2c-a745-81c5a6e7259b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5cfaf8-afc2-4bdb-82a9-68e25b67e92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4fc7832-5bef-401b-8dcb-b89e3559e255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81aea9f-e591-447a-8fb2-63bf73040899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0187f9bb-dceb-4434-97e5-b5b189a67d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e2ade5-464a-46ca-9073-51222ae66aec",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4402e9d3-5d03-4617-9623-630581e86ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74479022-97ff-4f99-bc57-1df222d1bf31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355682d4-41cd-4583-a995-0024cc56a0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce3479cf-4945-4fe5-9d31-2eae71aa57e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec659d95-bd46-4f19-a7d5-749a6f7b5bb5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683868cb-d974-450c-a80d-d46ff1256427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01235bcc-779f-4161-ae8f-016672e16bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7678ac2f-3007-4d36-9226-0f3d6c74552d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "706aeb5e-7dd9-49f1-a6a1-79cc8f41f96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf94f5ff-8b77-4c56-911b-311f06bf3624",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840700dd-3b7e-4d00-ae94-f9bd88a9860e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0162b239-ea01-4d56-823b-8872a3550df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4add992d-0f05-4a60-9fb1-dda6c8eb1238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1dfc2fa-24c1-426f-824d-728cb4b705b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9998ce-ea6c-4b7b-9aa1-b02a0a03b03d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd317793-e68b-4fc8-a065-c7725dc6a40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92bbc07-f961-4163-b125-80f20fff090c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f920e1-6647-49ef-8aea-492c0a1d1ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45376c03-305f-4e5f-ac3d-86a6dba71611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5b9973-753d-4279-82b9-29617522a4ca",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0d0dc8-a96d-407b-9c2c-0cb9d8abc7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "344f42ad-63c7-42d7-80ab-f723ce9a88d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed99f5f-c7bb-4fd5-b47a-01f1823dad1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73b0b105-2135-4f8b-89b5-b322519d3881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5bf58b-0b7c-4378-a8ef-0fcfc5d454ab",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd21165c-b9e0-4f4b-8a15-d8c3d41072c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d53de07-ee4f-4c4f-b1ed-601416c323f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0feaac-6637-4728-acef-c4d6cd4db6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed2c58b8-bce0-4ffe-a64e-e7258d175fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3088b753-0813-4d0a-b89e-7ed62d91b518",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b09fba-01e5-449d-b291-76356ecd82b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3eab183-aa0e-4781-95f0-f05ecd88de84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7649016-4e7f-46d9-bce2-ab042b6f1b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6db2471e-d303-49ff-92ad-5b2a3d90b20c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b88dcde-810f-4ee1-bc7f-1ae1d90ecd25",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333c19ca-c483-445b-ac58-51b1237f356c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c612b67-e507-4491-b6fa-ece064c91769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4305cfa-a6a0-4fc9-a69b-68a1b62f7391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57e00214-3b26-49bf-9b32-35cdf57c48b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb53b100-e3a9-4c44-a8a7-264dff222290",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b30d9b-c99a-465c-b2f5-62e2681c9d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1727f372-3e16-40aa-9c8b-ffb47dc85d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59876af0-75fa-4ede-b91b-eca533bbb524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9689c747-378d-4769-a188-292891e44394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d30a77-d471-420a-93d4-c81c355918b5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a4c193-a442-4829-969e-791822d414db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c007c8-65c1-4279-8ff3-f0d268b76f7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcfa605-ac8a-4361-b871-718b93bff593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71b76865-4661-417a-a731-04561412fd50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e83e71-9d42-4da1-b1f2-98c39574d400",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d67d65-3b39-4a61-b5ff-129263dfc231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0320b247-5820-4a22-9796-2bd161971387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca082438-e928-489e-918b-f89ed06607c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55177ade-7354-4f8f-8542-f36cf5dcff8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f00a24-d2ce-4643-9801-edb04ee93e70",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "200432ec-166b-40a5-a1bf-9ec7e0492da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "525f6fb3-a75d-43e1-a10b-6e145ff74e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3d5d6d-7d99-414e-a4e6-e2605c9f16b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8de1b67-0745-4d04-b8a3-670022568568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77292b07-0580-4ce9-8078-74d16cc49ba8",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47eeee2e-e5fe-45c4-88cc-23fc178755ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5933b46-2159-4c92-9d15-fb6c1a8b2604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b935ab-2541-4432-bde9-970c40230e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad47cab8-8819-4529-9716-01b6843ee359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a547f3d8-6313-491f-8006-ed7ee3d542b8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb19eaf-52f0-4bab-ae93-84f74771f162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e57366-e1c3-49f4-90a9-416d7eae9a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfcae51-8bf1-42c1-a783-4f23fa06bec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fab495f-bb5d-4534-a2b6-eb3b737c0403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c2e216-4ae2-4c72-9a6a-9a198aa0885c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1169fd6-a1e6-4865-82b9-49dcb4cf5c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f5549c-a688-400d-b771-c12551219b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0470e2f3-4b62-4a51-8e9a-6414327188cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "12b31960-45d8-43d6-919f-d2045c2059af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff5ce63-2d47-4cb7-8318-1c9da9c23ab1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02478f1-7b89-4dd5-9722-163ff05d3336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1221d992-765f-451e-b31c-bad3a51ca2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8ce408-4ba9-4181-81a6-a37e4fcbbce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc3606e-23e8-4801-8871-8e25a45986b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0bddece-e568-44b5-b8ae-8cef6198ff87",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8643300-cac2-4831-afad-69c7bd42886d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33edd7cc-dd5d-42c4-baa0-8e577c1fb83e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402a4dd0-0575-42e6-90bf-597050e3dc19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6dfa2d7-fa25-4659-a597-de1aa6a66a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acefda7f-715f-4c99-b7bd-410e7542360d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfc9f93-0646-4037-a2fe-e1ae7de3ce58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58fc0cb4-196b-413d-97a5-fd80165a8b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4302311-46a8-418f-8032-008b640119f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d163edb-bd4c-4174-9221-62350507abae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346aa740-bcf2-47f5-9e65-45be8047f8f1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c9d302-8efa-4883-8479-7482d5abfc45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f197cc-b3fd-40c9-8e39-75799be22ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f2d714-d91b-42b4-b7f1-8d7866dc52ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb600e90-ad18-45f1-b708-205e8e7962ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3afa86c-a320-4508-bb64-8b7424c5c179",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc77722-8a65-4b13-ba23-432bf56a4d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98cee271-a4d7-4c97-9bed-40feaea633f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7140a89c-d109-48b0-8f95-7ae11d15e394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc5171bd-84be-4653-8a95-78676b189347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4038fe1-b65b-4fa1-a715-74e0b849d617",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3d4256-6561-466d-b6ff-f80d8da06bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5934b7ed-988f-4eb0-99f6-fdd3650a23b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e03980a-a620-40d1-8549-b11c765642b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5522147-f8f7-49ad-b578-06c40e7e33c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde5f6bb-d5dc-4275-9abd-21843c6c2ba6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68ede2e-ae3c-49e7-96bf-e1c048cd5cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ca11bf-7fd3-4437-8ba2-32046bfca134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d38f8e-6c10-4a55-b08f-e8a4f0eb252f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1573b5ab-87b2-4a04-a919-4ca572aadbb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60df330-24fe-4510-920a-c21d888336d7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12dba9c1-086f-42af-a890-f27e9075a769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0d1211-c8ae-4f07-9438-8f51646a0fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5c1185-c4e6-4de4-a1dd-0aa18dffb57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6feb12f9-35e0-4843-89ff-15eac1aa43d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e241a6-bca9-4179-9853-1e7bf8b759a2",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3cac58-2513-43a2-93f7-662429689315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1dceabb-741c-4395-b391-a816134522d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cef2d0-ef46-484a-a3c5-0a3acd196263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe58b332-cb98-4764-8dd8-a99d7fb853e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c78aa6-d899-4147-8d06-d160fd0b02d6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1290d2-8f96-4e88-b32f-d83b0a6d01c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2153cf53-936a-4781-896b-768727f78be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a2b7f1-f4df-4e8c-aad5-09e5d85b3524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc71b02-cb78-4249-821b-0a4a91804196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b6afef-2835-4b0a-bb69-6a81033d47c1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e576b4-42c8-452f-a75f-d93334168133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7083384f-2ac1-44e7-b1d3-4da7c13a8403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282ca5c4-6a57-4161-8a73-0a1eb0475954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "21c544cf-5151-4537-bb0a-8fe97c60c6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109fd909-87e0-484f-8b18-6ef8a4ecb7a5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e28bb04-38f1-4a0d-aa1c-78ebfe01a031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787e8312-e8fb-483c-af95-5d302ede74a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6af097-2f60-49d9-9bd6-330a7ccc80b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "87f0a0cb-00f6-48e4-9f65-da63a35c92cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4daa4a5b-e579-4e75-9304-183dbe3287fc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a290deaa-b260-4c84-8614-227e9aba177f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465489da-1c2e-41d3-b235-5a1cf3753786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15231e7-be5e-4221-87f4-5d8c34066810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6349c59d-0681-4af6-b8df-e111c4a385cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8616e26-04e9-4451-a1b4-89c46a98b1f4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5366f6c-1aac-40f9-ac85-f476bb6f2a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e079c8-f2aa-46ba-ac3a-7e86774cf304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4bc91c-793d-4def-870c-e1adcb26820c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70c947fe-7e1f-4731-a2f1-e887b566892d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5fe781b-5e51-4f9d-a850-329a4d53fe09",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76976a3-c238-4355-83c0-c5c910c5b68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36be96de-98bf-48c0-8676-94d9999cb005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25bcaa7f-f532-420b-a92e-cab9fa97112e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64e9c9d3-b90d-454f-bb8f-f9cb2c653543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34011e8-1da0-4e39-9903-d9a598c1866d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70feeebf-def6-4aa8-8d78-a00060fc137a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "468e925e-9a66-4b9f-9822-28e38aace6a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ed62bf-bb8b-486f-a4e8-120b1c42bd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df22d67d-f3b7-4305-8e39-a47bd7ecf468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200eafa7-bbf6-4b09-8455-cbe2220f2a99",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47486e02-6f1b-4df0-a3f5-58749c3064c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86bcbae-cb2c-4cf9-8f2b-cda1df9c1776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d67adb-aa30-4245-b847-6e05cbe73f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6549badf-d2bc-4946-8af3-2187dbf2b0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02ff401-4f6f-4dac-832f-01777a3962fc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c9b17e-8648-4ead-ac94-2ecf89e010f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f79c81f2-06a3-4166-b30d-0b6f229b69f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0010f0ee-51e3-41ae-9eca-406f308c6dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b86cbbb-8422-46a9-8eac-dd6168e8df40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1af957a-b190-44df-9703-ee8817d81ba3",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43418572-1d13-4bb3-b739-cbe9f409e8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c36fe9b6-e960-4402-a060-0973d526f83b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3650a0-8c19-490e-ada8-c51eaa51ba9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "852b8e35-8005-4ecc-84ac-11a74c567449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e80d18-0e11-49ab-af61-72c5fe63ceed",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "671c86f0-4342-45e5-ae0f-27d422423fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2beff8-2517-4af9-992d-b057903fac81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2f5028-4733-4f03-9c31-67d5e35a225b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec32999-5a01-4dfd-a22e-9ae2ed1b25d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77eb52b-aea2-4fbc-b91f-c354eb1e5c25",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02259200-fda4-4c3f-852d-5aed3b2873f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5339da6-a1d7-4501-9859-bb118a121d1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4725c1c1-1312-44aa-90c6-39ba3de929cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "44522ce2-1845-4be1-9713-3d4f4368b8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395aa4dc-a65a-41b4-b5dc-5edce6f093c3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe2bef3-9a0a-49f8-bafb-26937c58b5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f148f585-167b-486d-89d5-f7df17831055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae889b6-7f79-48d8-bc06-7d1e16c2c6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "13455e4b-3437-409c-aadc-4db859cc3205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68296f28-561b-4cae-9203-77e447c42990",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0b4534-d2c7-4ab5-b165-775f4f9a8a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf4e1ba-4edc-40fc-974c-5cbe27844e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfe92f1-352e-4907-a1f6-d28934b1a753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "66345de6-4954-4155-86c2-f2b8403e9a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41030188-1f62-4e1d-b6e2-a834ae7afdbd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38fef30-5c7e-4a64-a856-f8b67ec6e2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a270894-a228-4ad8-af33-cdc629939b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8541443b-dae9-4e36-bfdf-fd7ccaf24219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c07f7582-9072-48bb-a39b-00c0603425f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39360283-6cfd-4bd0-abdc-045131c152f6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cea4135-21ab-44c5-a363-d403a77c70f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b709025b-7000-457e-b7b1-a8f010a1d6b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac6080c-d05d-4fd7-8ff0-7818b8c0e9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e04c8108-ff8e-48bc-b5dd-a13c81475ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603443c1-a823-44c7-94dc-5cfbb51b465e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47692e40-423e-4ef2-8c43-e246667b3e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62c1145-6223-4ec5-b896-3343a1fd38ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990a947b-5946-46e8-a9e1-b7f569379b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cfa96a3-38ef-4ef1-bc3f-4698f946d23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75068a22-6f3a-464f-8d78-8b1736ed3ad8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1e53a3-a39a-4b8e-a326-c91472636b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acaae89b-0233-4e19-af00-161b044f48c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7e14dc-61ee-4f1b-b2ae-543b81b2efcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "81bc9b61-ece4-4c14-afc5-ccadd182fc19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46604c5f-889e-4c63-a1e4-c721c9c2e32b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d10a761-cdd8-43b2-a3c4-282d4f9f73c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dad794e3-2f68-4b53-8eaa-c23a85b93fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510525c3-63d6-44b7-9c9f-27fdf7500011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bd6b9a9-d0c2-480e-a0c2-e3e068fc292e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c632394f-bdbf-4868-8f9a-b9397863c959",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfb1948-4d64-48b5-8ed8-6100af52d252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f97f54ad-b4f3-48e2-afcf-80a97597a45f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f16b7ed-505f-4b97-a1c3-c612da0c3a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4938e18-088a-46ca-aa62-9a7cb3923a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a31bb4-fe18-43b5-9b01-560dffbcf091",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a76be0c-8b7d-4183-b4d6-237b12eb2bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "104858ac-7a23-40f9-8dc8-35c69384f834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce09b3d5-25f9-4d25-b1d8-5cf015a01407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6953582c-72a0-4de8-80bd-3ad674d94ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a320f08-e4dc-402a-aa68-67f0fbeb4b22",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba86e249-74ce-4e3a-a353-3fc6f254eee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb87bcf7-5ef4-4ba6-8358-bdf3fa7e6b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444679e6-8650-4ac5-9c0f-77de9787bd92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c9287e8-c9e6-4d9b-852e-55f3915fc305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f691978-716a-4296-83d6-f9a770d36f3e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "343e89f4-97fb-4ad9-ae5b-654c948d1243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1582bc9-5d17-4626-9359-3d98ccc30506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d331cc73-5ed3-4a1f-8a3e-c925c9d86362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8f934a3-8077-4f8b-b2cf-c5d43182c5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305dbdb6-8c68-467f-b418-152f3303f8e3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6329043e-52ff-4223-b019-62396ad6ad8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4cbf307-773f-4406-9c77-f72f5c47aa19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686cff92-8368-4f3c-a5c1-31ea31a3fdff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "61813461-c024-4ab7-a694-a29d8ef6d4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb08bb80-c065-4f6a-b5ea-a8f97ff2cfb9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c2259a-ae06-405e-847f-309b6fa8371e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e20d021c-73f4-4763-ab9b-2dc55ba7bc81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba69c71-2f66-464a-aac0-e35141a4aa2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e851ee42-ff34-4785-b342-9140938423b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31353a1-d3ce-4643-9d1f-7c99bdb2f128",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a733561-05eb-4263-ac17-548e05e998c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "617f3874-dde1-4fe9-a4ff-00ccba01ba6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5530d59e-0a39-4bf4-9528-0ffe4b686cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc08676-4320-451e-ad1a-7394bd7ca4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1370bd90-866a-4931-90a4-63a5483635fe",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dcb8be6-bf58-48bd-8dc0-5f69ea9b7acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feeb0ac8-1448-42cd-a930-02ae0212599a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0486be1d-5cbe-4245-be21-6f36179189b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e06b5ad-c36d-411e-a45e-fd67b8c0789a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6160cf-466c-4fe2-a48d-7da9e0cedad2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173cf55c-bff8-44a6-8ac4-ad8f289d3d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5ccf57-a615-4742-8d42-4232a247aeea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0802ab6-1a18-4227-b14c-7a4d7797b211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f368aa-366c-40f5-8df5-f46ade3bbb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd07f4a-2131-43ea-9ff2-051e71b8034e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0c9bf3-b776-4c6b-a400-3cc7005dfea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92abb546-749d-480c-8545-d2e593690f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b151e70b-3b1c-4940-810b-67e58486d548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "39d1a295-40ab-453b-a2d3-15e856aad7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5d51d5-8bb0-41ff-afd4-5eacbff20eb9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf37ef1d-f909-45ce-ba01-9ac4d7afbef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57f1e01-ecad-45c0-9408-a7d07f0c5887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd66e242-5230-4ac8-941e-397ebfb67af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "628430a2-98cb-4f51-96c7-6a02db2cc257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858b5baa-b8bc-46ff-acb8-89715602ad26",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "726f1939-ac3d-4036-94d7-cdf4db2cb607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b57f398-947d-4042-a536-af087416d41c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65216075-4150-4be1-ace9-9efb6538e096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "95ba2c79-a1ed-407c-a7ec-1e3658cbfe24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66eedeb5-9b1b-433d-b57a-6affb658d33e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "203b7d93-4026-40b9-a80c-47c0d0323d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c141f1-681d-491c-befd-0532f78bcb49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63879888-de27-4613-a665-43880260f79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdfae57c-a41f-457e-a826-e58de0e59eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b0ec1f-0096-4010-af71-97ff0485f4fe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05916992-8da5-44bc-ba93-b1fbdf5277b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "188466d3-2e2b-4839-813d-db401edb29ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861a14e5-61da-4b12-8a42-6ffe5b21cdfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b314ff4-6456-4bdd-a6e8-a7e1b36e17a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5381c9d6-3e55-449e-85c1-e2d1f36e230e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68205e6-9a1c-487d-9da9-e552bf27ca16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc0ab46c-db0f-443f-92fa-d9dfc177f0d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1f3aaf-dda9-4efc-8617-5b4529082a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c32c846-37aa-49cc-9989-c95a59aff69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143aa6d8-db0e-46b6-9099-1df3f36acbc5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26fce66-5dd5-45b4-87e1-a30ebcc58777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55f2c31-3ff0-4293-be3c-83e6f9263732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5627055-5637-4837-8b7a-5e18ed77192c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1123adf-e91a-4712-bf33-d74625dd9285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca91844-f38c-4e5d-9a49-90b353fbc33e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "339ebf65-0c4d-4642-9f62-13c4fe7be1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d79212d-8be3-4692-a353-ba3c0d2d5086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7131cd6a-2105-4555-ab14-361d3d2a967b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "18189717-cb12-4e8b-a037-b1e5ae5f5667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a34dd2-0318-412e-b5e2-e450aebe6f2d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63019a24-358a-4c21-a5c7-0481eef07dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b5dabd-f3bc-47ca-8883-900b1af15462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157534a8-7714-4213-bcd8-15f0ff31b636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "340a88c5-1f50-4234-a4d2-abca27ead58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c12d096-72bb-4801-af0c-b1f0aa55ee5c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e291513-f667-4093-bc05-f3460b967200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba19c06-b328-40ce-9d0a-204e2476bc83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6413f389-be83-4294-897b-e33537825de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88166959-5f8e-462f-a176-ee9c9f9b8e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e41b4c-a59f-4ec3-8f2e-6ddc21f24f51",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8be3d01-ebb1-4187-9fa6-6d1ebbd4b371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1dcfccb-be94-4cd0-bfab-f7a38d251359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b3bc16-1321-4322-a214-71a8164b5eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e834e07c-5177-4970-8b0e-1b0a13e2cc3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1552e295-3e09-4fda-8399-1f5164e6f475",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289c4d9f-0267-4ab9-9acb-7acb1245890d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17fd0d02-c01e-4f58-9e52-1230db10bc43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64716ec1-8df5-4fbe-a600-b7e4ca06c8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5fafe178-b4ab-4488-a63e-6afb40b6a615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0ff16e-7bd9-4001-b606-3b129e63c40c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee39314-5b81-4f77-9643-6b4b86c852f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7c5298-0e53-4c9a-8ea0-076d0fa5a91e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307154a8-0d8d-4e9b-a67f-30c7ec6ea405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "553e367a-14af-4968-b814-fd76255bfb5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c86ee15-b96b-4fed-a44a-ac11c99bb863",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f990a3c4-149a-4ee8-9439-2839fb034aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "727fd274-6db7-4f99-bfad-0b14e34ebd4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e17220f-d0bb-42c6-add9-d9a927c6c282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cbbf7b7-ea89-45f6-b023-9b9a8e59eaac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d561bb7-093a-456a-9568-6741586ef2f8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ea572a-093a-4f3a-94cf-d021bb24587e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfbeabf9-a379-431e-be6f-3c7fe112e292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0d9c09-9b1b-415b-bb0f-defdc32beccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b199863-4a96-444f-85c5-aaaac63f6ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39e37fa-417d-4561-ba44-c49b43f234dd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ee29e5-c874-44c3-9f9a-f71a6c57df48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c4b05c2-4bcb-478e-8d9a-e2b0f0c9c817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0522ea84-38af-4553-b0ef-a93cb1f11824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff08a77-5d70-45ee-8f57-3a9c0f74c31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743ee28b-5a9a-421c-b97f-285da7093944",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4854349-d06c-4e63-87af-062b49ab99d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c35ca623-fd83-4516-b13a-35bbde08943d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763073f3-feb6-4643-8581-2c4c3d0444cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80f28662-6f26-467d-b344-8981eb0521a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968accbf-d25c-4619-b7dc-1f60734b85f4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e5d77b-67a6-441d-815b-e79fd36c6c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e99ee708-3c3d-4b23-8078-c0a56825d5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d5ed7d-e883-41d0-8945-05251b538d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85d3d93a-459f-4ccb-8b55-4b1c391fbd3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f39a9ce-92f4-49b3-83b8-28e0dfa8a833",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa768bc-d5cf-46a4-953e-1a8de7db5cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd2cada-5f34-4bb5-9c23-3297cba0e05c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb37c02-f216-486c-8a9f-d6a44d1b1fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4a11b4cb-32a9-4c39-9792-53c1adad2313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed8d9ec-03ea-4114-8d05-47940e6fa58e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33d5aea-9725-45df-93fa-bdff4be1b84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db9ad28-829a-4d76-884d-6ab09d7d35a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04301ec9-b93a-409f-9848-693adf009511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cbe22a1-6a70-45fc-a8da-05e153910c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b155370d-f816-441b-b832-37ea00fbc00d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c323b565-1164-4554-8d63-8d97176bcddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d610c1a4-ac9b-4b9d-a9d3-0fba615326ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07a8d43-4157-4527-9e91-2ac27ecec16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "49b0310a-839d-480b-a2ac-271788a40701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad8e4f8-6147-49c3-91bf-ac66c01f3441",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f8f7b3-e405-4fef-a4f7-62e3b793288f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7062a439-0e4d-460a-b26b-002b239790f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63581592-732e-4ffe-948c-a0fd8d34aabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b1614c1-a050-4240-9169-a08ed5578057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0099c4aa-4f8b-4d03-85de-a5df918e4839",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579a3d81-de42-4225-b3f9-ee542772b70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16b10e8-a115-4cb5-8486-137c0c7baa3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3947be4-8c89-4358-a2be-027ebd7ac128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4c1d8b7-e6fb-4486-ad87-32919e044b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa93552b-a933-4192-9d72-aae9c65d424c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58da7345-2eb1-4023-a8bf-e2f087d0e8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37a41d52-ea9c-480b-b9e6-d27a44d669cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb03356-8cda-41b7-8c8d-25535ad458aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6db055d2-4abc-4182-ab29-85f7450f221a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c72c34b-b9c7-4072-a01d-a5d1262685ad",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c993fa-455c-4df5-beb8-2af0a1561029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0436c03-6d78-49b4-b069-9e291c9e70ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad58e82d-8d3c-430d-9e77-d9a7950f4304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3e1ed060-c235-4e7b-aeaf-b7dfdfb7fc9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d67a46e-fa5a-43eb-9023-29196eed2c4a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54747cf3-8e30-4389-a09b-1ccd352f0221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e9d7489-2ebc-4334-bd3f-bbeef6505233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a83532-cd13-465b-886b-c71bbc3c45ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "040142c2-f323-4f45-9c6f-b5b429faa8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379b208f-362e-46e4-ba53-0493c9820ba8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fa5b30-ba51-479e-a1c0-5d3217979063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6996b0b4-ec7b-4ea2-8e1d-58b329746e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1713afee-1c6f-4620-8ded-2e7845f7e969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f30055c7-5495-493a-b570-f12c8cd615ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efaca7e-f678-450c-aacb-450fb47a2ec3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f67315-e639-4926-8482-e077b8b10c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c03c7bdf-60a5-47de-b884-7ff3682ef3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72203c01-25d7-4f70-b187-16e63db8f75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31ef4c09-37a5-41d9-a2d5-d7ec58ebafe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a622910-7ab1-45d3-a032-6f63cc5d4866",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8738aa-2545-41d5-84db-15e4c0f4cd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0bb0a7-862d-40ac-b94e-b934f32ead22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8be2536-bf2f-4b58-9b6c-5f7c2e75ab55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "67747031-da7e-4051-834c-d208271d4436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc8d95b-0cb8-43b6-8ae7-972fa08461c2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a2a00f-5775-4508-9633-f10a8704474e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa951b8-73fe-4fad-9632-11c94b5d070b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3b4b72-ccd0-4a79-be8f-736967ec6baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4148554-2f8e-41d9-b35b-b3948d4319a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b735afc-b141-49bc-9a7e-3d89fc547396",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c66271e-d6ab-4abf-a196-1d31e77497b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aeb3f26-05de-48ce-af24-31c211d60e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfe2486-7ae5-4376-b9e3-bf8f0db3f2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "068d969d-b302-4da8-bb3f-376f2eecfca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90775556-bf61-46d8-b817-3cbf74856b0b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd95fb1-8b23-43d8-8c37-91348d4263e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd2f683-68ea-4e18-90a6-fd751311cbb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce348e3a-05e6-4645-86b2-896ee6ec3b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "08480b94-75a3-43c7-8dbe-f4470350fa34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78aac1b-0ffe-46e5-ab79-e6350ca605b5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0905ca-c1bb-408c-a48b-10ea846c2ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706546d8-0aef-4d73-8953-a9738331650c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825999cd-9775-435a-a82f-cc7d7fd64ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fdf5666-3755-4f8c-9349-484420974610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e716f0fc-aa35-4526-9e2a-f4141eb0c4d6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fddf7fcd-53d3-4478-a977-fded6aa24921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc4496a8-4543-461c-8809-fbb9cf910f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71785ecb-cdfb-4c26-98f4-6cf6c072903e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6682f043-bed0-4462-a634-4fce7fbaddf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91588da5-201f-41c1-afdc-512a664cab24",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d58f65f-b7fc-496a-a478-350a83cc1e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "959f2aa0-af60-48b8-a4ff-a58060d483b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb48f65-5a77-40ee-a8df-28142eed3570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6db02fe8-52fc-415a-8372-b8f2877e0a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa412d80-9202-4eb0-8b0d-19c8a3c1fe8c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "343cbaf9-e103-4cf2-8561-2a7b0172879d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216eee7a-f926-4429-a6da-33d5a89e26b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c27495-218c-443a-bcc5-1833b5d8c4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ce14969-5946-42bc-9f74-91f72e6972d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb523f4c-278d-47bf-9104-460d0499f67b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257e58aa-1406-48e9-bd4c-a6e15ed1f37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cc650031-44e8-4ade-8d3e-467cce189416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda25142-2590-4522-b827-da97777e1062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f501b18-f0e3-4901-a834-c50a5c151a4e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4682e08c-6772-426e-8c1a-d31bb77e318c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a153393-eb2f-444a-b87b-d4da2fa71e21",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1ccbaf-c9ec-493e-b997-aecee10f4692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb03724a-0b43-4ef9-9aa1-6cbfe17eb4c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bbd64b-712b-45f7-ae37-d6eb27934fc7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d46b0a8-a05c-40b3-aeed-8090d53bb58d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55b6eddf-56f8-4d12-955b-30c4cf0447ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40ce054a-e594-4017-b736-b5cbec23c201"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64e292ca-7f03-44a0-9969-38101695f0ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "312fc0d3-3348-438e-aef3-75a35b1cbde6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cfc020e7-b486-409a-b7e7-ff98a015f6e8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f88d1e7c-2b88-42f4-a5c9-bc551c938f75"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2304ebcb-29cc-4406-8b4e-7bca0777fdd9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a194af2-af42-45e8-a868-a135f1d57088"
                }
              }
            ]
          },
          {
            "id": "2ef71ba8-3442-4a27-ac07-81e1abd85c2e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7cd0c417-f8e2-41c8-93af-5193424992ea",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a0518a4f-bdac-430b-86bd-a33b8f40c310",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc57c193-60ba-427d-b538-34c9fe7bd041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a8cf88c1-19e3-4a7c-b62e-8b7c7de5d1c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af24ff10-e1f3-463d-9268-912f6532fc0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb50c0b-fc55-4824-afab-0d231bf31ff9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "494a5c8c-5d6c-4567-a611-95f47d9c74d5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7034c74-37be-4d6a-b1a5-dc5bcd4a7e49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "519cc86f-09d2-47d4-b7f5-7e11bd2722ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4cc290b-feb2-465e-a728-3a35067fac39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f3d04575-d713-4040-8fa9-83a952e132f3"
                    }
                  }
                ]
              },
              {
                "id": "c7e6f9bb-d72c-45ae-b45b-6b3ac421dc6f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "205186e7-a07e-4ab3-847a-8c75fcbe5296",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d2feab0-5b7c-480a-a872-75b14ee7fcec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8764b98c-2d87-43b7-8ad2-9f3615ac4345",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "61b001a1-c02e-463e-99fc-f8dc5c4e2b91"
                    }
                  }
                ]
              },
              {
                "id": "e9240e87-e774-44d3-82fd-2d3f5aefbc87",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b1ce3f0-ec87-48e0-9890-e1ca9d851ac9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bbef9123-159b-40cb-ac7a-dce8809c4b1b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9004fd2c-0136-4da8-b313-472d935ead26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "23c6fbf5-fa9a-4835-b948-1ee01adae3db"
                    }
                  }
                ]
              },
              {
                "id": "3f21a78a-c1ef-42f8-91e5-60c86f1dc98b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "545c4c30-e08f-4690-a1e7-c2611b122fc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "76373e53-7440-4fbb-b1a5-eb8affb580fe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "953236df-e0ed-46bf-b32f-5b5ba34444aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4862da59-ed0d-4dc8-9f3e-2d03f847df6c"
                    }
                  }
                ]
              },
              {
                "id": "250a0efe-9c7f-4c52-9faa-9cb92e6bee3b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3345a4f-360d-4ad0-93e2-a800ea7b16e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7624104d-44b9-4c71-a4a7-57da81b5951b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5cfa099-a614-4bd0-8ad5-d75db4e780a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "23b3532b-3f33-43d3-9c3b-eb6449e54713"
                    }
                  }
                ]
              },
              {
                "id": "b2a918ed-c4c4-44c9-810a-01ce73bd627f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6b530b4-a512-41bf-b807-0ada0851e6e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c95accc1-b10e-4c62-a3ad-60e41a14e5c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5dddba61-c067-4f0a-af7b-bcbf06fed035",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a7979948-77a3-402d-bd0a-cffe985d7534"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5b89c862-fb9a-4735-b24b-31519f57fa20",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2b13c740-212a-41e5-b69d-df12f32cb545"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e51d6f01-f774-4644-ae09-cf10cf696a41",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "61d35f57-cbd6-4e1b-b7b2-ceceef9e150f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d62e40f-e0ba-41f2-8fb5-27c9dff06ae9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5a7f1d4d-f797-40b9-96a6-138b4d68da4b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "407515f5-f637-479b-9695-152f273fe0a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d989ded2-9f26-4158-b253-39b2f51d89a1"
            }
          }
        ]
      },
      {
        "id": "47a83b86-594e-4b53-819e-066bde1fd93d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "74fa0d2d-69aa-43b3-bd27-5ae8664e416a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c65de39a-1797-4293-a31c-9068ccedd6a5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "059bb853-857f-4171-a355-bb52b27f5901",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2c13f1-8495-44f8-9750-c7fe5cf3f49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2fbea7-05db-49d7-9349-fd74b75f4584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad29e20-4cbb-40e1-a5ea-0218635a55f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7b3b0c5-026e-40d2-beda-cc9309018a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3384bd-246c-4bbe-8eeb-33a26562089c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc91216-4506-40c4-8b90-b120ae055408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd845e85-3fa5-455a-8e93-9a29c69327e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1988ed8b-c0b8-4652-ad18-b6be273b9af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe7b01e4-7e2e-4da3-a321-1538a3ff5dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b07e37-3cdd-4197-b8cb-99e99bcd7c86",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd696a00-3303-4210-8f6e-a14d5a1cff6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec26796-9924-4d0b-95a4-4cb93878efa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca6f478-367f-4251-a284-5a6d90a1a594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ad4d06-56b0-4208-91d6-7b3ae4b1b3e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64e570f-be86-4f56-a971-44cbf9dbee9a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4611ee-a335-499e-bdc9-4e5b35b5f273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb2fc47e-d319-460d-b7c2-0a05751c6c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd46af05-3b0a-4903-aac4-7f001e68bf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c8d0254-b2a2-4936-b7cc-fb21920e9f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5414235-eae3-4dcd-8044-d7543c8a0a51",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde75890-ce58-4933-8134-80cbc6744aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd72605-3b43-4306-a865-07e0c1f2453f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d0a8de-d6ea-4a43-bc90-c2922431e5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0fcc9eb-76e7-4e27-a885-ecbeb0f77d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0fa061-8d2a-436a-82de-ef8acb178f42",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec41237-8490-4b51-8e23-75c7b991973b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47dafe3-5395-43da-8e71-3230af0ff1a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbdd8e0-819b-4ad0-8f51-26d99868be12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d43e5364-e831-4af9-b96a-45ac39bbf620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb57c02b-75f3-42af-b6d8-c9a37d2083ce",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b7a0ae-f4e0-45ce-a034-27532639f1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8283ad0-086c-4d0c-a79f-130baeb24236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08eb0f2-d837-4738-897a-8df514518b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "396438cf-9212-4aae-9c30-de725c9bd3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c60803-e47c-41cf-aaf1-bc8a3ba756db",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36394bd-1cb5-4b56-b644-d1306c3931be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2226b733-2f3a-4909-94b3-1ee3e6c2eae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75930d9e-3ead-429e-8909-96ef062ce485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db052cac-315b-4bd2-b709-bd7daedf0929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e675970c-5752-4899-9c98-4eb011dbe53e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f9ab1c-8ada-41df-9d7a-586b999d0081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42637280-f9b6-44e7-a510-d742f1c34623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56839431-4183-4375-b99f-23d94e4798d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb24cc2-3f44-49c5-abc6-81fb3ca8fc2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d57672-70d0-4a77-81fe-455193424e9f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1900724-9810-4f2f-a46f-b3104b7343a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93364162-f8d6-4fe3-a43f-816cdd1e2164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9fdbd78-e74b-4dad-8566-e0743a3c2ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6779b67-3bb2-4e70-b7eb-d605c9da62bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b15697-5d8d-486e-99ed-4bb7c98256ed",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837ff8a7-bcb7-4446-b660-4d9f6a285822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dbbf3d1-0c81-461b-bc1e-a9cf8900dea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9030b4f9-dce9-4cda-9cd1-71d797b6c1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "42e1e7e2-3986-4bcb-8954-957bcfa8ec02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59faf911-8218-4e9f-90f7-a482d15d7076",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb6e2b2-6af3-4bcf-9cf9-68d793917708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb840b5b-cb79-4179-ac12-66dbc021f240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb7e5b2-6159-4129-a0cd-8a753329704d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "346b98bb-bce4-4b2a-af83-8f4491ca94ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4270dd55-cfda-426e-883a-56c99294dd74",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2a1bdc-073c-4ada-914b-4675e589c731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46477a3-223f-4dac-8b36-c001f720f377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e59ff5-1994-45a8-a8fe-9879b4f65e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f216fd36-e7c2-43e4-a724-46dc88c7e34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3182784-806c-4435-a960-3180e7530d4f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b7e747-cade-47d7-8771-2e8895635273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84624fb7-009e-4011-a2a1-04ddb5046c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb4e7fd-bc3e-49c7-9bd1-1bf8f78cf60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "27d2d2e5-58ca-4aac-a80f-2ca4fc4afa88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853405c7-709a-465e-aace-9dd3a7e08795",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09d87dc-eab7-45b1-a4f1-fb92274e83df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d44eee8b-cd14-44e2-979d-5ff37ef1f2c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1cb85d-01b7-4ee7-9981-193f395f4163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0d8555-1f76-4776-b71e-c5d1ff8b4a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd11abc-d726-48ff-8b69-b1832efd5a96",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "241caf68-1830-4934-b549-950040a4c216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f3aa595-887d-4787-a9c0-d1cc660945e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f3be4b-5d12-44af-bdcf-7fa2098c691b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d4e8af1-2e80-4454-8683-8b23fa30966e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755651fd-e05f-4be0-9bbf-3c33bd70b797",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b079fbc-e119-4206-a5b7-982cf8b56b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feeeb8b4-c76a-4a22-ad39-e26c5fef38b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b9d15d-7f8c-445e-bb8f-dc427f6958ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ad4d6b8-4709-4bc2-9ab6-a5555421e87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b774ef-2298-4f7a-acf1-59d289e42ebf",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b506ba0e-c238-4868-be42-072fb8627948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b4ec3c-e095-4460-98aa-e84727aec576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151216f9-f2fa-40d8-88f3-6709c85b3071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4585faf8-d789-4fe1-9a07-72610a280574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f2e552-c0c3-4571-8372-b38111ff56d6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1a40bc-512e-4f3e-9563-8c6c124f7bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c949b2a-128a-4f04-a20c-af22e3af8408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f70c97-b065-4232-bff3-69a9408a3a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3789c37d-59b2-4395-9fc8-0f3e67309899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c5136f-b24d-45e7-9a99-3611e5cf3068",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8f1372-470e-49c0-883a-2d9a002454ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ca9695-2554-4019-8a4f-b36ac44e0d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1656919-8c7e-45f1-a2e6-0a035a24d5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed8f4c07-9cb7-4eeb-8018-890cd527d8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00bcaca-88a6-47f5-9d9c-1095684ac244",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22a0d73-d4d1-4870-a03c-ee7e20564aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa1886f-78aa-4b52-85fb-6dffc8e86b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37735d1-caf2-46d6-a7b9-fd6ed443de55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d11990-d17e-4c37-b016-d6aab510a4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5464f141-76f1-48ce-bb89-eeebae7b6086",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d70da98-b0aa-4f44-8d2a-4c2da7723712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a04624-6fa7-4ab6-b066-8c19de51c82b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5d74cb-ea86-4998-be26-dcc34ec64268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1ef7fb-ea94-49de-b8bf-ea72293f4ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183ff963-cb99-4bb8-814d-03d67fa16895",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4329888e-be56-4205-9ce2-53aafbaa088e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43848a59-3788-45f9-aaf2-b8b22c7eaeab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb415c5-7fea-4daa-8a64-178e98a76565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a690a32b-cee7-431b-a562-08e82b16fee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfb6b94-16fb-42f1-ade7-9b18d15fa3b7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc916d7-5e46-4585-87b9-4227163bab00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b9d1fd-1879-4c6a-91ce-d24478531dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91d0208-57f0-45cf-857d-6600ae906c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "525c774a-1f84-4654-8684-1398ab412a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492364bc-9f78-4c58-a626-848954acc028",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54d732c-1205-4dab-8cbe-910be5f92a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c9ccd2-d406-4875-9cff-79735fa85c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac1e141-9dbd-435a-b0fd-ac64a10e5cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f22ee68a-7236-4b99-b952-c2e634cc5707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62863958-57f3-4e98-b606-49a291834f0a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77de222c-7c4e-430a-9b27-33dd2f559385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16bdfdb2-6b72-42f9-bb5c-9c26d6296074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65ce686-4a32-4f6f-a6f5-d3159ff98110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36bfe2ef-11a8-4e6e-97f8-dad76dec4412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6852071-914f-4c60-81a9-27a8e2d920c1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c8ec2c-47d4-4d80-9b11-c936f8fe46db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31ecda39-2f49-4557-875f-2ab828a659f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d28231-e51e-43bf-bd97-4db08a8912d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1351ebbc-cab9-40be-8d41-1f6e0881c7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273d583a-d2a5-4f39-9934-396d2686c20e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ff3e73-4831-4c93-ba9d-5decbe546a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb6f9f3-0b1d-4c02-9a26-93f22c01db3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1969b767-42ce-4b33-97ea-52aa62f4bcc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c58a2c8-9999-410e-8c48-bbdc6b1320a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb024f9-afa3-4706-9cf6-726e9683416a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65ea39a-3b09-4ae0-8428-b8b91c087c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "119f2b98-7613-4ac9-b9da-c91ae1b9c2c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717b5a5e-18a4-4d0e-93ce-201723260637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9945d9e-38ea-47fa-bcd7-e689bcef0e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ecea5d-d79c-4ed5-aab7-14a4ee20da31",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1be0851-5673-463a-a26f-09612ce7026b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a8c3493-5805-42b0-95b5-37bdfc47c636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8726ab00-4686-4a11-b0a7-9f949765ba90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5beb9da-de05-4acb-8332-81598430abd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f527f4a-baeb-4541-80eb-49c77e6859d2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc667a7-3d75-4014-8963-55871c52a17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294de6fe-e326-4bf5-8bbb-13e08ea691e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e4bf0c-e1ea-41fb-b117-49995b4d6636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b1c558f-0c9f-4716-8b45-cfced676545b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1d02bb-ff97-44b1-bba1-29b0b457d61e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89665b3-bfa6-41a0-86dc-c3b55cdc649a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d7ff30a-20b4-430a-88ad-2bfbd13afe4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657d3c4c-9f75-4774-8dec-3cefce25d5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb9cd658-2baa-4d4f-a62a-49be644fb019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e39c8bb-46c4-4189-a822-80d638613cfa",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad8df23-7b16-479e-afe0-c8870a37e7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ba1b29-d7a6-424a-91e6-1c7d4b9d44f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c6f810-02c2-435e-9b5a-b49aba9b6bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3be461df-e491-496f-907a-48664d66c1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb332823-d1b2-4635-96c5-9089354cdd1d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec997ab-b1d9-4d75-a0a2-12e2b9ef7861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f5c1e2-767c-422f-9b9d-d41ecb517ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bac17c7-f353-4d1c-bee0-e96694a70f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eba53de-08d2-40b1-b449-e94ec5cc1828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f13836-989a-4611-934e-1079f4764b6e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c505d79e-d274-4dc5-9776-6227167df246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83e7f49c-dc60-4aaa-b651-4fa799592789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156cf6fc-a677-4031-a343-cacb1ad3ac06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db338a77-fe38-4660-bcb4-888825a013d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da1a84b-9845-4b88-b7ae-d7e874400863",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a2b871-db27-4a84-8afb-068bf29995d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f530483b-9389-484f-be8b-e08983fc0da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82dc3fa9-5d96-4926-a6b9-b1f4c3a58753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da99521e-91f3-4694-9ab7-801b07d69144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d31b8b-b5e6-41ce-9906-8c7a05237613",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd39577e-6b54-4665-bfe9-1c0f9673b9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb2de43-9f9e-4ff7-a8bc-79aac751a4c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03917678-1f22-49b2-a64f-9e63e5e310a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53f9f064-a0e3-475e-a0fc-041d5e339079"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d832e025-0475-4aa2-858f-cf65f6f7aff4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef317455-501b-4c2e-99be-ff0382229d0c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f18fd1-fe96-4d9d-b1f7-708e30ffea47",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ffbd6a5e-b988-4d0a-95ab-34bccb6c3a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00fe104-63e1-459f-845b-0faaaad97b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df3279e2-5787-4e73-8434-dcdd143aef1d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "275525fa-0b25-4071-b287-80560178d657",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a96886c0-491c-4bda-917e-a5afbae725be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "55da35a2-525b-432a-a9ed-176bb000247e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d89dde96-2a53-436b-a906-9a3d3ec4a6f6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6020a63-9408-4b56-a5f4-6742a553059d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "49c3f1f8-b2f4-43d6-98d3-4d0da35586e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d253a951-8169-4cdf-a608-d80d06708f40",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fedecb14-02ce-49a0-aefa-be1b57c35100"
            }
          }
        ]
      },
      {
        "id": "a7974daa-113d-4599-8f9f-40091c9b1710",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1a14b563-aece-48ad-b6c2-40eecaf4fe9d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f97a0f47-26aa-49e5-936b-c4a800039e47",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e5e08b1b-55e5-4580-a3b4-019ce6b80df0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b88169-21a7-4065-a1ef-23c97f0c7dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938fd2d0-4af1-449d-a830-10f4f208ea78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ed3db6-8ca4-489c-a290-a2c0fedf88cf",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "473df494-7232-446b-85de-ca34e4dfd6d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a796c9-8844-4376-be5f-0d8a598479b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b1020c-632d-4927-9b35-3d09bbdf5c75",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a83ccba-6f53-4200-b234-c18af8712fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b34eb3e4-54a8-41df-a59a-f056131e5ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2510b91e-7993-4f97-b058-ed6b107edffa",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52aba723-d80b-4a40-aa3c-2ed00cd05b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a1ef63-0190-442d-aed4-4c1e433a5390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231da925-2c1a-4d9d-9fb9-aee69641e7f4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a17596b-521e-45e5-ad51-36318aaaaf95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e2fd0b-4dba-4206-b13e-ca6131aef457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be198b8-0ffd-410d-b9fc-6c2ad4d9c192",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "129b95c7-9bca-4b1f-86a9-f55624f17e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e3c752-97c0-451e-87ed-ba6ef1aec98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18fe045-dce8-4c92-9620-6d61b0f958bb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b758ec87-49aa-40da-8cfc-6b253f45e54c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e4e3f4-2576-4542-8491-41a1b77d984a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8dce59-4a79-4c9f-a2a8-db5ff66e99d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd989bd-e154-48bc-b36d-0d8e11008487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11344c25-36f9-4e41-a3f0-11bc64f6501e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edef4859-e6f2-44bc-9fee-9972c7db1963",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4b38e3c-73b9-485d-83a7-eccb4b570d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfcecbe-36a3-4f4e-aa2b-b3d3d982176e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233b0480-651a-4a68-a698-95794d54ef81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b42391-eacc-423b-9cf3-6a1314d8a72e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b914935-aff0-4d5a-b726-c3a5c4284dac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95bcbc51-ea00-41d9-baf0-9e74372153a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "486506bb-40fd-4431-ad6d-f451bf6723a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def86491-b727-4ce6-8385-b369adfd34b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae137003-1412-455c-bfde-ec9c55f56bb8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c50ee28-d66d-423b-8c7b-3fed0bd0a75f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7333d42e-668d-4007-8572-de3518ff423d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01f1eca-a947-4607-ba23-c8fcdfc6b0b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa555a58-5b61-4feb-a82a-1284e8243291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92de3180-1eec-41c4-ae74-7f5c72189cba",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b20e9e8-fac2-4aa4-a5a8-f50b1fd5c452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df217b3-a9a4-4d0c-8ce1-b72765ef8b46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3edbc0d-6952-48ce-897e-31ca31fa30ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "507aa3b9-1dc3-4232-94d2-8f821c2ea3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8681ca8d-7a43-491d-9f72-15dabc3e3fd6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d504ad-28c1-4c10-88d2-7ecd43c7bd54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3bd2410-6b21-442e-a43a-1c0e0ee61697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "202a06c5-6ce1-4d06-b6f9-fac4ce21b7c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b534b244-a177-4559-939b-292609d155bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73008d33-823b-4c0d-93e2-9142868422f4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40512cec-0312-4514-a0f8-b4db2f580f77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc9f0187-abe1-4abc-82f7-b0a3689e1230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfe857b-f152-4e04-8584-5f51f42c9ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d36697d-5088-4560-a054-41d378c7d400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16bc1f3f-e1a2-4bc5-b5a0-2fb99597db54",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b59cd7-7ad9-457f-bf12-74ba597a498d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "440c35f9-d64d-43c1-a3ef-4a69ac1db55f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a63de4-a7ca-4228-ace3-6c1119afb257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a68cae28-7823-48b1-ac8b-02e630278f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8834337-0121-4044-823f-2a094684ff68",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a095d515-3d6e-4a6f-9523-2b805d38dc86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ccc066c-fded-4ff2-a16a-c95520157abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffebf25-be0a-48b6-b6f1-896e6d900347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "179186a0-c8fc-456c-9a35-5f67e063d5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe8bde3-bc66-47bd-83b7-5f0769f37aee",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79e9cfa-7270-4677-b87e-506abf70e292",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c394aa5-0b13-46ed-80ea-42796b780aeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f048018f-b72b-4e0d-8c20-298ed69d9399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff1cb0c-0b7f-4462-b278-60c69f601918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4d99ba-3d66-434a-a46c-c365a3c7bbcc",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b28ae6-e3ff-4ee5-97ea-3fcc02864615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c12586d2-8181-40e9-8268-f13492dcfe8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "331a78d6-29de-4831-ad22-969387b12872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7dde83-41f3-4b78-8656-c9a1f4777bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68834702-a65f-4dc3-972c-67f333931bdc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2e28ac-e217-40c1-b446-97b63da0e6a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19fd7556-6177-4287-a699-d73e929c03a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06df110-38f2-4fc8-9d69-3540582c78b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1588fcc1-87be-4fa7-afc5-cd1509d58167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0fd9909-bfa2-441b-9eba-467c4ffdd133",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c2cdfc-56ef-46e9-8558-26042cf9dfb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da4de90c-423c-4074-b529-cad48438bc5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be97b874-d77e-4797-9db2-2efc84f7d391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6adc131-4559-4c01-8bf6-2e57506aae4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb6230b-766c-4a81-b6aa-675e1d31779f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bf8249-7d86-49b1-9649-5f250afa2965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e659a3c4-b7c3-450a-8841-8a7e8915466c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5d6926-96f7-46a4-aa70-638a92ada860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f5321a0-f521-4150-b16f-2d3961074904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f63cc8-7c2f-4f78-9a1b-60044671ce0f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac8038b-45f9-4ddf-bb79-4751dae4eb9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb49d5f-6ee7-46dd-b9c3-407a35bf93e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c655d33f-ef80-40fa-bbb5-ff7755a7f3c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88fb32af-9a32-47e7-8d5c-9d65cfb1947b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8409192-3a5c-4e5e-bc99-871789b021f7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c971b194-2704-4c24-9ba7-31da0226e2c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eca3976-ecec-4623-aa39-b6e9de8e2562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "706587e0-9a3b-4d5a-a8cd-7e772deb4f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f52d764a-e490-4750-9ea4-266da1433e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ecd583-7a88-4097-8e3c-dbefec59670c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e6136d-fa90-4858-b358-6fa199bd3904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d975c827-e6e3-47c3-9496-0e57c8ef61d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dacce5f-bbd0-40b1-b747-a60b36590705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b336e83c-71d9-4f38-bfb5-b508050d1a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eee7721-793b-45aa-97e3-cef1f1fa4cba",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406da1d4-ffed-457e-9afb-2d3d91333a05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d7ce590-d558-4607-bd77-fcbf290e031d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "994dd82f-4500-43bc-b1c7-217da5d28f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02308bed-b585-4fa4-a214-71dbb4219d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0845c3f-cda7-45e5-9bce-285983757dc1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36779a53-4842-4fcc-8b99-d8a6e7659d5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e9b506c-fe46-4d0b-a265-46ab2eb374bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "742f5809-3a80-4974-a622-319036218789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "987eb8f9-a621-4df0-be9b-e7e3248f7b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db4a215-10a8-4e1e-9b28-ec52c66513b0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63685e13-ddc1-44c2-ad9a-f7173cccdd71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a955258-31b7-4d71-8151-3ecdc3a497d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a7a5cc-a0ed-425a-8d6e-bf9fa470ddb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569822f3-7cbe-4ee8-9713-5283faddf8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1500b3f-9813-4afb-897c-4e8b43775438",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019cee66-8d58-4bb2-a291-cebde1386ac7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c389ff6-762f-4c02-a3b5-20bd6c13dba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "399490da-4a3c-42ee-870f-092bcc4c7f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4017c1a9-6f62-4559-a46d-c4ac1219a883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20565e42-0176-4dfd-a28c-86d62dd89dd0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5802d17f-5eb0-4bcd-bbf4-e521f981a498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2206c1e3-19cb-4ef6-b9dd-9824e32dccf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb28962e-f6fc-41d0-9a66-c95a1e4f4859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c3768e4-36bf-4cac-9f0e-29f6b061c1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4c1fbd-df74-4c2b-a7cb-d9f736a2bf9a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57e6eec-6332-46ac-b3d2-07ab83c56dc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b393492-bb3a-4e74-8c68-a915d4c4eafd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8581bde-84e9-40f8-b4b1-34edbafdccc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69ecc190-b408-4861-9f64-2414ec5f6be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d85c95b-5b78-4c37-904e-201e8f721155",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59621be-3620-4596-9f0a-64c6efdcd367",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "868aa479-4c35-4bd6-8629-56d0115be4d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a454d2f3-2c09-4970-8f7d-787dd8404428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac61e258-f507-4249-82b1-d26e6fbe0abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8406aa65-4d85-4338-b1a5-ff23413dd4c7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1323d9eb-d538-4cdc-87e4-647f948b0311",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "881c639e-ffab-46a3-b8ca-9b8c467cae50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ad2fc9-4a97-4520-a32c-aac68e012255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3272bff7-22f9-457e-ae4d-9eb74ae49640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28df3235-2474-44f0-a8ca-29a161988a81",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb19150c-e61e-45e0-8ffc-5f6ec3d16947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0842d547-2f72-4f9b-a85c-a8fb0ecc7410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a0f75a-2dd5-4c33-95f5-f131fac70d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7e994c-8640-48eb-b064-61bc7346e6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4c549f-1b07-4f68-b339-ad69cc83c791",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5a7110-3869-4967-b6d7-8d75f3865105",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e214076-1e9d-4ead-9c87-9030650d7f58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "188a5019-4202-4791-8de9-b062443fed54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ceaaa25-4df0-4b12-8020-b33587960ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db11e28-6cc7-4b3b-967c-e044f8fbd77d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2df5f0b-09ad-47e9-9c48-2644487d973d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46fd1a23-2a3b-4bd1-b24c-22d9fd0b3eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc1221e-0e13-4c2b-ae32-efcb4fa98b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b22a88-0708-4ef8-afcd-88f6e63effca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc776bc5-2253-489c-9a16-28e1c25c9ac4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567c95dd-27f2-488d-aef1-f5a03cdd4ddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac4f40a4-3fe3-4f41-a979-52be5da03083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79b0c8b-153f-4d6f-811c-e7d15c842457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9e9880-cbff-4ed8-af9e-6ba350779426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427d8090-8c43-4468-b0f7-e87907aa9a4a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d494db8d-9410-441f-adbf-b5896f5b2bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e943c546-6a35-47a1-a60f-da3edbe0287d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a251d6-7abd-4cec-a505-4bdd9ebd9ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1732ada4-880d-474f-aa4e-516319f6b9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f95d0b-bf56-40b5-8338-5e44f826a764",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d00e0f2-c5cd-4d07-8c9c-1edc304e3bd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0a3288-0d91-4465-940b-f46f7e429d4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea772f58-c288-4e6a-b87a-e2e04993b9aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "643ad53c-47ec-45f4-8dc7-5b0266138a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e0fd63-9283-40e5-9a11-10b0c29fa1ca",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032f6a03-71cc-478d-ba5c-294d5cd91852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c7db9e2-2806-41e6-958a-fd3493fa10a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66099b89-9a4b-4237-b220-ed731d8aaece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6899571a-3c9b-4c72-ad7e-969db2514ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc40ead-05d4-480c-bc11-5cfc3b949d94",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796eab64-a5d0-4366-be85-84f065bc1995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b6201c-5791-48aa-a0d0-37b49699df75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ff06f5-0563-4108-be7d-ca9d78d8aa88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c068ea76-4a2c-466b-bd11-3d57adde92ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ba72ba-e238-4798-82e9-a2bd4fd8f253",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7023028d-4f52-4002-a1e7-650497ab378f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f68a551-967b-476f-bf62-1a1622112215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c57ac1-85b2-4f10-b5f5-96b96d3d97cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a261a9-6271-4dd3-b09b-778717f527bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043146f6-fbe5-4b6d-93c0-520bac597588",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f053d8-05a9-4650-88db-5311165808f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b342b7fc-596a-476a-8a3c-5b2395fee8f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff73aee-1221-429c-b3ee-8d64fbf0186a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53769fad-f137-4c15-98f0-fdd60b7e91f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7408bc8f-bc49-4bdc-9fc5-635e3d6c3640",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a48be1-e4ae-4622-bce8-46d4cabd6200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eed8eab-f942-4977-ae97-bcb4e3dee4dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f95fd96-1a72-4144-907d-a24c4fef0750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd9bc345-2636-449e-b71e-f1528ef8cefb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0a7e84-6385-476b-ab87-9da1136c0238",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d1d2ac-ebe1-4d3a-984f-ec128efec2f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b67b123-11f1-4f6b-8eb1-263e516e8504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fb1a13-8c2c-4a0e-9ad4-e6ade619888e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9fa7b0b-096e-4161-beda-c0178329e3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a8a1a5-6432-43df-ab39-895e644ff83e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e64ea0-51ea-453b-9c88-b539235a03e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56b86b3d-d92f-49f1-a934-493101be3214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77708c76-0f5b-4c0c-87a0-b3e304b5d0e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be03021-3f29-42d0-ae93-36b6b4292f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71d053d-7055-4d6a-8e33-edb76aa74b5e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7d828c-bfca-4376-8ebd-94100a2fc772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1221ce14-f998-44bb-bda1-880b7f96de56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "286dd8c5-c9d0-4e51-bee2-cc831301f7ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76bcecb5-246f-4a3a-bd22-761d1f3a1293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ae6f83-f065-489c-8ef6-4b123ba2b5f2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7fb270-64a5-4e86-8a54-ce5d2047262f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd91f5d-1781-4c88-9d53-295926f71345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6dfec1-320d-4fa6-98f5-4b7263edbeb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceabfa0c-6b2f-4c4d-b979-e5b5563d4ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be25751-761f-4965-9d81-7e6e845decb8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004aeb08-f907-4133-8390-e23b7df89933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b84f86-05aa-4b50-afc5-96c3d65a7223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0c376b-27ae-4ca1-aaa6-1babf5fa35e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58dd415a-80cf-494a-8e54-0d3a0d26208e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b64327-cdf0-4c04-80d7-3ca08ef37d4c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4ead5d-7202-4937-a86a-b3c7b0ce1c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "320b9a9b-e8bd-4dde-9869-a49a1571f0af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c5c4a1-b1f7-4972-9067-31f013f83fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aac5584-9a6b-43c7-b5a8-9d44b55764c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0490b1-bc6e-4da8-b3a0-68625b1a325b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed709a6e-8d15-4be5-9ac9-d6ec381c6fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03df6f75-120f-45d7-9507-48c011bf3e32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffee71a-44a1-448d-8cbb-27acd7158f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b2553e-3ca8-447a-bafe-f1c1ce68ff5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82b06ac-aa46-47c5-934f-97fe63552d7b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b69338-50d1-42a7-b1c6-f24505ffdb11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91cce209-9f86-4c96-b66d-f7b3b44c9c78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fe88fe-e197-459a-b7a1-380930bab5ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36fefacf-f7d1-40bc-9596-26f46ef169ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42dcd8ff-dccd-4ea7-ba64-92bc1f3dee6e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be87f2a8-5f6b-469b-aa7b-759b4231082b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ed826c-39d7-4e06-be5b-9f13bb95190a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00657210-8f14-407d-bddc-1786db047ad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27afa852-8cba-4088-8cea-681e4e0de468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f774ff-1cad-48b5-8e4b-05a903102ca1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d51850e-82ed-418e-a112-8bbccb8b12eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ed7203-9c9b-4a08-abc4-631e8bf0f429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a5d5f3-3cca-40e4-a8dc-e2e6dab5afa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f154fd-6ce8-4acc-9c2b-c51267fdcada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9469c04e-fb15-42f7-b9c7-998df8855d13",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709d92a2-bf98-4528-846c-9c0eb337e60f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446a6509-b571-4160-b352-5d3295de48f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5e078c-f86c-463c-9284-64813566b105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4330a73-c156-4a2c-8e55-25d76f0d40f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8276f025-9bb2-4902-97b6-14b1fa3ab666",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fa18d9-f749-4725-ab92-6c19acf668eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e8db12-d682-466e-b5c3-8f1e3628ba9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "577dc657-5bcb-4ef6-919c-27af8a2457ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9c522e-fcb3-4222-ac97-ee3c74d0772f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd5fac6-889e-4b4d-8b57-2408ecdd3b77",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2143acf7-e0f5-49bc-860e-8737465b4c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c581548-79c4-4ea8-8cde-95a7e88d13ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd910a5d-3f76-443c-98f1-40263cd5f3b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26cbbcbf-c6d2-4fe9-951f-fc478eacd0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23271b5e-fb21-4759-b2e9-b84cd9723760",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82f7616-cdac-4cdf-9db1-1201272dcb3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3718e2e2-e73c-4b18-afe7-2c1bcab54617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c539cb3-0709-4ce6-8264-aa45d18f7dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ddd2253-3676-4ea1-b0af-3470ddaccdb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9df0038-afb9-4f84-bddd-c85b7527637c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e278402-bc59-4147-9a40-d15024dc367c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf323aca-0a8d-4bcb-8316-b775fc371dcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25808cdc-34f4-4bad-931a-676e25202386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d42339e-ead0-428e-b03f-8d95da0f0976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b73c14-07a8-45b9-90df-d8830fc1b4ed",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbfa6c0-7783-4b6b-bdf2-0c7ec321d2c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0adff11d-4d24-4b4a-b0ac-d849b5daf483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "616a63ee-32f0-4050-a6da-267cd5eae41c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c390e261-c870-4541-bd6f-f33d28e4744f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fafdd57-1c8f-4928-9bc9-faf71eaf954f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bfd6061-8a76-48e8-a06a-0f1107cf5a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6bfeacf-7184-43a4-8ea4-3f3de4f40cf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c4883b-02cc-4a27-80f3-3124fb2c559c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e454690a-1b08-4432-93cc-237be70c3dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a32ac94-d6e5-42b4-bb6b-cf24df76190d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b02189-9002-418c-adb4-132566cc5bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9118d4c1-c4cf-4957-9f60-4e396dcdcbac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae84185-adfb-4bca-8952-3ca3bb7590a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9be259e-a727-4cf2-9d58-d05f25350f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c06864-7525-42d5-8922-0bcddf801de2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79927694-3075-47df-81ad-176ec7468bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb28b27-f29d-45cb-8fa1-0110c0552819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beef2561-2451-4693-b778-89e8b9efedaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f093773b-1846-4648-8ed6-c03ff217a759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6582c7b5-3617-42f1-a042-c4a2abe36830",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ed4ed0-2801-499b-8a9c-70b0e069c9ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9f64b2-d10c-4ec1-97bd-c6142403fa69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd6bf23-b611-4dc0-bdb1-7705b74c71f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ee5b4f-e158-4d31-b343-b5d79d7befb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2349230c-6ff6-4fb9-ac26-8e52163c6ea7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5c66df-9fb6-437d-935f-8f7ac8ca4719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d444253e-4932-4489-80bd-33c8d4ad412b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df686f20-b615-494b-9527-33e28034c593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f5347a-cd41-49f0-a660-556977275104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d9d9d2-f591-4aed-991d-75a32928bb95",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fa3bf8-bc77-4a58-8cab-8726fa8f589b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aeca322-315d-46fb-9ec7-5e867daf9553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4170d8d4-6c18-43c0-9cfc-85839c5709f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b5a9ec7-56c9-4f4d-956f-21802f7dcd5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3521af07-6048-409c-a441-19fa9016f44e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b74b9cb-4d5b-438e-9cd6-357e594b3451",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ab3a56f-688f-435a-82cd-18ae97fb04f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a96d889-eb60-418b-8dba-a686364d1b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cab86ff-36a7-4535-8d85-482b63faba4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a158624b-3d0d-4b83-87a4-c8638735041a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a6257a-17e8-4cfb-b2c2-d857c7dd4a2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3b60944-c9b5-4f93-a323-4c476671414f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39104d1c-7f7a-4ff0-af98-99f545a5b03c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b46fc5-3db6-441c-972b-2ca0d0abc68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32a8b32-fdec-4e46-ac1f-061fb0231382",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a714d7-311d-4e26-9f1d-4ae01ed2dae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abb65299-8af8-47b6-bed6-753dce9afe28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54aedb29-70e4-4814-8b4d-94cc900b4b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c17b6d-6afd-4220-8168-e126d0a0a644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2785bb9e-e04e-4f23-8e37-1fa7759fa6f5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36c661a-80ac-411c-bdb5-7f6d8cbd0aa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0f47081-d1fa-4c6c-9ed5-38e223a00fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f9300c-b622-4afc-829d-2f8911b68385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374393d4-770e-4fa2-b3cb-43bc3615b134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a1fac9-3981-4ced-a851-b15bf5f79fb0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f499512b-c4af-4713-b1f3-2ede43114eca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27157250-322d-4fbf-8840-58c1f71b6b0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6bebe1-c0f3-4740-9336-a8e982ee621b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c09e454-f222-4f23-a00e-ab182822ebc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33406f8c-535f-4bc7-bfbb-05019e254d3e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7f34f3-247f-44ec-89dd-89da5017886d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69730fbf-7c8d-497a-8160-d6deff3a4b2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0fedc8-806b-4c7c-89aa-697d41d54099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff344e8-ba9e-44a2-aa38-80276397886b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668fa228-94af-4af5-850a-cc6c596d6e04",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47b7684-e8d1-4654-ab4c-6ad6877aaa65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac569533-7adb-431e-bcfb-8109288899ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5764b801-e7b8-4f2c-b905-73bab00e12a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a7fb7d0-5d14-4287-92d8-f68edccbe3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8917e85-5e41-4fa3-b3df-1a089af90ffb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a987f8-ffe5-47c5-b2bf-73ee0d7448f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49a67b02-c858-4c4f-b6a4-7335904d779a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a8ec78-9993-4081-9dcb-d4d36a2f3aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12cc61b8-55e7-4530-93df-01d536ee2350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a405a851-4e70-4c33-8b96-84f1d7dbbc68",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267403d4-2d75-47da-9b3b-e79670fb1b0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "466f5743-6665-4e1d-a289-d5c2a1ada379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "520baf66-51a1-4efd-9763-285f111c49e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13dcdd31-d6b9-429b-99bd-4e01e1f36921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8062678-19f7-49db-9b7f-20706455184a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ec2899-69f3-4984-9af7-dd554d40a5c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dea562d4-9c2c-42f1-b1ec-9212b0076e14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf23b6f6-54f8-4b96-a940-c5a71bde9314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9537b45-5382-4642-9fd1-39745df40b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d7234e-86ef-49ce-a107-2c44e912ac2d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e635bc2b-5a82-4e72-bb84-8224baee7522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9762a225-59ac-4132-ac57-88b36bfb325e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf79c41-6881-44f2-9bc5-307bf7b86657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e9b69ae-82b2-4e20-9ff6-b1b313638921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48101476-08e2-4d29-bb05-bbd2360084af",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c14e30a-beaf-4b73-ae19-f9ed07c09d63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc7444c2-3c2f-4537-b20f-3543d2800efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ccc869-312a-4075-b0c1-120a61f1a948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c12344-8bfa-4444-aeb4-cf943c06352e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56005ce8-adc3-4985-8722-975a5429d027",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdef57ab-deb0-4955-a49c-c8bbd64b2768",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "830b09bf-cf06-4357-825e-7c828b602a1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8261ad5-f505-4261-bd50-e3e8843867b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32f65a16-5366-43d1-a083-f33a98f94b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88807fa6-aef1-4aae-a267-03d984502e6b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a06e104-bfae-4570-bed2-905e625fb328",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40c0eefe-6365-4ceb-b76d-9bf570a2f885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "010bd837-6296-4eae-acf4-7e8588d28d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8abdb946-03b7-424f-86b8-3a7095d2f8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd09ef8-c89b-4195-8ee0-076bd0eb8eb6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00dbe13-a84e-4d44-8d80-71987afe0a4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57882319-fcb0-482e-a0fa-324f18fc536a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f9534a-1149-4852-b200-8fa4ed923e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37f07c0-9a84-4780-bbf0-d8c9f4f6dcef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b39fa1f-378b-42b3-917c-ecc596d9f7e4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9bced1e-f6e3-42af-8850-dd9a942ecd40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4831eae7-c75b-4188-aa59-aac877ee8f5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "542b0ece-2c01-42b6-8226-f25cfa1750c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc207c82-734b-429d-b764-7c964c37ce9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6aa2cc-f23b-4b57-a3be-1d52c23de929",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6845986c-7737-4c5a-91db-513238f24f5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4220882-06a7-434b-90c4-5d8392c213f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7bfca3-27ac-4659-b036-0d1ce410849f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07428e98-d14d-454c-a4b1-8f883df4bac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001aef27-f252-4ea8-81de-87a0ef27c89d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f2559f-607c-42b2-9d9a-6d77c79d001d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52663566-95be-4ac3-9b1c-65cdc0cb5c88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9beef9a7-e2d1-4c8b-92d4-1591c436cfd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c00bb7c-db12-4a83-8d53-2dff32d8a9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c427a9-68ba-475f-9fc1-6e7326e88972",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac29134a-4974-4e0a-a3b1-f8fc9fed0441",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b827883e-b4af-4af0-8f43-171db0da1775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c62fccd-4cb0-4c62-bc46-93d1237dc92d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e8e6cd7-2f63-43da-9424-6a7b95803572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d8a49b-a299-4f87-9e15-77694bd4c53b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637eb087-dfd2-4401-a07e-cf86458ba0fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d447a8ef-bdda-4b38-9835-858b0977b149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b98064-f07f-4b15-8956-b12f6828a228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f881f870-0b97-4d61-b77d-4ddd06f2f9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1212dbd7-afcd-4909-bd96-179de7b57d50",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676f3eee-7081-42b2-891d-bbb5fe2df55c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e6e5e73-4369-40c3-8bfb-b59580bd161c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54999b60-ea1e-4002-8c7b-19163d5fa897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee109506-653f-46de-90ab-cfdf74c435a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef61e123-0efc-4b6e-a838-0a975090d721",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92ced67-144d-4688-9ee3-9942ec3266cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1f9da44-45a7-4615-b1ce-541c75733e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e9d7a0-fa2d-4417-b4d3-156b0dcdb230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c86ef2d-e36f-43bc-bbe0-9a573ecba499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e734733-3800-4023-850c-40ab03b85edf",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b016bab0-2db1-4e38-b230-3d6fbe2fea53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5432deb2-8e43-4384-a9bc-031aaf823f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d54e47-6115-46a5-9bb8-6b59e9a67437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57697cf1-e323-48d0-9805-5c235240f7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f93555c-45dd-4aa4-9a20-cd65e13a1f62",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb43e25-8493-4f4d-9321-1220c3e2df23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2169e8ff-c18f-44ac-8690-d222971ace46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b22c454-82c6-4bae-87b8-73baa837eff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae0b8ac-def2-4eb8-b26b-e26652b1effb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9e1cdb-735c-47cc-b331-99e55529d90a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529ac19d-e3f8-4feb-a657-81654bb2d4a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72656b6f-f204-40cb-b804-a4a373893c76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67b3adb-8ed9-4c45-8eff-97e84126a3a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3585840-0666-4157-8d5e-4432555760c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d30db21-1c87-454d-b9c3-9ae2c225283d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c41aad-5151-4c23-9979-cd6632ca12da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3263e6f-e659-4c19-893d-41ff7d4f4ce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab2240a-4328-414b-8afb-9dcffad3a847",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "679f297b-40fd-4b70-ba85-40b70fbc44ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0450c35f-b219-480b-9b65-2d943681c525",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbcfaf4-f507-4da4-a07c-654f418f6033",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cd4bbf9-807e-48c9-a002-66e98cdae901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d793476-3dcd-4709-8d79-03758927a2b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef6ad6d-eab1-45be-9d3b-82d3afa1c9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5bc831f-8b4d-4cff-a876-70c85e63a3b5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83df878-4906-48a0-9cc4-2e7fc324692d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94737fb7-3773-47e4-bd72-554a50859398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6f67b1-d61d-410f-a226-eb4e8e957d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2280ef2-7372-44a2-af72-ef88b2e2a8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa92438-afd1-4669-b639-b5bebf83ec16",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14870b21-cc45-45ac-bc1d-bf17db00c674",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d1b24a0-3784-4bd5-993e-f046c06ddfc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ca976c-ef33-4fd5-8844-ceaebf46a9bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5796b1a-9486-4e32-91d4-bcf27ad5583a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838e6e67-1cf1-45aa-bb4d-eaa35e0b65e4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cecee7a-4713-4d57-933e-494d35956e87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99c848c0-a784-4e82-a551-d112282ac1cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d52b6f0-dea7-4aec-b6e8-b0caaf11881d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f773a6c-56b1-49f4-98fa-edd19a48b77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80487754-598e-4c18-bd3c-bc2dde99c2b2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa6edc4-6577-409d-9481-5dffacb41acf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4461ce8a-f1d0-46e5-a14f-cafb48423ae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "857128eb-f9a5-4639-8675-6ccee3c6d50c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea200939-8f1f-41a5-bb6c-f76dbeb58783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ba02b5-2093-41d3-8be6-ac299cd17c1e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1af8968-c9ab-4ce4-b41f-ed015d9e8b99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cbd7c6c-945e-44cf-a055-7cd5d2a0e66f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b28ffb7-3d4e-49e9-bb81-9d2350a79340",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628cf5b9-166d-44a9-ba69-f9b0e5e4a74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d983b17c-c2d2-4983-8d93-2b5f3f040525",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba89cbf-5d49-46fa-8a12-cfabf2668196",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03f1475d-d1d4-40de-b9b6-4fd6bbc21f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "738b99db-eded-40cb-9f79-0b035ba792aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "208e8f0c-6e51-4d0a-be56-0768b7416b1a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd8f099d-08f6-4bd6-a15a-7908383bfe47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98894769-b7f0-436f-92a5-0c410c26a9d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "88a30143-907e-482f-aa53-da65b9e5bdf9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b5d0e06b-c771-442f-bfa2-d71496516389"
                    }
                  }
                ]
              },
              {
                "id": "bb85215a-248f-4e95-8ee8-1989c9b8f645",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2c01e1c0-d828-47b9-8d84-5eeada27e7d8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177fe34d-42f6-4db8-8142-90ca37b4d98c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9ab1a400-7036-4991-90d2-d9fd31c81dd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5e56a5-2eb4-470d-9415-eea9e5f0bd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3f51ea2-2b7c-4ccf-ada8-cbb5b8ce0660"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ce7ea94-f5d0-408a-848a-bab9053fb12f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c50193ba-a22c-43dd-a4d1-d7ae71827fa7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "539bc77d-27d6-43c5-b51a-0d58d3e3b260",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6da46b6-8c5a-4a62-881f-4fc23080005c"
                    }
                  }
                ]
              },
              {
                "id": "578554d3-c13a-4c33-80f7-3469a744021c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9590ae23-39ac-468e-91ed-598aa385502e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6fc17c-cdfe-41d2-9c27-bf361eaa6759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9a0039b2-9c73-4993-9837-e4e714a4dd7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943fe523-cef3-4239-9ef5-4e9d076efe20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2571bc97-2802-4f92-ada0-2e2eb3d04b98"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "69352376-b94e-4d3d-982d-530fef370837",
            "name": "Positive Testing",
            "item": [
              {
                "id": "068ef594-588b-4087-bcb4-8c96de45c36a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "363b2d27-18bf-4f5b-a34c-ef1bcee2c618",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8b64dd05-7209-4ceb-9b2c-366dd9b0488a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f32188fc-a840-4e55-87c8-46a9c3888862",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d98968bc-e422-4d59-9d1a-92577ca33468"
                    }
                  }
                ]
              },
              {
                "id": "a330bbf0-0655-4143-9e98-21098b4cf4a5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d10c360-9a50-4b16-8c6e-d113adc7700a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3fc2da75-5d01-4417-9ab0-74c3108eee12"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "239ae87e-6caf-440f-8cdb-d0c50c901876",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52108402-d09b-441a-87dc-af0b08db69d9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c5f07b9-9f6d-44a0-a6dc-6a37d61e8c80",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8a254f21-15bb-4282-a729-9b055e4a8537"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3517034-c333-4e63-91f1-6087c309b253",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "433ebe4a-18bf-4249-99a3-704cc9cf0c3b"
            }
          }
        ]
      },
      {
        "id": "d5b2a975-0647-412b-85d9-33f17455c9f5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "31966bda-4a8e-447d-9690-4ed49af14122",
            "name": "Negative Testing",
            "item": [
              {
                "id": "71aa222d-e850-4ddd-a10e-7356de183920",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "212f1821-b639-4f9e-863c-abf6ad2e1595",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565dbcf7-9df8-4df9-8f5d-d2ff190e482f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7b5f5cb2-7483-4b0c-8fbd-330fc6904a91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d3e28c-e528-493c-bc34-34d502c10cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc25eb00-14b4-47f2-a002-4ce90b90e5be"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e1867d9-4d0a-4d81-bb46-de6e1f5bb005",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abb55444-c5ac-440a-b68b-2fbe8214a869"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "048887fd-1a9f-451b-87b5-ae439e78b0ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a358cd9b-3fe4-43cf-afb1-f79dc4945dca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56528e5e-083c-4d3d-a764-a13a053c1eec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b02fe1ca-e496-424e-a472-107ef26cd090"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99389b5b-9aef-487c-9aca-ef393ed949a9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7814eb80-5b14-4373-b198-b0cb6cc9baa0"
            }
          }
        ]
      },
      {
        "id": "dd9ca37c-9058-4c68-b552-8de43e2305ad",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "09ddc79f-19b3-40c4-92f7-cd89ab9140b1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "683236ac-62ff-474a-a5d9-d9d4938eb3ce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b674549-2727-4388-8c3d-7bb9dc72bf8d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd57e74c-ea69-4e4c-9ee8-bc8396af56d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e97bd7f-14b2-45ab-ac95-9f4e600f27e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb6c0e4-6913-456b-be8b-643c55d3348c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1cbfcc2d-8486-4d5c-a273-eb7b0162f768"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2067f92-1f30-46d3-bf81-495593237ba7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86ae85e6-17ec-4613-a553-02178436afd9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "70f8a645-beed-40c1-9937-7ec27a4db23a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "641b1cef-8e31-4440-a24b-50c4d9fcf522"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73af6247-8253-4e2f-abde-ebbb7216d5ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ee69cbb8-a959-407b-97e1-193f0beff0a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1c8929c-1863-4fff-b0a7-fe4d95e7e1ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ae6fa783-265a-460e-8e79-8bfe1befadf8"
            }
          }
        ]
      },
      {
        "id": "ffcdd65a-0383-4de1-ba36-f95a0463254e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "49b0518c-d17d-4047-93a1-dc0807aa967d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d21784fc-c97f-4225-b20e-c225572888f0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ca9debb-df62-43f0-99ba-d839014e2753",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc237df-e16b-42c5-bb38-4445e989ee00",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4293160c-b539-4206-8fc9-a62214e31d27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05e48e5-a871-4dc9-ba26-d7b925f8a1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f340fd27-5467-41e6-a350-97839dfdff63"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb3de879-5d28-4fd4-ae47-2254228e8bf4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6e70301-5c2f-4acd-8697-0b572ced5d70"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "54892962-1eb7-4695-9b7c-87d702fe9359",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b0b5b3b-5761-43a6-b5af-314ae09a5605"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae812aae-7091-4407-9938-15d8138f63a1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c95a7880-87da-43e0-ace8-82a56026e623"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18a5a7c7-92a1-4806-93dc-f3e34d3ce83b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cb4cc3c2-7114-43d2-af58-1b97a9113d69"
            }
          }
        ]
      },
      {
        "id": "406dafa3-2a96-40c8-8840-11f83467ad48",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3aebe228-d154-462e-ba5b-a9f06497d8d8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08e3a726-0da9-4eb2-ae82-adfe3db18a74",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "72a20b04-4cfc-45e6-b477-d277b966d3d8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4faf7a4-0b16-479f-9bf4-6fbe1edd3d1c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4795064-b848-4e00-8a98-80b42cceda13",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 69.50396825396822,
      "responseMin": 7,
      "responseMax": 358,
      "responseSd": 27.04002001969783,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720053538575,
      "completed": 1720053564131
    },
    "executions": [
      {
        "id": "ab2df08d-c818-4215-8503-3ac6e67c1583",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c47bd163-1904-410e-9a99-2e6be8a363f8",
          "httpRequestId": "5848fa1f-88c4-4fd4-b944-adae78abd8a5"
        },
        "item": {
          "id": "ab2df08d-c818-4215-8503-3ac6e67c1583",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "98dd9ebf-930f-4214-93e7-9f1728213a2f",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "a69a4395-aff0-43db-8263-0266b171dcda",
        "cursor": {
          "ref": "a8ade53b-1673-44c6-8923-187157413f0c",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ccb3c132-7e2b-4f04-8556-b40e1057dd44"
        },
        "item": {
          "id": "a69a4395-aff0-43db-8263-0266b171dcda",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "dae8c79e-fd53-4d12-bd48-f5d3753ced65",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "4c49e8e2-09ea-4e36-b6ac-013591e067bb",
        "cursor": {
          "ref": "3cae62f1-60f2-42fa-99ae-a73ff3f52e17",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d5d4235b-c212-43f6-ac13-4fcd14ce2e54"
        },
        "item": {
          "id": "4c49e8e2-09ea-4e36-b6ac-013591e067bb",
          "name": "did_json"
        },
        "response": {
          "id": "cec57b30-d36b-4040-aa82-6001c776e13d",
          "status": "OK",
          "code": 200,
          "responseTime": 222,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66821cda-0047-4839-804e-b61890ded9e9",
        "cursor": {
          "ref": "82b25e42-f986-4e87-9e15-004076e0cbaf",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2397917d-b5af-428e-a2c6-8d9a36b82d76"
        },
        "item": {
          "id": "66821cda-0047-4839-804e-b61890ded9e9",
          "name": "did:invalid"
        },
        "response": {
          "id": "f3f33324-c65b-4945-aa24-b4537214c1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66821cda-0047-4839-804e-b61890ded9e9",
        "cursor": {
          "ref": "82b25e42-f986-4e87-9e15-004076e0cbaf",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2397917d-b5af-428e-a2c6-8d9a36b82d76"
        },
        "item": {
          "id": "66821cda-0047-4839-804e-b61890ded9e9",
          "name": "did:invalid"
        },
        "response": {
          "id": "f3f33324-c65b-4945-aa24-b4537214c1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9408caa9-ede2-42d5-aa67-8c6d2b365161",
        "cursor": {
          "ref": "be7bec8c-847b-49dc-bcef-75f255a65ad5",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "baaac564-9d2d-41e7-881c-ac11a4793fe4"
        },
        "item": {
          "id": "9408caa9-ede2-42d5-aa67-8c6d2b365161",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d64c4868-cd87-4859-84bb-b33b952d9768",
          "status": "Not Found",
          "code": 404,
          "responseTime": 229,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896f7c6a-8a4f-4253-9854-c282bb9e38a6",
        "cursor": {
          "ref": "1bd2371c-8b84-4466-a54d-a1ad4d753946",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e625759b-8898-4150-8076-381dcbbb6d9a"
        },
        "item": {
          "id": "896f7c6a-8a4f-4253-9854-c282bb9e38a6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "63c4f756-7bb1-41d5-84e5-f2327a473e09",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf00d3c-6df0-43f2-bba5-a04071467253",
        "cursor": {
          "ref": "647e3c91-f50b-49c3-af44-3f71086e4857",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3a22b8fe-e420-42ee-bd03-c8b038419bd2"
        },
        "item": {
          "id": "edf00d3c-6df0-43f2-bba5-a04071467253",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9b057862-7856-492d-94fe-056850079ed5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a325c4-3d6f-48f7-b4ad-afaac51b9f8e",
        "cursor": {
          "ref": "6a9408a6-ac35-492b-8596-24c1c1a961bd",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "64baa43b-a0b1-4c43-afb8-b6409487e753"
        },
        "item": {
          "id": "39a325c4-3d6f-48f7-b4ad-afaac51b9f8e",
          "name": "identifiers"
        },
        "response": {
          "id": "fe55ee72-2991-4e5d-8dcb-b6ddaa7dbcf3",
          "status": "OK",
          "code": 200,
          "responseTime": 278,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9862332-7e86-433b-99ed-1e79a5ea2e87",
        "cursor": {
          "ref": "446bba87-b92d-47d0-84e1-b09339cc1c56",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "816843da-a4c9-4d30-9ddd-e7d7db56b9c8"
        },
        "item": {
          "id": "b9862332-7e86-433b-99ed-1e79a5ea2e87",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "47a9a911-6a71-4f3a-98ca-6b5b7486b372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17849cb-3794-42a1-9066-354692f819fc",
        "cursor": {
          "ref": "9994d09d-e80b-4bc9-9749-80c56d07b46e",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "89438965-6ba1-4a1d-88ac-335921a86345"
        },
        "item": {
          "id": "e17849cb-3794-42a1-9066-354692f819fc",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "38a14571-bf90-49b5-8f33-e71406d65324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606db415-8015-4f2c-a745-81c5a6e7259b",
        "cursor": {
          "ref": "5ec1b793-8bdc-41fe-b27f-07723e13ed31",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3e60c923-c184-4d1c-8ec6-e581a1c3c711"
        },
        "item": {
          "id": "606db415-8015-4f2c-a745-81c5a6e7259b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2d3ec6b5-b209-4f01-8429-0d394337723c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e2ade5-464a-46ca-9073-51222ae66aec",
        "cursor": {
          "ref": "a82e8e6d-907e-46f8-9ca1-3e960ae2157f",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "386af756-55e4-4d83-a9b2-5b983bd617a3"
        },
        "item": {
          "id": "66e2ade5-464a-46ca-9073-51222ae66aec",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "57f3ee37-faf6-456f-8342-37385e634f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec659d95-bd46-4f19-a7d5-749a6f7b5bb5",
        "cursor": {
          "ref": "d7036d14-a9ae-4577-8341-0a75baad24ab",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "437c742a-f085-4b1a-8f3d-ff12dd9ddc36"
        },
        "item": {
          "id": "ec659d95-bd46-4f19-a7d5-749a6f7b5bb5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "84764b51-9c05-4154-a603-348b592ff851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf94f5ff-8b77-4c56-911b-311f06bf3624",
        "cursor": {
          "ref": "7faf4896-d665-4f2e-9ddc-a03114500a9d",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4cd74a37-e4b9-4857-9d4c-bff2133bf50c"
        },
        "item": {
          "id": "bf94f5ff-8b77-4c56-911b-311f06bf3624",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "921cde18-667b-48a1-bc9a-2fc8c071233a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9998ce-ea6c-4b7b-9aa1-b02a0a03b03d",
        "cursor": {
          "ref": "845d6696-6846-479c-8641-04485c129ef8",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1efb9452-9831-4458-ba99-f96f47f5d869"
        },
        "item": {
          "id": "ed9998ce-ea6c-4b7b-9aa1-b02a0a03b03d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8d0e2eaa-d9d3-46f3-9086-a63ed8c861ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5b9973-753d-4279-82b9-29617522a4ca",
        "cursor": {
          "ref": "4c3c55de-02bf-46ef-addc-673c10309f53",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e6edfcbd-be64-48b6-adfb-26cf863da68a"
        },
        "item": {
          "id": "ba5b9973-753d-4279-82b9-29617522a4ca",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fb50b067-c41c-474e-b0e8-ac7bc7104670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5bf58b-0b7c-4378-a8ef-0fcfc5d454ab",
        "cursor": {
          "ref": "451f1545-79e2-4651-94a7-c6c1eebb1dfb",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f2dd5070-2e0e-43d3-a8e6-6d84e515db77"
        },
        "item": {
          "id": "bf5bf58b-0b7c-4378-a8ef-0fcfc5d454ab",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8e17b936-8d69-43b8-8884-a743f3cb8b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3088b753-0813-4d0a-b89e-7ed62d91b518",
        "cursor": {
          "ref": "4c420d1a-6a6c-4129-b90c-13bf8689c6bf",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5e8e27be-dd15-4d3e-afad-b1fa5a9e754e"
        },
        "item": {
          "id": "3088b753-0813-4d0a-b89e-7ed62d91b518",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "db7d8d43-ed87-4516-a6d2-ba68e7cfab59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b88dcde-810f-4ee1-bc7f-1ae1d90ecd25",
        "cursor": {
          "ref": "eb804d9f-1d9d-4bbe-b050-c60e232d4440",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4adbb635-b605-472f-8ed7-36ced010a09e"
        },
        "item": {
          "id": "8b88dcde-810f-4ee1-bc7f-1ae1d90ecd25",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "96effc56-ad69-4b88-9714-7402863bc9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb53b100-e3a9-4c44-a8a7-264dff222290",
        "cursor": {
          "ref": "a28b462f-bf05-4d1e-8694-bf63530403f6",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "acca0254-ed17-4c23-bbc1-dc40efe8bf2d"
        },
        "item": {
          "id": "bb53b100-e3a9-4c44-a8a7-264dff222290",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c0e152a9-052e-4d7d-913c-78b88b04cc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d30a77-d471-420a-93d4-c81c355918b5",
        "cursor": {
          "ref": "7914fd68-8874-4ea8-bbdf-b777818d8e03",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "01044448-5869-4869-9c99-7e5c5dee21da"
        },
        "item": {
          "id": "e0d30a77-d471-420a-93d4-c81c355918b5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "88437bd1-9340-47e5-b5e8-cf5eec143112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e83e71-9d42-4da1-b1f2-98c39574d400",
        "cursor": {
          "ref": "55eab7e4-6ac6-4cdd-bdab-7588bfd2f293",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a9e38e5a-2ea5-4dbd-8f0e-c3052a93465e"
        },
        "item": {
          "id": "76e83e71-9d42-4da1-b1f2-98c39574d400",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b31df0b0-07cd-4139-9e0e-1c063ad8c584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f00a24-d2ce-4643-9801-edb04ee93e70",
        "cursor": {
          "ref": "a9dbcf4b-a0b6-4a9d-b7b6-72e04e2413f0",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1632a205-f46d-4879-a789-b8a6ef043bd3"
        },
        "item": {
          "id": "71f00a24-d2ce-4643-9801-edb04ee93e70",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4722c5bc-1a0b-4192-bbe6-1f47e0628750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77292b07-0580-4ce9-8078-74d16cc49ba8",
        "cursor": {
          "ref": "167d6a3b-de3b-4474-9733-6426b1d24839",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7c35cbce-e79d-4c1c-a961-0c3a5a7f3540"
        },
        "item": {
          "id": "77292b07-0580-4ce9-8078-74d16cc49ba8",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b17c8300-8b2c-4040-bdc7-e31c5eaf0a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a547f3d8-6313-491f-8006-ed7ee3d542b8",
        "cursor": {
          "ref": "e4e9d771-0694-4910-8b88-21e6ff8a9e82",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4170212c-fb1e-4130-936d-8c740bf3ca53"
        },
        "item": {
          "id": "a547f3d8-6313-491f-8006-ed7ee3d542b8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "fe838c60-d76a-4005-a029-0786124e7033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c2e216-4ae2-4c72-9a6a-9a198aa0885c",
        "cursor": {
          "ref": "160d182a-02ba-46c1-a7d7-f9c2a3ff4f20",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7075b642-1754-430f-92a3-58db66dc8699"
        },
        "item": {
          "id": "30c2e216-4ae2-4c72-9a6a-9a198aa0885c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "35952904-d717-43ed-a240-f282ae4f25fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff5ce63-2d47-4cb7-8318-1c9da9c23ab1",
        "cursor": {
          "ref": "2db28f89-8021-40c1-91a6-7dc7bcba8d65",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6b90a06a-e934-408a-aee8-739b75b3d8ea"
        },
        "item": {
          "id": "9ff5ce63-2d47-4cb7-8318-1c9da9c23ab1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f998752c-e077-4da2-b07a-85dac26043e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0bddece-e568-44b5-b8ae-8cef6198ff87",
        "cursor": {
          "ref": "802e5b35-5b47-4919-b567-6d858353125a",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c1f9daac-f26f-4f8f-90d5-158c46604da6"
        },
        "item": {
          "id": "c0bddece-e568-44b5-b8ae-8cef6198ff87",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6fafa9db-07ca-4660-91d6-8a7ac320c4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acefda7f-715f-4c99-b7bd-410e7542360d",
        "cursor": {
          "ref": "af16773c-ed84-4d82-a0e7-40150aee5476",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "edd27ee6-a965-4139-8488-803989642a38"
        },
        "item": {
          "id": "acefda7f-715f-4c99-b7bd-410e7542360d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "96050f77-7877-4cd1-ba08-bdcc44cc227c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346aa740-bcf2-47f5-9e65-45be8047f8f1",
        "cursor": {
          "ref": "01018252-6244-401a-8e21-992a034821ab",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f0700ddf-d0c8-4b3f-a09e-03735e398203"
        },
        "item": {
          "id": "346aa740-bcf2-47f5-9e65-45be8047f8f1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ec2617ae-b858-44c5-808f-7976fac418b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3afa86c-a320-4508-bb64-8b7424c5c179",
        "cursor": {
          "ref": "5e8a56dc-309e-43e9-9eda-738b5199fd17",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "769fb853-f455-4326-9f46-1a08dca474cf"
        },
        "item": {
          "id": "a3afa86c-a320-4508-bb64-8b7424c5c179",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d037948e-0953-4663-bbb3-cc0f56763659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4038fe1-b65b-4fa1-a715-74e0b849d617",
        "cursor": {
          "ref": "86c831ff-d288-4e44-89bd-c109558bebce",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "731565c3-1226-4214-ad0c-8da17ff9f461"
        },
        "item": {
          "id": "d4038fe1-b65b-4fa1-a715-74e0b849d617",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f0df4a46-dc17-4cea-90f4-ec5f252e0fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde5f6bb-d5dc-4275-9abd-21843c6c2ba6",
        "cursor": {
          "ref": "18f2db84-69c2-46bf-8ee6-6da07199f729",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b82ff51e-7a40-4fe1-8d59-205a3c078001"
        },
        "item": {
          "id": "cde5f6bb-d5dc-4275-9abd-21843c6c2ba6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e7a83973-f747-4a0e-ab4b-e29304cf582c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60df330-24fe-4510-920a-c21d888336d7",
        "cursor": {
          "ref": "d5d61add-9481-4be1-bab8-3130c389a27f",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ab53d0aa-d8c8-4d31-8904-dc84fc34fa84"
        },
        "item": {
          "id": "d60df330-24fe-4510-920a-c21d888336d7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "27fa9625-ad99-4ec9-a649-b610a5323ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e241a6-bca9-4179-9853-1e7bf8b759a2",
        "cursor": {
          "ref": "e312ed19-8730-4cdd-a492-335ce021f1c0",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ae79a21f-69d5-4acc-8243-ee69f4aa710e"
        },
        "item": {
          "id": "a9e241a6-bca9-4179-9853-1e7bf8b759a2",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f3e7cab6-da87-4787-b5e4-30817ef3e64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c78aa6-d899-4147-8d06-d160fd0b02d6",
        "cursor": {
          "ref": "1b330905-29de-4c28-a22f-b78205b496c9",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "22238522-f186-4eac-a421-a31b02dface0"
        },
        "item": {
          "id": "27c78aa6-d899-4147-8d06-d160fd0b02d6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a8ef3f60-6b5c-4a47-9d6e-1a37ebfa96e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b6afef-2835-4b0a-bb69-6a81033d47c1",
        "cursor": {
          "ref": "16cb5dca-3d1c-401c-98c7-b4dc26e4db97",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fcfe205f-7bc9-49f0-9f90-e8d06cbaaefc"
        },
        "item": {
          "id": "59b6afef-2835-4b0a-bb69-6a81033d47c1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f19ef2be-165f-4bad-8165-ce6c72ea87e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109fd909-87e0-484f-8b18-6ef8a4ecb7a5",
        "cursor": {
          "ref": "2f530628-32c5-4075-8eb3-c2019be9284f",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c19d47b4-c640-4934-99cf-1ce0b79fc7f1"
        },
        "item": {
          "id": "109fd909-87e0-484f-8b18-6ef8a4ecb7a5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ca917992-2629-4df6-84c7-90fb3e9bf560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4daa4a5b-e579-4e75-9304-183dbe3287fc",
        "cursor": {
          "ref": "dc426201-11ad-40ec-8541-4166d4bdd2d6",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "255b88f4-269b-452c-ab2c-cbad46281ae7"
        },
        "item": {
          "id": "4daa4a5b-e579-4e75-9304-183dbe3287fc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fac2546c-bfd1-40cc-a006-844309f37054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8616e26-04e9-4451-a1b4-89c46a98b1f4",
        "cursor": {
          "ref": "e78b7072-4ec5-46de-a412-40d2dd0f9feb",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ab4c8ec0-d6de-4edb-b860-8b04cd5abd0c"
        },
        "item": {
          "id": "c8616e26-04e9-4451-a1b4-89c46a98b1f4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5c4fed72-ab1d-40f1-afd9-3f036bc4be04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fe781b-5e51-4f9d-a850-329a4d53fe09",
        "cursor": {
          "ref": "dd8baf91-de02-4a31-9ecc-57e28f0b99a6",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "eac630d1-eb25-4be8-886b-6c78434f3191"
        },
        "item": {
          "id": "b5fe781b-5e51-4f9d-a850-329a4d53fe09",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fdb7a051-9310-46d5-b2e1-a871f2d695fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34011e8-1da0-4e39-9903-d9a598c1866d",
        "cursor": {
          "ref": "eb3d09e4-0763-4df0-b4b2-0f2da4c23c1a",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "850ffafb-4fa4-44e2-8e6f-6e57bfbfd1ea"
        },
        "item": {
          "id": "d34011e8-1da0-4e39-9903-d9a598c1866d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9467a638-4f3d-4b65-a055-2c1d508dde76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200eafa7-bbf6-4b09-8455-cbe2220f2a99",
        "cursor": {
          "ref": "b094271f-6abe-46b4-808f-0ffa02c9fe97",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "23d52e83-f93a-4100-be7f-f5391e49055d"
        },
        "item": {
          "id": "200eafa7-bbf6-4b09-8455-cbe2220f2a99",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "dd5729d0-2a7b-4421-86cb-043a34010783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02ff401-4f6f-4dac-832f-01777a3962fc",
        "cursor": {
          "ref": "69305657-1be5-403e-a2fa-e0c4553cff95",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "aba781b0-19cd-45da-adab-873c542a353f"
        },
        "item": {
          "id": "e02ff401-4f6f-4dac-832f-01777a3962fc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2d2399f3-45e9-4e67-9f12-ac35e346eb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1af957a-b190-44df-9703-ee8817d81ba3",
        "cursor": {
          "ref": "43c06bd3-eca6-4ffd-b6dd-26f1957ca263",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4dfa6536-9e17-4cbc-924b-0434a87da008"
        },
        "item": {
          "id": "d1af957a-b190-44df-9703-ee8817d81ba3",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5dff0819-e107-43a5-ab04-2b0aeda3d841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e80d18-0e11-49ab-af61-72c5fe63ceed",
        "cursor": {
          "ref": "9bddbaae-45cd-4c86-a9ec-fb0cb92ee2e7",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "af6932f4-e349-4fee-97cd-b652c02f2158"
        },
        "item": {
          "id": "80e80d18-0e11-49ab-af61-72c5fe63ceed",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2c29282b-7938-4f5b-b599-9eff5cc2628a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77eb52b-aea2-4fbc-b91f-c354eb1e5c25",
        "cursor": {
          "ref": "d694ae45-2320-47a8-a7a7-e8a08c8bd6ae",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4bfaa952-ba5b-493c-9769-29ebfe13a4ab"
        },
        "item": {
          "id": "a77eb52b-aea2-4fbc-b91f-c354eb1e5c25",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6478887b-f72d-4c58-b276-6249fea9b5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395aa4dc-a65a-41b4-b5dc-5edce6f093c3",
        "cursor": {
          "ref": "11a22ea3-c24f-4f99-9122-1717812d4f39",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b2cdb4d2-7e8a-465f-977d-c23726241bf5"
        },
        "item": {
          "id": "395aa4dc-a65a-41b4-b5dc-5edce6f093c3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1d5e4cd5-b839-4a16-9601-d0bc34d35572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68296f28-561b-4cae-9203-77e447c42990",
        "cursor": {
          "ref": "7d20e42b-c757-4fcf-83dd-a9c2a03e92ae",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5a907bff-196f-409c-9c44-b9b5fbe99d7b"
        },
        "item": {
          "id": "68296f28-561b-4cae-9203-77e447c42990",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "73ff18f2-058d-41d1-9531-2a4bf62932bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41030188-1f62-4e1d-b6e2-a834ae7afdbd",
        "cursor": {
          "ref": "9cbdd652-62d0-4bc4-9bf2-4ba08c095cdb",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "34fa9fef-53b5-466a-b513-df866f6f884e"
        },
        "item": {
          "id": "41030188-1f62-4e1d-b6e2-a834ae7afdbd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "43585f7f-01fb-4f27-bccf-7ab47a2b4bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39360283-6cfd-4bd0-abdc-045131c152f6",
        "cursor": {
          "ref": "68abdd98-ba91-4d74-a2dd-c9e05b9625b4",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ffdae901-32ac-4cda-a074-77e5d2ef491b"
        },
        "item": {
          "id": "39360283-6cfd-4bd0-abdc-045131c152f6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "605a3f45-79bf-4536-ac38-57129a4d1dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603443c1-a823-44c7-94dc-5cfbb51b465e",
        "cursor": {
          "ref": "d5ce68f0-bf3d-4703-8934-93d9bcb4cc9a",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4c639921-c354-42e6-a7b3-d28ba0ccd0a1"
        },
        "item": {
          "id": "603443c1-a823-44c7-94dc-5cfbb51b465e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4848600d-fdd7-473f-983f-7b7a4fb19c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75068a22-6f3a-464f-8d78-8b1736ed3ad8",
        "cursor": {
          "ref": "79b12758-6b3f-42ac-a61a-495e87a0372c",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "65838cfb-dba0-43d9-a560-2b4829604dff"
        },
        "item": {
          "id": "75068a22-6f3a-464f-8d78-8b1736ed3ad8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0a469bb0-1f1b-423d-af97-7d7fd9100b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46604c5f-889e-4c63-a1e4-c721c9c2e32b",
        "cursor": {
          "ref": "aed0c022-ec91-42e5-aad0-912c755e0cfa",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f921a9ee-6c55-4867-b8c5-99adbf16880c"
        },
        "item": {
          "id": "46604c5f-889e-4c63-a1e4-c721c9c2e32b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f8f0e1e9-f3de-4b51-a46b-d83f201102ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c632394f-bdbf-4868-8f9a-b9397863c959",
        "cursor": {
          "ref": "9e04f817-87ac-485a-9cf6-69a87a4dd588",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4645ed8e-08a1-4691-a579-502260ff6477"
        },
        "item": {
          "id": "c632394f-bdbf-4868-8f9a-b9397863c959",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6c3f3e52-2c2e-454b-bc8f-2722bece8c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a31bb4-fe18-43b5-9b01-560dffbcf091",
        "cursor": {
          "ref": "5441ff4f-54e8-4ca8-98bf-c484435a9b10",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e6667aca-29b1-4d0f-b75e-3179f74fe737"
        },
        "item": {
          "id": "92a31bb4-fe18-43b5-9b01-560dffbcf091",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5b9763c8-fd70-4c5e-b9a2-8c3110fceed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a320f08-e4dc-402a-aa68-67f0fbeb4b22",
        "cursor": {
          "ref": "e146439b-17e5-4be2-ae56-83b0b1750ab8",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a98bf817-bad5-4b9e-a875-017debcf60d7"
        },
        "item": {
          "id": "0a320f08-e4dc-402a-aa68-67f0fbeb4b22",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "af9ef206-5133-4358-aebd-0a7d4be80b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f691978-716a-4296-83d6-f9a770d36f3e",
        "cursor": {
          "ref": "89a30cb0-314f-477c-a8ad-0230866ac056",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b6199476-3d1c-4f2e-96b4-02b92b91aaf1"
        },
        "item": {
          "id": "0f691978-716a-4296-83d6-f9a770d36f3e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "75e697dc-d062-4a7e-8de6-6160d12c60fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305dbdb6-8c68-467f-b418-152f3303f8e3",
        "cursor": {
          "ref": "9c211ede-61eb-480a-90fd-184ccb7ba70f",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b3c3589c-1a96-451a-96a6-503e54cf3fe5"
        },
        "item": {
          "id": "305dbdb6-8c68-467f-b418-152f3303f8e3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8caa7b29-a4ea-4e54-bfa1-8be90b5f7f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb08bb80-c065-4f6a-b5ea-a8f97ff2cfb9",
        "cursor": {
          "ref": "419e4d8d-49d2-4d47-b18e-bc2abd313cfe",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c85b06f2-df80-44ab-bf90-bace3ebfa952"
        },
        "item": {
          "id": "fb08bb80-c065-4f6a-b5ea-a8f97ff2cfb9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2dcc6ff5-40d7-42a9-b10b-e52e32f81764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31353a1-d3ce-4643-9d1f-7c99bdb2f128",
        "cursor": {
          "ref": "fccf8d6d-f049-41ad-8c4d-29652663256e",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f6046b28-a101-4b1e-aa86-f94a8ea0ff4f"
        },
        "item": {
          "id": "c31353a1-d3ce-4643-9d1f-7c99bdb2f128",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ee6d8f94-e0b4-473c-b3dc-6861cd8bccba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1370bd90-866a-4931-90a4-63a5483635fe",
        "cursor": {
          "ref": "c8108c7f-6ae0-4eb3-8e8e-12e0ec2a0aa4",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1dd38825-d27a-4576-b707-69d4f137f1e9"
        },
        "item": {
          "id": "1370bd90-866a-4931-90a4-63a5483635fe",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "56cc83e1-9067-4e82-a5cf-255332601a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6160cf-466c-4fe2-a48d-7da9e0cedad2",
        "cursor": {
          "ref": "67d05691-5a3f-46bd-b17c-bf66c18847a5",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4b9cf290-3b9d-4e64-b10e-9198f4766c45"
        },
        "item": {
          "id": "fd6160cf-466c-4fe2-a48d-7da9e0cedad2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1bf6ff88-efd7-4168-8831-1ecc889492a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd07f4a-2131-43ea-9ff2-051e71b8034e",
        "cursor": {
          "ref": "e2987a7c-402d-45a1-b4dc-89e47f2f23b1",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a2f47f9c-8df2-44ca-9eb1-2f2e073529ad"
        },
        "item": {
          "id": "7fd07f4a-2131-43ea-9ff2-051e71b8034e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0896d7ab-def4-4be2-8944-d49746157a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5d51d5-8bb0-41ff-afd4-5eacbff20eb9",
        "cursor": {
          "ref": "e075743d-4062-49cc-bcaa-317131c1f3db",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bec98ab7-f76f-4333-9b3f-f32806857cec"
        },
        "item": {
          "id": "4f5d51d5-8bb0-41ff-afd4-5eacbff20eb9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8b377619-fd16-4fba-ad04-00f07c258306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858b5baa-b8bc-46ff-acb8-89715602ad26",
        "cursor": {
          "ref": "c2571b02-4d49-4675-aaa2-cddbf5942856",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "297d725c-be24-4274-b75d-8da558a6b7d7"
        },
        "item": {
          "id": "858b5baa-b8bc-46ff-acb8-89715602ad26",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "58185478-15b8-4dc4-af7f-c92047a04c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66eedeb5-9b1b-433d-b57a-6affb658d33e",
        "cursor": {
          "ref": "75448791-71d7-4e5f-8d5f-379000f02ab4",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3a3aa209-4903-4940-bda3-e4bdd68b932a"
        },
        "item": {
          "id": "66eedeb5-9b1b-433d-b57a-6affb658d33e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "eb0fc9d5-9305-48b5-adf1-96eb0cec3609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b0ec1f-0096-4010-af71-97ff0485f4fe",
        "cursor": {
          "ref": "2a35395a-bb43-4353-a497-550f33bae39f",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ca6db7f0-812b-4a3a-82cd-0ceacf97eb4f"
        },
        "item": {
          "id": "95b0ec1f-0096-4010-af71-97ff0485f4fe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e8a57075-6bd9-4d2d-bd46-94a2b0398d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5381c9d6-3e55-449e-85c1-e2d1f36e230e",
        "cursor": {
          "ref": "065cbe7c-8c2f-4a0b-a670-1c61768b6391",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "042a330a-8966-4203-ab3e-27787cfac42c"
        },
        "item": {
          "id": "5381c9d6-3e55-449e-85c1-e2d1f36e230e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2f5a2bcc-1029-4fc4-a807-1f326f2d1faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143aa6d8-db0e-46b6-9099-1df3f36acbc5",
        "cursor": {
          "ref": "7d9fbb00-1676-4975-aa28-defe90f7aa51",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "cd3711d8-4e84-44e7-a9a0-e1f852d4a6ae"
        },
        "item": {
          "id": "143aa6d8-db0e-46b6-9099-1df3f36acbc5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "899dafaa-ac48-4135-9e4b-a9e57ba8c564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca91844-f38c-4e5d-9a49-90b353fbc33e",
        "cursor": {
          "ref": "983dc83e-e2af-4248-aad6-c121abade0d0",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bd135557-0b94-45fb-90ca-bca4ee2e5aac"
        },
        "item": {
          "id": "1ca91844-f38c-4e5d-9a49-90b353fbc33e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "995cf1e4-0780-4fcf-9690-5478209b705c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a34dd2-0318-412e-b5e2-e450aebe6f2d",
        "cursor": {
          "ref": "97aaf1f6-0c7f-4057-9e1f-656858bc2f9b",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "89589fef-e917-45c5-b117-9e96d133e9b6"
        },
        "item": {
          "id": "33a34dd2-0318-412e-b5e2-e450aebe6f2d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5727c69f-c9f3-4783-9b66-980a2e8a4e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c12d096-72bb-4801-af0c-b1f0aa55ee5c",
        "cursor": {
          "ref": "3e687078-252b-4061-b8fa-a03cfabf2942",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "300762d7-298a-432a-bf78-f85302b23030"
        },
        "item": {
          "id": "6c12d096-72bb-4801-af0c-b1f0aa55ee5c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d5762e8d-fd56-483c-b162-16cc4a1f7dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e41b4c-a59f-4ec3-8f2e-6ddc21f24f51",
        "cursor": {
          "ref": "28a60077-db37-4e6e-a8c9-345832919720",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f7a66d44-e7db-4960-b409-630e423f574c"
        },
        "item": {
          "id": "d8e41b4c-a59f-4ec3-8f2e-6ddc21f24f51",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0fad8db0-9a93-4c57-a23f-9e0b4397b839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1552e295-3e09-4fda-8399-1f5164e6f475",
        "cursor": {
          "ref": "813913fd-1227-4271-937b-05aea4905691",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "80462e29-6d3f-45ad-a9c1-8703892ba021"
        },
        "item": {
          "id": "1552e295-3e09-4fda-8399-1f5164e6f475",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "76b13029-0674-4c9e-86fd-ba832b0aec31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0ff16e-7bd9-4001-b606-3b129e63c40c",
        "cursor": {
          "ref": "97ebac7d-bade-448f-9dd8-35ebd5779307",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "20fc69bd-9e32-4b0a-85ef-8693375de511"
        },
        "item": {
          "id": "ee0ff16e-7bd9-4001-b606-3b129e63c40c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "24d00f57-eb2b-481a-ac17-847045ce43d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c86ee15-b96b-4fed-a44a-ac11c99bb863",
        "cursor": {
          "ref": "34116478-c191-484d-b05a-ba428b16d064",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "778bf63e-7926-4252-9a52-a587f6014755"
        },
        "item": {
          "id": "7c86ee15-b96b-4fed-a44a-ac11c99bb863",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e9adebf1-78ef-435c-ae8e-be22d5333095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d561bb7-093a-456a-9568-6741586ef2f8",
        "cursor": {
          "ref": "50889898-ce9a-4bd0-89cc-3aac61f09382",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "64f60e11-9c9e-452b-b571-10a722dffd91"
        },
        "item": {
          "id": "0d561bb7-093a-456a-9568-6741586ef2f8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4a7b6142-644d-40be-b69c-9ffbba3f75f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39e37fa-417d-4561-ba44-c49b43f234dd",
        "cursor": {
          "ref": "748a7149-a7a9-41a4-ac8c-d138b14e4fd2",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "86d114ea-ceb0-47e2-a3d7-a035c55af444"
        },
        "item": {
          "id": "a39e37fa-417d-4561-ba44-c49b43f234dd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "cd8b7d7b-320c-4cd9-b24d-0a7db6a47c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743ee28b-5a9a-421c-b97f-285da7093944",
        "cursor": {
          "ref": "c26e1cc2-62e4-46eb-8014-649d74ce5db8",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4ba0350b-1c4f-415f-926e-c566749f5a40"
        },
        "item": {
          "id": "743ee28b-5a9a-421c-b97f-285da7093944",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "93e0a3bd-9dd8-4e73-b900-8fb06a092d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968accbf-d25c-4619-b7dc-1f60734b85f4",
        "cursor": {
          "ref": "8a5930dd-fd5d-404e-87d7-73a130b00dcc",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "70f69672-a6b4-4afc-abd5-6efcfde6f507"
        },
        "item": {
          "id": "968accbf-d25c-4619-b7dc-1f60734b85f4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "47e34522-5bf6-4231-a5ee-e023786f62b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f39a9ce-92f4-49b3-83b8-28e0dfa8a833",
        "cursor": {
          "ref": "dbcc0684-27d9-43e9-9d4a-049ae75f4851",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6931211b-2e54-449d-857d-3412b09c59eb"
        },
        "item": {
          "id": "0f39a9ce-92f4-49b3-83b8-28e0dfa8a833",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8f643a39-b06d-4deb-be5b-b95dfc8a9814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed8d9ec-03ea-4114-8d05-47940e6fa58e",
        "cursor": {
          "ref": "480296eb-23bf-490e-88d1-c2433663232d",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "811268f0-caec-4fff-854f-f1cf5e7ac69f"
        },
        "item": {
          "id": "4ed8d9ec-03ea-4114-8d05-47940e6fa58e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "59fe3f43-a523-427f-b643-84cc2cf4f689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b155370d-f816-441b-b832-37ea00fbc00d",
        "cursor": {
          "ref": "f5be69b3-9c5e-413b-9e37-fd3d820b0558",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e1096335-4c22-4579-8677-cd372bcf9241"
        },
        "item": {
          "id": "b155370d-f816-441b-b832-37ea00fbc00d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ed52f4bf-cf7d-457b-ba12-d10837c222b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad8e4f8-6147-49c3-91bf-ac66c01f3441",
        "cursor": {
          "ref": "a69c76b9-0526-47f4-a01e-f5e3c8390851",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "172ed666-3d6c-4052-b1ee-4e72b6a09ea3"
        },
        "item": {
          "id": "0ad8e4f8-6147-49c3-91bf-ac66c01f3441",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b09f4dc5-1c2f-4919-a82e-31593fc8833b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0099c4aa-4f8b-4d03-85de-a5df918e4839",
        "cursor": {
          "ref": "8e77f94c-d946-4457-ad81-80720cfc3caa",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "485f0021-400c-4986-a4de-92db3b65dec8"
        },
        "item": {
          "id": "0099c4aa-4f8b-4d03-85de-a5df918e4839",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6b729a20-1455-4fa0-a8ad-be60f6b45b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa93552b-a933-4192-9d72-aae9c65d424c",
        "cursor": {
          "ref": "6fceac4e-cfee-4e42-8b2c-71057c6b27a4",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ec365fe2-95ab-497b-9694-fb015555016b"
        },
        "item": {
          "id": "fa93552b-a933-4192-9d72-aae9c65d424c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "04d0cf29-2ebb-4faa-918d-b9c05dc53b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c72c34b-b9c7-4072-a01d-a5d1262685ad",
        "cursor": {
          "ref": "d3e15005-a9b7-43a9-a6b7-e8f26850e8f0",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0a23aefb-46bc-4977-ae96-8e751429c286"
        },
        "item": {
          "id": "2c72c34b-b9c7-4072-a01d-a5d1262685ad",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "17af964a-a619-422c-bad8-bd84587a5e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d67a46e-fa5a-43eb-9023-29196eed2c4a",
        "cursor": {
          "ref": "47d55b24-96c5-43d5-855a-ae9d091c3333",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "46af5666-1997-445a-85d4-36175a353c54"
        },
        "item": {
          "id": "2d67a46e-fa5a-43eb-9023-29196eed2c4a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "28f651dd-1f89-45bf-a5d7-27e144b9e297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379b208f-362e-46e4-ba53-0493c9820ba8",
        "cursor": {
          "ref": "19ff08de-6668-430b-b673-b9d7e350ecf8",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "bfe82906-2d37-41ae-902f-a82ead449054"
        },
        "item": {
          "id": "379b208f-362e-46e4-ba53-0493c9820ba8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7f05e233-2a52-4d5b-8c9b-f35edcb7266a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efaca7e-f678-450c-aacb-450fb47a2ec3",
        "cursor": {
          "ref": "eca90a1b-fa34-46f0-ae3a-bba66edf9c27",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "447cf5b2-9026-4ced-a0bf-a51ec5543af0"
        },
        "item": {
          "id": "2efaca7e-f678-450c-aacb-450fb47a2ec3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "50eee972-2718-4409-a540-0fc90bd502f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a622910-7ab1-45d3-a032-6f63cc5d4866",
        "cursor": {
          "ref": "f79e57ee-e373-44e6-8ecc-d32c9a97c0da",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "57655fab-9f4d-414a-8cc4-2923fab4a082"
        },
        "item": {
          "id": "2a622910-7ab1-45d3-a032-6f63cc5d4866",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9ec5c3cb-a6e8-4f2e-b3aa-d12fb0439a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc8d95b-0cb8-43b6-8ae7-972fa08461c2",
        "cursor": {
          "ref": "e223157e-0219-4474-9bef-32571d774451",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d57308c6-2377-4ea4-b076-e4b048add693"
        },
        "item": {
          "id": "acc8d95b-0cb8-43b6-8ae7-972fa08461c2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9f9f3f04-ca08-41a7-823d-ad7abc50120a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b735afc-b141-49bc-9a7e-3d89fc547396",
        "cursor": {
          "ref": "6746b142-0e9f-4c5d-9802-c8d910623df4",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6db74d5b-960c-40c2-91cf-eba8c24e38b7"
        },
        "item": {
          "id": "6b735afc-b141-49bc-9a7e-3d89fc547396",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9417ac61-f8f0-434d-a68a-d5a1e43ad8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90775556-bf61-46d8-b817-3cbf74856b0b",
        "cursor": {
          "ref": "3d0325bf-b8b5-4a6b-8d87-1abfb0977b28",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "436b0e38-5596-435a-a40e-de7ae386a42d"
        },
        "item": {
          "id": "90775556-bf61-46d8-b817-3cbf74856b0b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e67a67a0-f888-4c67-be28-eac5157aa728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78aac1b-0ffe-46e5-ab79-e6350ca605b5",
        "cursor": {
          "ref": "5f21d97c-73ec-4fb2-a453-3c9359bd741d",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3a2ea5e5-d09d-4cfe-8ba2-a254c69f2c90"
        },
        "item": {
          "id": "d78aac1b-0ffe-46e5-ab79-e6350ca605b5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "194a572f-ea8e-4010-b685-6dc0d0259a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e716f0fc-aa35-4526-9e2a-f4141eb0c4d6",
        "cursor": {
          "ref": "9cd7bde9-6f14-4d8d-b885-2dde83a6361f",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3b964e28-c7aa-423e-8579-670c33dfd99b"
        },
        "item": {
          "id": "e716f0fc-aa35-4526-9e2a-f4141eb0c4d6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6ecdae3f-7af6-4b8b-ac98-9efde800cd56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91588da5-201f-41c1-afdc-512a664cab24",
        "cursor": {
          "ref": "903aab9c-0c67-400e-ab96-a2a816030861",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e744982f-8ef0-47cf-ae19-2c2bd1d90f95"
        },
        "item": {
          "id": "91588da5-201f-41c1-afdc-512a664cab24",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e74c9283-90b1-4989-9963-3ef9f8b777e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa412d80-9202-4eb0-8b0d-19c8a3c1fe8c",
        "cursor": {
          "ref": "77a939af-5e4c-4229-abaa-1fd99c6e5755",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2f041dd3-3787-4a1b-ac15-ecd4e6344aaa"
        },
        "item": {
          "id": "aa412d80-9202-4eb0-8b0d-19c8a3c1fe8c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fdab5530-74ba-446c-8102-5666659cf8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb523f4c-278d-47bf-9104-460d0499f67b",
        "cursor": {
          "ref": "ab27d78c-24b0-4354-bdb1-2c125125ef04",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4b409cf5-a0ae-4c00-9d14-366a88f3e28e"
        },
        "item": {
          "id": "fb523f4c-278d-47bf-9104-460d0499f67b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0dbd25be-4c07-41d9-8dad-563506115709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a153393-eb2f-444a-b87b-d4da2fa71e21",
        "cursor": {
          "ref": "787385b3-0b54-481e-bea3-e55be867c074",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "25d7b9bd-196b-4583-95be-8d9133af1263"
        },
        "item": {
          "id": "1a153393-eb2f-444a-b87b-d4da2fa71e21",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "47b3f977-c32c-43da-a130-d304101fd55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0518a4f-bdac-430b-86bd-a33b8f40c310",
        "cursor": {
          "ref": "930bcd81-4518-4696-841f-b0c1d0085f00",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "39cd3964-3e59-455b-86d3-f7836a0e1124"
        },
        "item": {
          "id": "a0518a4f-bdac-430b-86bd-a33b8f40c310",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "3b252d17-955f-4b41-8b8a-146256d04558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "494a5c8c-5d6c-4567-a611-95f47d9c74d5",
        "cursor": {
          "ref": "f64e2973-0ec9-4bd9-89e6-5a29d7f76aba",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8541e654-0711-4965-a971-cde2ee82f763"
        },
        "item": {
          "id": "494a5c8c-5d6c-4567-a611-95f47d9c74d5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "be82cd6f-1bee-470a-b1a2-f17a0fd2b617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "c7e6f9bb-d72c-45ae-b45b-6b3ac421dc6f",
        "cursor": {
          "ref": "912bade9-318d-450c-8e17-ab9c31d7d9ef",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "934e9819-963c-44fb-a063-f0f8a8d200ab"
        },
        "item": {
          "id": "c7e6f9bb-d72c-45ae-b45b-6b3ac421dc6f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b55683cb-3496-4751-a7a3-b835a448aca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "e9240e87-e774-44d3-82fd-2d3f5aefbc87",
        "cursor": {
          "ref": "805ed9c6-0327-480f-9a71-8beb73b64415",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "42c62560-4426-45fe-9b6a-84798634c4bc"
        },
        "item": {
          "id": "e9240e87-e774-44d3-82fd-2d3f5aefbc87",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f5718e87-d269-42ae-978a-141e256e57f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "3f21a78a-c1ef-42f8-91e5-60c86f1dc98b",
        "cursor": {
          "ref": "ee3c6279-1c35-426a-a93b-d2627a72da49",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "035e789f-de9f-4dee-8fa2-2bb08cb3509a"
        },
        "item": {
          "id": "3f21a78a-c1ef-42f8-91e5-60c86f1dc98b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bb7f7bbb-1516-4a33-8b6d-99548d28bbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "250a0efe-9c7f-4c52-9faa-9cb92e6bee3b",
        "cursor": {
          "ref": "00f8ddb4-427f-4602-9399-de6f208a723a",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1529f393-7d93-4308-b5fd-388d846add55"
        },
        "item": {
          "id": "250a0efe-9c7f-4c52-9faa-9cb92e6bee3b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "26421922-22a7-4a1d-b7d3-bebf986d405c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b2a918ed-c4c4-44c9-810a-01ce73bd627f",
        "cursor": {
          "ref": "74fc1a13-285a-466a-999b-12cafb25f968",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "02613fe6-3fd6-49ef-b184-72f4100d2def"
        },
        "item": {
          "id": "b2a918ed-c4c4-44c9-810a-01ce73bd627f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f7004800-0c28-4bda-9e64-2a77bc354436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "059bb853-857f-4171-a355-bb52b27f5901",
        "cursor": {
          "ref": "4f9febbc-f995-467d-b31a-eef5804f2b29",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5b92b388-d047-4b61-9ddf-492306871522"
        },
        "item": {
          "id": "059bb853-857f-4171-a355-bb52b27f5901",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "99f8c546-9ee6-486b-8ba4-2a8f5d5766f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3384bd-246c-4bbe-8eeb-33a26562089c",
        "cursor": {
          "ref": "7138ddf5-fc72-4385-b61b-1910ab4cb70c",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0041adf7-ed67-4617-bbf3-509a73392059"
        },
        "item": {
          "id": "3e3384bd-246c-4bbe-8eeb-33a26562089c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "01099ccd-7dae-4729-888b-3c91cfa1838c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b07e37-3cdd-4197-b8cb-99e99bcd7c86",
        "cursor": {
          "ref": "e0a33d12-0fb1-47ef-97a9-d7e2f52ad945",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "fa82a9ba-537e-4194-93da-e610f46880f6"
        },
        "item": {
          "id": "05b07e37-3cdd-4197-b8cb-99e99bcd7c86",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8e6f333b-beea-429a-8918-876e54e8e454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64e570f-be86-4f56-a971-44cbf9dbee9a",
        "cursor": {
          "ref": "d3071b95-bce9-41d7-9b93-b5851df2c5ae",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "cd26d941-b0be-4923-b58d-2b7e424eab4a"
        },
        "item": {
          "id": "d64e570f-be86-4f56-a971-44cbf9dbee9a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8bbf1e34-bf95-4b67-aaa0-97ccc018326d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5414235-eae3-4dcd-8044-d7543c8a0a51",
        "cursor": {
          "ref": "b5a35db0-f357-4026-9991-80cb710aeee5",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "83d5e285-c9b0-4324-b283-ae9e7c07cd8b"
        },
        "item": {
          "id": "b5414235-eae3-4dcd-8044-d7543c8a0a51",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "aaae44e8-56e6-45b2-8643-51ab71bc38b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0fa061-8d2a-436a-82de-ef8acb178f42",
        "cursor": {
          "ref": "7ba1f61d-dd31-434a-af18-c82052a3db39",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0e6dccee-9f56-4e2b-9d90-e4738338681c"
        },
        "item": {
          "id": "1b0fa061-8d2a-436a-82de-ef8acb178f42",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b8e5d998-d72d-46a4-865b-1ecc2c2d6c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb57c02b-75f3-42af-b6d8-c9a37d2083ce",
        "cursor": {
          "ref": "fb7bcbb1-f80a-4719-959d-1f11afca1789",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "43c6deae-975f-4eb0-aa4a-40561411f100"
        },
        "item": {
          "id": "eb57c02b-75f3-42af-b6d8-c9a37d2083ce",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5b314318-c1de-4b7b-9a77-34d6aeabc657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c60803-e47c-41cf-aaf1-bc8a3ba756db",
        "cursor": {
          "ref": "9664ca4a-2778-4d33-9153-7196c98b1896",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "48aca1e2-25ae-4261-969a-87ff5ddfc3cb"
        },
        "item": {
          "id": "c1c60803-e47c-41cf-aaf1-bc8a3ba756db",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b8a25414-4ab8-4bb6-960f-713c7379753b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e675970c-5752-4899-9c98-4eb011dbe53e",
        "cursor": {
          "ref": "9f5f54c0-9476-4962-bdcd-fa16ec32647b",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3e38e533-3f4c-4f9a-bd6b-06f2f11172a9"
        },
        "item": {
          "id": "e675970c-5752-4899-9c98-4eb011dbe53e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "246aea06-57fa-4b9b-b540-74dc05a03b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d57672-70d0-4a77-81fe-455193424e9f",
        "cursor": {
          "ref": "cb175729-f951-46d1-a50b-289232da99d6",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a2f56d20-5b5d-48bf-b5a1-c15caca87b76"
        },
        "item": {
          "id": "47d57672-70d0-4a77-81fe-455193424e9f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "21db24e6-abb0-468d-b24c-210066561b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b15697-5d8d-486e-99ed-4bb7c98256ed",
        "cursor": {
          "ref": "2e414e9a-b46a-4d6b-b74b-ecb25569dd50",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "27ff27ed-0ad5-4db4-9a33-db7b26773f4a"
        },
        "item": {
          "id": "01b15697-5d8d-486e-99ed-4bb7c98256ed",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "973c8435-227f-458b-a3ff-85e3d911adab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59faf911-8218-4e9f-90f7-a482d15d7076",
        "cursor": {
          "ref": "90ee92d0-1dd1-4361-9153-90870f873de3",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2a94d7a4-1fac-4449-b8bc-efe7e781ca12"
        },
        "item": {
          "id": "59faf911-8218-4e9f-90f7-a482d15d7076",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2322898d-7689-497d-a10b-8f53433f6256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4270dd55-cfda-426e-883a-56c99294dd74",
        "cursor": {
          "ref": "824f7040-7788-432a-a6ee-85f2e53617fa",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2d8f8a84-5456-403e-b36c-52cc94fa98fc"
        },
        "item": {
          "id": "4270dd55-cfda-426e-883a-56c99294dd74",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ac3ef2f4-38c2-4a3c-af0d-9def663e0656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3182784-806c-4435-a960-3180e7530d4f",
        "cursor": {
          "ref": "e3dc2a0c-a73a-4896-9185-bc0094ffdda5",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a459b77f-e3ca-427c-83a3-2785bfe12eec"
        },
        "item": {
          "id": "d3182784-806c-4435-a960-3180e7530d4f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "40c06400-cb96-4ed1-b181-976dcff83b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853405c7-709a-465e-aace-9dd3a7e08795",
        "cursor": {
          "ref": "4969d765-102a-45c6-b198-2e8ed2668ce8",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8c1cb82f-8129-4dde-9929-de68ca823c23"
        },
        "item": {
          "id": "853405c7-709a-465e-aace-9dd3a7e08795",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bf84daa1-1d1d-44ae-b29f-19fe22342988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd11abc-d726-48ff-8b69-b1832efd5a96",
        "cursor": {
          "ref": "5a23f2d4-3f14-438e-b26e-83c99128a4ea",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1493b80f-cf26-401a-9317-7dd2532b8b26"
        },
        "item": {
          "id": "bbd11abc-d726-48ff-8b69-b1832efd5a96",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f8c3e4e8-6cea-4566-9248-cff80d8cab66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755651fd-e05f-4be0-9bbf-3c33bd70b797",
        "cursor": {
          "ref": "a2ed4291-5d87-4310-b722-fb693e87db66",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0cced745-f068-4368-afae-50535ac8c586"
        },
        "item": {
          "id": "755651fd-e05f-4be0-9bbf-3c33bd70b797",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c105cdee-706a-4aa4-bd21-d1dbabf0d29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b774ef-2298-4f7a-acf1-59d289e42ebf",
        "cursor": {
          "ref": "fd4c5664-a308-441c-ab1d-7d6ff530e1b4",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "46ad179c-0d10-432a-a3dd-6304b27ba4ec"
        },
        "item": {
          "id": "c5b774ef-2298-4f7a-acf1-59d289e42ebf",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d08f72ce-0a64-4c7a-8cd8-92364ea81082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f2e552-c0c3-4571-8372-b38111ff56d6",
        "cursor": {
          "ref": "68e9737f-7cb9-43fc-aa04-469e661dbfba",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b70355fc-7df5-4025-ad1c-8f1be5bb8eb1"
        },
        "item": {
          "id": "73f2e552-c0c3-4571-8372-b38111ff56d6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "21a0b174-8bed-401a-9e43-ead18ad4e19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c5136f-b24d-45e7-9a99-3611e5cf3068",
        "cursor": {
          "ref": "06ea7613-bde0-4f43-8960-7395a540ae92",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2f311e1e-334d-413d-b19f-03e5d315f4a5"
        },
        "item": {
          "id": "c0c5136f-b24d-45e7-9a99-3611e5cf3068",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "96267ec6-3610-45cc-8a8e-15d5265c2b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00bcaca-88a6-47f5-9d9c-1095684ac244",
        "cursor": {
          "ref": "2858d771-2a00-4298-b52a-f58fc13eba67",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f16bffc2-2867-488a-93f5-8271680f9be3"
        },
        "item": {
          "id": "c00bcaca-88a6-47f5-9d9c-1095684ac244",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e0a0df2d-6a75-4909-b30f-633b2bd4a585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5464f141-76f1-48ce-bb89-eeebae7b6086",
        "cursor": {
          "ref": "1055ac76-5344-43fe-b3ac-bb3b43c63ce9",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "300c501f-c577-4b48-9244-abb3a346bcf8"
        },
        "item": {
          "id": "5464f141-76f1-48ce-bb89-eeebae7b6086",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5d288bb6-b1ce-4a08-bb9d-01a0dcb71c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183ff963-cb99-4bb8-814d-03d67fa16895",
        "cursor": {
          "ref": "f74421c5-a37f-4550-be44-7b946660b521",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "58ce0003-8f89-4af3-833d-b52c989baa38"
        },
        "item": {
          "id": "183ff963-cb99-4bb8-814d-03d67fa16895",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "066fa9a7-ac21-4986-9345-6b0bba5e90bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfb6b94-16fb-42f1-ade7-9b18d15fa3b7",
        "cursor": {
          "ref": "0132ef22-b61d-4890-9262-a0c720165d59",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1ba335ce-4129-4437-92bf-fb73ca58d3e7"
        },
        "item": {
          "id": "9dfb6b94-16fb-42f1-ade7-9b18d15fa3b7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d95cf146-f4e5-4b04-99d4-a036265e7df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492364bc-9f78-4c58-a626-848954acc028",
        "cursor": {
          "ref": "dd4af424-ccef-4f9e-812e-3d4775336504",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "af91a5b5-ff28-41b9-8aa2-0c15d5018054"
        },
        "item": {
          "id": "492364bc-9f78-4c58-a626-848954acc028",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "27a9f513-eb5b-4dc0-8612-a0889e78070d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62863958-57f3-4e98-b606-49a291834f0a",
        "cursor": {
          "ref": "60b0863d-7d12-4c44-82c8-a46a6cd853fc",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9a7c0365-0b33-4feb-a1db-db54e9d834bc"
        },
        "item": {
          "id": "62863958-57f3-4e98-b606-49a291834f0a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e04d9e9f-c549-4987-b672-85e00e6529e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6852071-914f-4c60-81a9-27a8e2d920c1",
        "cursor": {
          "ref": "6feb3680-783b-4067-87e6-fddea63b2790",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "62477504-2407-4149-ae76-c7c43a0cef8a"
        },
        "item": {
          "id": "d6852071-914f-4c60-81a9-27a8e2d920c1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a1378c0c-afb3-44bc-b523-168039ab664f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273d583a-d2a5-4f39-9934-396d2686c20e",
        "cursor": {
          "ref": "b11d26ae-c580-443b-9aa1-02edb21fc15b",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "73f8f165-4840-4f16-a13f-7bff56cffd8f"
        },
        "item": {
          "id": "273d583a-d2a5-4f39-9934-396d2686c20e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0aa6b8e9-4f67-4aee-87ef-f6432b8f8ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb024f9-afa3-4706-9cf6-726e9683416a",
        "cursor": {
          "ref": "3b416ca1-527f-4af4-b617-1059988d62f2",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "14243946-f05a-4563-af8f-7f98f2adcbe9"
        },
        "item": {
          "id": "ddb024f9-afa3-4706-9cf6-726e9683416a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5a0c63b6-6eda-4deb-bc5f-d50f5e7642e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ecea5d-d79c-4ed5-aab7-14a4ee20da31",
        "cursor": {
          "ref": "68c31bca-0add-48c3-86af-792e0b558073",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2fa43ed5-d7bb-4ab7-8d7e-23f8e5a57f19"
        },
        "item": {
          "id": "81ecea5d-d79c-4ed5-aab7-14a4ee20da31",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "64cc8757-e42e-4de9-9434-0e344bd4551a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f527f4a-baeb-4541-80eb-49c77e6859d2",
        "cursor": {
          "ref": "1fb12206-2059-48d8-8d65-6426d0d37380",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1b23e660-8f39-4407-9618-b54088a8150b"
        },
        "item": {
          "id": "0f527f4a-baeb-4541-80eb-49c77e6859d2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f9aa1def-98b9-41eb-8ece-2c9aa7b66197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1d02bb-ff97-44b1-bba1-29b0b457d61e",
        "cursor": {
          "ref": "303ad7d4-f47a-4686-b685-8e39c0ae2769",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "dcf21611-52df-4c3a-bb89-8a10889a380d"
        },
        "item": {
          "id": "cc1d02bb-ff97-44b1-bba1-29b0b457d61e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6bc3b5a3-9d28-42a2-b9ac-20284294210a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e39c8bb-46c4-4189-a822-80d638613cfa",
        "cursor": {
          "ref": "61729801-2d14-4cd6-82ef-a76f3c39d8d2",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "86b5fa9d-2aec-4f9c-946a-8f0bbca1dc0c"
        },
        "item": {
          "id": "0e39c8bb-46c4-4189-a822-80d638613cfa",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c5a40959-352c-435d-80ce-316c1eb5e448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb332823-d1b2-4635-96c5-9089354cdd1d",
        "cursor": {
          "ref": "f26a22bf-f8a8-47c1-a8e1-990248702391",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "875131e6-0c7d-47b4-a910-7c0dbb11ee77"
        },
        "item": {
          "id": "fb332823-d1b2-4635-96c5-9089354cdd1d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7512b340-e47a-4a78-b8f8-22f559899856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f13836-989a-4611-934e-1079f4764b6e",
        "cursor": {
          "ref": "b5c67541-88f7-4890-97a3-fa98ad8ccd26",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2d8c55fa-9977-407b-baff-43827cbe68a1"
        },
        "item": {
          "id": "29f13836-989a-4611-934e-1079f4764b6e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7ab8ba67-7269-424a-adbb-488e4640d94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da1a84b-9845-4b88-b7ae-d7e874400863",
        "cursor": {
          "ref": "98af963a-cbd2-4f5e-9ff0-ac6734e0627f",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c4201bac-1f4f-43b0-899a-333a88367641"
        },
        "item": {
          "id": "0da1a84b-9845-4b88-b7ae-d7e874400863",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "fd1ab9e5-fa86-43a9-8d49-29a5ad43a121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d31b8b-b5e6-41ce-9906-8c7a05237613",
        "cursor": {
          "ref": "f4cdf633-efc6-4264-9be8-ef73172e7c84",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "044c9ca5-859d-4534-9b1f-468f5dfa5aff"
        },
        "item": {
          "id": "c8d31b8b-b5e6-41ce-9906-8c7a05237613",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "046994a3-6c83-45db-bbba-10d73e9da2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef317455-501b-4c2e-99be-ff0382229d0c",
        "cursor": {
          "ref": "055081b8-a8f0-4549-b275-fff42e68a6f0",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9a70e751-013a-4efd-8204-f8054cfa2d22"
        },
        "item": {
          "id": "ef317455-501b-4c2e-99be-ff0382229d0c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a65f5b1f-fb4e-4463-a3cf-81f8c617f91d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e08b1b-55e5-4580-a3b4-019ce6b80df0",
        "cursor": {
          "ref": "afb79359-625f-491b-8126-6049adadf562",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "58fad4df-2be3-4b51-b497-b7e7a5079d51"
        },
        "item": {
          "id": "e5e08b1b-55e5-4580-a3b4-019ce6b80df0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "074e46a0-3a31-4e26-8e00-3143ae603387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ed3db6-8ca4-489c-a290-a2c0fedf88cf",
        "cursor": {
          "ref": "ee03a800-3f6d-48e9-b82a-ee018b903b2a",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4dc5b513-ad31-4fa2-a0ab-72d70393a216"
        },
        "item": {
          "id": "b8ed3db6-8ca4-489c-a290-a2c0fedf88cf",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "36f9bb72-c59f-4cc2-a297-fae639dcb46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b1020c-632d-4927-9b35-3d09bbdf5c75",
        "cursor": {
          "ref": "415b3c62-6bb9-45ee-b577-489f6db2c911",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "17490699-efc6-4260-9ba5-6d63f8d52a99"
        },
        "item": {
          "id": "d3b1020c-632d-4927-9b35-3d09bbdf5c75",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "37f35171-e911-4f2b-8d28-b5ce8be8c774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2510b91e-7993-4f97-b058-ed6b107edffa",
        "cursor": {
          "ref": "1bf0e36c-c575-4789-91c0-ab3416e849eb",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e0fa3bc9-1860-495c-ae26-633636085d72"
        },
        "item": {
          "id": "2510b91e-7993-4f97-b058-ed6b107edffa",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c4749470-56b1-4f36-b61d-6af80324e5de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231da925-2c1a-4d9d-9fb9-aee69641e7f4",
        "cursor": {
          "ref": "51f54919-1830-4c63-bdc6-8d4cb2686343",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9741d381-86a9-4d87-9012-3c127d0c6928"
        },
        "item": {
          "id": "231da925-2c1a-4d9d-9fb9-aee69641e7f4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3258d560-137e-4b49-b6e5-1f3d5a9c7379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be198b8-0ffd-410d-b9fc-6c2ad4d9c192",
        "cursor": {
          "ref": "3268fa85-cb8c-4701-8e82-0d237a3323a7",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "268df2b3-5b65-4356-b10c-a1f53b342bf7"
        },
        "item": {
          "id": "3be198b8-0ffd-410d-b9fc-6c2ad4d9c192",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "80103944-880d-461e-9a55-845e5bab4427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18fe045-dce8-4c92-9620-6d61b0f958bb",
        "cursor": {
          "ref": "68a02f15-924c-43ec-9b25-f29b687e8d37",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "97e7a615-3d6d-4396-8226-c1738da4d11d"
        },
        "item": {
          "id": "d18fe045-dce8-4c92-9620-6d61b0f958bb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3605921c-fcbe-42f2-a7f5-c854b587d54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11344c25-36f9-4e41-a3f0-11bc64f6501e",
        "cursor": {
          "ref": "5abc1d7e-93c0-43a7-b557-672c1d0163a1",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d80ec17b-0d9b-4444-a373-15249831b109"
        },
        "item": {
          "id": "11344c25-36f9-4e41-a3f0-11bc64f6501e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "128c25e2-e611-43e4-9016-e8a64ff43e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b42391-eacc-423b-9cf3-6a1314d8a72e",
        "cursor": {
          "ref": "d6765f83-5063-4149-b81e-029463a28ad1",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a6ea704d-3412-413a-b30c-3e1cc7152fbb"
        },
        "item": {
          "id": "43b42391-eacc-423b-9cf3-6a1314d8a72e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "272cf68a-da0a-43f2-91d6-da482dbd63c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae137003-1412-455c-bfde-ec9c55f56bb8",
        "cursor": {
          "ref": "0d3b179c-1c6e-46fd-a690-1e0b1b0b6367",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "85e1d555-4e17-4f54-b508-3e4a2c7178ed"
        },
        "item": {
          "id": "ae137003-1412-455c-bfde-ec9c55f56bb8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c5381f9f-4793-4078-b67e-d7c8280faca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92de3180-1eec-41c4-ae74-7f5c72189cba",
        "cursor": {
          "ref": "1b9438cb-5fd7-4e27-a66f-ba6ae3c2f56b",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "65f2013d-1673-4114-9d14-c26345495363"
        },
        "item": {
          "id": "92de3180-1eec-41c4-ae74-7f5c72189cba",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "98c27dda-3a30-4a07-9b2c-d37d7b8b0e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8681ca8d-7a43-491d-9f72-15dabc3e3fd6",
        "cursor": {
          "ref": "3a95f5d7-4e7c-404f-8c70-cb003022224b",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2b0e0c4b-30d3-40ee-a083-5b1ce3675ecc"
        },
        "item": {
          "id": "8681ca8d-7a43-491d-9f72-15dabc3e3fd6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6ca1d232-76f9-4c21-b770-ba8fd322d1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73008d33-823b-4c0d-93e2-9142868422f4",
        "cursor": {
          "ref": "ae5c2115-75a5-4c0b-85ec-3ebabb5c8d47",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "70226fbf-26f6-4750-9036-f0080cb3decd"
        },
        "item": {
          "id": "73008d33-823b-4c0d-93e2-9142868422f4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d6c82836-831e-40cd-a64e-0fe7cd888c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16bc1f3f-e1a2-4bc5-b5a0-2fb99597db54",
        "cursor": {
          "ref": "f290dc27-00c7-4541-bc09-e68b8b2e1057",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0bb81328-e742-4ab3-85c1-f1594e840687"
        },
        "item": {
          "id": "16bc1f3f-e1a2-4bc5-b5a0-2fb99597db54",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5a96999d-3993-4867-bb89-4d58af0f0df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8834337-0121-4044-823f-2a094684ff68",
        "cursor": {
          "ref": "9b404c86-492f-445a-a62e-5fd851c90716",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8ee3862a-a889-4a4c-8453-6ba58e77368d"
        },
        "item": {
          "id": "b8834337-0121-4044-823f-2a094684ff68",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3c74eca4-b628-4c45-8599-ecfc02c40c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe8bde3-bc66-47bd-83b7-5f0769f37aee",
        "cursor": {
          "ref": "1ce83172-326d-4638-8d16-3513cdbafb2c",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "70ad99d4-68cb-4e12-a365-5ffe497ae387"
        },
        "item": {
          "id": "afe8bde3-bc66-47bd-83b7-5f0769f37aee",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ea08154a-caa3-4bf8-a9fe-3483cfbf22da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4d99ba-3d66-434a-a46c-c365a3c7bbcc",
        "cursor": {
          "ref": "7d03769a-c130-49a7-ade3-25df7591df82",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0a960903-a240-4595-9c97-a68b3c202680"
        },
        "item": {
          "id": "3c4d99ba-3d66-434a-a46c-c365a3c7bbcc",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bca604b1-df51-4f76-b463-afd0b1e1082e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68834702-a65f-4dc3-972c-67f333931bdc",
        "cursor": {
          "ref": "8e9d3559-f57b-45bd-833c-15020d58f5e9",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3bfd7bb5-042d-421e-971e-5236ed881595"
        },
        "item": {
          "id": "68834702-a65f-4dc3-972c-67f333931bdc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ff30edec-8039-43da-b16d-0516b26ce696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fd9909-bfa2-441b-9eba-467c4ffdd133",
        "cursor": {
          "ref": "36120d75-0676-4b79-b536-eeb36953dd26",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1614bfb7-dc73-4584-a2bf-d243c1a0cf6d"
        },
        "item": {
          "id": "f0fd9909-bfa2-441b-9eba-467c4ffdd133",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5666e8c1-3642-46af-9a39-3fbcfdb090fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb6230b-766c-4a81-b6aa-675e1d31779f",
        "cursor": {
          "ref": "3e069f17-5523-40f8-b60b-3b4d2f2387dd",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9bf1c43e-36ec-4b0d-bbee-590c92ad75fa"
        },
        "item": {
          "id": "bfb6230b-766c-4a81-b6aa-675e1d31779f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "606b7e50-6fac-433e-a932-d60d750be19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f63cc8-7c2f-4f78-9a1b-60044671ce0f",
        "cursor": {
          "ref": "13b61723-17e8-49d6-847c-727d8cae0ef8",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0be4cfc7-541d-4e7f-a9e9-14846e9a6b90"
        },
        "item": {
          "id": "86f63cc8-7c2f-4f78-9a1b-60044671ce0f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "bdad0676-ac9e-4ed5-ab01-04fe8d2a054b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8409192-3a5c-4e5e-bc99-871789b021f7",
        "cursor": {
          "ref": "efc8febb-20fa-4663-8854-3139d97bb003",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3b5eacdf-285c-45be-b9df-bfbc53770399"
        },
        "item": {
          "id": "a8409192-3a5c-4e5e-bc99-871789b021f7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3a0e72d0-aeec-4042-88df-165374f2243b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ecd583-7a88-4097-8e3c-dbefec59670c",
        "cursor": {
          "ref": "064b4118-a7f9-4dd0-9683-5e0ad0f2e56a",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1643091f-4f78-47d6-bce1-15e42b4ace05"
        },
        "item": {
          "id": "20ecd583-7a88-4097-8e3c-dbefec59670c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "17f0e23a-b9eb-4089-9138-69f995815973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eee7721-793b-45aa-97e3-cef1f1fa4cba",
        "cursor": {
          "ref": "2fecc166-8f0f-41fb-996e-8c31190b0fdc",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8ffdc5f0-32c4-4bdb-9952-9857d95d6d18"
        },
        "item": {
          "id": "2eee7721-793b-45aa-97e3-cef1f1fa4cba",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "25bcbcaf-95b4-47e1-b0ca-360e3bfd2746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0845c3f-cda7-45e5-9bce-285983757dc1",
        "cursor": {
          "ref": "c393be38-b7a2-4633-a3f9-12a0db36fa3e",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3db49bce-f699-4de0-b645-15ba5ba765a5"
        },
        "item": {
          "id": "b0845c3f-cda7-45e5-9bce-285983757dc1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "56765ef2-f5ee-4925-b0ab-59cb243a71f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db4a215-10a8-4e1e-9b28-ec52c66513b0",
        "cursor": {
          "ref": "e0fdb8cd-12d8-471f-991e-94b4b6a3311b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "68791c82-b76f-4f60-97b6-8ac00f4d1e2e"
        },
        "item": {
          "id": "9db4a215-10a8-4e1e-9b28-ec52c66513b0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cc87d9fa-f9b9-4e16-828c-66c3b0e049b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1500b3f-9813-4afb-897c-4e8b43775438",
        "cursor": {
          "ref": "4403a3bc-894b-4648-8955-2bd679e8b325",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "068d56e1-b96b-476d-96ae-0f4a97d387ec"
        },
        "item": {
          "id": "d1500b3f-9813-4afb-897c-4e8b43775438",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4d3b83b7-f85d-4b34-ac16-4801fac876db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20565e42-0176-4dfd-a28c-86d62dd89dd0",
        "cursor": {
          "ref": "12cf14bb-6ac0-4ba6-bc1a-8cdcbdd4e6e1",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "18fb3145-5313-4624-9d48-413386dbcb06"
        },
        "item": {
          "id": "20565e42-0176-4dfd-a28c-86d62dd89dd0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "756b6e70-7c89-4649-8e13-5b4fd440093c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4c1fbd-df74-4c2b-a7cb-d9f736a2bf9a",
        "cursor": {
          "ref": "dfdd5a84-2ae8-4eef-9ee0-858129bd3791",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5dd6cb1d-46a5-479d-a271-0d3f80fdfd79"
        },
        "item": {
          "id": "6d4c1fbd-df74-4c2b-a7cb-d9f736a2bf9a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f1229d35-f5d5-4752-bc44-a3254de51437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d85c95b-5b78-4c37-904e-201e8f721155",
        "cursor": {
          "ref": "8a451d01-ebe2-4228-be0d-35f8bf39955e",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "48818d7d-9544-495a-a380-1198c491e9cd"
        },
        "item": {
          "id": "8d85c95b-5b78-4c37-904e-201e8f721155",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "980cbf58-ac12-49ee-97cd-8dd53aef85b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8406aa65-4d85-4338-b1a5-ff23413dd4c7",
        "cursor": {
          "ref": "5ffcf281-0816-4c92-9ad7-ab74cee1e4cd",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6ac5b0ef-e120-49d2-8390-e87eae6a1875"
        },
        "item": {
          "id": "8406aa65-4d85-4338-b1a5-ff23413dd4c7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4ac7ab8e-9d21-4981-bd07-c5a0aad1622f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28df3235-2474-44f0-a8ca-29a161988a81",
        "cursor": {
          "ref": "95c2f9ed-f007-4b5a-9a37-c67b46c776b2",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3d413e74-afa5-421c-aaa8-c7b400cb507c"
        },
        "item": {
          "id": "28df3235-2474-44f0-a8ca-29a161988a81",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a50baf84-a342-4cd6-ba84-9e34ce5516eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4c549f-1b07-4f68-b339-ad69cc83c791",
        "cursor": {
          "ref": "fc8d1d72-2284-42b3-af06-104ffe5b7708",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "81e33c2a-75e4-41dc-ade7-ef3e69b40b13"
        },
        "item": {
          "id": "4b4c549f-1b07-4f68-b339-ad69cc83c791",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "447200a6-83ca-4c8a-8af0-4322dd53f95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db11e28-6cc7-4b3b-967c-e044f8fbd77d",
        "cursor": {
          "ref": "847a735b-1edd-4f03-86bb-2a897282a8bd",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "071632c1-25e1-43e2-ba1d-37744e0a2d3b"
        },
        "item": {
          "id": "8db11e28-6cc7-4b3b-967c-e044f8fbd77d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c22731f1-e8e2-4095-82dc-b05922dce94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc776bc5-2253-489c-9a16-28e1c25c9ac4",
        "cursor": {
          "ref": "55f1881f-2975-43aa-9192-e4007d781725",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b8d06a4d-9e01-430e-a886-913273702d0d"
        },
        "item": {
          "id": "bc776bc5-2253-489c-9a16-28e1c25c9ac4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "48f36cc3-afcd-4dad-b549-684351dcbf83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427d8090-8c43-4468-b0f7-e87907aa9a4a",
        "cursor": {
          "ref": "49f9b897-3ba9-4ef8-8779-cca337e1c4b5",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "50f1c2bc-3820-4ae9-a037-c09110cfab47"
        },
        "item": {
          "id": "427d8090-8c43-4468-b0f7-e87907aa9a4a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "bfee397f-7571-4931-8694-6664a4defbb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f95d0b-bf56-40b5-8338-5e44f826a764",
        "cursor": {
          "ref": "7684368b-893b-4f03-9bb3-f53f737f9263",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ec45714a-8b04-421e-8096-88fbd5287d02"
        },
        "item": {
          "id": "49f95d0b-bf56-40b5-8338-5e44f826a764",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fabcc918-9e64-41ac-8a10-6c85599f6520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e0fd63-9283-40e5-9a11-10b0c29fa1ca",
        "cursor": {
          "ref": "277c2a64-a5c8-456e-8c8f-672d24b1d5de",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fb11375a-ee08-4f1d-85fc-f235b2aa5840"
        },
        "item": {
          "id": "c9e0fd63-9283-40e5-9a11-10b0c29fa1ca",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8f7d09a7-c5c3-4735-a347-639d8d6a3992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc40ead-05d4-480c-bc11-5cfc3b949d94",
        "cursor": {
          "ref": "fced68bf-c31a-4923-9d61-035fff3d2a68",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e66e9dea-67f2-420e-bd55-b91b3ac322f4"
        },
        "item": {
          "id": "efc40ead-05d4-480c-bc11-5cfc3b949d94",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "21405a53-839e-4851-a960-cec63330bafc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ba72ba-e238-4798-82e9-a2bd4fd8f253",
        "cursor": {
          "ref": "d3168837-59fc-4199-b121-d5fb487200a6",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "77c21684-acf9-47b0-a7f9-b19288c51097"
        },
        "item": {
          "id": "52ba72ba-e238-4798-82e9-a2bd4fd8f253",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e79e7752-32f1-4f7f-8e04-4908da8ec0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043146f6-fbe5-4b6d-93c0-520bac597588",
        "cursor": {
          "ref": "ecdc64c3-9f13-4333-9d25-2113281e9638",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fbf6a89b-a806-4ec9-bb33-85a5c69a9850"
        },
        "item": {
          "id": "043146f6-fbe5-4b6d-93c0-520bac597588",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2758ef90-a07d-4218-8d00-6e8720b38979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7408bc8f-bc49-4bdc-9fc5-635e3d6c3640",
        "cursor": {
          "ref": "19770994-0047-4c29-8cb0-d86123ec0085",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ebfd60b4-86bd-4049-ab76-6a4a05505eb6"
        },
        "item": {
          "id": "7408bc8f-bc49-4bdc-9fc5-635e3d6c3640",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b5b566df-5be0-4e89-be37-fd3f9c5b5370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0a7e84-6385-476b-ab87-9da1136c0238",
        "cursor": {
          "ref": "0218460e-ab09-47a3-83dd-88f9e4b91e7f",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "98010909-f2cc-4d4e-98b0-4db9633fc486"
        },
        "item": {
          "id": "0a0a7e84-6385-476b-ab87-9da1136c0238",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b75ff31c-7f6f-46b3-8d52-63acd0d52e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a8a1a5-6432-43df-ab39-895e644ff83e",
        "cursor": {
          "ref": "357b3dba-082f-487e-b495-23fbef021bb1",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "987e6073-81da-4a4a-87ef-8bc347becc31"
        },
        "item": {
          "id": "21a8a1a5-6432-43df-ab39-895e644ff83e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "944c38b9-cf24-4d1a-9122-1405d9c6d977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71d053d-7055-4d6a-8e33-edb76aa74b5e",
        "cursor": {
          "ref": "86e3fde6-e4f0-44f7-835d-b75a0689599c",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b1a55f6e-8f07-4639-a96b-61e1c7272290"
        },
        "item": {
          "id": "e71d053d-7055-4d6a-8e33-edb76aa74b5e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "eecfab54-7bc2-48af-8517-6cd57b25d8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ae6f83-f065-489c-8ef6-4b123ba2b5f2",
        "cursor": {
          "ref": "885a354d-31f0-4248-b7ab-61a7007a3562",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "01f88d0a-3496-4ab2-8794-db7f9414f671"
        },
        "item": {
          "id": "96ae6f83-f065-489c-8ef6-4b123ba2b5f2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "71d88cf2-128d-4f88-8f4d-6264f5c5fe44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be25751-761f-4965-9d81-7e6e845decb8",
        "cursor": {
          "ref": "d70c04fa-f3a6-422f-a5af-c41676ca1551",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7dda0b96-848d-4116-a1a7-3315b561c861"
        },
        "item": {
          "id": "1be25751-761f-4965-9d81-7e6e845decb8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3bc0f1fc-cd1b-453b-990f-5876f0fba161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b64327-cdf0-4c04-80d7-3ca08ef37d4c",
        "cursor": {
          "ref": "c8d2e6da-2d38-460e-a675-692407cf5963",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1840f7c0-fb57-4757-b6be-ab96598e8395"
        },
        "item": {
          "id": "78b64327-cdf0-4c04-80d7-3ca08ef37d4c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "83f8011f-f5fc-4475-9e17-17e3b892de52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0490b1-bc6e-4da8-b3a0-68625b1a325b",
        "cursor": {
          "ref": "460561a8-a27b-4742-a97e-fa280e9b3be7",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c6839b1c-49aa-4118-a20d-7b0047032f03"
        },
        "item": {
          "id": "6e0490b1-bc6e-4da8-b3a0-68625b1a325b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8f8e16ac-4b63-47ab-9572-493939dd7fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82b06ac-aa46-47c5-934f-97fe63552d7b",
        "cursor": {
          "ref": "626b8087-66f5-4153-aace-ce14ed37fdf6",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3b09cd2d-218c-4ffd-bcd1-dcf58a8eaeba"
        },
        "item": {
          "id": "d82b06ac-aa46-47c5-934f-97fe63552d7b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b37a4adf-8324-4b4a-be0e-5e7f03570382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42dcd8ff-dccd-4ea7-ba64-92bc1f3dee6e",
        "cursor": {
          "ref": "d3c8dc5e-1cf8-4e6b-98dc-d561070e5e6d",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6acd2e27-5fd6-42ea-818b-596e7e6b0608"
        },
        "item": {
          "id": "42dcd8ff-dccd-4ea7-ba64-92bc1f3dee6e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e726101c-1367-4ffb-8893-fe2e862fe5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f774ff-1cad-48b5-8e4b-05a903102ca1",
        "cursor": {
          "ref": "2cd95059-28b4-42d2-a468-6c4ec17c8846",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ae90005c-99c0-427c-b938-541499fb83cb"
        },
        "item": {
          "id": "c4f774ff-1cad-48b5-8e4b-05a903102ca1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8ed54518-2085-43f4-9cf6-995eeb6a1533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9469c04e-fb15-42f7-b9c7-998df8855d13",
        "cursor": {
          "ref": "654bdc4d-d0b1-461d-bd7b-8890188145f3",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fb9abc5e-13f7-4d4c-a4e1-52240a09e6b9"
        },
        "item": {
          "id": "9469c04e-fb15-42f7-b9c7-998df8855d13",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5558693b-7e73-42e1-afa9-35f47dd157b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8276f025-9bb2-4902-97b6-14b1fa3ab666",
        "cursor": {
          "ref": "e95526fa-80e2-4a34-a6f1-f608a21ce0e7",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0b7bdef9-d7a9-46fc-858a-bc6cb5712aad"
        },
        "item": {
          "id": "8276f025-9bb2-4902-97b6-14b1fa3ab666",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a5d82065-7c27-4125-9633-7c05b04cbb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd5fac6-889e-4b4d-8b57-2408ecdd3b77",
        "cursor": {
          "ref": "3b5b5c10-6eed-44b3-a9ef-4a5c5b120fe2",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "791d5474-207d-4df8-89b5-889ee754448b"
        },
        "item": {
          "id": "bdd5fac6-889e-4b4d-8b57-2408ecdd3b77",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "35ee6f3c-0e69-4444-82ac-01582dc6f62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23271b5e-fb21-4759-b2e9-b84cd9723760",
        "cursor": {
          "ref": "fdd458da-f93c-4024-aa9d-4f36765aacf4",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3aba5849-2351-4158-8e3e-425100ace597"
        },
        "item": {
          "id": "23271b5e-fb21-4759-b2e9-b84cd9723760",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5d9c47b8-a77b-4673-9dac-088cdf155c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9df0038-afb9-4f84-bddd-c85b7527637c",
        "cursor": {
          "ref": "9142543b-04f6-4eec-bddc-01460af1cb74",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f82f00ab-f8fc-4a17-a168-04669b3c4641"
        },
        "item": {
          "id": "c9df0038-afb9-4f84-bddd-c85b7527637c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8df72a1f-49a1-4448-a5a8-6ef7662de558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b73c14-07a8-45b9-90df-d8830fc1b4ed",
        "cursor": {
          "ref": "1e2ba9ad-4883-44e7-a1fe-8fd0da881cc0",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "36e47957-23b4-412c-8b44-05b4359a1532"
        },
        "item": {
          "id": "51b73c14-07a8-45b9-90df-d8830fc1b4ed",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "fcf2f1ea-7a9d-4518-aa55-f79719526834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fafdd57-1c8f-4928-9bc9-faf71eaf954f",
        "cursor": {
          "ref": "43c36196-42d0-4b19-b91f-3122e3a822c9",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3aa59a61-b17b-4a1a-b113-55cd79cd0292"
        },
        "item": {
          "id": "4fafdd57-1c8f-4928-9bc9-faf71eaf954f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "44412dd9-b854-4f56-8711-ee88aa81b12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a32ac94-d6e5-42b4-bb6b-cf24df76190d",
        "cursor": {
          "ref": "9d3f74f5-1f91-4260-a8ed-9a138e26e90f",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "86a17559-ce02-47c6-8044-43a26e409122"
        },
        "item": {
          "id": "2a32ac94-d6e5-42b4-bb6b-cf24df76190d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "09a9009f-1eae-4eee-8719-8f700d423855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c06864-7525-42d5-8922-0bcddf801de2",
        "cursor": {
          "ref": "8ee6d956-0fa9-4828-af10-00e9a4fd504e",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e826b982-2fcc-4592-8b28-a1e335586692"
        },
        "item": {
          "id": "34c06864-7525-42d5-8922-0bcddf801de2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6c53a80f-60ba-482f-ac20-839c9eaf7008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6582c7b5-3617-42f1-a042-c4a2abe36830",
        "cursor": {
          "ref": "b9e67a75-09e8-459d-b2b7-dcc3b60e061b",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "42ef82e6-b92d-41e5-9fff-5bf97557c3bd"
        },
        "item": {
          "id": "6582c7b5-3617-42f1-a042-c4a2abe36830",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ade29441-190f-4a38-bfb0-4beaf5b42341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2349230c-6ff6-4fb9-ac26-8e52163c6ea7",
        "cursor": {
          "ref": "15706fdb-fc8d-462a-8c3b-b8722bcc46e7",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0a79623b-92f7-4ee7-8f16-0d9f2837df69"
        },
        "item": {
          "id": "2349230c-6ff6-4fb9-ac26-8e52163c6ea7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7021da8e-3407-4c1c-a772-c132d31f09c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d9d9d2-f591-4aed-991d-75a32928bb95",
        "cursor": {
          "ref": "f3646fdb-f6d2-424b-99df-1a98b0e3844d",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d7c95068-d847-4bfb-9677-8e407b3750a7"
        },
        "item": {
          "id": "46d9d9d2-f591-4aed-991d-75a32928bb95",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f24480d1-ec26-4941-a061-a1a08ba4c97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3521af07-6048-409c-a441-19fa9016f44e",
        "cursor": {
          "ref": "58db750d-af31-435d-b2d9-8e33f79d82b6",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9c302d1a-f21b-40fa-bab0-6a1d3ca06588"
        },
        "item": {
          "id": "3521af07-6048-409c-a441-19fa9016f44e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8800cc56-772a-49ae-ba7f-c21011327915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a158624b-3d0d-4b83-87a4-c8638735041a",
        "cursor": {
          "ref": "5709e243-db62-4969-8e36-6ccbe782753e",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "cc3da4eb-6ca7-4f3b-8c8f-0ca5b42fc77a"
        },
        "item": {
          "id": "a158624b-3d0d-4b83-87a4-c8638735041a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9ef8ec9d-6076-490a-b0b9-ccabc5137918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32a8b32-fdec-4e46-ac1f-061fb0231382",
        "cursor": {
          "ref": "78cd7100-9522-4072-881a-d66358795edc",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ef2de836-93f9-41f0-86b6-624fbd08c94c"
        },
        "item": {
          "id": "e32a8b32-fdec-4e46-ac1f-061fb0231382",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "719c7d18-fe46-41b6-afe0-537791118c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2785bb9e-e04e-4f23-8e37-1fa7759fa6f5",
        "cursor": {
          "ref": "91cbea04-4494-47af-b882-95bee74b981f",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "03462eca-5c85-40d3-b1cf-119b870dfb18"
        },
        "item": {
          "id": "2785bb9e-e04e-4f23-8e37-1fa7759fa6f5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a11b4ea2-1028-4e05-84e6-e3281957ce40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a1fac9-3981-4ced-a851-b15bf5f79fb0",
        "cursor": {
          "ref": "81ca0360-021d-4fd1-861a-5b17202fda88",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "49871283-052a-4f82-920d-da73ed9c5690"
        },
        "item": {
          "id": "a5a1fac9-3981-4ced-a851-b15bf5f79fb0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7373705b-6ba7-4644-87d2-bf85e8a807ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33406f8c-535f-4bc7-bfbb-05019e254d3e",
        "cursor": {
          "ref": "aadb83b3-1ad4-4ff2-bcb0-6451a35ee1aa",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d788a957-f1bd-4d46-88c3-32f5ff65e937"
        },
        "item": {
          "id": "33406f8c-535f-4bc7-bfbb-05019e254d3e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8a001ff5-959f-4efa-a15d-8e580630b600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668fa228-94af-4af5-850a-cc6c596d6e04",
        "cursor": {
          "ref": "f7c59fc4-41f9-4ab9-ba46-5ff9630a193e",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "be17e4ca-3255-487b-ab46-f374ce822205"
        },
        "item": {
          "id": "668fa228-94af-4af5-850a-cc6c596d6e04",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "533b8240-2678-4462-a4c4-25a2185a5c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8917e85-5e41-4fa3-b3df-1a089af90ffb",
        "cursor": {
          "ref": "745ce6e6-a905-4f81-b285-9f7788c53287",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "eb9c6cd4-e91a-4474-b2b6-e0b2eef813de"
        },
        "item": {
          "id": "d8917e85-5e41-4fa3-b3df-1a089af90ffb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9a0b9c7e-c2a8-4b6f-b0d7-1a4743199c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a405a851-4e70-4c33-8b96-84f1d7dbbc68",
        "cursor": {
          "ref": "b6863983-0121-43e8-b8a5-3989921dd191",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "081e88a7-7aca-4e23-aee8-ccf41aa59d4f"
        },
        "item": {
          "id": "a405a851-4e70-4c33-8b96-84f1d7dbbc68",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7c9877a2-7f40-429b-8db9-2ca85adc4c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8062678-19f7-49db-9b7f-20706455184a",
        "cursor": {
          "ref": "2eb28468-1fed-4d75-be1d-405d3a12d2c1",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "056d739e-7f61-4c5d-acf6-40a49159c20b"
        },
        "item": {
          "id": "e8062678-19f7-49db-9b7f-20706455184a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "191b65da-d4ea-44ca-95ed-94f51948917c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d7234e-86ef-49ce-a107-2c44e912ac2d",
        "cursor": {
          "ref": "9afac853-47e7-4841-8cc0-8ddb4a232afa",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e4df37ce-840f-4441-8fd3-a65284023f8f"
        },
        "item": {
          "id": "69d7234e-86ef-49ce-a107-2c44e912ac2d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "aab5b75a-5eca-414f-ae4c-38852d34640b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48101476-08e2-4d29-bb05-bbd2360084af",
        "cursor": {
          "ref": "f66dcbc6-cc45-4571-a3b5-f0956ec08cde",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3a747b08-1bb2-46a9-92d7-a620f59c933d"
        },
        "item": {
          "id": "48101476-08e2-4d29-bb05-bbd2360084af",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a46ef90a-01f4-48a8-9b9b-5011632b908d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56005ce8-adc3-4985-8722-975a5429d027",
        "cursor": {
          "ref": "4003ab87-098e-46dd-88fc-af25f3c750b1",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fe1ea6aa-f42d-46a0-9833-61aec3fb8d63"
        },
        "item": {
          "id": "56005ce8-adc3-4985-8722-975a5429d027",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "11cb4fb3-d40f-4b65-9513-d0c7db2bc692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88807fa6-aef1-4aae-a267-03d984502e6b",
        "cursor": {
          "ref": "42318eb5-27b7-4d1f-94cb-c4385f44a940",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "389da8bb-a922-4862-95af-499591e83f37"
        },
        "item": {
          "id": "88807fa6-aef1-4aae-a267-03d984502e6b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bb0bd9b9-8261-44b2-af66-70bd15f2c4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd09ef8-c89b-4195-8ee0-076bd0eb8eb6",
        "cursor": {
          "ref": "2b767a25-cff3-4934-8856-776d882f9509",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f62c9b7b-1280-415f-918a-c6dbab70d68a"
        },
        "item": {
          "id": "2bd09ef8-c89b-4195-8ee0-076bd0eb8eb6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1ad39bff-3938-427a-8236-647438ab4628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b39fa1f-378b-42b3-917c-ecc596d9f7e4",
        "cursor": {
          "ref": "f236fcc0-e3d7-42e3-9965-9868366a8254",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fb20c7cb-6779-4fa0-bc7a-2f98a4d389a7"
        },
        "item": {
          "id": "0b39fa1f-378b-42b3-917c-ecc596d9f7e4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e470a450-b8bf-427a-a7dd-5d92dda1ccc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6aa2cc-f23b-4b57-a3be-1d52c23de929",
        "cursor": {
          "ref": "1f5850c4-254a-4ed4-a8b4-7868fcbac934",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a4f5604d-7d88-4fcb-8fdf-7dd5303c4814"
        },
        "item": {
          "id": "2d6aa2cc-f23b-4b57-a3be-1d52c23de929",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5912bd8a-7201-4f7b-8bd9-0c666863bf38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001aef27-f252-4ea8-81de-87a0ef27c89d",
        "cursor": {
          "ref": "d604fbfc-20e9-45e5-8c5f-88e7edc20b56",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2ccef086-ed90-411f-9368-49a35fc1ee01"
        },
        "item": {
          "id": "001aef27-f252-4ea8-81de-87a0ef27c89d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ca45abe9-9120-4cde-85c4-c4a877345e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c427a9-68ba-475f-9fc1-6e7326e88972",
        "cursor": {
          "ref": "e2309328-ce6b-4c0f-afce-851ff55670ba",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b79501d9-1a4e-47a5-a0ff-842669ce0e3c"
        },
        "item": {
          "id": "78c427a9-68ba-475f-9fc1-6e7326e88972",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4dc33fd8-f3be-45b1-8b46-6be9a915becb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d8a49b-a299-4f87-9e15-77694bd4c53b",
        "cursor": {
          "ref": "d289754b-eea3-4cb8-ba64-aedd05c453fc",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b6adb218-4804-409f-a302-47d2625226d0"
        },
        "item": {
          "id": "c0d8a49b-a299-4f87-9e15-77694bd4c53b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d6e9a44f-42b7-4d1f-825e-2e4009664b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1212dbd7-afcd-4909-bd96-179de7b57d50",
        "cursor": {
          "ref": "02dc40aa-b8b0-4c93-932d-e36c533e082d",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "71196dde-cd19-4662-898b-a4607ff168ab"
        },
        "item": {
          "id": "1212dbd7-afcd-4909-bd96-179de7b57d50",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c5befb93-c3a9-40b4-83ab-e67086b00826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef61e123-0efc-4b6e-a838-0a975090d721",
        "cursor": {
          "ref": "c7b23380-82ae-48ab-8f4d-f74618033d82",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3696c406-d7db-47a8-8526-b9603d93faf0"
        },
        "item": {
          "id": "ef61e123-0efc-4b6e-a838-0a975090d721",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c5e97fa0-dd53-4d62-88c9-e1875f20524b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e734733-3800-4023-850c-40ab03b85edf",
        "cursor": {
          "ref": "17eaab65-de5e-42a4-a45d-ba1567a6e733",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8312abd0-070f-4b19-a3b2-d043bff3fb20"
        },
        "item": {
          "id": "3e734733-3800-4023-850c-40ab03b85edf",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "cb6d3441-22f8-4598-adf4-40a6e36d506a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f93555c-45dd-4aa4-9a20-cd65e13a1f62",
        "cursor": {
          "ref": "d2418b59-f6ef-4219-adba-94e436a4232e",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "79b276b2-e2c1-4425-a12b-ff957ea8cf57"
        },
        "item": {
          "id": "5f93555c-45dd-4aa4-9a20-cd65e13a1f62",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a15ba177-7601-4544-9373-48dcaf93ebfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9e1cdb-735c-47cc-b331-99e55529d90a",
        "cursor": {
          "ref": "b079dc38-0986-4294-8184-9ccc776febf8",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8d45f17f-b3b3-4c9f-98cb-ec1831cd6854"
        },
        "item": {
          "id": "fd9e1cdb-735c-47cc-b331-99e55529d90a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6b1d47e0-467f-4639-a0a9-bb6e57b42542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d30db21-1c87-454d-b9c3-9ae2c225283d",
        "cursor": {
          "ref": "6d2e1374-476b-407f-b3f5-f250a83b0d3d",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "90b759b1-85c5-4903-b62b-af52d798f4c1"
        },
        "item": {
          "id": "4d30db21-1c87-454d-b9c3-9ae2c225283d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4d8ea009-4907-4aa7-9331-e5d524d76564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0450c35f-b219-480b-9b65-2d943681c525",
        "cursor": {
          "ref": "8be063b9-c649-4307-9642-fcd407e5c81d",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6d595fc5-4a9c-4aec-9f03-cf4d32963a4a"
        },
        "item": {
          "id": "0450c35f-b219-480b-9b65-2d943681c525",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f7391cb7-bcc7-431b-b21b-575292b5e355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bc831f-8b4d-4cff-a876-70c85e63a3b5",
        "cursor": {
          "ref": "c392d184-9ad0-457d-b93f-bbe0c904f8be",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "51faff2f-dd73-4c15-8fca-59499948ce98"
        },
        "item": {
          "id": "d5bc831f-8b4d-4cff-a876-70c85e63a3b5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "cf6fc51d-7bfa-4b52-b467-0929e74be4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa92438-afd1-4669-b639-b5bebf83ec16",
        "cursor": {
          "ref": "254beaae-28c4-41ed-a529-daf9a894ae97",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "791d1455-75a5-4d95-9d2c-fad822e2da4e"
        },
        "item": {
          "id": "5fa92438-afd1-4669-b639-b5bebf83ec16",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "80478fce-c438-4ef7-af9f-2efe4458b5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838e6e67-1cf1-45aa-bb4d-eaa35e0b65e4",
        "cursor": {
          "ref": "887bb26e-1007-4eb1-80f2-a444ccb3db57",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1995462b-ea5b-4986-a0e8-151566a72eca"
        },
        "item": {
          "id": "838e6e67-1cf1-45aa-bb4d-eaa35e0b65e4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "34a610c2-72c3-4761-85cc-837b865f7354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80487754-598e-4c18-bd3c-bc2dde99c2b2",
        "cursor": {
          "ref": "d8e87bb5-55d2-4e6f-9ace-0992704d6ea0",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6c8d8fa5-fe22-44e6-99e1-8877e885d0b7"
        },
        "item": {
          "id": "80487754-598e-4c18-bd3c-bc2dde99c2b2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "77fe6ee7-5b06-4853-8e8c-c7d43034f7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ba02b5-2093-41d3-8be6-ac299cd17c1e",
        "cursor": {
          "ref": "5297ea79-f0ec-4d86-a266-fdbaf33942b6",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ed933a49-93c4-4cde-a18f-31d3e24f0d7f"
        },
        "item": {
          "id": "f6ba02b5-2093-41d3-8be6-ac299cd17c1e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f6ead966-c4e9-42a9-8ee1-77829888dd2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d983b17c-c2d2-4983-8d93-2b5f3f040525",
        "cursor": {
          "ref": "4aa2304b-4f0d-412c-9ee9-ed1c1b4a4ec6",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "eafd6859-2837-48d8-abc4-03eedadf9a5d"
        },
        "item": {
          "id": "d983b17c-c2d2-4983-8d93-2b5f3f040525",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a0cbe155-619e-4746-b777-287c47fdf5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c01e1c0-d828-47b9-8d84-5eeada27e7d8",
        "cursor": {
          "ref": "d3403478-2cf1-4462-89a6-ccb997c850f9",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8362213b-5009-4d26-9d22-a06d8d13af1a"
        },
        "item": {
          "id": "2c01e1c0-d828-47b9-8d84-5eeada27e7d8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d4e63ca2-3c83-4dbc-bc86-44685bc35164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9590ae23-39ac-468e-91ed-598aa385502e",
        "cursor": {
          "ref": "f8a862eb-96a6-4258-b47e-584a67cb1d9c",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "dd866d84-d3fc-4d82-9bdb-e7b4fb1e4a8a"
        },
        "item": {
          "id": "9590ae23-39ac-468e-91ed-598aa385502e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "997a6b55-b619-4333-a89f-619f2bdc809e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "068ef594-588b-4087-bcb4-8c96de45c36a",
        "cursor": {
          "ref": "5d4c47f5-843b-49ec-9628-81b7cafcbddb",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c8024f00-4ef8-4a03-a11e-0a7e5e0b46d2"
        },
        "item": {
          "id": "068ef594-588b-4087-bcb4-8c96de45c36a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "fdbc60f0-b1cb-471f-ac5c-635afa0e881a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "a330bbf0-0655-4143-9e98-21098b4cf4a5",
        "cursor": {
          "ref": "075a9a49-9cbd-4bc9-ae82-04c9aea38836",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c9a3ba80-61d3-41d5-86fb-96d23c8b8105"
        },
        "item": {
          "id": "a330bbf0-0655-4143-9e98-21098b4cf4a5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3538efcb-4017-4b82-9898-c55bfceef24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "212f1821-b639-4f9e-863c-abf6ad2e1595",
        "cursor": {
          "ref": "d6286559-5f79-42e4-9d1c-22bf4fc54345",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4876f56e-f5f3-4010-8b50-cf7cab3eebb5"
        },
        "item": {
          "id": "212f1821-b639-4f9e-863c-abf6ad2e1595",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b6f613b9-4bda-4c83-91c7-aa2f46cae9f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212f1821-b639-4f9e-863c-abf6ad2e1595",
        "cursor": {
          "ref": "d6286559-5f79-42e4-9d1c-22bf4fc54345",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4876f56e-f5f3-4010-8b50-cf7cab3eebb5"
        },
        "item": {
          "id": "212f1821-b639-4f9e-863c-abf6ad2e1595",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b6f613b9-4bda-4c83-91c7-aa2f46cae9f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b674549-2727-4388-8c3d-7bb9dc72bf8d",
        "cursor": {
          "ref": "508114f1-461f-447e-89ea-21958bc7f9cf",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8d83fb6e-6923-4d7d-837e-307e4f5917ae"
        },
        "item": {
          "id": "1b674549-2727-4388-8c3d-7bb9dc72bf8d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2d889bb1-2218-43ef-bee0-7d88c50cca1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca9debb-df62-43f0-99ba-d839014e2753",
        "cursor": {
          "ref": "8dbc53fb-e3a8-4540-93d9-7d325d764d64",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "199992d2-c2cd-4bac-a57f-bfd66518b7ab"
        },
        "item": {
          "id": "4ca9debb-df62-43f0-99ba-d839014e2753",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "dd2caafa-4263-4b8a-9454-52953ea4a264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}