{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "128c6f30-8a91-4e71-8aa1-cf942e0d5cd1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "25b88d36-0ac1-495c-b8b8-b803984d6842",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ac3d9e84-1c22-4dac-a43c-4febd336e789",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0bf2de58-8d86-4326-aa66-b846ada73272"
                }
              }
            ]
          },
          {
            "id": "8974ec7c-f65c-4847-86d0-d2ef6b446fe3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0be90e9e-1f86-451a-946b-c70deb1b1d43",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "53eacbb6-18dd-485e-8227-acd19e0e6849"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b7b367dc-65c5-48a3-8bc5-6c2a9dfc24ec",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "49990261-cb88-48b7-a208-7356691f8fea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fe3284c4-a934-41b6-8df9-9459a0e0575b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70bbaca2-5fa9-4726-b28f-745d991b1f9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1abfa964-5ce3-4f58-bb3e-bd89ed2907f9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "04d3c828-f035-46db-9c1a-5d1a0058ac86",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f166996a-65eb-4e36-b807-90f49dd058e7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d52ee244-d7af-42fe-94a2-ad32ebcad626",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c8c20e8b-b08e-448a-a3f1-906a72851c35"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b7383f0-a4fb-465c-aa68-4d2a444d7c1d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0b84e67e-0882-49ea-b587-2b430dbfb506"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5036cf5e-1a6c-4de2-9d48-4552ed42bbde",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5de3c7fa-395a-49f2-9747-fd5a4feef491"
            }
          }
        ]
      },
      {
        "id": "a08525b5-29ed-400a-a005-a10bdd4f27fd",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3c83ba65-3b4d-4106-9977-1a9830eb920d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a985df1-b183-4db9-af88-5e671c5b45a4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cc07ad1e-6a7b-4e80-92de-3a1d1e20a42a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04566a5a-8d8e-42e2-a1d9-ec549abab8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73d21f1b-e8cf-4322-b0e3-9c39d5626883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b78a56c-3737-4f4e-aaac-e441ce7d1812",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8531457d-4ce1-4e50-806d-b6a585f30f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08a61ceb-d29b-4b29-9f06-fb1c2f7a62ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a6a3d2-cbb9-4118-a38a-2c9195f2f8a8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3e2a41-4667-4f0a-a317-6cb1c7227996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8cd88eff-4e1e-43b7-be49-568983f784ff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "36f165df-6b02-4187-905d-3239cf35932f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2d9bd468-8962-456b-abc0-f652b85320c5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97129ad-5434-4373-a838-aa3801589770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb6aeed1-900e-434d-b5a1-67225696699d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac940269-dfd3-4311-94dc-78037955ea55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04daf4bd-6a8a-44f7-a50e-51d9da8f23d6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8d8afa6e-5e90-4e7f-b5dd-ba940c8f2840",
            "name": "Positive Testing",
            "item": [
              {
                "id": "67ad41d6-b43c-4513-9e36-dc4455d7d0ab",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66cf1f5a-0aec-4cd7-8203-d341a3a0a3dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bf778e7f-af3f-4f95-97b8-17ab36cb3dc8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06bfabad-120b-4f50-8399-a731e53cd0ef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b031d1c6-205f-49d2-8051-d19bec2f5449"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4067d67-375d-4e66-8353-8bca4149152a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b35aee82-3c98-40d9-856a-40e56a486419"
            }
          }
        ]
      },
      {
        "id": "b78417d9-fd3f-4655-addf-5ac10cbf8968",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "140d1a7d-c679-4785-85b6-76bca0df9711",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57dd6fe2-483e-404c-b231-fd7555b540a0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "36654b30-6dd8-4892-ba5e-64489cf04b80",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5891226-0aa0-49de-9461-e08159806073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341380f6-b863-4b4b-8e5a-3783e82c47d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90602d30-abe9-4be4-8bdc-fcfb1c0e085c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c95ea47d-bceb-4392-b227-2970036e2b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af378f0-82fe-4042-931e-f2629c14e73b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18ed4c1-5a66-48c9-9286-de8f531a059c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "245a6928-caa2-42bd-af17-31b3cb7d3b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3124ee-4ef8-407b-a4c6-dd578a53e816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0bc370f-9870-4d62-a87f-fcba50b48624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262b6f3d-3d30-470b-854b-0ca2fbc91fb9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3319f6-bc6f-4fb4-91d9-9264c5692744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "137e6b32-d6d3-456c-962e-18aab9622817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4096204d-4e65-4df0-ba1d-69a2da9d275c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2689176c-f2bd-4895-a331-75b0ab19684e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33960405-54d3-41e8-b445-6027f0662b51",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0745c1f2-cf51-4e2b-a79c-f0bfff91866c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "625be53f-37f8-4e7a-9ef3-fab6947bda8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b000b486-76a0-439a-a348-d42cab1ecdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "087344f1-bddb-4af6-b327-03e319cf45d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3c4617-cd6a-482c-af5a-906e1df277db",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3861a368-956d-423d-a2be-e0f6301511d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26acc052-9fc3-436c-9567-435ae7a1d452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524ba72b-075f-47b5-beaf-b4f561a5cca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebe2b24c-16cf-4c11-9b00-57a6d7a18c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f4dbe6-2220-4166-9cbc-8a7bc9683fd1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaef65ef-1353-4bf9-9cb3-175243ea83c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41f7ebb7-9367-4682-8541-643572c173b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbbe994-2643-4646-b7e9-ae5da1aa8499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2529f28-4538-4c63-9a60-8fc0d8e88b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c9b626-6790-4579-915f-8233b5c6377a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4949cd85-dbfa-4dbd-a09e-bbb1dd9d95d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd624374-2e14-4b1a-b9ff-988492ae81a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396f98f4-74a4-4997-95df-d6ac2934a946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0e8021b-4fee-4fcd-a10d-2388a7d51fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466d20a1-f1d9-4ad5-a4a1-4fdf1ea9bb93",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "937d0841-c6ea-4b8d-a16c-78a68df7a3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3d738e-f13a-43aa-b126-0deea9b96164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c3523c-bf09-4043-9225-1e44dbfb5176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "220692ed-9a15-4082-9255-549bd107164a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0019a5ab-f348-4a6d-933c-5a59e02d31ac",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553138ea-0d50-450c-b63a-1eb1cad075c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79655056-fd52-49f8-855f-59da6d462d2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7421cebf-b09a-452d-80b4-140da8ab2b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7a604c9-d33f-4cb8-90c7-38f117db983f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d6467e-edb4-4da0-af39-009afae5ddc9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd9c2cf-8673-4f4e-a987-2844addda59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26e3d70-d1fd-4468-8a3c-07d501b9d9f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bdcef35-afb1-4bdf-a953-de407801b135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba507a73-025a-4c3f-9daa-eb615d840983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e57784-1ebb-4400-bb84-337b1da42cd7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed7862f-2937-4e64-8062-d4f478524755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd056af-9dc8-48e5-bc9e-94caee0e0304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1903bd85-5ad2-4c89-8c8c-fab8c6f90572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bae70d12-5ff3-4ca3-a279-d7aa975b6a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb95435c-fde6-4c3f-9c8b-71d318be1930",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77326630-00e4-4ee0-8934-4a1031c85db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd6a73c-6b05-418f-b6e1-c2310c5893ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78967c2-73e5-49ca-950b-1c3ff970671a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2276a51-d80d-43b6-a551-4520cdda6745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9a7e8a-9533-4d86-a994-b2fb40ad9ee2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a643bf45-8f57-4ce9-b428-7e45583811c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d692429b-36e4-4f4f-a8b0-1d1ed178dcb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc3e60b-0963-441b-9075-0214712b3a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0aa640a9-19e6-4fa8-852a-e737796bd1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923a5567-861d-4d9e-84fd-754bb68bc1c2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a8783f-e373-4a79-9458-99169df52f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2518a08-32ba-462f-8955-00b9e0f6aafb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5382847c-9205-4241-9dad-512332115586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dca008f-ceac-49e4-b6c0-354abffbe028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfab087a-e241-40ff-b119-2f5d5ba9cdd1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4dbde8-5d5c-4733-8bdc-2a3f606d4230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d99146f-98a2-4d8c-b592-6a2cfd0a3f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65e07cf-60cf-490c-b4b0-59157090f086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77c07f83-9c31-4ec1-945f-842f103e8d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685d216d-9f66-4bee-a983-0b7da792054a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164d1986-26be-4ecb-84b4-79d97a5e6512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7013728b-c872-47ef-a186-e9819afb6a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165ec3eb-0712-4df5-af31-6e212e5a9277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2c223ed-b179-477a-9d10-e0fdaf12d3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c50ec5e-24d8-4565-b808-d7539c54eb86",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c46b38a-3780-4798-a6de-5d3b53ebcda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "297e4954-2cc7-4d39-9ac3-7a6b0184a87d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cbddab-4c56-4eb9-854a-725863f54a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "804719b0-5ae7-40bf-b3f1-75b74f4b8af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d27e7d-a2bc-411e-9115-ab8ee075813e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930b6e20-32b0-4b3c-8a81-5725c3e49d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e5f4a5-c50f-4dfb-b890-d0e8d2509e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35f5af7-a9d2-4063-95db-09a57354d100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cee9232-08f0-4aae-ac5f-7ec3e95965c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9292e61-76d7-4eeb-8140-4b5ccb024190",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b027d8f7-2a41-40b5-a33d-3437a7a25005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff865e10-ffb6-4703-a32c-5f476c1a93ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181cae41-d719-4568-b397-4a5353b48f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b1452ae-71bb-4172-b74d-f3212a25c74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ce0353-ce7f-4cdb-b36f-0718dd644b78",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c89624-ae79-4c19-b38f-d1408435c147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a06bd50-bb83-4024-a340-ef868fafacf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255fc20e-fb58-44e1-a6d3-de1115589806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c86693a2-5872-414a-abac-96cc5b38f633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8586415-fb79-4c52-a2a1-82c2b933dfb2",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4691d30f-0ba9-4fc2-9d35-6bb6954944e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc6a2f0-85c3-4085-b51a-636fdd44e2d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a92e06-7da2-4980-92c3-8f9f7a1bb486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9e507a8-f723-40f8-87cb-d0318874fad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef05c65a-3218-4508-bf29-52513d03f0fa",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8390ad-5680-4a9d-b1bf-22386420ab92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3294925-f4f3-4598-8f56-1a7edc5c81e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80ab5af-0b54-4e6d-9551-8b421847d85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6aad664c-b68f-4d63-8b0f-58bfd6eeb5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb285be9-c034-4931-80df-14df2b07499c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b488ea28-1a08-4cb9-848c-c88b18a5c039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2edac18e-598b-4132-ae03-1eb317157434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a819b6c-0a30-44bc-ae28-747236ce1c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d80b50b-3547-4d7e-a2b6-96e016a20ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de6ccaf-ad34-4ece-8648-ccf25a8ae90f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac4eb04-b8b7-4c24-872b-5d6ea53b36e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b4c310-5824-485e-9c79-af36a627afad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3c48d5-5f1b-41ac-a3bd-54f71fd6fb8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "da09978e-5856-414a-a472-50234c5ccb2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98e168f-2f58-4443-9edc-250162dae7ee",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fddc1b54-7090-4072-b6d5-c246b2e8d51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deeaa8e2-5e8f-43e0-b0dc-e86fd7ddacb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf66147-c170-4eee-b0d5-e830210c2d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ac70c69-0022-4e66-8a5c-6aec85f18a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc75517-22a4-469a-ae72-c46392a4ff98",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d095fc49-0cf2-4454-9329-70378e664b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6ccfd1-3fcb-4976-8aa8-de9d566cf052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e75015-8ff6-4621-a161-6b691bdf4167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a5cbfde-d8ba-43d3-9ab6-cc371de9fbf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7664e755-792a-4e71-9f6e-5ccb6a04397e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92ac299-2c88-4780-bad8-371a0b11f89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd6942a-ff36-467e-a497-ac028b0ce30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543f2c14-138b-4206-90b3-9d62e0d11e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8098d409-e795-43a5-9025-d3bee00e9d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6440436-b7d8-42bd-a269-0bd75eb8a52b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6b85f1-f6aa-4606-9a00-8f4288a7ee4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011d6da1-0ebb-4bc0-b61d-55b2f03e1a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc78e06-592d-40ce-b270-06b6275b93b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "90401bc7-12c0-4464-8fca-7d99e995dec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f802673-0558-4a63-a6d2-612369958917",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a7e705-6fb2-40c4-ab91-a01116dbb265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6de0f48-8b36-40dc-9b46-012d21e4c949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c813690a-fa39-4365-a8ef-a58cfb7177c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8f544f3-603a-43f6-81b4-75a217bd7666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0cc8cad-2979-4174-8e9b-db2ace635da9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe461c3-843e-486b-b5c5-7dc3a61cc1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e06639-56b9-41d1-910a-54930e3e034f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be16033-34e1-440c-841a-23b98964c244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b49988ea-6a9e-47a5-8856-4f341a016a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4071c0-2e1f-48e9-9fe9-31e72fa1e4e8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eccfaf45-0729-490a-881e-455b83cf4cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f314962e-1f03-4fb7-8439-6b3d7b746d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a229645-c5a1-4f35-a8e4-cfcb4adbc148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "18fac8ba-ce16-4542-b964-22e941f1a93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba3af1e-2823-4121-9a46-e1440046b973",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6defb4d-6396-43f5-88db-b39ed9143447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef5ec64-8d03-4bdf-8e59-fb3383de30b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fe4444-fc06-4ec6-8ce2-46d73334ff6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "262fb6a6-fca6-422e-b9c7-31b3161d59cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7225412-d276-4629-bdba-039c1d3f81db",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e032938-7dbc-49f1-9871-8982c562906d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c345e2-eb1d-4b77-b215-a6edd018d4a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d52bd4a-7007-4b78-b451-9036c628396f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a3e5ab-114a-4b4d-bd4f-57d5873fa664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e895ef-9a01-4e3e-91ee-adcae840caf9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f134d017-8739-41cd-8ad1-4ef7a4965525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b7bf24-f645-4f76-b4cb-67794f045c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a6d025-1b33-4142-a245-93eb14f2c94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0eebde70-ba47-4006-b6d6-4290c19bf4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5fb098a-b077-4c4f-abcd-f25f2b78fc87",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68965297-7016-4bd6-8457-59ba8be20d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29575252-6776-4647-8643-fe0928622d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e99fe1f-ab30-48a2-92fc-8eb8ad0ec668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3461b377-2552-4d65-bcba-b77ed81eeeff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8809fe-3841-421d-93b6-74837fe55df8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24bcd2d-b1b0-420b-b54d-ce03899bb154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6cde55fa-6dd1-4753-8d55-adc55f608e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc45807-6087-464a-b236-632d40b00c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec64883f-0ecb-4b00-9c87-8d125d36ec67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e871993-3f7e-47ed-8554-33a2526ba1a2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa88b56-523e-48f7-b42a-796151a4904a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b04cf0ce-5bf0-40f5-ae2a-53df3175646e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb14b95-9e5c-4d01-8406-b986e918739a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0c2f28-4f32-422e-baeb-f73254620979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c6e019-56c2-464b-917f-8bcc9a2bf71a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac57da98-84b6-4be9-8d01-6d962d6328f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69cc8ce9-d410-48a1-8e51-16862beb3b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c89cbd-0185-4e78-8d17-9306838bca4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b48cf798-6cb1-4f2c-abc2-7d8707a390c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2be93fa-c1d9-4740-a858-900b516bda0d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44827e2-ae06-4a8b-90d2-6ba9aa2a0144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d2d25b-dbd7-43b1-a929-de12243a2fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53727bf-1d29-4db0-b4fe-60a64de102d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba03c39d-5d95-4805-b5f9-4cf56d29a866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937d49a9-b783-4a6f-9491-0ffd5b28409e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9958005-2021-49b5-b928-c5ca3e20863b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ebde08f-05f7-4ad7-9011-d205f5d604e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507637fe-7221-497a-8233-74860c2b9000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "49ca5bf9-1a33-45d6-b444-94f4d3115b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdfb0f9-e470-40f2-bf27-1bcc3f7fbf1a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb39c61-8a42-41ea-b26b-d5635911041b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8319c9bf-a1cd-4ab5-9e2e-9c1e5f58aeae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25e79bd-2307-4bf9-93e0-5cf9f5542247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "00a1877a-45d5-42ab-b633-89ed25d3b2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d9fc7a-fbfc-4ccd-94b0-c2ae0c73407a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ba6b06-f72c-4e95-aedb-6881d2415f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4009912c-b3de-4361-90d7-e450c0bdaf91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2850dcfe-af68-4b5b-b109-4312eec1d8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7d9dc0c2-f350-413e-96d7-ecb723bb7efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81c2403-8590-423d-a98d-cbfdf80e50ae",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a4fee4-3a30-4fb2-b62b-b4d53b38bbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cebca3af-c452-49d7-811c-a9b4a4f5fa29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682b0e4a-0779-4d0f-9827-380ccad8e7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb998812-cded-4880-a780-d786f513c140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1527d561-a154-42e2-b30b-f14175c4ffb8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7110609f-27b1-4445-94b2-847f89433795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6075ff9a-447c-4677-8860-ee3ef4319878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828f7c09-41fd-4d8a-bf6a-ff5b3e40f016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "43d7c364-1d42-409b-8c5b-8c82de84c184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcac980a-d541-4a57-a8f4-151f44572452",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c09bcec-dd4d-4af0-9b9c-e3c91bb2ac34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c811c7-2b02-4b50-a3e3-dbf6e89c344f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3ce1a1-eee6-47af-8da6-07dc8c8e0533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "756ae0a4-117d-4261-8b96-c128d1c8954b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7183cb74-5835-413a-83e2-16d4bd458395",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1f81da-a5c9-4a46-a2b0-c727a3d4387f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "954e76a4-f6b5-4ef5-b698-c10dd563d9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfe5fe1-5a89-4656-9a44-b5fc73c25550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "943243e2-d1b3-4627-98ee-36c56e9bd7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac0fc9a-42ef-493f-800d-2c62c7e99848",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acd7264-5e40-4d5c-b738-152f3ad9edac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50665c91-f88c-491b-a3b5-b120d98f752a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7e36c4-4b93-45e7-b369-7c17a243b8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc6959e-0013-4493-b322-6ba1b009debd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c859896d-1254-4972-81c9-3fc25fada7f4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45ca4db-9db1-4f01-b4c2-be793ad6c48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "883aade8-9d67-41ee-8c0f-398cc622ace6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14e31c5-9733-4586-b015-07bfd807e918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a8222c8-b367-4d65-8040-6409bfe66718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffac8093-a1d0-4f94-a0a9-8ae967037424",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797cd262-6eac-4ebd-905c-44188910a142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0de3e4c-7a62-4d4a-955d-528ef59cd5be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4616e5be-f352-4244-9af0-8c306e1016e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85f43821-4c35-47b1-9a88-414acc430430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7350af96-daaf-4858-b570-9ea384db1a4a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa6d526-7fda-470c-8b77-fe57eecd0343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea2dd2b-4053-4447-bd27-c884675e1c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ed73c5-5581-4caf-97f9-c4a9e126aaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de66a2e2-ddcd-4c05-9987-d35e1662d858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90b713c-ec0b-452f-95e2-46653e377e91",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f458e83f-6ced-45b9-b2d7-831a3d6e7954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09fd46d3-bf16-47a0-a7e4-bab93c420d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4980ada-3d8a-4ce2-83e9-fb2163f5d45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0b680c-025f-4c88-9490-babc8b1e1f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fef949-fc14-4296-ae7e-078469ba09c6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6bfa85-8f47-4e89-8995-a8484e7870a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ef7d66-39ed-42f8-b59f-47be46d71be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d3e5da-5d70-476c-a26d-947b497c4757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5356c6d9-3981-4cdf-8a04-5df0c1f69079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd5963b-1455-4a13-86b6-4d928a5db999",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c777e551-5db7-4dd0-93b0-556cb5c2e4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9f915f-82a7-4959-a60b-3bb69b111a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15245e7e-a8c0-434a-a147-a110a740c02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2af860be-710f-4116-8004-876d5360e33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4757cee1-d720-4fc5-a53f-61546db40826",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e67c300-84da-428b-81be-1cdc6213c299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b38c879a-9129-462f-b6ee-4ada8ffb845c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde2674c-7e1c-421a-96b6-3b4422f0d1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c398b05a-e710-4935-b979-f80d3ca79cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d881ecd3-318d-496c-b9ab-727dce62b36f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0882e7c-c884-461d-b9a3-35663a0c5f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7926cb24-8fc8-4c20-aa4e-fdf9f49ec4d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b691629-b167-437d-958a-24b2722d7112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "425b15f3-5bc0-48a4-b8c7-acc4888e060d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c378750d-6d4b-4301-b7cb-5fba611225b7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cf88f8-e0b0-4523-beaa-136035a6b58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f40989d-66fa-492d-8b7b-59bb1ea9ae04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0561ae4-ccc7-4092-85b9-3b815c495af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "58326ed7-707c-4589-abce-087aa339dea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9bfe56f-7da3-48e9-b592-b1b949874108",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63644e07-1fca-4d16-8d1d-a4a4fadf39b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59cb553-fe69-401d-99f1-da211dd9d6dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26d77c1-938b-4ddd-bd99-0cbc6d72f851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf6f9f79-4672-4df0-8928-982c3cf11fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e61f479-0828-49f0-8099-7dc4e08b7515",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3709ae85-bd42-4b59-9d82-0768a4113945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db1a7e9-e6dd-4b3c-9d1f-b1d298b39a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99331ee6-630b-43ae-bc00-08241413c9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "98bd5afb-ecf9-46f8-aabb-1f3a1c51e1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d28aecf-ca44-4433-9783-fd9b90701573",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89febaa9-397e-4fc2-bd15-27bc77eb3632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a50c7c76-ee40-487c-ab38-87c543172bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5d8c78-fe46-444e-a8fd-6912be428d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f6c3bd-d343-4db3-8533-42c3c7df5506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca9ff00-589b-4e38-ba2d-7782b67c954f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7d756f-63ab-4ee6-af9a-2caa5f39c38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bce9a9d-c4bd-4526-9efe-1359f0744be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcda45c0-acee-41ad-8faf-ca49bb7b4b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "37ae90e9-6b8f-47fc-bad4-3b6a47d0d5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435f21ff-2117-4886-ae87-e27e082a2dce",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4d7f8a-27de-476c-ae3f-28d3f6214f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f4dab5-28a0-486a-8cd1-e41c3ad25c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d99171e-b90b-4c91-bdda-f81c20dc375f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "41bddf61-9698-44bd-bed3-95caa77b2d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5340c4d8-f0eb-422e-b26a-22e6cc69d813",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572b3776-44d9-4cd9-9bf6-64aaba7f2476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b6999b-e840-44f3-ac8a-4f1a4e43494c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73605f6a-4ff3-4e12-890c-d43932875a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef70e89e-d23b-446f-9c6f-43c3e339685b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f785ca-b9a4-4616-8a08-5394586eec27",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5e33cf-d185-4feb-b71d-bc36a507495c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a27b341c-3a8c-45a5-89fd-40385ce2f7fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9c6791-e09a-48b4-b01c-6e8d308ad413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c0ae33-539d-4a19-8db0-dcec3656df6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54593d8e-d9d5-4682-967e-412d7f70ecbb",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c464a8-179f-4411-8e95-71a80f346796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5823807a-dd3e-4839-b9df-61451ac287f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cab335b-335a-4316-b93f-4fd0636b3751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91bda2ce-1b3b-4da2-88fe-4396b1645854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a334ca-7aa9-4353-9a6e-da0715d4a660",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1cee18-2c4d-4d53-a6c5-dcae886f0ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c3c1066-b647-4a20-8b56-ab6a9c6bfbea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0213d3b9-1967-4e79-8641-246b8528fb2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9645934c-06e4-49cd-aa8e-23620cfe427d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e499229-91c6-4496-81c8-0ac78ba15115",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c98545f-f7d6-46b5-9ae4-efbcf9baa506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c4ff4c-15a4-46ef-8fb3-9a80331b279d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb191cd-e071-4fd9-b6a3-1c39ec6b9ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3eae8e21-8143-490e-aae3-d36e78c3438e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50f1022-739c-4bbe-b6d9-431ee812378c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9731a5e7-a0ce-45db-b351-5101d1f5a743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6472c68c-27ba-446c-a6d7-92d18545a93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db31db3-d9b0-43e4-8d6e-dee63d2d4f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ce3d9c7-60c0-4ebe-8c81-6a5884d0faee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b196bb04-88fb-4ea0-b791-177d0db6c9da",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04277d60-932f-4415-86e8-e200a6f6eab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c51e98-5bb8-487f-9bfe-dfe74289b326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea46238-32c0-4331-80af-cc238967e28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ef555ee-3423-4944-b7c5-543eb48c9de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99694da-9166-430f-9ee8-417aa360bc28",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ace686-a5f9-469b-b49b-740ee1eb51b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "503f2a34-d7bf-4d5c-a102-08d60ea15f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32d1723-faca-4394-a09d-c3518a984fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd503a9e-b0d4-48bc-b656-58198d8f83f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d09061d-da49-41c1-b28b-4b1dc0964f53",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99448e48-4457-4bcc-ae2f-f72c1e642e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49801390-eff8-4477-8d31-a8875d1ea2f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f827a488-88bd-46fb-a8b2-70fd898a4596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24406e27-83d5-4bbb-8fc2-6d3f608a0b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837f890a-562d-45f6-87e8-2e53dce9635a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c22e1b-570a-48d0-b460-583cdb8a374a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e93ad5-5985-448f-aebe-85229f4da685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e1d7b9-d0c8-45f8-bf82-384fafd8fc2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b9f90a-d369-4d72-9005-392e2606bb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6308ad81-6918-472a-b4ed-76fe246fdb1a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fb2c13-c5d6-41c9-9062-8dfa4d517a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b25809b-0ce5-4b7c-99a1-51c7bb9b0e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7ebe17-e195-4469-aad9-9201f0a135fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d09258c1-802e-4079-a5a7-9fa7c14332bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee97972-2a92-4a82-8eef-ff8b365428d8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61473383-8e5c-43cb-ad99-048828402ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7816d40e-d647-41cd-91f4-e453bf2c9e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29bb8540-cfc7-44f6-8dbb-4a5503b8b4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d8ab586-9cfa-43ed-81cb-bcbd94e2295f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc93495-363d-46a2-81e8-60096bdae0e1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f599d2-baff-463d-9470-84e169353c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360c57e2-5b1e-452b-8989-87e0a9fcdbe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a628413-a300-4330-8986-1bf596a03e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98780879-098a-43ce-a728-67667e4150de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f3b1a1-f8a2-46ea-8f69-c53cc77d4169",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c120af88-cb74-4eb8-887f-16cb5c55ee06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8becd46f-59ed-495c-a9df-c8d854c8d6b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f44a7b8-3bfd-4d40-9c91-615edf9b1a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ce4856e-4bd9-41b5-a407-a5284d7515d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843aa5ec-8524-469d-9563-15c6ca1664dc",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b9b89f-ec6c-40c2-b3b8-e9ac02bfd3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8aa4a36-2ef8-46a1-b8d8-1b845910ea1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8119c90-f35e-418a-8713-9233ed1d5e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28f1e2a3-42ea-4695-be4d-0ad8e4e1e8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0a1b55-e29d-48fb-b774-efca5239a1bf",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e796bccf-43be-4c89-89c1-c87cbf296dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fbe5148-9a66-4ee0-ad07-1eadadf5d1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a096e2dd-0d3b-4daa-804a-a5bbfbfd48a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e49f7e8f-14dd-4fe1-ac3e-b3349d7c51e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3b58b5-5e2e-4d64-a9dc-18dde1ca71de",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acca7b0a-019a-49d2-b53e-0751c626644c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb39d89-8d09-43e3-a8ee-6a1abda6ab14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c9f110-1dc5-403d-bf54-6110e09e1172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b549ada-21ed-462c-be25-9f525131f06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7208ae8-a68b-47b7-acdd-bd6d11df60b9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e737cd8a-4112-4e7d-a877-f0952669938d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9336c39a-775e-4f01-8b78-10aa7fe69786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833d05b5-71bb-4c4d-b9c2-ba0480c56ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aee32a16-3819-4fbc-a438-534e5e9c666b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d038936a-54bb-4817-b2a8-b4b7adf920ae",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0303a788-1f08-4217-b106-7eefd4cb2085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5580c8e2-778b-4189-b614-0cc44aa4c52b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18967eb0-a470-48eb-b474-86551114cb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fb6f0107-acd7-442e-91a5-9d9108c36413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2ae3cc-f1c9-48cd-814a-61372c3c85d4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87176f09-cbfe-4d18-aacb-ad6a5833e688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7be7d9f-5026-4add-8d60-63cee8a92af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35b5b6f-fd14-40d5-82a1-f8a409f1a005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc1a1cf4-5957-41cf-a4c9-5cb262698b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877f82b8-30ee-4f62-9367-cab11dbb3a1c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7105f6f-cac4-46b6-bdc3-799393ebb406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2d5b24-919a-44e0-96d5-c374507771a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5502b70d-7707-41e6-9d9b-ffc7edb21d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccaa06ab-a171-4452-98b3-e10af9137a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe599ed-b7bb-4cc6-9b98-0bd482e49a09",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28124519-f9bb-4d30-9425-8e0ebfcf6b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a446b32-9ebb-4377-9e52-e748a92adadf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5b2349-397a-401c-9960-59e6bad89d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1843a414-1e9b-4f82-8483-a61c2e9e2986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cac4b35-4d5e-4660-8d3a-267048a05803",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca1987b-0610-4a3d-8f76-fc6c07c69404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e5b1a76-dfd9-452a-ae89-a09293c2b5b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ec6fb5-460b-4e1f-b348-b9d9e72ca91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83b99414-55d9-4c37-a735-ec0d077d9d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c0e007-d73f-47fb-b508-d531f085c304",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c0cd57-eeb7-4099-940d-a66820888e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc9e3e1f-2c1f-4b0b-b738-893c69dcf060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d5948f-6901-4901-a72b-90fb83927ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "39802493-4a4f-4253-915c-c0e6f5c9bd25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fcf0a24-4d15-457b-a9e8-6e766ef2b31b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "414a1edd-8e38-4fa9-9f97-dccf172099b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0200251d-3803-4cb3-974a-a5f7b74445d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bbdfbc-4f25-4cd6-a13b-a9b479d4befb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a85ee079-c4a5-4487-b1f0-a5b687c57a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e4b840-ef6a-46a8-aa49-3410d45c7b17",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "125717b9-664d-43c0-8cde-e7314470cb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "466e9325-bc2c-475c-b72b-267a2bbe203d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba031a7-3a0e-4ba6-86f8-e0d60dc65a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f66c878-f8a5-4c2f-bc16-3ed80c46903a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71a222e-6f33-46e0-a2d2-448da064faf1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8166bf19-54b1-4d09-87ed-3d1e22f8b68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77131ab5-6062-497a-b41b-6aff9bd2205c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d815af-ee3f-4bd2-8184-7a65d53dcd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "12b43aeb-aafc-430d-9c6a-bd4cbc92f516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2169fd9-7085-4218-98a1-1072a867d0e6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cd5aa3-42fe-42f4-be25-36fa4fa2d0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "725c2589-8089-4e81-8c39-b8154674d2d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80060e6a-4a93-4f48-ad94-b24fbcd4effc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "54d6aac1-3fa2-4761-a14e-4330ac1385a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d3be2a-21ad-44d2-991d-32b6e4b16cd5",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bba3608-ecd7-4179-bf31-c0dbd5c51dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae266aa-4e27-46d1-92f2-00bb30feced5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7756be3-2cc6-4163-b5fb-1b58e0df85c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "62113299-d69d-42fa-991a-6e131f51a506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bf0933-fbb4-404f-aa7b-d5f4c74418f5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f30a285-4a62-467c-9062-859a4332cb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b499dfb3-9236-47ac-87ae-1412439dcf3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b9102e-9b81-4577-ad39-67e24f4d0dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "57b6f7a8-2075-424e-b1f4-59fe02b037e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701de4a0-167d-4434-9d3c-d0afa59e80ec",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f8ea8e-ae7d-4bf0-81b6-97a130802da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fadd1428-d88e-43bc-b5bc-97032b82e318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d04b073-3439-4caa-9ea8-4b9e85fa89a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "594ecc6f-1769-489c-be31-a90b06a57edc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dfe8d0a5-eefb-4871-ba45-0af5e5d5bfb2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "477bd77b-040b-47af-a162-d8cd2edac2c1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f12e1f8-ab7f-43ef-8066-9742ca12828a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a2de812-1c81-4169-b1c0-f7bb3b5bb524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397c00d2-db5a-450c-a4f8-31bed13b9194",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcf3f56d-0116-4b19-ab70-a418ee3ebb92"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f6f8996-6aa4-497f-a2b3-c9852c3fbffb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2ada8e8-270d-4f7c-a334-d5c70ca93678"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "678ecb32-4e23-45f2-91a2-088c55eed4ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70ddf4d5-6a9b-4d01-a7f3-71a20b71b0fe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "223613c5-62f7-4668-a694-70dfc392669d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1b9cbadf-11a7-4b73-bcef-999c7fed98f4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "35cf0b1d-fbb5-46f4-80e2-5f8ff3b1c54f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "069bc603-b184-4856-8a40-62d29686fc35"
                }
              }
            ]
          },
          {
            "id": "78bc45a3-ef15-4985-9d03-3ddfb7d8fafe",
            "name": "Positive Testing",
            "item": [
              {
                "id": "560fe03b-2d4b-475c-8608-0d04a3f39a36",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de761cf7-5397-4023-a3d7-c47c1179bd5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f3f86c6d-fbe1-4fa8-89c0-9704a5cc67cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "534ce39b-341c-48b7-88fa-8b85460e035b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "998e7509-dc8a-4813-bc21-64335f471bd3"
                    }
                  }
                ]
              },
              {
                "id": "64475cbd-b904-4803-8975-d18e573026d3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2916ab11-dc78-49a6-919c-77c1caddd51a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb5e3f15-b155-436a-97c6-7f430f08b6c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a105d205-9abe-4497-a3d7-1fc908652ba3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "86b5f94b-bf15-4c4d-b325-db5d219d323d"
                    }
                  }
                ]
              },
              {
                "id": "ba98e542-1300-407a-83e9-f22f9a384c98",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85fd45a2-8963-4ff3-a59c-290d34f47722",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6202bdcd-c3a6-4762-a544-e46da8c54329"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a85bd466-9b30-4011-94f0-19d8d7c0950b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b7043bfb-bcf4-4938-9e19-573cf8462171"
                    }
                  }
                ]
              },
              {
                "id": "b523b3f6-6ad4-4226-a8db-557ecb1de61c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3aa2fb4e-b276-4ef3-8b82-2e0e22ca878c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fea4e398-a5ac-427b-8d0f-da9c97e01606"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c5c9030-7e2a-42f6-98fc-f2567a6bf396",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1e7e124a-0c62-49b1-ad29-15c02e3c46d2"
                    }
                  }
                ]
              },
              {
                "id": "474f1de5-1c40-48c8-8702-2c60c89d3257",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59d94382-6d8d-4f79-88dd-344d0999cd13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf49ea21-5115-48a5-ba00-78598ae73525"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aca64d07-710d-49e8-8cfd-e05f788bec46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "baa11ba6-54b3-4099-961e-3e0537ff6950"
                    }
                  }
                ]
              },
              {
                "id": "818ee232-e034-4049-9e00-eb953a12e1ac",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "553fc8c9-a15c-4346-9ede-dc2ce82f5c91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9842a1c9-29d4-4178-a4cc-c5709e150a65"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de96d9f8-0668-40be-b019-cfd644418f94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "889ad85d-8ea7-4bc5-b617-35140f4793d2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f4eb4001-b4ae-49e6-814c-7e2bbbdd6441",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "36516347-26bd-4593-8d1f-6cdce326c8b8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "20769ac0-6f68-4f04-9813-68399dd6d51a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "491f676a-c55c-4526-92bc-fd00f75f0aa5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d858456-bc51-4198-bd4b-abecd03bdba9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3b26272f-7cbf-4e4a-9a9b-888259bf6ce0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9bb6d2a1-1d15-4ac7-a236-d27e9f731c4b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ab3b507-41a3-4ec2-84b1-7c8830afffaa"
            }
          }
        ]
      },
      {
        "id": "024baea6-9a60-4064-9244-44641a2532c0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "af707997-0276-45b2-9cfb-ed3a8128bb83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e299c4c-ae67-4df7-9c85-cc27a2e86d59",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4a0ada49-d1d2-4523-8347-db6faea324b3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f1ea64-7ddf-4502-afcf-8fddccde59f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65579cde-b40f-460c-b18c-9535244d520a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c330aed0-fb82-4093-b576-04be4a19510d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "79f43c6a-fa7a-42a6-9018-db3e9943c3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc49a41-28a2-47da-ae45-f49716e1c496",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d478367-16d7-4a61-bf6e-bac2145aa1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae3c664-d75d-4433-ac00-b0c3a29d7ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a001ba80-9ef0-4cce-a2b3-419ce24af421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "097ba3df-b9b1-4d67-bff4-e45bbca1930f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af14d60c-4657-4640-b952-9247a32c1eb2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2ff55c-85ef-40bb-b6e6-537512f13b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c867860-05df-46c9-9c7f-158716b94d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10514133-b103-4f95-9e44-0b60ce0c4f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f431967f-21f2-49aa-a901-aee4cf2ce633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8b1cc1-9407-4cad-b215-4c9a31ad5d4d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f33a812-d90f-4b48-925c-b6bd1ac8ec8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf1958a0-b70a-468c-98d3-30005146065a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11f7a48-82d0-4ccb-9fad-d4fa90519a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6dd6398-f514-4975-9b4a-02995fe33d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8346ec36-4718-4ee3-adf1-d8e478fc5655",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc15a7b-c1c0-4069-bf34-0e8a993a68a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d6eb1a5-0487-4daf-88c2-fb30dd7a5024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451ce035-2faa-4013-a1fa-86a49d162f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c967af47-e51b-4466-b681-33cfcdee34b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de38b79c-cce4-497b-9eb8-68038e8cd47d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdca56f-4b62-4937-98d0-dc17137a8b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f482f886-7974-4556-810a-2a868ee06884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53049fda-b50a-481d-897b-3d92e275d084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd218fd3-c0cb-4a1c-a6b7-9b8f88862862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c892019-00d0-4285-bdd5-f7a9470b5e86",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fcab39-dd15-42be-bc5d-44ff3c0a6422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc6f3498-5adb-42b6-9788-e72e7d5788e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503e45ca-287e-4787-8578-7fb06f604728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a3bb64-65b9-4045-bb27-f8812d6f4843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a150e99c-0713-4a08-aea2-9948b44b6503",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08975430-3939-4ecc-bbd0-a136ae8412e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6703573-27c1-4dd0-8a8f-8f08155d42e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbeeefa-c4a5-44f0-a6eb-e41b8922f339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51dd83eb-2de7-44ba-8a68-1a53643150dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae4e7dd-5fe1-48ac-af64-e2094d1bfe42",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5249e58a-df3a-4d40-8ba8-767f90ee81a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2445b73-dad2-4766-9d38-5bdead991223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b3e0ab-6123-4686-9212-977e8b198cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "600f1677-ed7d-4fac-b51a-bf5b81223dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6703717-3942-4807-b2a3-6e7ba128a548",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4b8ed4-99b6-454f-b736-6ed96da8964d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ef4424-c3a1-41d0-aaf2-a9698569bbb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d93a93-3c52-4679-8999-07c5d30ced95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94cc6540-57f9-4eab-9842-b3bd3dd95ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bffabd-11f9-4c0b-a009-00670dbb04d0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82aafe8-f0c4-4a82-940b-3ae5ed9365ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b51eca0-ad1d-451f-9802-b19271f585d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e12cd6-78df-48b6-9cab-2fe930aff4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "70ef48a5-ad78-4366-ab07-0c72c044b009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2026800d-5a79-4f0c-bb15-1ee56618ed0b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd5ef3a-d1ca-4831-8c53-0433b9ad5f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d475d21e-ff09-4ad9-89b3-3220ed39c924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12cb4ad-d258-4ad4-9ccc-d1c2d43c99b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab8459b-9a96-4ef4-92ca-4a334d2f1cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe866ef-34f3-41b7-a4ab-4faa13d40c54",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cb1b8a-55b5-45fd-98c5-2201ddc68347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d22bcdbd-aad4-434d-827e-edb0df735ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66babed7-20df-4240-8d07-3d269adf5fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "012513a9-0a34-4505-9c03-d231e54fa150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa4b762-cf4d-4d25-86d4-1bc4bc9be77b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40eb6b80-2c15-4f1b-b563-8a88091d5e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e31cda-164a-42ed-8615-eba93e9658fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8302f7d6-db4a-4daa-bd0f-718d0962c988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea496c37-4b60-4409-bd78-ad8e89ce6744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dad474f-5edb-4801-9124-569e1cf7582d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db876c68-42a2-4c9c-9cd5-8b6e1794722b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcdaf573-6d51-4570-a268-2dfbaad3498e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f061007e-3b15-4041-94b4-de0a65c2be29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1947247f-475d-420d-ae27-31558b1d3874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123cf0b2-14e6-45a5-9004-e4015aba99ba",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1b612d-5457-423c-be30-66fd530447bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b111f425-4265-47c4-837b-215325d6896b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9654821b-e382-4b24-b73d-031e297f4a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5394018-e729-4c05-b94e-16f06aac4b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5419b7-7640-4887-a170-e8c6cb82ff47",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ae5003-42c5-404a-a4d5-6f4cf24baea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f856a4b5-3f27-4536-a7d6-f6362b6795ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9f8ce2-5917-438c-8792-30573def4be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d234c2e-e2c8-465a-8b7c-dc78e325ea37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d41ff44-b99a-41f6-aa7d-26649f77925d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f4e182-3e3e-467e-acde-6ec2588d573c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64388a08-6da1-4498-8140-3a767889df64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e017f546-3bd1-48ca-9fcf-63ff8019bfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "876c159b-62a0-427a-a2b4-e0b73c1407a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f5e720-4efe-4ff7-ba35-542dd48bedbb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248254b3-2117-4f51-9fb2-b4b43d9c6f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee787338-7452-4dbb-9c82-2c56a7f914cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a6b9b0-8ef3-4391-a53b-104009a45361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c56baae-3049-44bc-97f0-c67021a4e864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c4736c-a60d-4022-ac8d-5c7bb24f035c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a002a383-f419-4a94-a38d-36e3d66ee1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bcbdd54-0b0f-4e9f-b303-afcfd06221c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697c7366-97a1-44e0-9ec6-f2ea3d558577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f951b5f-1edb-4d82-a8bc-0f523e1b1bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74dd74e-adad-413e-845a-69ed2817baed",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2233051-d14d-425d-a814-0b4abfa53469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd4e29f-fe13-4b0e-8674-92a1789750ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f39a957-9615-4b2b-ad0c-1b1308d1290f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e79db8a2-3bd5-418a-bb32-0c5270d6bd3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf2804d-edc6-494c-8cdc-814153e317e4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b0be37-6bc9-4e00-bb7d-d831ef699e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2869bcf6-45eb-4384-98d2-364e61f66b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3d45c4-63d8-41f7-9d8e-54ac2cb22426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd1d4ee9-0f42-45c8-924c-2b0ca07738cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3bcd68-a0a2-4c19-9e09-fcefe06862bc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b1f705-86f8-4f35-b8be-296384280281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "037df8ba-8874-4880-8d15-3be87706c2e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ae890a-7700-4328-8529-002d921c9600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae29975b-0f75-458a-beca-f1404dd5481a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4397de-4505-458f-a89d-6ecfe3220e94",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12c7f96-f9bb-40f6-bdc3-2e4c1e001e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "025bd815-3ebf-44ef-bd81-bb255de977c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa718ac0-8d2e-4695-b8d4-03898b07cde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22df9570-37f4-46cd-a56f-6167868b69a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763de236-3d70-4b6e-a137-1b4612c1e446",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daaf3472-0c34-4cc6-b24e-49fec7acb882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7228af95-628a-46ac-8d6c-bd93cf81d0b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b0c9d6-0559-4758-8aa4-7fc99402824c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f526f441-e7c8-4867-bc99-20bdfddfc789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f1b672-75f6-4e40-b386-acb21cc57610",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04738a98-c126-437a-acad-3cb244b51179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8660228d-f6b5-47af-b63c-eff29343df01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652bb117-2851-4d48-91b5-3a43488d02e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03f9e2c1-423d-4a5b-9ffd-2160e4617ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfee917e-e55d-4e25-8b73-ff3deefa8577",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09bb89ed-a560-451b-94e5-29a913de85d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c5a7c3-00d9-49b3-90ec-7b0ccbabe4fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a168b9-edac-452b-ac30-ab1cf4ae864c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4042dd98-b9a3-46f2-aaf3-02630c1fc126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec0f735-2905-4025-9442-86d356519c4f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940b12e6-54e3-4be7-9c52-3dd426b466f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b323e2-f00f-4ed2-8ea2-7713e186eb05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fdd323b-dbbe-4702-b3bc-78fb2658a9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e438e19-67d6-4099-bfb4-8e7e2b5d03ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2d83de-3e77-4980-b164-7b61eaa4f827",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2f5144-db56-4dce-99d1-fed40523188e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989d20e9-5900-4d15-af9d-bf3360269dce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd34b6a-954e-401c-87e0-d8cb33d03dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "964e4649-8af6-4f11-82fd-f8517e3ca306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3109d178-50a3-4938-baab-6370deb91c74",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b83096c-f9e9-471a-a6db-d880331f3915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92937ac4-6003-47be-a462-b4f9f992c193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1678707-1689-472e-bcaa-50d540acfec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36599ef8-bf72-4fd3-a255-2d66db69644e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff6afcd-fc49-4d9a-b91e-a353052cc4a3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09976dc6-f34a-431b-a1cf-159ee9ae6203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48434610-fd6f-4c8a-976d-cd467b9e5747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5146ac89-cb1f-4679-88c9-4cbe555bbef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a33a5738-ab8f-4eae-a8e9-3bd448adcb55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec235d71-200c-4963-9739-f5f2c237d553",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23dbe4bf-5169-46e9-87a9-4885de746319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e898b1bf-4944-44d1-836c-bd619c3afb55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c933c21d-4039-471c-a4ff-c279cf768d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "932202ef-5844-434c-9954-ba1a84e5e616"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a20ae0c2-7ed0-4d5d-92dd-eabeae024bf5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f88992be-be1b-4428-ad90-0a3cb9a95ef5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b74e2f-4551-41d0-8ed0-0f55a000c591",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c6157d3e-9f92-41f2-beed-066592602a91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d4c32b-949d-42f3-b79c-b5c268d41db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f7b4f58-abe2-45fd-a454-f300e8898225"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e825eca6-fad2-4c2d-992c-9e4b9817829b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0f8e14b-5798-4b83-ad74-4833da77a794"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "420b2021-6d2d-4f8d-a365-3a1d563ca31a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "915d7328-834e-4a85-879c-9eb426514e50"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c669da3-818b-4e58-a55a-8c6a34b494bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5d4279dd-a67e-40b8-a728-19ae35065135"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f7275b4-ea39-48aa-86fa-f5af63160df9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "83e22bbe-262f-42f3-97a7-7893c77ae4ac"
            }
          }
        ]
      },
      {
        "id": "e57fbeee-9eaf-481e-bb19-8bad0dca6b44",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "7bd05454-5d2d-4415-8f98-3fe242ae0472",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6c55c239-96ca-4e7b-b8f6-3928079e49e1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "577c53de-d184-46fa-b139-c9e8af243e23",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a427503-03ec-45fd-8ba5-527eeec57f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23acb8d4-f742-4cf7-9572-f1ba4f1d64c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ba78dd-fb5b-4a8b-a3cd-1e523717ddce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8ce893-9746-4a2c-a426-6949a8082cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78aeeb4c-d97e-4cb1-aa10-c606c2103e52",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19bda0ba-5a13-4fa7-9cde-f520ef305fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1300d30-99cd-4f90-a502-1371a04b6896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a717f48-7cd6-4ee7-b560-551563965649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "024d70bb-bb05-4f5f-8851-4dd8ab8b7520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9817e9e8-6577-4d19-871b-7932f9274a4a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f948b8a-efc1-4673-941c-e49567ebd6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cbd2dfe-e33c-49fd-987b-34187b4e7426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca6c086-285b-423d-a4ef-7bf7255d94b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6bf6114-d801-49f5-a416-9f1a487be34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38bce83b-cb2a-45e5-b0c1-a4e6003788e5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d412e691-c4f4-4cb5-a5b3-91e334e1c2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f17774f5-21b5-4762-acf4-2dd92e09372a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588daf10-d204-4f9a-8df3-cb8f22d209d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe844085-057d-42cb-839a-52f1a944fad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34c1ae3-3e33-4e04-b170-4d708729b7ba",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdebac27-ed0d-4e2c-9166-c9044c1c159d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a26f5e-c1af-40a5-b949-eebd6a4835ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a657ac-5090-4d6d-9897-bca2178a7797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba97527c-0992-4bc2-aeab-fbe3436b7010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84061ae-c00d-4973-9da9-73eef040e1cb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9843dfa7-1621-4579-88ce-b62c0e6d152d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f00b5d-9f40-4d20-9114-ec81747e1284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa4dbc1-ac16-4bbf-8e66-ccec6af15e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1b1f365-3fde-4281-ab66-56b37b038a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9f1a7b-81dd-412e-9a61-6159c1e26bb1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81960d2e-3632-42b7-8eef-da52b3f16610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d76bdd9-e044-4945-be1d-411562dbd6b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0239491a-119c-4f9f-801c-46ff324d7dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "73e2ea21-360e-4eb9-a0db-a6bf5c5548fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d0c2b2-42ad-4a21-ab53-41d8cd884af5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ca89a7-00e4-4a6d-8fad-345d01a114af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "356d037e-bd60-40d4-948f-5fc4f38cb69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc1803d-b854-49d6-ab35-73c199fbd9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "918c1f98-e3eb-4f1c-bef7-1a216f3122a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765a0cc2-a8ff-421f-b1f1-05419c5358a6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be55bd9a-7cc6-4ce5-8aad-0ac934d75716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e19dd82c-a6c2-4a0f-889e-a3a29b19c2c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be32beb4-ff07-4056-bc41-18966d4e7c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b00429e-fc81-4b75-8223-87c08d01d735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e805f21d-9292-4141-a831-8a53ab2e5218",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b523e14-bb77-4993-ad19-419011b973fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "953993ca-bdfb-44c3-9eec-1fb63935cb95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f0dddb-157a-4d0d-a2d5-006607a27809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02258a03-125a-420a-b4e0-8a99b5068db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f74864-fd2f-42b9-9cf0-bb2abed4b2d1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325583d6-56d2-47a5-b171-fdadaf9fdb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "723156f5-9453-4f16-9a4c-47d3b13a1888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17d1b18-1b23-4614-bd5a-a95d971a9def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e8cfd5a0-276e-486a-8424-3e775099e69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ffc1e4-2c07-4024-9ea9-e9c62af256c4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93c0203-b809-4bd0-bb65-dbe157eb9b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6539295-6d17-4960-bed3-346e189ede9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b838def-845b-46f6-af4d-5a8a66851bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6ff558-1e0a-40b7-aaea-490e59eb9e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c681f4-2bbe-4911-8c3f-d7a66bc6e821",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502d9da8-fb88-4509-9bfb-dd5d09c2f9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f8614e-500d-40c2-bea7-80b961be890a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1f2b22-b1e5-4d58-ab0d-f8083505fefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5908b495-7f9b-4daf-98e2-91613e29fab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a53168-986b-4aa9-94f2-07a253f7dda6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69584ec6-564a-4596-b0d6-ac5ec4b9f03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "051fcc5e-df69-4665-a781-2a820ed3ebb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b4bc7f-32a5-4189-a9f0-e363e3369c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5d7a9e-7920-466b-8288-38a1dba1aaf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c113b2de-a1bb-43f5-a5dd-9a34ffff1d9e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef8dba1-8892-4044-bf1c-893c45052bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3cabcfc-0a06-41f7-b3f1-c00fd8b5eef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05202f7-1345-4101-98c7-dfd8df42d4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac7d8c88-f361-424c-b924-7d9a60173038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2cd8fd-5055-425e-a187-551c10d9fe4f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4128e069-333c-49e7-bfed-d665344293b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4bf3461-ef12-4f7c-abd0-34c31fc757a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6808df99-f442-46db-ba3f-5409f89fac8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e870fab2-c5b0-422f-aa8d-ade53a445539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b6cb81-b938-4c19-ae26-b0a2a9bcd1da",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afea6374-fec9-4304-9d74-e279c4337c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d8c2ca-54e2-4eee-8b7f-7789e4c3a40d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b98f76-eeb9-44c0-9c69-43fbbdd37da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "dee0b134-2ce2-490b-a9b8-8d1ae768486d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbe797b-9ccc-40d8-9143-9df709347eeb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a03726-626f-40de-a994-5be8fd954868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b00942-27d4-4b91-bd6a-361bc04c312f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c00d278-f6a1-4ae5-9cfd-c4fdb459500b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "89720dc8-2b73-49a5-bd3e-a24fb48baea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49dd36e0-2cfe-4948-95c7-1cae5e07904e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81dbdc19-1b61-48df-bd6f-f3696608735c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7e8e93-9b9a-4f1e-99a8-80bc463e76c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d271ac9b-9b7e-434c-9c0c-143af40073d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b271cb72-101d-41ff-8027-da93dc7b45b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752d03d9-2011-4ab4-b17a-20bfbe1d43a1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f885217-b13d-40c7-8074-a5c0f1bd315e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4586bd6a-4866-447a-bf9c-81ba9d578452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3045681f-c7bd-44dc-834e-bd9fbbdd454b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc775f6-6f36-4a31-a89b-9ccd0028290c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea519f84-b242-4dde-820a-8f031ed14684",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f62431-e693-4588-aa1c-326cc609ee51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "308b8bce-6837-4e73-9fe5-d6b9c65b1bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ded5fe-f3c6-4c53-9017-988760a96ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c78fd4ca-a213-475b-95f2-e4a110616eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c91b75a-95b0-4271-b307-b68046cdf4bc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3205a19-6aa5-427b-bdcf-9baf22d80277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae9e8766-de28-45b4-a4b1-2cc3ef6e8ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bf83ce-669f-423a-8907-e375bee5b38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b6dc580-cee2-49c3-af08-83a2b2f3076b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3542aca-5e56-49eb-9fa0-98775a2eb1a6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7138fe55-bf1f-48d4-a8a7-10b79790c4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45852105-3990-4290-9eb6-4e678346c885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107f58ae-9a18-4579-8024-8b345dd918b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64ae389b-a219-490d-a563-6c5f571b22b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe743b3-0da0-4ed0-8b9c-134a7e04adf7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa553c6a-e457-4f85-b46f-ea889d0f1c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cae1d36-e330-4818-be91-44a013ba3f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955c7066-06c6-4f78-9846-988838e63eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf53a15-18e4-4ca4-8091-a59eb9da15b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609760ff-f875-4b3c-889d-b1dba3b163e6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "923cde84-a8b0-4df7-adef-0431243bb2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93bf346d-7ac5-47ca-9092-d1d56bb88d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb9458a-f0f8-4313-8323-810b164e7595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25483ac0-e186-4bff-8c16-dd68e4ac8a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec00686-ca91-40b4-901c-7f9f11e57a2d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad17445-6b84-4b85-ad04-6ffe96ebf3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f443ff1-4ef5-4851-8f1f-3d818c95be3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609159c9-0655-4337-8627-3f41e6204768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d5f5ded-2005-487b-8184-580d6f288770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0139f8-5314-4f5b-ae21-2006d29aee47",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb93196d-608c-48f3-a57b-4ff697a35bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc8a79b-c906-4a05-9fe0-bc8e0b088996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0247e7c7-4134-492f-ae3a-e62c05ef8e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "442df985-727d-4b4f-8e4f-096d1302f9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef89b0e-4f62-4f5d-b97e-01089a21ba5d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8981150-4b26-4343-bfc0-3895bb8582fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8234b2a8-7141-444c-8ca5-a814b9e3c739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23296391-910c-4a62-b4fa-d54ac94fb5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38483de3-290c-4e56-a8de-c784e31deb9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4559a31-2d80-4a1e-a025-0d792783d41c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6522343e-e482-44bd-b3ba-ea314a196b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf932b77-5708-444e-8da2-836cf043af8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf7a1d6-c5ba-4a38-9c9c-9ffb548f7c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04a2b09f-3509-4d69-9e43-ee72f0865056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75207ad-9f9b-4f6f-90a6-e58978ca65ef",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d84be3-870b-4a80-9924-d62949768406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0d3f2c-466b-4a71-9930-f637c63df0aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4bdd96-f1d3-4962-a65b-7d4bb2a8d8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c6d436b-b088-41e6-a2c1-b5ae54496e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042b6922-93d3-4e1a-9d88-2e4655ec5ead",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2839e895-5952-4191-a2aa-982a7ec81f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec1214d-41ba-4808-bf4c-16d934e2a31f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a1a3d0-7ba3-421b-96fd-01922a7146a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c0d7615-5b73-4346-8cc8-f8215ec1b295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e4a4e8-8104-4716-8f3a-171c69bc24f9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369009eb-bd4b-467f-a736-b8b256194874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf167e0-fc74-4292-afe3-3ac16c2eecdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e981fb1-de85-43f9-b35d-408dff8d4c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81bd10bc-9c8e-4373-89fe-76e4a021a00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad7e1a9-eadb-41d2-ad8d-993cae5368bb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f39b0f-f70d-4a9a-a03f-b2bb121a2af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08acc94b-3746-4647-b1e0-e481c243f0ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dace4348-6963-4e9a-a9fa-91e40b7c9da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd8f022b-cec3-481e-bd21-44e9b55b53f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd18bfca-3a9b-4e97-af1d-ef127840f5c6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4094b35-16ec-4ee2-a4d5-72b07ec613fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e24786-3936-4e05-ad56-07e7f7b02e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5530ce2d-e2b5-4f31-a71e-e9feefd55308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09d6812e-682f-4965-af57-d04b4c287d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e599096-7771-4e3f-9468-4cf2304ad057",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1d7ace-723a-45b6-8dd7-1007de65b9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e31884-8520-4544-bc31-a742d356bc6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55c740d-7c58-470b-95b1-71eb7be9f246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "965c4232-7c6e-4391-ad4b-ac29a0c5a32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff6532f-23e2-4cc1-b60f-f9a4cb14d09a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1891f3f9-efc7-4c71-a296-c7aa47c19a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5cd9f9-a710-4a71-bdca-ffeedb4be86c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5cc7ec-9cf0-45bc-bc58-84f39dfc1279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3068133d-6b3f-4a6c-afd9-77a846678a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f571407-1710-4d2f-a96b-ed14a2574533",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "278475b0-3725-4ca1-ac70-893f873c6072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216cbd02-d03c-4c00-b635-a71ccb774d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1119945b-c847-4396-b74c-09f6d384f630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50ed3e62-2dd5-4c4b-a450-9b43c9fb864b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ec23055d-23c3-4adc-8675-83ae54356352",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0d28597-3a90-463c-8e91-98690d8d5160",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da32e0f-61e9-428a-9c66-8672c778c941",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "69d8942b-62c6-4d7a-a272-c0201d31c6ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d928e8-e38f-4443-bff3-e0b8e0264b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba931101-576d-4ab9-92ea-af1f900e1a70"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da1500ee-bbcd-4a70-b984-6ce5ab1f5e78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eafc4124-ab56-4d91-a4d9-3cf59c60981e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8986e93-0131-4b7b-a51a-deac40bae954",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f94b559-2181-49f7-ab26-168957eeab96"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ddabe16b-d9be-4d82-851c-a001f63ed0d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8a125de4-9d45-4623-92bc-d0447074f420"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a90fcd1-7342-47d2-9593-75c8db15af62",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b3a64e7-1585-4f40-a4ee-2b4ff364dc43"
            }
          }
        ]
      },
      {
        "id": "2231c961-742b-437e-bd9c-078a7ed9f94a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "41feda42-10c8-447e-89bc-5d740269f915",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f0301bd-7eb7-4952-8dcd-21f8ec31faee",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "66c0a8a1-dd6e-4f9b-97d7-6cbd38663d49",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "401ea19b-ab85-472c-b391-49ea00235673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c805cec-689a-4d49-990f-36ca08ab1a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc309584-2459-4498-946a-a97c614bac9c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aba0fde-34d4-4b36-8fa3-c6594b94a613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76d2bab-50b4-4274-93a2-11fc9d2affa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6561eaf7-94af-47fd-9d44-67efb3ea88ec",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c77793-e14a-4628-9a27-8dbdd6bdb7f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028ff640-f160-4e3f-899d-8985d2dd68aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2dfed0-cb4b-4299-82db-90716c28e4da",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6797ff47-b35b-4363-be46-80d3bb2fd854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c6b9aa-2087-423f-9c12-fbcb089b9ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a3c3cc-8765-4097-9d44-ce9bef7e5d08",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01bd66f-e402-487b-885e-523feb7dc246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f430004-dab3-461f-ac29-aae1470373fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12899e3-629f-44e1-9db7-9412810701cf",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2f9a4e-cee1-49ca-9399-44d59a226783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ce391b-278e-4904-837c-9769445c7cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fae0fc4-aac5-4c66-bfa4-acb99e4ed84e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9f987b-61ad-42ec-82ae-8347e2aae157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5475fb-3933-4f6c-8223-b5810e6a341e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f10ea5d-05d6-421c-ab05-6f0da0b6b96f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6096d37b-e1b3-417d-a207-8ef77e00b5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc3e926-b839-4126-aa51-9fcf162e278e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4b7628-93e8-424a-b4d8-b634f698a6ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14baa66e-ca2c-41de-8048-86cfb1dd2895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab56366-e7a9-4dfc-b75b-1750bee861a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "274129fc-b762-4912-a5d2-2830be204929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73cccb6f-bb7f-44a1-837f-1f0ca95ea9f1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be2fcc5-60a6-4ae8-933d-1ada38664f94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf6b3b75-4813-4171-84ee-bde891b3a5b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6883f9fb-4938-4321-8284-b64f57fbe3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a8c6de-4520-467b-a551-84856f1c737e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee3c110-590c-406a-b193-cef5fe0d8be3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd462c00-d789-49da-884f-233c60b21a80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7baaacaa-a1ab-407b-95ba-ae3f841c5bf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db12708-d45d-4f9b-95a2-24b6b2652ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e34cf8-9aa9-41a7-a9c3-a988f0b1e39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eadd4d16-0af0-41c0-85f6-d5f037a4fd89",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b11052-4859-4dcf-a614-2e9e88d7f424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea51490-de52-4010-96d1-2f666ec88fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d7d770-a954-4aa8-a8a1-8fb9088c1a6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd2bbe21-4f07-4165-bed7-bec15d0e543c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6fc5dc9-be6d-46e6-bccc-2b29d3e23d02",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe9da24-cdda-40e0-bc34-f519f99c0181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5182f2cb-649b-46a2-85ca-f626896cb68a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d9b7c8-4f0a-44d6-8ee7-45739fa1aca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0aee957-5c43-4f3c-ad71-9698a762b71f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249629d0-726c-4346-ba39-996340868799",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb20348-a2c6-41fa-b0fc-6f3d39d5a5f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da6d16d0-931b-4f7a-948a-285c2958eca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92fb874-2251-440e-a2c3-c16590f7cebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d6af193-bba9-41c4-8a65-3dfd5f185de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679f42a8-e916-4643-bc7d-196583284e51",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c185eb9-084b-4f21-aa31-30de0fc9e5b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2ca6fa5-0212-40ca-bfe2-974e8b412ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0061da35-5b06-46f0-9eb6-e5475814e0da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a704987d-8c47-4e8a-aa2b-b5ca158eb7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb66c6d5-25b6-4af3-82eb-69b71984fb43",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9602b0-777e-4647-a8f8-a48280fa9e5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3b6bc99-52b7-4569-869c-371e3d3d1a5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41fcb17-b190-466b-9b8f-bb29007252dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "088e7a5b-3423-44cd-b528-49bfc0db5183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54fc295-1f67-4d2a-b528-bc37eba9a1c8",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d5d7fb-367b-492b-a98f-e890c5ef19d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9de2e233-c0da-4ec0-9c09-f17a0c80d73d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9886448-2c92-4f68-8dab-de4ff312a7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14172f9e-db55-4392-8101-e1c1cb16b67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0e8192-6469-4288-8b6b-27a93ae541e2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1bca44-7cce-450e-8f85-aa9eb31a1419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54459a7-caf3-4821-ba41-833e17a424ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f2718e-8c05-468e-aab5-d9c9f243068b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad858fc4-84fd-4f35-b880-ed11bb12c795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6d6209-268b-4e41-a101-83b854468840",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf6cd20-e3b3-40b5-a888-eadaef0fb8cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf38662-daca-4229-9d47-676502990eb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b876e1-9943-4d57-a713-2f8d3c645dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de6d3288-bc2a-4694-a6a1-e53fc32bb96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c122a4-e557-4a63-ac85-6502d50498ee",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28eae8ce-8313-4b5e-96c4-13a061b7a554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e58b62b4-a76e-4c88-9682-29d1be08a951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6c2650-3465-4612-8298-615e5f948efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6a3dab-34d9-436e-81c8-00ac75a1eaba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6145deb4-b5b9-46b1-afda-42dd43866ac6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4b09fd-4f57-4ad0-8ca5-cc5551490b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2846c3a0-2fda-49e9-8764-e47b3a3f52fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "073c761b-0868-4583-8764-8a4ce0e22bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7518e7d3-40fa-446b-a672-2464c27770ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cd77d8-6568-46b5-b674-cb94def70524",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0ab8f5-89bc-4e2c-a79d-e7de8f7adbd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf87fa9-9132-46a7-a194-6bf74ff9e5a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c97ad3-85f2-4595-88b2-13a69cd15814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28474d2c-89ee-4323-939f-5aeb754c4896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25892bd2-f963-436c-be9f-bd24d9d33510",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150e2eb3-63e6-4cb0-9c22-09f51fcff823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd3bd3d7-316c-42cd-90fc-017cacc0ad61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed892ac-1a43-4ddf-b409-a86034cfc489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21eb4dd0-8234-458b-b304-b652e46f6f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9e518c-2413-4d88-bc9c-a06d4beb1d84",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2148ff82-7359-48a9-8edc-d8d8f56fe343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d704bbae-5e48-4bef-a006-bc375600d3c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90a9577-f916-4c9f-bfab-b347a905ff1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c6933d-9ea8-4ebb-8bb1-61df65c4c69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12bdba93-e541-41a8-99f2-df97bc24ecdf",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492dd45a-526b-449a-91c2-1fa088a29233",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cec5feb-1c58-404a-ad42-1b0770133391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7afdea-3041-4306-acb0-522a3a68b35e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2004f83-1d3f-4b82-bcb6-4c5540a6fea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26669f5d-d94e-4f6b-9629-a73ef6030fda",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20cfe2b1-78a4-4b73-a570-a46551aaa934",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd003d8d-de17-4f0c-b05a-a52e06a1dbca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5165d8-0c6e-4813-a6aa-c73187b3661a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e19d9323-04a9-42ab-96c2-9b762ed49acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01237af7-811a-4cb9-a8ed-c39a13f531e5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783f4733-859b-4cb8-95bd-f0ece3edacdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa61964e-868e-4c95-9853-06194202705b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8694f352-152e-4b39-b96a-117eba5390b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0523e342-0638-4f19-b0a1-177a4f37d85e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cbde47-7ec0-4f34-a711-d3e95bd91e7f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebd0e9e-b358-426a-ae44-7f588fbf036e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a0098b1-187c-46db-91cd-868f89396758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3ac854-0916-4e38-9f49-6cdcb6cb9594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e7f12d7-f4e1-468c-933c-9afb0309d524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2226443-1562-4c7c-aa4b-4c96a7134dc9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f05de9-5209-4d1f-9e18-b59bd2e1fddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4beff3ef-7535-4fba-aea5-4e17a33f035e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "789588d5-1523-4996-8285-8476d4adf75d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc35559-72dc-45b7-91d2-ee7d4e3e98b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8556e83-16b7-4681-ac8a-9028064b88dd",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de4ae6d-7f33-4ed7-a0d4-bc4a10df9260",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "147d3a74-93ee-4865-bc2d-d8bbaa4098a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32798ca8-9b4d-45b6-b598-116e4c03604f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6277df5c-73d9-4ef1-be48-49bdf513b70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec18b139-bddd-4164-bcd1-78f2ca1fd756",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c189810a-2c09-425c-8545-52a347d59bfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54d05f94-fcea-4655-9f57-fb7325306416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c1cb1f-186d-4a75-9779-68ae06568c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c231c76-365e-4470-aba7-94ac336803b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd440f1-6272-4b57-b949-19ae111b249e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e86dc4-c8ac-414f-8d0f-01168f3db83a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e85fe44-aa28-420a-ae9f-d2043c9fe080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65906bd-579b-4203-91c3-36d57066bdee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9abbe570-9a67-4a69-b7e3-a3e4068dc36f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbdd5014-d3be-4eab-bfdf-d3102ce63a98",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90ae602-a2a0-4350-8b6f-f4322c55c1cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3f85424-be16-417e-8b22-c8be5588f063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1298623-94d4-4629-92a1-99c890a60d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded183e5-deb8-4c1c-8ac3-c36b5e70bdff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f2ac58-eac2-4b9e-bb09-53bc1d75ec6e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e60f09-a516-48ac-9976-4ee87a84f7b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "081eff8f-a647-4e13-972e-bb2391af4361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8eebf32-db94-412a-b769-41f3dc341255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4c85a0-3847-486b-af0a-2cbf15e2ec75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd43bb5-4e0f-4db4-b50a-4c02d9d8a44b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61a7e55-7039-45d0-a67c-5e0033f29881",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39433562-71bd-47d8-8910-1c1adde5854e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a253fee2-c01e-4547-8e1b-dc55ba632ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcdee8e9-51ad-42f6-b99b-c5ddd9c7f4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90856559-88cb-4480-bdfc-72c2453ceca2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bdff8a7-76a8-440b-8c87-c467e24dcf07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfdd81e8-ee00-4a3c-b932-a9fc4f382684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e5f724-aa29-4e92-a2a1-114c33cd2f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "405eb234-caaa-4218-bce4-d7fef97eaeba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f04e422-4841-45da-8467-1786f9a80abd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62cfbbf-edde-493b-8007-7987137f10d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31562aa9-9493-4b75-ba4c-0e4a40457732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e813bf1-58ab-4a83-b048-ccdb5702b8cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9427eff7-e05f-4c01-a7cd-ed87a84772de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534a9b96-4614-4f37-ad3b-87b5deb63a0d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9e9247-6537-44fd-be6e-a8aafba5dd4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d6c706e-f7c7-4639-a3bc-e0ec46eb08bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77660d21-6027-47d1-b54b-7ace6057e366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0985de12-7971-41ff-bb8b-50438e257987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e387a71-b08f-47f5-93aa-5bfeef08f526",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4dfa7ae-0a76-4bd5-9804-f63c8efaa6d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c909dd86-bea5-4194-a67a-fe5e49fd6d68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c9f0d9-aba0-44a3-8df7-6e34ef9db59f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e35fd9f-3e56-428a-ac94-fc1be759ba12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524137f7-909f-4925-883f-fc37112caf6e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab59bef-2573-465a-b3c3-b178cce39d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d51b48-5fb9-44eb-b8ea-7362a78cf900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8873ce56-c31f-43c5-88c9-a05bce468839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03afd96a-433b-47f0-af57-4db1480ba0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b01f31-c87f-40de-8ac3-81ce0e6e47b0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df91377-0488-4110-85ae-26992c1496f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5a065a-56eb-46d8-a31b-72fc5c66946d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8df5063-07f5-4e7c-bb97-01a69c3fd930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8239300a-090a-4808-af6a-8504d52b669e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5feda5-e1b6-4f11-bf50-6b8f172bb619",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17292d7-0405-4160-a287-67dd6f63c419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd0ada99-3666-479e-9309-a10c1a6e5437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "402af298-26f7-43d3-9d7b-1794da054e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40fccf3-68f7-423c-8035-2fe391bbca4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f1854c-74ab-441e-9d86-874b78ba4706",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f6cd00-3d7e-43fa-b6de-67e59aa4d48c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d059a072-debb-454f-ba2c-cdcee38b8f6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d45a49-0251-4d23-af2a-4acf6a6d549e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b6f464a-4f5b-4ea6-851b-2f68b494afba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5acb3a-f60f-4cb0-a201-d3c9de627b72",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55094b02-db18-4de6-a001-d3c24bb5995e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6772b476-2777-4e6c-9edc-24125eb044e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fab2a6-e18a-42fe-a251-2e326340adef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c3d060-60c5-478a-929b-3261bd4896ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19cfba10-fce1-4565-93ab-7e4ebbdbf108",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20ce117-aa11-4546-acd2-94ae46e3a7a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5fabe86-0419-4a0e-a317-185aa698fede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e251a50-4307-4f30-b30b-6bc109d9ef0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec676ae-d239-42ef-a5f2-d6a5d034e1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9aab83f-68bd-4307-98ff-7128cb327fb7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44f3b3d-987c-43ed-aec5-b70fc048df63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1244b4ac-d8eb-45fc-a3a6-8093bb2da615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ad94e7-e19e-4cac-b865-792447226dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07794b8b-a9e5-46ab-9b03-bad9675f2e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94a9f88-022f-4f0a-8c04-753549884559",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a7c79f-6150-4c78-95f3-d3164be71d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9646406-aba1-486a-9809-aa0d1e7af40b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "503ea8e4-7b5e-45e1-a06f-6fdf893eab98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6152ed9-673f-4ea5-af99-49f709fefa69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f22e04-f960-4603-bb5c-de2e00e90786",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6a78eb-1ba9-4aa9-a477-cadd05d6586c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae94c410-225d-43df-8f83-33ed9d83dfaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff525d59-efe9-4861-ab3c-ef2e515f1f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e360bb53-a0a0-45dc-b7cb-0549aa8a40c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b366ee67-e676-43da-a4d1-b89436818cc6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7596d463-1a91-4701-ac80-9ac358ec12a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "507a7245-ad37-448c-baff-09362d41e7f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b3fa2e-fe43-4124-8d70-325eabe7a208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef609de-6969-43c1-a092-f0a467abfcde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b12a7a0-9490-475c-b64b-bcf0b725b35a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617b2cc9-6bfe-47e1-99b3-60341e4e58c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a866c0dd-cffa-4e25-b2b9-433246a4145b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8edacc7-8443-40ee-8163-0798b0ca039d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e7c72f-f625-4057-9967-d1a0d5a4ceb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2035802d-b6c7-44ce-84e5-22347143aca1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6afd89b-fb04-47bc-a2ce-ecd868b34758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebc4296e-ec64-44c0-a74d-d5ee7b46c942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba6d17d-51e6-4273-bf52-d5905c9af3a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce207cf-f37c-4c3e-aec5-2ba32d648814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47cf94b-7d0f-4fcd-b4b3-dff0d51182ce",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4fa5bd5-b95d-4398-bd6a-f4a55960f2cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9db3f77-211c-4b78-926b-65305ca43d52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125c4c1b-9363-4bed-86fa-115a07cfd889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8741c626-dde5-4cda-8b98-8ff456ce11c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbdca5f9-fd03-4b68-98c5-f058dd974f44",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d322dd85-da9e-4ea0-b985-114a4f085262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f61b6d5-b827-45c3-bfd9-2831bd543fa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce12eb8-9311-4bda-a4a2-aa7637e1e833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dbf863d-2573-4a3f-8529-69c2091381f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1cbf1a7-3768-45cb-9f59-12cabc0306bc",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5f0703-e951-4d34-91f4-86137aaaab1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bfd5402-e64d-4fb0-9cd6-e9eeaee2a9c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b885d3d2-75ce-4355-a1a3-e58c5b4c8db3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc730c0-fdca-4dd8-8d1b-2c3f778a337a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc5da28-f46d-44f2-9c63-dc61457e055b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c7996f-f3c4-4d17-8d01-141fada7220c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efddb549-9410-492e-8ae9-3036d7f67b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5286b173-a1f8-46c0-98c7-0967143c9ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f918db8-e9dc-45be-a976-c6b6ae7ccbf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73218eae-00fe-4b5f-a459-3298347db769",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b239a5f6-066e-46fc-bd07-551286fd1981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbbba1c4-3ee0-4139-9c7d-3978c3687d24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8c7e51-138b-4947-933d-a04bd5f44a4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf95bcbb-9846-4896-a4f5-3a93d8245457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a47aa1-b553-4883-b8d4-1256bc54146e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8010ee30-3750-4f61-aaed-89989525e5c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5593f3cd-8dc8-4366-9877-a7d55920a22a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc50b6fa-3eb8-4b6c-b8c3-4391411ea885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df9cc227-d728-4acb-9f84-e482eb20914e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce7425d-4468-48eb-9171-b7e993c47677",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e321937-b4c2-4b2a-9858-e9bc444f9e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6469a839-ea51-473b-9400-e2f27910d649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64835cda-cca0-4f4c-b631-e2efd39af7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9f384be-f66d-4aeb-a9eb-8347a7bab7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7de1065-8510-4c52-a426-b58cd8dd9a5a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c27ad0b-6982-4ac6-b44c-803791197fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4cb188c-d169-42c5-9ea1-9968a51710ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ef5604-1f70-428a-86cf-edab930ba0c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f7ff01-90b6-4a99-bff3-dcd3eb108237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d048d941-2722-4243-9c75-afe3ef49c806",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e02ac3a-4729-40cb-aece-0358d02eb981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f65289-1891-473f-a38f-24d74a2ea8e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b3824f-7267-406a-a12d-58f81adaf60a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c37b9d70-211a-4121-9ea6-56b6a7e71080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f9a557-3b98-4c4e-ae1c-3c18b4ace95e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db682f69-2cab-4626-964f-483ecfcd98f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8907968a-1647-498c-9e92-253092b94954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb31cfe-1515-43c6-8494-3e385eb8864f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a2d6ab2-e6cf-4132-a433-194b2b152662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d04c13-e060-403a-9fff-2f62f5b7e20f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f60a55-7e8c-44ca-bf4e-5279140a56ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c158a19c-4045-4eaf-a457-0a3c187f573d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c66fd8-7531-45e7-a1e5-db5311e1716b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d58c99cc-9704-41d8-8f11-36c4bb292ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6fbd17-5126-49f7-aa61-4eef6530472e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b30a5a9-9724-4a06-8942-c41586dd1cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc3db770-31a8-416e-9c1e-ac1bf2572422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "748b20de-a9fc-4dc5-9e8d-15e6605e75f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1919ef84-6b80-4313-bfc8-2097f3c71d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47049ff0-6ab1-4f0a-84d2-4c75e6512fc1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b65e8f3-a72c-4254-9edc-0fbc8fd22b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8fafd84-3812-4bd8-8579-be67dba4bace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e96cef-2ed1-4dc9-a584-573e9d2ca356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4347022c-ecad-446f-8d0d-f65b552a44a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24890812-fccd-4f91-ac54-39544ec77961",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17392ec0-33a8-4a1b-894c-e2bdae3c7a0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e918533-5679-4bce-9f9b-32d389a437f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c0296c-21ea-4692-a7a0-979a3c0e7dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0817c021-4608-48f6-b5f7-4afc6824b603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6afb6c2-727b-45bb-9937-183d1faf43c0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3822101-75e9-40b0-b952-c885b693fc98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e635595-5beb-4495-a3b9-9a1a4446a938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63c1c3c-bcd8-4e94-aa22-c0edc5f0343b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7151fa-abcc-48fb-91e6-2f13c9171fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf37715-2175-41ed-83a4-07fe29d02d6a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5221d7-9e9d-4316-8706-0e2ba7272cba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bb2251e-9fba-4afa-b82b-205c48011c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89edc0ea-a11c-4d06-a6f7-a56c11dbd979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b402868-3c3b-4be7-aebe-8a494d63ed53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a9f903-7727-4f20-94ad-7915fb8f31a9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5520fa2b-bd1c-4f52-9f79-30e502ee3e2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f712311-1584-47e0-a733-44a382aa654b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bfae1ac-343d-42c8-a105-d1d61a8907f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fac03c92-78f0-4e3a-bad5-839fc6e0edd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8afc295e-1504-4bae-99ab-9f39240f9ecc",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e31907-8fd1-47b5-a94d-e44a56ed31f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03e9885e-82bd-4074-b230-4d77745590d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e901d3-4f68-4a6a-8629-2405f29ab962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e34d5ae-b39f-4875-931d-3bc14d785211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19388396-b8eb-4269-9615-381bd7d52c22",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8e521b-dd37-4ed1-972a-97f8830471c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3be9cac1-3910-456a-ad64-2483d72e18d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f18ce5c-75eb-42c2-8c59-72316b72aee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6d70b9-4ff3-45bb-9d69-6eca6ef2047c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e0c536-df17-45f0-97fb-d5d46d8b3aee",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661d5e56-1234-4e69-b7f2-ac3054f36122",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24a4f4ef-54cd-4b0a-b047-ac5bfbac7b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82154a32-61bb-4dcc-86bd-c0ea1d9c920a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd1188c-53e7-4532-9e54-433b1e5d4210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524c0ae8-e99c-4786-8f39-cf18820ebad7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5e528d-f8a7-4345-be0b-25f1da9aee42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32285ded-9b1a-434a-8f0a-32da7742e358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fb9a06-229e-4f77-964a-5a86b47d3cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7539dd38-55b5-475e-8423-6b7dea757602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf58936-7f04-4031-8793-c055532d2038",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd92c06d-d034-45a2-acc1-5c29fb06aa2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92bf9664-1bef-4889-a4d4-9864e925be23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd11462d-72a3-4ce1-a099-035770477bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1cd4c5d-5619-4f48-8d53-8f77e6bac658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe0fac5-8c50-4287-a7bf-340c9b2341d0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41071ea7-0e54-492b-84e6-2560e73a2a71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3afea0fc-d9e6-4da6-ac34-496aa5594178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0dc652c-3e3a-4e52-902f-9c7aa1a66083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193c91af-7ec0-4958-9c10-3bd5d1d282d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96907500-1ccc-4e92-ae7c-aabbba7c3436",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5952ee-9d97-4dc5-bf1e-88357cd22fa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cef04599-419c-4c8f-b04c-d83625122f7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46b55e8-318a-4047-aa96-597c9a70c187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd9069f4-f3b2-457b-8a32-33c6d641dc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e55dd9-235d-4c8e-bbcc-0b0d72ec5dcb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0480ef3d-96ec-43be-97b3-c1fea3775d85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b6a6f1c-0d2b-4a04-b4e6-1b2891dd89a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7888ef37-4473-4032-ab49-64c6e896ca6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe86a0b0-fe27-485a-9e06-8d8c368468d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0aeffa-1f4b-4560-8d8a-1026992b2150",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9aa4479-4998-4123-937f-94180f08cb78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4892ef15-c29b-4f24-9ead-0ac86180aaf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64787c70-6582-4292-9daf-f7ce170cc6fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd7d4b9-dc70-4585-a712-8eb69c5b7732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b9d58c-4dfe-43b8-9fe5-43e588cb1e9e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d9c85a-6cc3-49ad-8ed8-03b6b905c41d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b9b0601-67ff-4432-9be1-6336c2a95fff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a26b990-9d2c-4953-ab0e-89769be52c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc7ceae-0448-4cfd-9df5-b4398a74379d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f51d24-867e-4950-8813-a38e8fdfe94b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb664f0-ecd9-4089-97fe-b06649b569a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "852dacc3-a6f5-4cab-9b1c-01918d341ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d803497-f1df-498d-8ee6-67e05e6ba53c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f43a3864-a64d-4c65-a374-02bbb6d4d7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44842ea-e48f-4d6f-ba6d-c1f9404e9a2c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b8ff23-e4f9-4758-af54-e6c715570a79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a891ec7-d525-4f8f-9bb8-b602efe27c95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b436919-9358-45e5-b4a9-e8fad85f4900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b5b7308-593f-43be-a779-345a22dfe102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7349ce-c04c-47cd-b481-09ea9a1dba42",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc566d8f-cdd2-4368-b443-47919857648d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca231ed1-a4e0-4b88-8b4b-78e630642017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d101b1-3d23-4333-bf62-ad8a33c3c140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec53c3df-4165-402a-8329-ebd3228e2e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac97aac-c6e3-42cf-bc90-825a44014cc9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf2f2fc-4b06-47ef-883f-555ef6f14e48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41f8f22d-f251-4ed4-aa77-daea337e2975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "351ec692-5829-4855-9bbe-f83c482adfc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec6a8ed-5c5b-45ae-b0d4-19e9c57af8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfcf299-ca36-4a6c-9c4b-bc1438edfe1f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5844d369-cf65-4a88-81dc-f79375fcbbe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f264a59-52a8-413f-86fa-40635a4d86a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f0167e-13be-4dd7-ae37-b7aa7b8a7e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f378cc-a87b-44a5-9514-ccce710f2dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd1704f-3b35-4ad1-b01d-ae323e820aaa",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c98ee98-8237-4217-9612-c23f5f5f1a8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b62cc84-4d1a-478f-a8ca-ec9fba837336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53200fe5-4200-43db-9ee5-806b8fed67c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63977171-e0dd-4811-87ae-75399b2902ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892fbe1b-1379-474b-a46d-48590a3473ec",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16c5bb5-e325-41e2-9597-8755166ae40f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4d2e28d-46a4-41ca-b6aa-c422b4ab44dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8767326b-cdae-4b79-812e-492e751c77a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e9a019-2393-44c0-8293-eeed0e4867e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee23d4b-6041-400f-82e1-c4d11d4ba5e8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7f90f8-2171-4764-9be9-337c8a5722ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3938ddf-5405-418c-8a03-3d724492bdfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d283eb1-b9bb-4ec4-a8c1-ff4f8049a462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e76cbb3a-ae1c-4ae8-a2e9-dec66ddb0daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a8d92c-221a-4ed8-b318-226810105ea9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd79842b-5962-488c-b446-6dcce934c310",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcd5cecb-75be-4cb9-b233-4f858fbff6e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc3041a-4481-46e9-b616-1313e1f3dc84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd2635f-9a38-4871-a474-0e49108a1873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd7f112-61cc-42f5-8137-033d9daaa0b7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e64695-db87-4aea-a995-130728b66d61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c884ad9-c3f9-48e5-ab45-558ca49d1c59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8ac828-6c95-41c9-aa57-cea8538b3763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d7f3e34-d5be-41d2-b6cb-371b55a91e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e38e54a-4a79-4cbf-b8be-de97d3542e8c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d191ce0e-58fc-46bd-9ca9-4726101a5cfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c756ae94-585e-4c4f-b5b6-921baf86e608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4981914-b610-4231-bd5d-122a4bc14192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb731a2c-b537-4245-88fe-c744699e2bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5065636a-3e49-43e3-91d9-fb643a342d68",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb6830f-62be-4aec-94e5-9bd216563164",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b43a401-25f7-4a08-b417-93bdf51b64a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3f5ed8-46f1-4bfb-ab1e-20a02132c083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5390281-679d-4ce0-b5de-5c2efc5aee73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3c04f4-f470-4fc7-8d46-2c4583512986",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797f2354-07f2-4012-8106-4ae4c7c74bc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89539102-3673-42f6-9222-4a266ee686ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4486d6-49e1-42ab-aa20-3a0c7e84c823",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c0525a-14ce-4708-bf9c-44890b24877e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3f1373-a493-4970-8fd5-6ce4756d2a89",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37593294-eae5-4c7f-bb00-765de5c4b225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bc76af0-d702-426c-81ed-440256f8593c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "096184ef-6804-4137-9366-bf325eb8435e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c23fb8d-b6d6-40e0-a29e-059b5be0a82e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e038b2c4-2a6a-49e6-a6a6-e3552ed1acf2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254a9feb-fba2-4313-874f-da30b06480fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a717c34-8c0e-445f-91be-27c49bd6f958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57655562-dcd9-4827-aca5-25270ea43f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df7b8bc0-54be-4061-bec2-8efe0c169dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bd08a3-87ee-4a99-8c22-589a461609fa",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59622fb5-d47c-40c1-8bb5-09ebf6fc17e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eb5d31b-b8a5-4a1f-aa0a-5ceef4472430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1303a797-81db-430b-a438-a9b5c7b5f576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e8a84e-6bb9-439d-b115-6db87d95d18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637096df-3ed6-4a15-a27c-001382f070d8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b93cdc3-7c8a-42eb-b8bd-f216b3530f75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02e4d57f-3e19-46ed-93f1-849240ddd773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0273c26f-1d7f-4fa2-a90a-7c0af483e953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a9625a-f52c-49fb-8326-70573f3a5376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13a0300-7db8-4421-b193-21acdabbdfa8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53996fb-57aa-4ae3-98d2-e9752c60d8d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e20b689-3aed-4824-bc98-2dbe17be99dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afadbaad-6731-4e32-bfc1-d2a80c5fe941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "541db1d9-bd97-4552-8615-218661766577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6f1880-7663-45bb-b35e-9e02bf68ebce",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5a9a85-e47f-4137-9630-8e0ddec4fbb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbc8027e-6525-4bc8-9a09-9ae68d4aae8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef34793-1769-490d-9740-31531be9b0c8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cecf6e8-026e-4dcb-a604-070855f1fb61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5889aa-dded-47ba-99a4-339467fb7595",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9717417d-debd-4864-a4d8-a3710126fc06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9aca8c9-b2ad-4818-b79f-6b148ca51d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "447f933e-db0d-401e-ad4a-ebea06726e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880c8e62-155c-4181-8493-ac6d628e0236"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f309d008-5a39-4cea-b6e4-c12b39305d10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "972cc36e-253f-4a41-8d37-9478e6d1ed79"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "870c3266-2331-47c7-803f-1374b9fc8d67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7924107a-e216-4a75-8d02-27ccd33a32ab"
                    }
                  }
                ]
              },
              {
                "id": "d849dbb1-75d8-4b4e-a4d8-d19e149813be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a93a58be-e4bf-4282-8899-9848d7f1f740",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e123dbc8-5151-488a-98e9-19525dce9372",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e95c9d9d-d42d-4c6d-bef5-2f0719adde31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deccdfc0-39c5-409a-a6a9-4c248b963753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "beb66ba9-6bda-46e6-b6d6-18449db4165a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ddbc914-7d68-4cea-9185-7e3752f6671f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f17a8b5-b531-41b5-80ad-5a4e9703f1c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d71e633b-a208-415b-976b-417f672f5ac8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8cc7c7ea-404b-461a-9491-0867f99fa9e6"
                    }
                  }
                ]
              },
              {
                "id": "62ee9a55-bcc2-4fdd-8370-fd6305fc115e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e8f21a02-c5ae-45e5-81d2-68a282614936",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df51588c-21dc-4d8a-a90d-63f5f1ef1925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5509a96d-3181-46ea-8484-dc3bf78bfc66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90ed3c5-03fa-413e-9436-2e90335444ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8dffff8-538a-4f60-9534-4b6b74e0b087"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bf6e8eae-189b-4f1c-a528-b56ff5a9f4cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "041c1037-4fca-4f68-bdd8-a20edc948351",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01bbef53-5af0-41b2-8732-712694c0fbf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5975ecc9-af32-474b-9142-5bab3786c91e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c89f0489-a2f3-4392-82ec-6842262771c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16887850-05a2-4662-87bc-104f3ad0c466"
                    }
                  }
                ]
              },
              {
                "id": "289cd42e-54e5-4b32-b5b1-10f7677dfadc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58086124-0b4d-4c55-8030-5cfada28ffef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cb8f8626-241b-44cf-a7d6-a8f84c8fcb26"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbf3cd3c-d035-4875-b355-370418a50138",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a56844b7-a8c3-434c-8ab8-6eec8a9c1bb8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1210d01e-10d8-4575-864a-3e9ad6458bcb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "945ad8a2-bd66-4e7b-9198-e1f44e439e67"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79d1eac5-72a0-4a8e-89bf-aee8cfea1715",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "123c62ec-8c4f-4e6d-8524-77018743cd76"
            }
          }
        ]
      },
      {
        "id": "ad4be30e-9524-44d5-8ef1-529c5b030c11",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "43f5d6ab-f1f0-4ddd-9097-f03d4f52c136",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e6e189a4-db61-4a1b-83c1-9c013188a3d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef4fc8d1-6cc2-46c1-93d2-9aee39478df2",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7655b7e-7a57-49eb-a3ee-26d8f06a45f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3ff18865-ce73-48d4-9c0e-8f11b0a97cb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ff489d-ae7c-427a-96b4-d3c99d329bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e81c7059-5c7f-4a11-90a6-b64a797abf08"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c44d1116-b3a8-4edf-a7bc-534229df98df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4bfa48c-ff86-4d03-9e87-216a5267bd3d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3c25980-50d1-4396-b16f-0aba37924f93",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63956c30-214d-4899-b3eb-d0b65ea985ac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f52555d-6e55-462f-9991-d138829b281b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "69a32ca3-e14c-42cc-adc1-44ddf975ce39"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30df072f-de44-4f01-ace1-4ff9104be636",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd156598-5c0f-451d-992a-a296665b4884"
            }
          }
        ]
      },
      {
        "id": "6bdedf80-e2ae-4c71-ad96-1cf45f8e3210",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f207e3a5-593b-4221-8daf-f3078561ea04",
            "name": "Negative Testing",
            "item": [
              {
                "id": "999643ff-b5d8-4407-b327-65ec53c0ba74",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eaedbe66-ec4d-44b9-9240-9f00df5f99bd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef16435-96b6-47b4-9f0e-43898e80ff03",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0319a291-5458-4434-b397-87475bfaba00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "302d893f-261f-47bd-b9e2-2cbfe76a94bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5263f80-254e-46d3-a1fc-d080a78e6131"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47a292df-c8aa-43e8-b5d3-39f0682d88c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb4b943e-3abd-4204-be00-58e735035a4f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f1ba317-824b-4006-beb9-e9ce07ba7964",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a067b2d-7ec5-4e4e-8300-04fc4be44476"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ca175f4-b981-4457-b988-b2d2e60a9dc6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1ec026b7-eafb-40c6-aadd-9d0964d80041"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01af4553-8e05-45a5-b0cc-6792eb21cc77",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4dede033-f60f-44bb-a0e7-1191c918331f"
            }
          }
        ]
      },
      {
        "id": "9b9750bc-6b91-4deb-b68a-35c98aabc7c5",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d4f13a44-e9b1-4c06-982e-d959c2930a8c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1e02c058-f707-4c50-b5eb-c617bb3be3b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f9a98c0-f72f-40d6-8497-da5f79960e2b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589d5995-9821-4a18-8732-fecf060a2fb5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fae25a7-1e57-4f81-863a-555fe323020e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b196e55f-8a93-4613-bc74-cdbff2b0bc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f3325df-52d7-4da2-abca-e6e46aa79878"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8b0b07d-3a78-4bd4-95fb-8d85dab5b55f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00952d15-7cd5-46fd-8a82-3ae1d5f09423"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50931d08-6d92-426a-9279-7b28d31be82b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f79d471-ec61-4340-b455-c9b53b29d4f2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9e72be5-e255-45de-8a7f-0952569b0600",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "28c9b010-1e6f-4444-9b30-2a52e84ba643"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "456e7cf7-298a-47de-9a77-9acdcb1ab4f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cdebd0ee-e379-42da-94b2-e3a7b262b7c8"
            }
          }
        ]
      },
      {
        "id": "a27ee7ee-7a6d-4731-ac7f-84c1aa2a5ce8",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c28132dc-1f63-4fdf-af51-ecd64c96c0a7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "103ecc7b-ee1a-4a6e-80c3-27fb9338c388",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "37791da7-a537-4363-a407-a7a8365982ef",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a4bae180-edb0-496e-902c-7632d33ba1a3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "edf32190-9c13-4ac4-9179-23ab239ce330",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 68.92253521126763,
      "responseMin": 8,
      "responseMax": 393,
      "responseSd": 25.3103480323042,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692923533140,
      "completed": 1692923565780
    },
    "executions": [
      {
        "id": "25b88d36-0ac1-495c-b8b8-b803984d6842",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ccb1cc2b-17b5-4443-b6df-3c974d36d5c4",
          "httpRequestId": "639b6044-9b49-4738-bdcc-5bf1de293f76"
        },
        "item": {
          "id": "25b88d36-0ac1-495c-b8b8-b803984d6842",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "98a57ee3-a888-4094-997e-9a3a0d07cfe1",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "8974ec7c-f65c-4847-86d0-d2ef6b446fe3",
        "cursor": {
          "ref": "440035c0-bf5e-4ca1-92c2-d246f3cf63b8",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6cff9725-d4d1-4c4a-ad0b-1e3cb22ab053"
        },
        "item": {
          "id": "8974ec7c-f65c-4847-86d0-d2ef6b446fe3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f90c30dd-f926-4297-9ed4-f912ce3f429c",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "fe3284c4-a934-41b6-8df9-9459a0e0575b",
        "cursor": {
          "ref": "7bd87e27-abb4-4244-b099-049af383826a",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "57547c99-38eb-4553-83c0-c0df970c8715"
        },
        "item": {
          "id": "fe3284c4-a934-41b6-8df9-9459a0e0575b",
          "name": "did_json"
        },
        "response": {
          "id": "2d1614d0-a7fd-489a-93a2-86d3abe9cec8",
          "status": "OK",
          "code": 200,
          "responseTime": 217,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc07ad1e-6a7b-4e80-92de-3a1d1e20a42a",
        "cursor": {
          "ref": "0174b861-4dc9-41ad-8fb3-9dd35a8c0bc8",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1ac741bc-8122-4f27-b6ac-d9bbe5f65c32"
        },
        "item": {
          "id": "cc07ad1e-6a7b-4e80-92de-3a1d1e20a42a",
          "name": "did:invalid"
        },
        "response": {
          "id": "4276add5-f8de-4d1a-91f1-37644f84ae66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc07ad1e-6a7b-4e80-92de-3a1d1e20a42a",
        "cursor": {
          "ref": "0174b861-4dc9-41ad-8fb3-9dd35a8c0bc8",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1ac741bc-8122-4f27-b6ac-d9bbe5f65c32"
        },
        "item": {
          "id": "cc07ad1e-6a7b-4e80-92de-3a1d1e20a42a",
          "name": "did:invalid"
        },
        "response": {
          "id": "4276add5-f8de-4d1a-91f1-37644f84ae66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b78a56c-3737-4f4e-aaac-e441ce7d1812",
        "cursor": {
          "ref": "d0a153b9-cb48-4ac3-82fa-1d735b1d9a4c",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7145e53e-da07-4487-b0d5-3a44e2b06e5e"
        },
        "item": {
          "id": "2b78a56c-3737-4f4e-aaac-e441ce7d1812",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b07c45cc-1e6b-4524-86a7-f36baad591b7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 108,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a6a3d2-cbb9-4118-a38a-2c9195f2f8a8",
        "cursor": {
          "ref": "3d5ceecc-7341-43a5-8241-171ea6bc959e",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "63c387a3-d9a3-46e1-a34c-875e82782479"
        },
        "item": {
          "id": "c7a6a3d2-cbb9-4118-a38a-2c9195f2f8a8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e3a60e1d-7513-4e72-b3db-0d5ab433a4ab",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9bd468-8962-456b-abc0-f652b85320c5",
        "cursor": {
          "ref": "4624e443-24b8-438b-aa5a-4c87d90c4df0",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "44be3f45-7502-476c-ab96-4d2705021196"
        },
        "item": {
          "id": "2d9bd468-8962-456b-abc0-f652b85320c5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "00a8e9cd-4cd0-4c63-b0c0-a2f71beec982",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ad41d6-b43c-4513-9e36-dc4455d7d0ab",
        "cursor": {
          "ref": "3fd9aa3e-7372-436b-88b4-5bd15afd6219",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ae672d3f-f3ad-4629-936b-db2d52b547cb"
        },
        "item": {
          "id": "67ad41d6-b43c-4513-9e36-dc4455d7d0ab",
          "name": "identifiers"
        },
        "response": {
          "id": "5a6b58de-33df-498b-92c5-7cabb89566e0",
          "status": "OK",
          "code": 200,
          "responseTime": 123,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36654b30-6dd8-4892-ba5e-64489cf04b80",
        "cursor": {
          "ref": "ed32fc95-7f21-4d72-a664-29124a1d31fa",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1c84ce42-00bf-46cb-97b9-6a5d30a5cec1"
        },
        "item": {
          "id": "36654b30-6dd8-4892-ba5e-64489cf04b80",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d9ed7a48-49fb-466a-9d7a-82e09940d7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af378f0-82fe-4042-931e-f2629c14e73b",
        "cursor": {
          "ref": "9715eb7c-7d70-4cb8-b7d5-b8a4d479df9f",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8a4eb489-6d30-4be0-b69a-b29243830704"
        },
        "item": {
          "id": "0af378f0-82fe-4042-931e-f2629c14e73b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b8ae1e88-f4ba-4d7c-b5d3-740f01ce37cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262b6f3d-3d30-470b-854b-0ca2fbc91fb9",
        "cursor": {
          "ref": "c61e01e3-2c70-4077-89fe-34b2f01ce260",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "cbb4ab73-29b2-4afa-ac49-ce33448969d4"
        },
        "item": {
          "id": "262b6f3d-3d30-470b-854b-0ca2fbc91fb9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "023ab79a-db28-4f82-9843-bb7ec6c9c82f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33960405-54d3-41e8-b445-6027f0662b51",
        "cursor": {
          "ref": "50f07b89-c4a4-49e9-a8c2-d004825b2c47",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7661239d-a238-441a-9bbb-0f853bf75b57"
        },
        "item": {
          "id": "33960405-54d3-41e8-b445-6027f0662b51",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "35cfd2c8-d301-47c5-a8d1-555dd8f29c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3c4617-cd6a-482c-af5a-906e1df277db",
        "cursor": {
          "ref": "e70bbd75-525d-4450-8137-ba2857030e0c",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7ca62f38-257f-4446-9b2d-4ec1444c199b"
        },
        "item": {
          "id": "bf3c4617-cd6a-482c-af5a-906e1df277db",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a9c26163-2b49-4c33-a766-ddd75ad7e2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f4dbe6-2220-4166-9cbc-8a7bc9683fd1",
        "cursor": {
          "ref": "6d7ea248-cf45-4a5f-88da-5c8c8f29f827",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c9c29d90-8f55-40ac-bc33-5e22444d68b9"
        },
        "item": {
          "id": "28f4dbe6-2220-4166-9cbc-8a7bc9683fd1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "37e51589-f3b1-435a-b593-e1c03a580733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c9b626-6790-4579-915f-8233b5c6377a",
        "cursor": {
          "ref": "f1e6b942-dad9-4cf8-8e21-7ff5c265bc22",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "48ed6112-5fdf-465e-9837-f2f0174efa3e"
        },
        "item": {
          "id": "00c9b626-6790-4579-915f-8233b5c6377a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c18f3e5f-9cbf-45bb-be11-336dff0572c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466d20a1-f1d9-4ad5-a4a1-4fdf1ea9bb93",
        "cursor": {
          "ref": "0193ae73-bdac-4cb1-88e5-7bdfd3a5d8f4",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "de408899-1eec-4d99-852d-d74ce42b1fd9"
        },
        "item": {
          "id": "466d20a1-f1d9-4ad5-a4a1-4fdf1ea9bb93",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "dbba49be-c959-47b5-934e-5a20b4ea14ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0019a5ab-f348-4a6d-933c-5a59e02d31ac",
        "cursor": {
          "ref": "83cb31a1-b231-49b4-9aba-ad5365ee6337",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "420bfdca-4e22-4daf-b5b7-7c5e6b790709"
        },
        "item": {
          "id": "0019a5ab-f348-4a6d-933c-5a59e02d31ac",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e0f1abe3-9df9-4c74-9608-d45178edc773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d6467e-edb4-4da0-af39-009afae5ddc9",
        "cursor": {
          "ref": "b5772b53-504e-4a39-8dd4-afe6380d8067",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "059874c5-c310-4af6-84d1-070ceb58bf5d"
        },
        "item": {
          "id": "95d6467e-edb4-4da0-af39-009afae5ddc9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "eeea2b54-affc-4b7d-9ae7-cd7684e6170a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e57784-1ebb-4400-bb84-337b1da42cd7",
        "cursor": {
          "ref": "5379bbe8-0757-46d0-b571-998e801ef850",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1a9b7ef2-49c5-4ffb-9a8a-9d24b813f929"
        },
        "item": {
          "id": "c4e57784-1ebb-4400-bb84-337b1da42cd7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d11ad8eb-caa2-4041-ba1c-2214c9cd6a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb95435c-fde6-4c3f-9c8b-71d318be1930",
        "cursor": {
          "ref": "4d708e25-7f81-4819-8e59-403bd35de2b5",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "24cf9648-f71a-4ea7-84ec-4b8c06e36032"
        },
        "item": {
          "id": "bb95435c-fde6-4c3f-9c8b-71d318be1930",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9726ddd5-2569-4280-bc88-c4878718abb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9a7e8a-9533-4d86-a994-b2fb40ad9ee2",
        "cursor": {
          "ref": "3ebb208d-3d45-49d2-96ef-ead7aa6f3091",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8e48f87d-d4c5-454d-a089-b2be7144e474"
        },
        "item": {
          "id": "0d9a7e8a-9533-4d86-a994-b2fb40ad9ee2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "28d69751-de7e-4d20-b91a-279de79cdfb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923a5567-861d-4d9e-84fd-754bb68bc1c2",
        "cursor": {
          "ref": "d923c262-9e48-4680-a329-9c05894d8b1e",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d50fab43-3b4f-418d-9ca2-4cd62777cfbb"
        },
        "item": {
          "id": "923a5567-861d-4d9e-84fd-754bb68bc1c2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1b74fcf0-efea-4269-b9c6-f375869ca6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfab087a-e241-40ff-b119-2f5d5ba9cdd1",
        "cursor": {
          "ref": "53a006ee-38ea-44ea-88b1-333f8ddd0068",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d51ca6e0-3267-4542-a78a-2b401bf19c9e"
        },
        "item": {
          "id": "cfab087a-e241-40ff-b119-2f5d5ba9cdd1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a17b9e3f-2d3c-4078-840e-5d14a53d46e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685d216d-9f66-4bee-a983-0b7da792054a",
        "cursor": {
          "ref": "9ae203bb-5b34-4285-9ac0-098ef2bcf4cf",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a3edd5db-a363-417d-b5df-57ab96231fa3"
        },
        "item": {
          "id": "685d216d-9f66-4bee-a983-0b7da792054a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "09455d70-0608-4ef0-812c-4d0b76c24e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c50ec5e-24d8-4565-b808-d7539c54eb86",
        "cursor": {
          "ref": "e525d198-d0b9-40a3-b2cc-6b2afeb24f87",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f5b2cea3-810c-4f7f-9137-7a6d634f396a"
        },
        "item": {
          "id": "9c50ec5e-24d8-4565-b808-d7539c54eb86",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "568dfbd2-6cfd-47d2-9e49-4303e7221743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d27e7d-a2bc-411e-9115-ab8ee075813e",
        "cursor": {
          "ref": "a6a6e449-423e-410d-a446-e0370a7fb165",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "68a4bd72-eebe-4c87-87c0-d03fa1b96d68"
        },
        "item": {
          "id": "84d27e7d-a2bc-411e-9115-ab8ee075813e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5611a818-0c63-4a14-be5b-c6621ae76b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9292e61-76d7-4eeb-8140-4b5ccb024190",
        "cursor": {
          "ref": "5e8aa283-e8c7-4a20-aec6-8c42e9bd503f",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5e7bcccf-a77d-4023-9995-792f70e8c4ec"
        },
        "item": {
          "id": "e9292e61-76d7-4eeb-8140-4b5ccb024190",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a08f5c5a-12e3-4b26-8594-468bef0f7c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ce0353-ce7f-4cdb-b36f-0718dd644b78",
        "cursor": {
          "ref": "0b5e1c15-926d-45b6-9342-0c0fd76e9e4a",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "42c1ee6e-9bf7-4dfc-ac26-2ba2052bb4e7"
        },
        "item": {
          "id": "c4ce0353-ce7f-4cdb-b36f-0718dd644b78",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3575e990-19a0-4395-8b85-203dd3139936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8586415-fb79-4c52-a2a1-82c2b933dfb2",
        "cursor": {
          "ref": "29fde3d2-21f9-492f-89b6-2f4fbd302797",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "dfc037a0-e8c8-4bda-922b-abeb680f8b63"
        },
        "item": {
          "id": "b8586415-fb79-4c52-a2a1-82c2b933dfb2",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "73e26a1a-9a14-44ac-bd63-1f910b0d3b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef05c65a-3218-4508-bf29-52513d03f0fa",
        "cursor": {
          "ref": "acb7ab2c-5664-4990-ab91-5cf85272757b",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "080ea3f9-5ce2-440b-8b1e-eedebf5e455e"
        },
        "item": {
          "id": "ef05c65a-3218-4508-bf29-52513d03f0fa",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0231137a-1707-4fc2-a6d8-a8664b5a0e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb285be9-c034-4931-80df-14df2b07499c",
        "cursor": {
          "ref": "9ccce308-cbda-43cc-9301-b1922bfdfa2b",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f3831d3a-e225-44bc-95fe-30a1bc59751f"
        },
        "item": {
          "id": "bb285be9-c034-4931-80df-14df2b07499c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "80aba0aa-1f12-4055-82c2-704f5901d72d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de6ccaf-ad34-4ece-8648-ccf25a8ae90f",
        "cursor": {
          "ref": "bb913f55-4f55-43c9-ade3-33be08214c8e",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "63da6f92-23a4-495f-b877-9d1a3bee1fff"
        },
        "item": {
          "id": "0de6ccaf-ad34-4ece-8648-ccf25a8ae90f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "554212c9-0e6a-479c-9667-0f2d987ba03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98e168f-2f58-4443-9edc-250162dae7ee",
        "cursor": {
          "ref": "db884705-5725-422c-9c00-b0f44892308b",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "89de5511-d4b8-4592-8574-2983199106bb"
        },
        "item": {
          "id": "c98e168f-2f58-4443-9edc-250162dae7ee",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9d1c9a3a-cb0b-48e3-8874-ff4e0565010d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc75517-22a4-469a-ae72-c46392a4ff98",
        "cursor": {
          "ref": "b244166c-5d54-4e28-9934-354b1ad0597a",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a72780d3-6379-4288-827b-a69241a18cd7"
        },
        "item": {
          "id": "2cc75517-22a4-469a-ae72-c46392a4ff98",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a986f4c6-bfba-44d9-a804-23c6ec23488e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7664e755-792a-4e71-9f6e-5ccb6a04397e",
        "cursor": {
          "ref": "94d27a2b-8b9b-4435-8c05-3d55e7280dc7",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2cddd983-0fff-4697-824b-2a1244fbac70"
        },
        "item": {
          "id": "7664e755-792a-4e71-9f6e-5ccb6a04397e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2ec0a04b-88ae-424a-aa01-d480f2a9fc94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6440436-b7d8-42bd-a269-0bd75eb8a52b",
        "cursor": {
          "ref": "bdc7b962-2b1d-4d23-af42-841ae2a5a4f9",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "63ff7336-0eb8-4e99-9ffe-4d7ed6b10547"
        },
        "item": {
          "id": "d6440436-b7d8-42bd-a269-0bd75eb8a52b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e8adf099-0a7b-451b-9c7b-5778fc1f4328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f802673-0558-4a63-a6d2-612369958917",
        "cursor": {
          "ref": "94370601-93d3-474a-a8fe-5ec1ee07ae4f",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1ed6dacc-4b3e-4865-960a-45c2e7cc1a88"
        },
        "item": {
          "id": "3f802673-0558-4a63-a6d2-612369958917",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "34902e58-9361-4ea6-9da0-3f657bece008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0cc8cad-2979-4174-8e9b-db2ace635da9",
        "cursor": {
          "ref": "2d6c12f5-ddcd-402a-850f-62791bc3199d",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "72ba77fa-72cc-4a54-acfe-0c8ba9455dc1"
        },
        "item": {
          "id": "c0cc8cad-2979-4174-8e9b-db2ace635da9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5d39037a-9031-48bf-9019-413aed82b5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4071c0-2e1f-48e9-9fe9-31e72fa1e4e8",
        "cursor": {
          "ref": "1a306f59-caf2-43bf-9cd9-96706d3dd147",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3b970ce6-3d0e-424d-ba09-e1db5772c558"
        },
        "item": {
          "id": "2d4071c0-2e1f-48e9-9fe9-31e72fa1e4e8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "903a2e2a-788e-4fea-bead-8198c583242e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba3af1e-2823-4121-9a46-e1440046b973",
        "cursor": {
          "ref": "747f2e17-e8c6-4216-b11d-ad3545618881",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "28ac0ab4-3e1f-4adb-bef3-bde70d444918"
        },
        "item": {
          "id": "7ba3af1e-2823-4121-9a46-e1440046b973",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "81e74e68-295d-4dbc-91fc-05199741dfc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7225412-d276-4629-bdba-039c1d3f81db",
        "cursor": {
          "ref": "2f9a2028-ff2e-48da-82af-df816426e232",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c55e0e71-1de0-497e-b97f-b8a984877a11"
        },
        "item": {
          "id": "d7225412-d276-4629-bdba-039c1d3f81db",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b258a602-e4fa-4579-b3c1-14a2b6758d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e895ef-9a01-4e3e-91ee-adcae840caf9",
        "cursor": {
          "ref": "6852e111-68cd-43a0-b2e9-9b8e63cc3bcf",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "feecccbc-da88-4072-b9af-ce460a168521"
        },
        "item": {
          "id": "88e895ef-9a01-4e3e-91ee-adcae840caf9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "81a6c1b0-145c-4849-8afc-fd492989b347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5fb098a-b077-4c4f-abcd-f25f2b78fc87",
        "cursor": {
          "ref": "71bb9a3c-56bb-4d6c-8694-caedb6bd7b36",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fdbbb22d-efa5-417f-8dc1-7f1e25c27ba5"
        },
        "item": {
          "id": "d5fb098a-b077-4c4f-abcd-f25f2b78fc87",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "435ebb35-83c1-4a2a-9188-a4a7de143edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8809fe-3841-421d-93b6-74837fe55df8",
        "cursor": {
          "ref": "ca5ef3d1-4732-41d1-9d09-855cf41d278d",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b53f5343-3aec-41e7-bec6-aefa46932063"
        },
        "item": {
          "id": "0a8809fe-3841-421d-93b6-74837fe55df8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "57115a90-17a3-41d5-8fe0-36d8042dc6bd",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 99,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e871993-3f7e-47ed-8554-33a2526ba1a2",
        "cursor": {
          "ref": "865e86c4-5c98-408f-b3a4-324e225664af",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "aecd6c31-c68b-4ba9-bef9-075a6ff3ce01"
        },
        "item": {
          "id": "6e871993-3f7e-47ed-8554-33a2526ba1a2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "916f657d-9488-4967-a8cc-1e8c2e5b8636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c6e019-56c2-464b-917f-8bcc9a2bf71a",
        "cursor": {
          "ref": "9edb45cc-8b5c-44d8-8cc2-fd2ee63aaea8",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4579d832-7628-4f4b-bd04-31d784bda024"
        },
        "item": {
          "id": "c4c6e019-56c2-464b-917f-8bcc9a2bf71a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3f4aa9b3-11b2-4323-aeb0-dda68d2278e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2be93fa-c1d9-4740-a858-900b516bda0d",
        "cursor": {
          "ref": "2b5de3c3-c46a-4bfd-9895-07020cfff44e",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3f9032df-5614-48e0-88e3-41983541c9ec"
        },
        "item": {
          "id": "c2be93fa-c1d9-4740-a858-900b516bda0d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "030aab29-1952-4906-9d59-ff53e17d197e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937d49a9-b783-4a6f-9491-0ffd5b28409e",
        "cursor": {
          "ref": "1cf30b01-c481-4717-882c-9693999e8cfb",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4e22c768-ea25-413a-a2ae-0f646a381234"
        },
        "item": {
          "id": "937d49a9-b783-4a6f-9491-0ffd5b28409e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e64dfaf1-ebfa-4922-83cc-1dc544ab5755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdfb0f9-e470-40f2-bf27-1bcc3f7fbf1a",
        "cursor": {
          "ref": "a61f91ab-131b-4134-9526-63cf550aa7eb",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "35d0c72b-a843-4b6b-99b4-f26d2aeda4fe"
        },
        "item": {
          "id": "ecdfb0f9-e470-40f2-bf27-1bcc3f7fbf1a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4a273e56-4587-4425-a3f0-38c7913b135b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d9fc7a-fbfc-4ccd-94b0-c2ae0c73407a",
        "cursor": {
          "ref": "ac4e589f-f180-4bdd-bce1-9d0abaaf4bec",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "152dcb51-b172-4388-9cc8-67fd520be7a7"
        },
        "item": {
          "id": "20d9fc7a-fbfc-4ccd-94b0-c2ae0c73407a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "29fcd094-b7fc-414b-9a07-5e3edc2570c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81c2403-8590-423d-a98d-cbfdf80e50ae",
        "cursor": {
          "ref": "e3447bf9-2cba-42a5-a4ce-22a394dd5d11",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "cc3b5904-35ef-4189-8253-e0dd1b8bc787"
        },
        "item": {
          "id": "b81c2403-8590-423d-a98d-cbfdf80e50ae",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ca43b9f1-7e83-494a-94e3-a23b08c581b3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1527d561-a154-42e2-b30b-f14175c4ffb8",
        "cursor": {
          "ref": "c3d7a52c-8e6c-4bb7-9551-77dd527f55b9",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4669ea7b-f3a4-47be-96fe-3eb4a2302dff"
        },
        "item": {
          "id": "1527d561-a154-42e2-b30b-f14175c4ffb8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b48aebcf-0ce9-43c8-865c-64cab4a9be69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcac980a-d541-4a57-a8f4-151f44572452",
        "cursor": {
          "ref": "250daaf7-5f22-4006-81ff-ae79fc81d7d0",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0019b267-43e4-41f7-9e7c-b039bb38f776"
        },
        "item": {
          "id": "bcac980a-d541-4a57-a8f4-151f44572452",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "78659820-e469-4a95-870a-9914fa3bafa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7183cb74-5835-413a-83e2-16d4bd458395",
        "cursor": {
          "ref": "4742a493-99c8-4067-b425-71af98210041",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "03bb8997-093b-442f-a8ca-1e476b94ed5b"
        },
        "item": {
          "id": "7183cb74-5835-413a-83e2-16d4bd458395",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d36393d7-e470-4113-9bb4-afcac062e64d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac0fc9a-42ef-493f-800d-2c62c7e99848",
        "cursor": {
          "ref": "9f921ba4-f2d1-4b3c-9ef5-e8e62dcdef66",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3038fbbd-7fe7-4fa3-bbba-857e6e82d33b"
        },
        "item": {
          "id": "eac0fc9a-42ef-493f-800d-2c62c7e99848",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3ccdc3fd-5ff5-4e94-8262-673a3bc5d98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c859896d-1254-4972-81c9-3fc25fada7f4",
        "cursor": {
          "ref": "5f178373-dbcd-47f5-aa8c-0e882ee2fc04",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c1c087ed-ac61-44aa-b2a8-53a009f175d9"
        },
        "item": {
          "id": "c859896d-1254-4972-81c9-3fc25fada7f4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "cad5364d-df0b-40b8-8ae8-dedfc4dd6e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffac8093-a1d0-4f94-a0a9-8ae967037424",
        "cursor": {
          "ref": "e1a50e96-a777-4ef5-9d0e-7df15df22af6",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e1512798-0c46-4323-b45e-c4f6600c1a97"
        },
        "item": {
          "id": "ffac8093-a1d0-4f94-a0a9-8ae967037424",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a355637f-baf9-4f18-b97c-ae18078cc2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7350af96-daaf-4858-b570-9ea384db1a4a",
        "cursor": {
          "ref": "433b36be-a9bd-4e78-8f26-d135a618521d",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "003b1139-8c9f-444c-a43d-2e7d3dac946a"
        },
        "item": {
          "id": "7350af96-daaf-4858-b570-9ea384db1a4a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7e18a84c-7047-4907-83a3-5cc01b4f07d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90b713c-ec0b-452f-95e2-46653e377e91",
        "cursor": {
          "ref": "aae8dc4f-37af-47bb-bf75-f11d50280750",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7c65d0d4-1dfb-49a6-9b5c-6c909b7e0419"
        },
        "item": {
          "id": "f90b713c-ec0b-452f-95e2-46653e377e91",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2ca93a59-fca8-42dd-8e80-f8e1a9cf7c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fef949-fc14-4296-ae7e-078469ba09c6",
        "cursor": {
          "ref": "dc7421e7-d3f0-4203-b70b-b9e92380aa66",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "63b42c58-a002-4e96-a1fd-9498424675df"
        },
        "item": {
          "id": "59fef949-fc14-4296-ae7e-078469ba09c6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "587caea8-1d3d-41fc-a654-d9226e347c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd5963b-1455-4a13-86b6-4d928a5db999",
        "cursor": {
          "ref": "9242f172-eac9-453e-87d1-3d0f7c05d7cd",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a9ebbcbe-7a6b-4bb1-b648-da3ce31613b8"
        },
        "item": {
          "id": "7fd5963b-1455-4a13-86b6-4d928a5db999",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b14cfbe6-6d8b-4988-b9e9-53005c40a4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4757cee1-d720-4fc5-a53f-61546db40826",
        "cursor": {
          "ref": "72196deb-f550-49d4-be2e-baed1f815f9b",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1f8c08e2-ac5b-408a-b5e2-fc0f5889f1f3"
        },
        "item": {
          "id": "4757cee1-d720-4fc5-a53f-61546db40826",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a1775f78-6638-4d01-b3df-89739bc441b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d881ecd3-318d-496c-b9ab-727dce62b36f",
        "cursor": {
          "ref": "0f911544-3e12-4a70-ba7c-da942a46f6d7",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "74a1f042-f047-4b17-a27a-86f3c250be0d"
        },
        "item": {
          "id": "d881ecd3-318d-496c-b9ab-727dce62b36f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a04d6c4a-796c-4b4e-b8b5-21c529936c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c378750d-6d4b-4301-b7cb-5fba611225b7",
        "cursor": {
          "ref": "667f90cb-b526-494a-9446-c577f8de7de5",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9d61ee96-203b-4ed0-9248-8311c95f8ab4"
        },
        "item": {
          "id": "c378750d-6d4b-4301-b7cb-5fba611225b7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7ac83c1d-14e1-4edf-a65b-3d595df1ec2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9bfe56f-7da3-48e9-b592-b1b949874108",
        "cursor": {
          "ref": "e48a2be5-8758-425c-abc3-1d3720fb08ab",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "73be0f64-648c-4256-9e5a-b3b0d9b78ad5"
        },
        "item": {
          "id": "b9bfe56f-7da3-48e9-b592-b1b949874108",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a4bcf56c-d08a-4d7e-b1d6-93db2cf4b26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e61f479-0828-49f0-8099-7dc4e08b7515",
        "cursor": {
          "ref": "2d3b7470-3891-4c17-ab02-2836d19c3e59",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "61f7754d-c667-48a3-b518-3b53c37a55f4"
        },
        "item": {
          "id": "1e61f479-0828-49f0-8099-7dc4e08b7515",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "768b63a7-dab8-478c-a05d-43b30d4b81b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d28aecf-ca44-4433-9783-fd9b90701573",
        "cursor": {
          "ref": "64451b37-6bac-4317-97a4-33fa94d66a73",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "90d9034f-0564-448a-82ac-b0824396df0c"
        },
        "item": {
          "id": "0d28aecf-ca44-4433-9783-fd9b90701573",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b0552405-f98d-4d19-9c90-74f3d6071b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca9ff00-589b-4e38-ba2d-7782b67c954f",
        "cursor": {
          "ref": "7fd0bb0b-77ef-49f4-99b9-9be666aa6336",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "55b4adc6-819c-4e4a-aa67-f6365368a510"
        },
        "item": {
          "id": "7ca9ff00-589b-4e38-ba2d-7782b67c954f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "499c9652-0690-41d9-8915-d65d7ccecc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435f21ff-2117-4886-ae87-e27e082a2dce",
        "cursor": {
          "ref": "b6d1f209-c192-4103-b50b-349624569f09",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4f3bc669-e931-4829-910c-6897a5b3dd12"
        },
        "item": {
          "id": "435f21ff-2117-4886-ae87-e27e082a2dce",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "04a24e46-132c-4530-9ddb-4068431bc8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5340c4d8-f0eb-422e-b26a-22e6cc69d813",
        "cursor": {
          "ref": "c9c78b37-dccc-4f48-b3bb-c512fafc444d",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a33900c0-6fd1-4165-93eb-35369aebc6ec"
        },
        "item": {
          "id": "5340c4d8-f0eb-422e-b26a-22e6cc69d813",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2adcc5c0-e630-4b50-a725-5dd24e2f3749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f785ca-b9a4-4616-8a08-5394586eec27",
        "cursor": {
          "ref": "92d28afb-d806-47a4-816d-123d716b56cf",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c93dd5d2-4c98-4fb1-8cd7-be7bff6dc2d2"
        },
        "item": {
          "id": "e1f785ca-b9a4-4616-8a08-5394586eec27",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5d0b9cb0-274b-45dd-b4a5-50e0ce78dbd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54593d8e-d9d5-4682-967e-412d7f70ecbb",
        "cursor": {
          "ref": "f5d22fa7-4370-4c52-8d5a-82e31cca198f",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a5b8dd22-87f9-4083-ace8-298445290b2d"
        },
        "item": {
          "id": "54593d8e-d9d5-4682-967e-412d7f70ecbb",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "274ded6e-959d-412e-b09c-421aad6800d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a334ca-7aa9-4353-9a6e-da0715d4a660",
        "cursor": {
          "ref": "f04f235a-55b3-47f1-8a6e-093dafc545c2",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "58b8c1ec-ee45-4257-a175-f3711d2d4cbe"
        },
        "item": {
          "id": "e8a334ca-7aa9-4353-9a6e-da0715d4a660",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "240d09a6-8e37-4a49-ae24-14669185d963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e499229-91c6-4496-81c8-0ac78ba15115",
        "cursor": {
          "ref": "f21333ff-8ad8-4734-aa1c-e851238a6a49",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0c20b6f3-a6c3-441b-b241-0a9c67ce681c"
        },
        "item": {
          "id": "4e499229-91c6-4496-81c8-0ac78ba15115",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d29003f4-c301-43c9-b8f1-45ae6f6ffd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50f1022-739c-4bbe-b6d9-431ee812378c",
        "cursor": {
          "ref": "24cc6301-75e9-4e42-981c-9caf14588e49",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8811ffd7-5cd4-4e49-b6e5-174b21fbedff"
        },
        "item": {
          "id": "f50f1022-739c-4bbe-b6d9-431ee812378c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bc19542f-0f28-45e0-a406-8e18d149b54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b196bb04-88fb-4ea0-b791-177d0db6c9da",
        "cursor": {
          "ref": "c19ed18b-907f-4740-9d9b-0a8a19be8c89",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "39e2e10c-1262-46f9-944c-fb19b2684db2"
        },
        "item": {
          "id": "b196bb04-88fb-4ea0-b791-177d0db6c9da",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f7e0ee2d-b288-45bf-abff-bd32163dc7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99694da-9166-430f-9ee8-417aa360bc28",
        "cursor": {
          "ref": "0b123a0d-c5d7-4f3f-9916-e9f9d8d8b264",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b56e4bbd-3b6e-4753-a518-60322545b55f"
        },
        "item": {
          "id": "e99694da-9166-430f-9ee8-417aa360bc28",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "22ecc8c4-c9bc-4ee8-9173-d7e592284d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d09061d-da49-41c1-b28b-4b1dc0964f53",
        "cursor": {
          "ref": "0b25fbcd-c608-4ed3-93e0-3ef0d762dd31",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1a56f813-91c9-49c5-ac65-a15fd48263cf"
        },
        "item": {
          "id": "1d09061d-da49-41c1-b28b-4b1dc0964f53",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "19f490a8-7c1b-48fc-8c99-7ac0ac833834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837f890a-562d-45f6-87e8-2e53dce9635a",
        "cursor": {
          "ref": "8e4ae468-7a6d-4197-b857-df4bd7990922",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d2c83b15-2887-4353-988e-40ff9efbe90d"
        },
        "item": {
          "id": "837f890a-562d-45f6-87e8-2e53dce9635a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e3153c93-9e26-4877-be2c-12905b4f4ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6308ad81-6918-472a-b4ed-76fe246fdb1a",
        "cursor": {
          "ref": "fe018739-7f77-4cd3-b9db-80bd5d93ab78",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d36da4be-acc7-494d-836b-fa0da2d0e1dc"
        },
        "item": {
          "id": "6308ad81-6918-472a-b4ed-76fe246fdb1a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1cf09d17-8b31-4a86-993e-9e1b0fa81f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee97972-2a92-4a82-8eef-ff8b365428d8",
        "cursor": {
          "ref": "7d1c9973-b631-49f8-998a-86fe88abfe45",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9c807d80-81db-4437-a79f-8109330e8a24"
        },
        "item": {
          "id": "2ee97972-2a92-4a82-8eef-ff8b365428d8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "36ca943b-1286-40ed-84d6-5f283fd3d8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc93495-363d-46a2-81e8-60096bdae0e1",
        "cursor": {
          "ref": "d31f850c-9962-4b96-a0d1-4533434e96a3",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "626fcd4e-6bd1-48c8-ad96-897eabd43398"
        },
        "item": {
          "id": "9dc93495-363d-46a2-81e8-60096bdae0e1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a0f45482-20ef-4b0e-8791-7e2754790f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f3b1a1-f8a2-46ea-8f69-c53cc77d4169",
        "cursor": {
          "ref": "2d6ab496-8b15-432c-9eb1-c27c3989786d",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "191279da-efc8-4205-9a96-0cf6012753a7"
        },
        "item": {
          "id": "04f3b1a1-f8a2-46ea-8f69-c53cc77d4169",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1a8eac2d-ca57-4b0f-a44a-47dba9fa4195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843aa5ec-8524-469d-9563-15c6ca1664dc",
        "cursor": {
          "ref": "9b0ce381-6b47-4cf7-b9b2-9c785e55db41",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b4733d69-e8f0-45f7-82e3-7de81a4d75e9"
        },
        "item": {
          "id": "843aa5ec-8524-469d-9563-15c6ca1664dc",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c425aae4-3b7c-482f-86ad-69219d44d9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0a1b55-e29d-48fb-b774-efca5239a1bf",
        "cursor": {
          "ref": "237c9aa5-d3ec-4919-a2a7-91732ab8c762",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ea36c809-5e5d-471c-9213-d6a6f65e509b"
        },
        "item": {
          "id": "3c0a1b55-e29d-48fb-b774-efca5239a1bf",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "545ec4ba-ac67-43d9-b483-ceda40269684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3b58b5-5e2e-4d64-a9dc-18dde1ca71de",
        "cursor": {
          "ref": "9b3328cf-3c51-4f1c-8da8-da6ed2236847",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d71d4519-cf10-4c0b-96ab-710d7108ac22"
        },
        "item": {
          "id": "5a3b58b5-5e2e-4d64-a9dc-18dde1ca71de",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a1e95c6f-3e67-4a38-a89a-8c820b38fc94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7208ae8-a68b-47b7-acdd-bd6d11df60b9",
        "cursor": {
          "ref": "f547e4ee-7ca3-42cf-9376-ea87a76c3bdb",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7ecc4de7-44d8-41ce-b1c4-31dec5a1bc45"
        },
        "item": {
          "id": "e7208ae8-a68b-47b7-acdd-bd6d11df60b9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0495d16a-fdfd-45d2-ada7-bb537960a703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d038936a-54bb-4817-b2a8-b4b7adf920ae",
        "cursor": {
          "ref": "b60f37d9-2a38-4afe-83b6-4de4619464fc",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "aa7bc5f2-ae63-423f-b543-cac65840bbb4"
        },
        "item": {
          "id": "d038936a-54bb-4817-b2a8-b4b7adf920ae",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9c2f45e9-9857-4c07-886e-4c74b944b44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2ae3cc-f1c9-48cd-814a-61372c3c85d4",
        "cursor": {
          "ref": "d36faa38-3848-48a7-b664-9f47dac122ca",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c2377157-3e7b-4888-9874-c580ab3ba34a"
        },
        "item": {
          "id": "2d2ae3cc-f1c9-48cd-814a-61372c3c85d4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e0d92a96-288d-45f4-af56-351df47dad42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877f82b8-30ee-4f62-9367-cab11dbb3a1c",
        "cursor": {
          "ref": "ec1d8292-6dbb-4fe4-ad5d-22ab441f76d3",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fc267e77-11b0-4789-86c0-887277f7597b"
        },
        "item": {
          "id": "877f82b8-30ee-4f62-9367-cab11dbb3a1c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4b74d8ae-f91d-4562-b76f-5c0a5acffe4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe599ed-b7bb-4cc6-9b98-0bd482e49a09",
        "cursor": {
          "ref": "2583475e-f1bb-4a96-b100-26cc66a0d4ea",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "902a4371-9346-47b8-96bf-9b9a0faf27fa"
        },
        "item": {
          "id": "5fe599ed-b7bb-4cc6-9b98-0bd482e49a09",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4221184e-258b-419b-8172-94600a07db48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cac4b35-4d5e-4660-8d3a-267048a05803",
        "cursor": {
          "ref": "caacd037-46e8-45ef-8e0a-b8a1bc84cdba",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c0dd8421-8a5c-42e1-900b-43420b29ce83"
        },
        "item": {
          "id": "4cac4b35-4d5e-4660-8d3a-267048a05803",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b5e2ef97-e672-40b2-b9c5-697c17b11a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c0e007-d73f-47fb-b508-d531f085c304",
        "cursor": {
          "ref": "072251d9-33bd-425a-90cf-601ee0fbe652",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b385ba09-90ef-44f8-b6ab-21e308e501be"
        },
        "item": {
          "id": "e7c0e007-d73f-47fb-b508-d531f085c304",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a2fbd643-2897-4072-8b80-66254c1119f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fcf0a24-4d15-457b-a9e8-6e766ef2b31b",
        "cursor": {
          "ref": "79dc7fff-30c8-4ca0-9a55-c640847d8f2f",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4fe0e803-cc74-44eb-9258-ca17a419aae8"
        },
        "item": {
          "id": "9fcf0a24-4d15-457b-a9e8-6e766ef2b31b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a1355dee-a99a-48c8-9311-b6287914f075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e4b840-ef6a-46a8-aa49-3410d45c7b17",
        "cursor": {
          "ref": "94c88e28-3bda-488e-b92b-253bd0683b57",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f7cef3a6-6b5e-4ba0-9e06-26d97d4df0ed"
        },
        "item": {
          "id": "67e4b840-ef6a-46a8-aa49-3410d45c7b17",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3758cf04-9242-446b-8168-8965765edb75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71a222e-6f33-46e0-a2d2-448da064faf1",
        "cursor": {
          "ref": "35ab08e0-36d0-443c-8942-1f250b9324db",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5813d397-527e-4d20-b0f2-906808ff83e8"
        },
        "item": {
          "id": "a71a222e-6f33-46e0-a2d2-448da064faf1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d8145532-41eb-4c8d-bd7c-abbc51fbd47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2169fd9-7085-4218-98a1-1072a867d0e6",
        "cursor": {
          "ref": "aaf4389b-4cb3-4b70-942e-bcadeedeaaac",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f6b658f8-8bc9-42af-9c6a-67a1906da74e"
        },
        "item": {
          "id": "e2169fd9-7085-4218-98a1-1072a867d0e6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4663d51b-ebda-4beb-adc8-37a3f48b5803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d3be2a-21ad-44d2-991d-32b6e4b16cd5",
        "cursor": {
          "ref": "fc7cdfef-cba8-4ded-871e-f105450d135f",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9003bf54-7dc0-4235-a81e-0c2ed96a9115"
        },
        "item": {
          "id": "63d3be2a-21ad-44d2-991d-32b6e4b16cd5",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "882b576e-baae-4918-bcab-8797d3069397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bf0933-fbb4-404f-aa7b-d5f4c74418f5",
        "cursor": {
          "ref": "dc1894b9-6799-43dd-8a04-583e1e1825d4",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "185e0b4d-31a8-4b58-8b02-07a2697e2acc"
        },
        "item": {
          "id": "c1bf0933-fbb4-404f-aa7b-d5f4c74418f5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5de3b0fd-0d40-47d1-a43d-0f516369da1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701de4a0-167d-4434-9d3c-d0afa59e80ec",
        "cursor": {
          "ref": "1e08e870-06c3-4806-8f18-ab3f8c556a33",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7074ccdc-5781-45f1-8de8-a69cf8ca9762"
        },
        "item": {
          "id": "701de4a0-167d-4434-9d3c-d0afa59e80ec",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d7ae66b4-ddb4-40b0-bbf8-6ce2100c23d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477bd77b-040b-47af-a162-d8cd2edac2c1",
        "cursor": {
          "ref": "137463fe-9562-482d-a3bb-192f54474ccd",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "aff8e1a8-6b2b-4029-8842-f7053bb4edc0"
        },
        "item": {
          "id": "477bd77b-040b-47af-a162-d8cd2edac2c1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "60b41f7b-bdce-449a-96bf-94712d8ea3bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560fe03b-2d4b-475c-8608-0d04a3f39a36",
        "cursor": {
          "ref": "376b2468-9bd2-47c1-83a5-5b63cd0de4f7",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5f772095-da0a-4790-ae63-61d5412b9841"
        },
        "item": {
          "id": "560fe03b-2d4b-475c-8608-0d04a3f39a36",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c866ced4-d8a4-45e4-bee4-c0d587544c32",
          "status": "Created",
          "code": 201,
          "responseTime": 108,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "64475cbd-b904-4803-8975-d18e573026d3",
        "cursor": {
          "ref": "980e69ad-6bfc-4796-820b-02df01e67a79",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3e84fad5-d690-49cb-9803-5ed9e392a037"
        },
        "item": {
          "id": "64475cbd-b904-4803-8975-d18e573026d3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3f03104f-4826-4fab-9663-19fbba4739c8",
          "status": "Created",
          "code": 201,
          "responseTime": 393,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba98e542-1300-407a-83e9-f22f9a384c98",
        "cursor": {
          "ref": "cd4ae838-c50c-4a78-8f8f-194a82036365",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2761fcd0-64fd-4927-8bc5-ca4add9add52"
        },
        "item": {
          "id": "ba98e542-1300-407a-83e9-f22f9a384c98",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "97d97fd8-4358-4b76-bee5-b3b929be72e4",
          "status": "Created",
          "code": 201,
          "responseTime": 94,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b523b3f6-6ad4-4226-a8db-557ecb1de61c",
        "cursor": {
          "ref": "5f4d81db-4192-4151-a4a5-bd2849a82d33",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4faa2292-0381-40da-9664-a0c81ecd4fb2"
        },
        "item": {
          "id": "b523b3f6-6ad4-4226-a8db-557ecb1de61c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2529fc31-239d-4fd8-a9e8-67197d803b78",
          "status": "Created",
          "code": 201,
          "responseTime": 93,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "474f1de5-1c40-48c8-8702-2c60c89d3257",
        "cursor": {
          "ref": "3aa94b3d-8cd9-443b-986d-e73a6bbc347d",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "87ec0c23-9dd9-4a93-ae7c-2423728ae41b"
        },
        "item": {
          "id": "474f1de5-1c40-48c8-8702-2c60c89d3257",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ddb96f6e-d5e9-43bb-b1f0-67a49c144fc0",
          "status": "Created",
          "code": 201,
          "responseTime": 90,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "818ee232-e034-4049-9e00-eb953a12e1ac",
        "cursor": {
          "ref": "68d36e9c-36f9-4d83-9a33-207caa2fd94d",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a921302e-86de-4c26-a904-a2cd7d63705e"
        },
        "item": {
          "id": "818ee232-e034-4049-9e00-eb953a12e1ac",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6b1c09d4-6bc6-4415-bcd0-5aee91ac4188",
          "status": "Created",
          "code": 201,
          "responseTime": 92,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0ada49-d1d2-4523-8347-db6faea324b3",
        "cursor": {
          "ref": "3355ac9e-6ff7-45a2-812b-cdfa624e7268",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "99c28edd-1752-4996-956d-122f62afee05"
        },
        "item": {
          "id": "4a0ada49-d1d2-4523-8347-db6faea324b3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "61938041-1091-4922-884d-9f1e848afe7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc49a41-28a2-47da-ae45-f49716e1c496",
        "cursor": {
          "ref": "451d7d66-3bdb-4ad3-9609-4667f31d9a9f",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9d7f6e66-60a3-4ae1-93e1-0db873e10c4d"
        },
        "item": {
          "id": "3fc49a41-28a2-47da-ae45-f49716e1c496",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0805c6a9-b1ad-46fc-99d0-f766c8ce56c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af14d60c-4657-4640-b952-9247a32c1eb2",
        "cursor": {
          "ref": "aef9a444-78d0-4570-8f5f-d44b6c64c11f",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "208a3acc-e7ad-4e76-a5df-7b728def5a92"
        },
        "item": {
          "id": "af14d60c-4657-4640-b952-9247a32c1eb2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ed102b9b-d08c-4b39-8b55-0c4abf7d4131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8b1cc1-9407-4cad-b215-4c9a31ad5d4d",
        "cursor": {
          "ref": "79dd913f-dd4f-4eec-8fb0-2797646db416",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "532e2ad6-38a5-45e8-a88c-906013f8aac1"
        },
        "item": {
          "id": "bf8b1cc1-9407-4cad-b215-4c9a31ad5d4d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9f4d3791-029d-4913-a27a-08f107763b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8346ec36-4718-4ee3-adf1-d8e478fc5655",
        "cursor": {
          "ref": "9e012942-0e77-4ffe-9252-83c051eb183e",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d259e337-0da3-4720-b619-7db9d24077b0"
        },
        "item": {
          "id": "8346ec36-4718-4ee3-adf1-d8e478fc5655",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "54b0d4dc-9335-4d92-9b65-323f56a6c1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de38b79c-cce4-497b-9eb8-68038e8cd47d",
        "cursor": {
          "ref": "fb92ae5d-04b5-439d-a0a4-4f3cf467b123",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fc559f81-198f-47d5-b787-800eaf9f4f12"
        },
        "item": {
          "id": "de38b79c-cce4-497b-9eb8-68038e8cd47d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "435c583a-d133-42c9-bcf0-c985936322e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c892019-00d0-4285-bdd5-f7a9470b5e86",
        "cursor": {
          "ref": "731e9d21-41bc-4543-9f47-b39c9eabbecf",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f7745a58-801d-477e-a99d-dde9e11efba4"
        },
        "item": {
          "id": "3c892019-00d0-4285-bdd5-f7a9470b5e86",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2f7c5769-318d-44a9-a464-ff78ced94e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a150e99c-0713-4a08-aea2-9948b44b6503",
        "cursor": {
          "ref": "962abfb7-ce13-4419-af90-f257bf1568a4",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4e570508-06c6-4f11-acfd-6916089f3394"
        },
        "item": {
          "id": "a150e99c-0713-4a08-aea2-9948b44b6503",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e8d8f0ac-d13e-44f3-8cb4-cb900498fda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae4e7dd-5fe1-48ac-af64-e2094d1bfe42",
        "cursor": {
          "ref": "204cadad-e50f-47b5-83dd-b361ec8e9591",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "becd895d-d293-40b8-baa3-3652529194f0"
        },
        "item": {
          "id": "2ae4e7dd-5fe1-48ac-af64-e2094d1bfe42",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c351f00c-b355-46b1-84b5-d7a922ac9d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6703717-3942-4807-b2a3-6e7ba128a548",
        "cursor": {
          "ref": "b2730b37-b27f-458e-a728-6bdbe0fb26e8",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e83e3361-6264-4dc1-a21a-1eeaf3be4146"
        },
        "item": {
          "id": "c6703717-3942-4807-b2a3-6e7ba128a548",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d2087db8-bd6b-4627-b8d6-475aa23729b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bffabd-11f9-4c0b-a009-00670dbb04d0",
        "cursor": {
          "ref": "6b672a2c-4fd8-4c4a-a9d9-ef559bc500fd",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a6231443-83e7-4159-a65d-86bb03eb9c3c"
        },
        "item": {
          "id": "d8bffabd-11f9-4c0b-a009-00670dbb04d0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "58aac020-e521-4f33-8fa4-11423682f1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2026800d-5a79-4f0c-bb15-1ee56618ed0b",
        "cursor": {
          "ref": "9c016ca7-e85b-41f2-a914-006a1c6336c5",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "891b60af-384d-423e-b3c0-57b59e6b20b1"
        },
        "item": {
          "id": "2026800d-5a79-4f0c-bb15-1ee56618ed0b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e4fd0601-8fb9-46a7-9be9-fd6b70e2f503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe866ef-34f3-41b7-a4ab-4faa13d40c54",
        "cursor": {
          "ref": "8e571d77-bbe5-4460-af32-0ca06ec03c3b",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ecec900d-d754-4f27-a4d0-7353c0b09ffd"
        },
        "item": {
          "id": "cbe866ef-34f3-41b7-a4ab-4faa13d40c54",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "592b3ce2-98c1-4f97-8946-c3305b90e4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa4b762-cf4d-4d25-86d4-1bc4bc9be77b",
        "cursor": {
          "ref": "18438fbc-0d7b-434e-82f8-84a2a6137d29",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9ea196b8-46da-4676-b23b-3034f69e8d2c"
        },
        "item": {
          "id": "0aa4b762-cf4d-4d25-86d4-1bc4bc9be77b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ff85524f-1be9-44bc-b9a3-da486bf62cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dad474f-5edb-4801-9124-569e1cf7582d",
        "cursor": {
          "ref": "4e517377-7af2-4bf0-8ee1-f8a3669d2372",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b3629af6-5e3e-40ce-9fef-c0dbb79b1890"
        },
        "item": {
          "id": "6dad474f-5edb-4801-9124-569e1cf7582d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4f25f0e3-e4fd-4b24-b65c-e1814736559b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123cf0b2-14e6-45a5-9004-e4015aba99ba",
        "cursor": {
          "ref": "e5d4ee29-e5ce-486d-8351-b8fea6d791f2",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5b8da8fb-fc93-4958-b586-6c8c068cfdca"
        },
        "item": {
          "id": "123cf0b2-14e6-45a5-9004-e4015aba99ba",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e2114a16-e33c-493e-80ca-44e85335fb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5419b7-7640-4887-a170-e8c6cb82ff47",
        "cursor": {
          "ref": "0694fbb3-c5f5-4cdb-a7a8-0de2975b7972",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bf9edc98-7f77-450a-8877-8539c0167cf1"
        },
        "item": {
          "id": "4c5419b7-7640-4887-a170-e8c6cb82ff47",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "553073e0-c6bc-40cf-9036-69c18a415dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d41ff44-b99a-41f6-aa7d-26649f77925d",
        "cursor": {
          "ref": "9b295288-c918-4c6e-8a66-78e5a8aebb9d",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5ecd8bba-589e-44e4-adfc-77d71eec001e"
        },
        "item": {
          "id": "8d41ff44-b99a-41f6-aa7d-26649f77925d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "afcf3860-ea21-4079-9b48-c2d68f9d7f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f5e720-4efe-4ff7-ba35-542dd48bedbb",
        "cursor": {
          "ref": "2e672ada-1e71-4003-8fc1-fe6895fddc5a",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6f66fb6e-9fb9-488a-ae12-355ee0350ac5"
        },
        "item": {
          "id": "32f5e720-4efe-4ff7-ba35-542dd48bedbb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fe1eed64-a53b-43e3-9671-96f1f566478c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c4736c-a60d-4022-ac8d-5c7bb24f035c",
        "cursor": {
          "ref": "5bfb91b5-0f9d-41bf-9f5f-0b3a926c919c",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5dda7caf-58d3-4620-9612-e73f71f6dda3"
        },
        "item": {
          "id": "f4c4736c-a60d-4022-ac8d-5c7bb24f035c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "57ffd9df-fecb-428d-a3c5-70a44be92e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74dd74e-adad-413e-845a-69ed2817baed",
        "cursor": {
          "ref": "e2dcc33a-0f3e-40ac-9c96-8339f0d6c385",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d231aaae-f0bc-483e-a0d2-e53cdada6606"
        },
        "item": {
          "id": "c74dd74e-adad-413e-845a-69ed2817baed",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b2f2f543-d729-44a1-8680-6778bb60917a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf2804d-edc6-494c-8cdc-814153e317e4",
        "cursor": {
          "ref": "e2c7f3f2-8c2d-46d0-95b8-ac74dded8d71",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3c7c176f-f71b-42ac-a5f2-ed8f1c5383e6"
        },
        "item": {
          "id": "0bf2804d-edc6-494c-8cdc-814153e317e4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "301c6ce0-b9bf-4a9f-af7f-349f7db72a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3bcd68-a0a2-4c19-9e09-fcefe06862bc",
        "cursor": {
          "ref": "789ecb43-7c90-4c32-9e1e-1f08f2337e44",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1b062bd0-64f8-4b79-8ff2-86489123ea28"
        },
        "item": {
          "id": "1f3bcd68-a0a2-4c19-9e09-fcefe06862bc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "84496faa-caf6-4eec-be6f-fcbc8081ed84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4397de-4505-458f-a89d-6ecfe3220e94",
        "cursor": {
          "ref": "f9184ab3-8ec9-443a-9940-435dd5f0a12c",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "deced723-1336-48ac-9cb3-fc6f16a62cb5"
        },
        "item": {
          "id": "6a4397de-4505-458f-a89d-6ecfe3220e94",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "729943c3-de7c-4364-a8ca-3990be33be8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763de236-3d70-4b6e-a137-1b4612c1e446",
        "cursor": {
          "ref": "ba5414f5-dd93-4311-ad34-39d054a88d1a",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9f60e95c-b4d3-4132-a386-95f9a6ed9ed2"
        },
        "item": {
          "id": "763de236-3d70-4b6e-a137-1b4612c1e446",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c095e964-3dac-43ad-bc60-f64460d92409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f1b672-75f6-4e40-b386-acb21cc57610",
        "cursor": {
          "ref": "a9470cab-040d-4d0f-8aa7-b00f521de1ba",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ea5555ff-a261-4d2a-b4a2-d1f98d584551"
        },
        "item": {
          "id": "03f1b672-75f6-4e40-b386-acb21cc57610",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3f15edf0-121c-41b8-a730-23bdd6c9947a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfee917e-e55d-4e25-8b73-ff3deefa8577",
        "cursor": {
          "ref": "fce4def1-de9c-4aaf-9f15-064827922a21",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5b6ab1ee-c266-4aad-999b-b2120a6a0e26"
        },
        "item": {
          "id": "dfee917e-e55d-4e25-8b73-ff3deefa8577",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "52bcc631-2b64-47a5-a5ba-7af6fceeb335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec0f735-2905-4025-9442-86d356519c4f",
        "cursor": {
          "ref": "9cb69d82-699e-4eee-9e16-098dee7cc6c6",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ea00bc1f-fd0e-4b75-8134-4e76d17ba4b2"
        },
        "item": {
          "id": "eec0f735-2905-4025-9442-86d356519c4f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "32cca2d2-255b-4ebb-b6be-061bd297a7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2d83de-3e77-4980-b164-7b61eaa4f827",
        "cursor": {
          "ref": "87159cc9-84de-4a29-b850-fbbbc91d31ef",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ccb6d100-a250-4e23-ab9e-bb4346340632"
        },
        "item": {
          "id": "0f2d83de-3e77-4980-b164-7b61eaa4f827",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c1b9843b-9fe1-4e99-97a9-cd2e345eaa80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3109d178-50a3-4938-baab-6370deb91c74",
        "cursor": {
          "ref": "03123d3f-0b8c-47d8-b614-5ecb6c25fc01",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2e5c2c3e-3597-4ff5-b9e0-9da36466c827"
        },
        "item": {
          "id": "3109d178-50a3-4938-baab-6370deb91c74",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "42ceef73-1e3a-4482-96f0-6c5b7c15f6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff6afcd-fc49-4d9a-b91e-a353052cc4a3",
        "cursor": {
          "ref": "e74105d5-0d1b-408c-9fea-bde982070714",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0e5e9e76-99f1-43e9-9396-87c5462b6c36"
        },
        "item": {
          "id": "8ff6afcd-fc49-4d9a-b91e-a353052cc4a3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2c5aff66-871b-4741-8ca2-db104991981b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec235d71-200c-4963-9739-f5f2c237d553",
        "cursor": {
          "ref": "4aaed709-9923-4563-9d53-632dce9922e2",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "75e58786-1986-4ebb-a5cc-0959ac41b400"
        },
        "item": {
          "id": "ec235d71-200c-4963-9739-f5f2c237d553",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "85d0e613-3410-4153-ab23-b67f073b31ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88992be-be1b-4428-ad90-0a3cb9a95ef5",
        "cursor": {
          "ref": "c3faa903-40fa-495f-83dc-af423720356e",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ea5b688e-8ca6-4522-8e41-efe26a6144f7"
        },
        "item": {
          "id": "f88992be-be1b-4428-ad90-0a3cb9a95ef5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8cd81c1b-f7e1-4ddd-a79e-1e4f1f3dcf57",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577c53de-d184-46fa-b139-c9e8af243e23",
        "cursor": {
          "ref": "318a395d-1d3a-4648-9779-fe537d60a0e9",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f67bade4-b2ed-4259-9a0a-e0dc480ce77c"
        },
        "item": {
          "id": "577c53de-d184-46fa-b139-c9e8af243e23",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "45397364-057c-45b5-aee5-1bc5702edd44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78aeeb4c-d97e-4cb1-aa10-c606c2103e52",
        "cursor": {
          "ref": "f8d503b9-d781-4b78-baaa-72069f81bea8",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "701b1500-d7f1-4372-87dc-33211094d780"
        },
        "item": {
          "id": "78aeeb4c-d97e-4cb1-aa10-c606c2103e52",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2bc5c0da-e8c2-43c5-8474-ae4f09908049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9817e9e8-6577-4d19-871b-7932f9274a4a",
        "cursor": {
          "ref": "0a003178-0ae7-4253-adf9-ca1ac0ff4265",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1d2ca9a5-f1ac-4cc4-b313-77662fbca646"
        },
        "item": {
          "id": "9817e9e8-6577-4d19-871b-7932f9274a4a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4848d3fa-8100-4313-9bca-880a487c6c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38bce83b-cb2a-45e5-b0c1-a4e6003788e5",
        "cursor": {
          "ref": "f4c7a89d-40e1-4256-96a5-c9322759a1b7",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1ddf7fd4-e96d-4538-b054-00ecff98fabb"
        },
        "item": {
          "id": "38bce83b-cb2a-45e5-b0c1-a4e6003788e5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "51e01e65-707a-42bc-81fe-5c32d2ef1201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34c1ae3-3e33-4e04-b170-4d708729b7ba",
        "cursor": {
          "ref": "14981187-d90c-4507-906a-dcee53316525",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e791dc8b-1858-407c-a653-e872a1594db2"
        },
        "item": {
          "id": "a34c1ae3-3e33-4e04-b170-4d708729b7ba",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9523ab27-fafc-4456-8640-6aded97b1b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84061ae-c00d-4973-9da9-73eef040e1cb",
        "cursor": {
          "ref": "7e43dfa8-67ea-4c1d-b1b0-c0911a0f1726",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "36f632a3-0cd9-4a87-90a9-018dc38f6d50"
        },
        "item": {
          "id": "c84061ae-c00d-4973-9da9-73eef040e1cb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e1ed1a1d-a565-40fa-8368-f9ba662d54e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9f1a7b-81dd-412e-9a61-6159c1e26bb1",
        "cursor": {
          "ref": "506f2b9d-b280-4a19-9fbc-4db837df4f5e",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d6b7e087-4132-4979-8f0b-94dda469c1fd"
        },
        "item": {
          "id": "db9f1a7b-81dd-412e-9a61-6159c1e26bb1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "209b25fd-1914-4890-a6eb-04ca4fe783d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d0c2b2-42ad-4a21-ab53-41d8cd884af5",
        "cursor": {
          "ref": "3baacc3d-fbcd-4ed7-8735-16121ec4311f",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "387e1650-33df-4272-aff4-cf7576b2afa1"
        },
        "item": {
          "id": "43d0c2b2-42ad-4a21-ab53-41d8cd884af5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b0a17c4b-cd36-4027-95e4-740ff721037c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765a0cc2-a8ff-421f-b1f1-05419c5358a6",
        "cursor": {
          "ref": "acd5c229-5377-497c-a2d1-2dea6b808fa3",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "530a8767-1308-4a91-80fc-4067fad46b9a"
        },
        "item": {
          "id": "765a0cc2-a8ff-421f-b1f1-05419c5358a6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "680545eb-7418-4190-a85c-b6c2d0ce3798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e805f21d-9292-4141-a831-8a53ab2e5218",
        "cursor": {
          "ref": "2ded67c6-38c4-443d-8f16-c89bc86d4ee9",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6dd50661-fb94-4983-b1be-7b283e30cf06"
        },
        "item": {
          "id": "e805f21d-9292-4141-a831-8a53ab2e5218",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "139f259d-86e5-47f1-b051-62f8c69eff0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f74864-fd2f-42b9-9cf0-bb2abed4b2d1",
        "cursor": {
          "ref": "6f1424f3-bb1f-4507-9ac8-7e2a58844b34",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a9057ec6-706e-4a0d-86a8-6d4f7e7c8fcd"
        },
        "item": {
          "id": "06f74864-fd2f-42b9-9cf0-bb2abed4b2d1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ff1b0416-ffdc-4543-be03-6be3ae99f8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ffc1e4-2c07-4024-9ea9-e9c62af256c4",
        "cursor": {
          "ref": "51aa620a-154d-47bc-a742-6b79707b598e",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7b4c92e3-a3f2-4df9-b45c-e7bedfb1a0c2"
        },
        "item": {
          "id": "42ffc1e4-2c07-4024-9ea9-e9c62af256c4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9f718f08-bbbb-4062-a244-8b791245a952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c681f4-2bbe-4911-8c3f-d7a66bc6e821",
        "cursor": {
          "ref": "0c5efd88-f7a6-450d-aef7-bacc2c234708",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9c05ddf5-5a0d-4703-8201-de7ff6da6051"
        },
        "item": {
          "id": "e3c681f4-2bbe-4911-8c3f-d7a66bc6e821",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8ddc2166-d63e-4fb7-8f99-e5c0959bf4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a53168-986b-4aa9-94f2-07a253f7dda6",
        "cursor": {
          "ref": "8bb1f3f2-559a-4888-aba8-efb4f233bf64",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "13e38b4c-1620-4aac-a6e7-526a30b8f08e"
        },
        "item": {
          "id": "38a53168-986b-4aa9-94f2-07a253f7dda6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6184bea7-4661-4bbd-9b57-5ffb001e008a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c113b2de-a1bb-43f5-a5dd-9a34ffff1d9e",
        "cursor": {
          "ref": "8e0f4ab2-7ed2-474b-97d5-de6a3408773b",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3a6a01fe-e5a5-42ed-9a50-b2ba69821ec8"
        },
        "item": {
          "id": "c113b2de-a1bb-43f5-a5dd-9a34ffff1d9e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bcf00462-a939-40e9-adb4-f912ffdb17a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2cd8fd-5055-425e-a187-551c10d9fe4f",
        "cursor": {
          "ref": "d2c767b3-5e73-43dc-a5ab-79e6c6253d18",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "220e2ed1-7cc6-4acb-b88f-78d62ca3d7c6"
        },
        "item": {
          "id": "3a2cd8fd-5055-425e-a187-551c10d9fe4f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dcf63d9a-f390-4b19-a247-bcf8417ce3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b6cb81-b938-4c19-ae26-b0a2a9bcd1da",
        "cursor": {
          "ref": "79519db1-6757-45ef-8d48-3c58773b386b",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1af95e9e-dfb6-4377-aa79-f9e13618f92d"
        },
        "item": {
          "id": "f3b6cb81-b938-4c19-ae26-b0a2a9bcd1da",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "814476a5-79bd-4fdb-9ffb-6dd56a9eb458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbe797b-9ccc-40d8-9143-9df709347eeb",
        "cursor": {
          "ref": "390fac01-b4ca-4ca8-9093-0be2f15fe77c",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6f44491e-3c33-4c48-af1d-5083ff905f34"
        },
        "item": {
          "id": "2bbe797b-9ccc-40d8-9143-9df709347eeb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "674f7247-36be-4a8b-a597-ab824c432068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49dd36e0-2cfe-4948-95c7-1cae5e07904e",
        "cursor": {
          "ref": "bb7f3122-47de-455a-a495-468e92387a51",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "387bfe77-fd92-41c9-9906-b9ae7c13e5dc"
        },
        "item": {
          "id": "49dd36e0-2cfe-4948-95c7-1cae5e07904e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e2027630-b3f0-4358-89ea-05a1e744dc3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752d03d9-2011-4ab4-b17a-20bfbe1d43a1",
        "cursor": {
          "ref": "0cce6098-dd8b-47eb-9485-5c21ccc56059",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "52ea54fa-f5d2-4494-8421-376d0bc1d332"
        },
        "item": {
          "id": "752d03d9-2011-4ab4-b17a-20bfbe1d43a1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b5a2f190-ecc6-490e-8e76-e92866911dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea519f84-b242-4dde-820a-8f031ed14684",
        "cursor": {
          "ref": "17ee9884-37fc-44d7-b505-2f9dc757ff66",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4462fb2a-4cbe-4e1f-a6f1-8569bbcf873a"
        },
        "item": {
          "id": "ea519f84-b242-4dde-820a-8f031ed14684",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9ebe80c1-3c54-4128-96fb-eeed69e268a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c91b75a-95b0-4271-b307-b68046cdf4bc",
        "cursor": {
          "ref": "631442ad-79ce-4269-b94b-0507a88fa218",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ac391f2e-0501-4e3a-93a3-ec1fb84aa843"
        },
        "item": {
          "id": "4c91b75a-95b0-4271-b307-b68046cdf4bc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "acc1b8d9-ac2c-4fa8-8f74-82d1f0f1e473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3542aca-5e56-49eb-9fa0-98775a2eb1a6",
        "cursor": {
          "ref": "bab9c606-5bda-4541-a10e-b9462e9c4e26",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "27f65542-f95e-413b-9057-2d798ba63c78"
        },
        "item": {
          "id": "a3542aca-5e56-49eb-9fa0-98775a2eb1a6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "20455081-5667-49c8-af6d-adb2ddf60d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe743b3-0da0-4ed0-8b9c-134a7e04adf7",
        "cursor": {
          "ref": "0fdfeded-46d2-4708-8350-0ab6bf9d6694",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e26f0b41-3115-4d22-a2e9-d2f87f3205c1"
        },
        "item": {
          "id": "2fe743b3-0da0-4ed0-8b9c-134a7e04adf7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ded52730-900a-4ba9-b142-e723fb2e3dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609760ff-f875-4b3c-889d-b1dba3b163e6",
        "cursor": {
          "ref": "eda2d52d-ffd4-4d38-a434-b0d40c8f7dd7",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ebeb2a44-1d05-4abc-a31b-b13145d0748e"
        },
        "item": {
          "id": "609760ff-f875-4b3c-889d-b1dba3b163e6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6efa88b0-214a-4c05-ac04-4d65d4d57577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec00686-ca91-40b4-901c-7f9f11e57a2d",
        "cursor": {
          "ref": "7f000449-8d34-42f7-af88-60caa0d98a44",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1c943bd5-65d1-4110-81ca-b0ecca1be301"
        },
        "item": {
          "id": "8ec00686-ca91-40b4-901c-7f9f11e57a2d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a112960a-e0f3-4a00-ad53-9efb7a4c2949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0139f8-5314-4f5b-ae21-2006d29aee47",
        "cursor": {
          "ref": "a69e03af-ec92-4e75-9eb1-54d3df5b0993",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "79978134-f079-4dcc-a268-3f5f1857daa4"
        },
        "item": {
          "id": "6f0139f8-5314-4f5b-ae21-2006d29aee47",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3681f819-444b-4de7-9660-47e887a85cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef89b0e-4f62-4f5d-b97e-01089a21ba5d",
        "cursor": {
          "ref": "d8b18fca-d684-4d08-8ba7-6dc1fbfd6127",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "90861c74-1e8f-4d8e-8cb9-e963e3db0736"
        },
        "item": {
          "id": "aef89b0e-4f62-4f5d-b97e-01089a21ba5d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "de626d45-c3d7-480d-9d06-59ba6d35d67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4559a31-2d80-4a1e-a025-0d792783d41c",
        "cursor": {
          "ref": "b7ff93c7-e8a5-44f4-ae61-475b83465539",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c12337a3-934a-49fa-bfa5-80b31f9f5867"
        },
        "item": {
          "id": "a4559a31-2d80-4a1e-a025-0d792783d41c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "635d614b-d6f7-4e95-a4be-3fe3a8ca405d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75207ad-9f9b-4f6f-90a6-e58978ca65ef",
        "cursor": {
          "ref": "f09fbb7c-6eef-4bba-b340-283b8e809f9c",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "47384a08-73e3-4293-bfc9-ead2f6141095"
        },
        "item": {
          "id": "c75207ad-9f9b-4f6f-90a6-e58978ca65ef",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ab5004be-4320-478c-930a-abe3bbaba900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042b6922-93d3-4e1a-9d88-2e4655ec5ead",
        "cursor": {
          "ref": "eecae797-df8d-40a9-b857-14b1a0a80907",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "344c33f8-8d8c-47bb-ada9-9bfa85bcf35d"
        },
        "item": {
          "id": "042b6922-93d3-4e1a-9d88-2e4655ec5ead",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "178f3180-ac41-4446-b6ef-ccb02de77206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e4a4e8-8104-4716-8f3a-171c69bc24f9",
        "cursor": {
          "ref": "0068cd6a-8571-4fc5-a8a4-2e48e4e2df2a",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "107b992c-73ee-4e2c-8148-5cbf733b550a"
        },
        "item": {
          "id": "17e4a4e8-8104-4716-8f3a-171c69bc24f9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c03a8a55-e375-4c4e-9efa-fa6a929e813d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad7e1a9-eadb-41d2-ad8d-993cae5368bb",
        "cursor": {
          "ref": "120836e2-139b-48fe-8f7b-e4f456e336c4",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b4e84c40-0132-40ff-b747-4658756b5023"
        },
        "item": {
          "id": "2ad7e1a9-eadb-41d2-ad8d-993cae5368bb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "eb670525-00d7-4bcd-bf8c-77d28a842b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd18bfca-3a9b-4e97-af1d-ef127840f5c6",
        "cursor": {
          "ref": "60076ea8-4f05-431c-be41-4085d7b39779",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bafc506a-360c-4a85-b196-5e4bfcbf31ad"
        },
        "item": {
          "id": "dd18bfca-3a9b-4e97-af1d-ef127840f5c6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fb2af8df-1f26-4916-bc68-3113913e0079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e599096-7771-4e3f-9468-4cf2304ad057",
        "cursor": {
          "ref": "77c10324-66ba-4f67-82a7-ed84bc107335",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2751e824-b881-4759-bf5c-42f6908ef52e"
        },
        "item": {
          "id": "1e599096-7771-4e3f-9468-4cf2304ad057",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7be02771-a52e-44f9-aee3-5105d20d344d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff6532f-23e2-4cc1-b60f-f9a4cb14d09a",
        "cursor": {
          "ref": "8fd27d71-46d6-4e50-a748-857ec0841666",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "78f567ff-6654-46d0-8e07-c01d74ab4062"
        },
        "item": {
          "id": "3ff6532f-23e2-4cc1-b60f-f9a4cb14d09a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "021ea39d-c760-463e-a8f1-41224e650082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f571407-1710-4d2f-a96b-ed14a2574533",
        "cursor": {
          "ref": "e2ca911a-684b-4932-a3c0-d7045c78d358",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c66068fb-e7b6-4d3b-9bfd-10488ceb925a"
        },
        "item": {
          "id": "9f571407-1710-4d2f-a96b-ed14a2574533",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0ffe364c-fb2e-4d31-8d6f-81a217bb50e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d28597-3a90-463c-8e91-98690d8d5160",
        "cursor": {
          "ref": "f1a145e1-020f-49c5-84fc-2e154699e26c",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "caec0d93-fc6b-4b78-9572-e6a76765cf0d"
        },
        "item": {
          "id": "f0d28597-3a90-463c-8e91-98690d8d5160",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8822ad23-b99b-4d3f-a74f-ffccec9bebe6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c0a8a1-dd6e-4f9b-97d7-6cbd38663d49",
        "cursor": {
          "ref": "b2b56e36-50b2-4a54-b5a8-f61487eacd03",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0d812d62-541f-4a1f-89f7-ddd7735d296b"
        },
        "item": {
          "id": "66c0a8a1-dd6e-4f9b-97d7-6cbd38663d49",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "69dfe6e5-0630-4d5c-a18e-c26a5d7fe6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc309584-2459-4498-946a-a97c614bac9c",
        "cursor": {
          "ref": "59b07b47-0c1a-47f6-85f3-39f3e5df79fd",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c0545294-a73d-4ad5-bee6-bf3492949144"
        },
        "item": {
          "id": "fc309584-2459-4498-946a-a97c614bac9c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "89ce9bda-1640-433b-89b6-25b2ab3284fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6561eaf7-94af-47fd-9d44-67efb3ea88ec",
        "cursor": {
          "ref": "eb55223e-ccff-49fd-88d8-d369a37a7d3a",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f5164c13-bd08-4450-9d67-40cbca797119"
        },
        "item": {
          "id": "6561eaf7-94af-47fd-9d44-67efb3ea88ec",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "fc92f365-7e7b-4a4b-b32c-8cc924499a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2dfed0-cb4b-4299-82db-90716c28e4da",
        "cursor": {
          "ref": "b63cb7d8-7c90-419d-88c9-b1d229387080",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5a3e52db-1636-4705-be18-9cbd5b65d9a9"
        },
        "item": {
          "id": "aa2dfed0-cb4b-4299-82db-90716c28e4da",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4916b098-fead-4024-ab81-6fadd154d35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a3c3cc-8765-4097-9d44-ce9bef7e5d08",
        "cursor": {
          "ref": "5373943a-18f7-4f1e-8e2e-1c3697a0f6c2",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9ce7d609-e71d-4544-9e72-c7a130e5847f"
        },
        "item": {
          "id": "b8a3c3cc-8765-4097-9d44-ce9bef7e5d08",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b4effd41-f0c6-4a66-90c5-b430faad13eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12899e3-629f-44e1-9db7-9412810701cf",
        "cursor": {
          "ref": "97d919d6-56ce-4982-bd1d-0fa3b5a94069",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3f964184-4d8f-4f5a-926f-38657f735409"
        },
        "item": {
          "id": "f12899e3-629f-44e1-9db7-9412810701cf",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "771e184f-2c32-41db-bdd6-10fc902fd548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fae0fc4-aac5-4c66-bfa4-acb99e4ed84e",
        "cursor": {
          "ref": "f7c2e0cb-ffcf-494d-8fa3-b40660aa7929",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "260713c7-1387-4542-a799-ec05259c9e68"
        },
        "item": {
          "id": "9fae0fc4-aac5-4c66-bfa4-acb99e4ed84e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "21996ea2-9819-455b-83d4-e4f9d5cc6fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc3e926-b839-4126-aa51-9fcf162e278e",
        "cursor": {
          "ref": "424d582e-0630-4bcb-b611-db04d0c13d24",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b2ac10e2-cafe-4e9c-a054-0c21ec348443"
        },
        "item": {
          "id": "3bc3e926-b839-4126-aa51-9fcf162e278e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "dea717f7-97ff-4e5d-90d8-2cfb7f3dfa78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cccb6f-bb7f-44a1-837f-1f0ca95ea9f1",
        "cursor": {
          "ref": "f5cdd6b0-7359-4d53-b88d-9b3d25f2b8e2",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "697d714d-b221-4225-bd10-acfbabfddee7"
        },
        "item": {
          "id": "73cccb6f-bb7f-44a1-837f-1f0ca95ea9f1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8c40c9b6-4287-4cdc-9c70-b9b61ec76b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee3c110-590c-406a-b193-cef5fe0d8be3",
        "cursor": {
          "ref": "e70ac2df-571b-418f-9c6f-66951a256ae7",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d0840942-0d37-474e-a6f2-1e941bf27f3f"
        },
        "item": {
          "id": "7ee3c110-590c-406a-b193-cef5fe0d8be3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "509d2f7c-0d98-4d8d-b228-e0b13a1a2b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eadd4d16-0af0-41c0-85f6-d5f037a4fd89",
        "cursor": {
          "ref": "b054cf52-eee4-4877-8096-dbc63e2c14de",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c385506a-d081-4c86-a50a-064de66702b1"
        },
        "item": {
          "id": "eadd4d16-0af0-41c0-85f6-d5f037a4fd89",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5f350340-3a94-4c77-9e64-42ad89c7cec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6fc5dc9-be6d-46e6-bccc-2b29d3e23d02",
        "cursor": {
          "ref": "d8870fab-21c6-4073-9c75-0a80e3ed81f9",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "77671bdf-3f44-4d75-94d7-e05ea425dcfa"
        },
        "item": {
          "id": "d6fc5dc9-be6d-46e6-bccc-2b29d3e23d02",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "16d21339-9dfc-4dd1-b4d8-6d0254af7dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249629d0-726c-4346-ba39-996340868799",
        "cursor": {
          "ref": "f0e8ecb4-4580-4013-930f-7ee0b26de520",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d7619c31-7155-4625-a1af-f4b01ac33532"
        },
        "item": {
          "id": "249629d0-726c-4346-ba39-996340868799",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ba5e06ce-4b11-4503-be12-05a90bc5365c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679f42a8-e916-4643-bc7d-196583284e51",
        "cursor": {
          "ref": "6718a31b-c2d2-4cb0-9bbb-9c0d45a0c09e",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "61ea2984-d3e1-4976-8e48-8ced1a392dc7"
        },
        "item": {
          "id": "679f42a8-e916-4643-bc7d-196583284e51",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9a256964-e325-4c90-9168-631f33829201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb66c6d5-25b6-4af3-82eb-69b71984fb43",
        "cursor": {
          "ref": "c1eaeecc-59bb-433e-8dce-c20f5a961ad5",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "cefc1de7-92ef-4a6a-9a9c-ba75f5c7f5c4"
        },
        "item": {
          "id": "fb66c6d5-25b6-4af3-82eb-69b71984fb43",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bb1e6547-d496-47c2-aa92-9bba456549e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54fc295-1f67-4d2a-b528-bc37eba9a1c8",
        "cursor": {
          "ref": "437392a8-9639-455a-84c3-da211f95c534",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c63d1e2a-8612-4d21-84bd-13ac361b8cf8"
        },
        "item": {
          "id": "e54fc295-1f67-4d2a-b528-bc37eba9a1c8",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5661c433-9042-42b1-b8e3-43843be330c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0e8192-6469-4288-8b6b-27a93ae541e2",
        "cursor": {
          "ref": "97511afb-7660-488a-b9a6-61668fa167fe",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9ad4a11f-8b77-4593-b696-cb65ebff6d2e"
        },
        "item": {
          "id": "6d0e8192-6469-4288-8b6b-27a93ae541e2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f60b1e2f-7fda-4834-a31c-d9d55cfe6c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6d6209-268b-4e41-a101-83b854468840",
        "cursor": {
          "ref": "d92a8c31-55a0-4ad3-8c95-afc445ec1779",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8cebc835-ae9b-45c8-b09a-47b983d64105"
        },
        "item": {
          "id": "8c6d6209-268b-4e41-a101-83b854468840",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b243aff4-2f9c-4c48-896b-fdba5ae0910e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c122a4-e557-4a63-ac85-6502d50498ee",
        "cursor": {
          "ref": "188e6258-2ead-4369-b137-432362a0a65a",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b35a256b-1db8-404c-ba3d-8b222650dcba"
        },
        "item": {
          "id": "18c122a4-e557-4a63-ac85-6502d50498ee",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d3d8ea05-ae29-4d12-be8e-13576581878a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6145deb4-b5b9-46b1-afda-42dd43866ac6",
        "cursor": {
          "ref": "6a8d1951-59dc-4f8e-9976-83627d5e94e4",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4e370339-7c93-4aa5-984f-fdd92445667c"
        },
        "item": {
          "id": "6145deb4-b5b9-46b1-afda-42dd43866ac6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b09f32ad-d58d-49f8-bbc3-2cab51b6e989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cd77d8-6568-46b5-b674-cb94def70524",
        "cursor": {
          "ref": "5261cdf2-dcc7-4f74-a797-abeef0c625fd",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c1dfede0-85a7-40f8-81fa-f6fba4445068"
        },
        "item": {
          "id": "44cd77d8-6568-46b5-b674-cb94def70524",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "bbe518fe-0ac0-4421-ada8-fb8763a11234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25892bd2-f963-436c-be9f-bd24d9d33510",
        "cursor": {
          "ref": "6d0fb95f-06db-4536-90ba-ffe79714d4ed",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "50c9aa2e-f938-472a-b477-8d88174c8a9a"
        },
        "item": {
          "id": "25892bd2-f963-436c-be9f-bd24d9d33510",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0c3459dd-94ef-4278-b11c-8ebbc7162259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9e518c-2413-4d88-bc9c-a06d4beb1d84",
        "cursor": {
          "ref": "24c2d8f0-5ee7-480a-b8fb-647e8b0d3527",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a178573a-8d95-4d4b-8e07-e2a76daa2123"
        },
        "item": {
          "id": "5a9e518c-2413-4d88-bc9c-a06d4beb1d84",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8d3712ab-26cb-493d-aa45-da64fcfaffd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12bdba93-e541-41a8-99f2-df97bc24ecdf",
        "cursor": {
          "ref": "97145252-3fc0-40b3-95f1-ed950e108408",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "33576ddc-35c7-435f-ac18-e68b52df2f11"
        },
        "item": {
          "id": "12bdba93-e541-41a8-99f2-df97bc24ecdf",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "784dd4c8-d6ad-4df7-98f2-559336a37667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26669f5d-d94e-4f6b-9629-a73ef6030fda",
        "cursor": {
          "ref": "312a0133-34e3-4919-96b6-2e410b09f574",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "365e8513-5a0b-4b12-893c-0e2f5fcf91a5"
        },
        "item": {
          "id": "26669f5d-d94e-4f6b-9629-a73ef6030fda",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2c60e301-64c7-434b-8874-31f5960944ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01237af7-811a-4cb9-a8ed-c39a13f531e5",
        "cursor": {
          "ref": "f15312c4-8ad2-4235-8701-4ab6de2ecd5a",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "413bef4d-a94d-46a1-8eca-25ca63fa7b07"
        },
        "item": {
          "id": "01237af7-811a-4cb9-a8ed-c39a13f531e5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f83d9135-7504-485b-adb8-26a4a795f5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cbde47-7ec0-4f34-a711-d3e95bd91e7f",
        "cursor": {
          "ref": "c0d34fbc-1fbc-4edc-ba6e-d9d80f85158e",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "baf2cf05-3a03-4085-ac36-c591ccdddac5"
        },
        "item": {
          "id": "24cbde47-7ec0-4f34-a711-d3e95bd91e7f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f4c2f451-499f-44c6-a2d7-4a8be731812f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2226443-1562-4c7c-aa4b-4c96a7134dc9",
        "cursor": {
          "ref": "e9777ce6-a741-4753-8488-be571324b8e7",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "049a81ec-f92d-4a7d-8b92-889cbc98b02a"
        },
        "item": {
          "id": "c2226443-1562-4c7c-aa4b-4c96a7134dc9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1d6826fa-eceb-4af1-a2b4-a6b1c60af8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8556e83-16b7-4681-ac8a-9028064b88dd",
        "cursor": {
          "ref": "5d7b33a8-2156-4472-a552-318f36c95ece",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "fe40385a-a69d-41a9-ad0c-2673ee098adb"
        },
        "item": {
          "id": "f8556e83-16b7-4681-ac8a-9028064b88dd",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1bc27b54-7a0f-4cc2-a310-d4c17dfd3484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec18b139-bddd-4164-bcd1-78f2ca1fd756",
        "cursor": {
          "ref": "fdfe6125-78b8-4276-b116-4976d46f94ff",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fa473177-8d7a-4bbb-8118-c4e2ccaa1b5d"
        },
        "item": {
          "id": "ec18b139-bddd-4164-bcd1-78f2ca1fd756",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1d8bb9af-afc6-4973-a9cb-b0a1cb9538cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd440f1-6272-4b57-b949-19ae111b249e",
        "cursor": {
          "ref": "fdf549be-e75f-4cfc-86bc-9da9a813c399",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "48a37505-ed97-4076-8210-3c20592a8bc6"
        },
        "item": {
          "id": "dbd440f1-6272-4b57-b949-19ae111b249e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3cbe61cb-3e51-48c6-878d-7588e806865e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbdd5014-d3be-4eab-bfdf-d3102ce63a98",
        "cursor": {
          "ref": "f9eb41d3-d9c9-476f-b035-a73ebf25253c",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "32571e7c-d656-4a0d-96e2-91d85545154e"
        },
        "item": {
          "id": "bbdd5014-d3be-4eab-bfdf-d3102ce63a98",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "db45db53-a9bb-423a-a78c-43027d563dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f2ac58-eac2-4b9e-bb09-53bc1d75ec6e",
        "cursor": {
          "ref": "a1136e53-c5f5-44de-9648-c81d16e32dd6",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "752b8bb2-f178-4f2c-bf91-e98eb9a5fb8e"
        },
        "item": {
          "id": "a8f2ac58-eac2-4b9e-bb09-53bc1d75ec6e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2f98e28d-8f6d-402e-851b-e1bed8e0f353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd43bb5-4e0f-4db4-b50a-4c02d9d8a44b",
        "cursor": {
          "ref": "4940085a-ebef-49e0-b003-9ee77c308fbc",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "efcaf5b2-bf8e-4cdb-a1bb-f66a96e50cc6"
        },
        "item": {
          "id": "4cd43bb5-4e0f-4db4-b50a-4c02d9d8a44b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9a0a6b3f-92cf-4ee7-9ac4-bc7b4bf8f2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90856559-88cb-4480-bdfc-72c2453ceca2",
        "cursor": {
          "ref": "e7c7d67c-6c82-450d-85d0-1d2c7a9f36dc",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "308fe97d-905c-45b6-b58a-f04139a34f9b"
        },
        "item": {
          "id": "90856559-88cb-4480-bdfc-72c2453ceca2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "db6204ab-6da4-4eec-ab18-e6cd2b0d1cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f04e422-4841-45da-8467-1786f9a80abd",
        "cursor": {
          "ref": "5e66e5a4-d200-4a4f-9cab-1be80ff8c09a",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "24342c37-4a02-49d8-9c80-b7c2d7cb4a7e"
        },
        "item": {
          "id": "2f04e422-4841-45da-8467-1786f9a80abd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "640bd348-d2a9-4793-9262-8cc4db0dc9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534a9b96-4614-4f37-ad3b-87b5deb63a0d",
        "cursor": {
          "ref": "37314c50-bdfc-4ae0-8b81-875382be3639",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0393a3f1-e830-409f-8007-21d0ced6672d"
        },
        "item": {
          "id": "534a9b96-4614-4f37-ad3b-87b5deb63a0d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f2cfa3a2-da67-4967-96ab-a46e8f6517a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e387a71-b08f-47f5-93aa-5bfeef08f526",
        "cursor": {
          "ref": "1d768967-028b-4472-a6a2-eb878719f8b4",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8545a01f-5726-4e70-b37e-5b0ed6a387a8"
        },
        "item": {
          "id": "1e387a71-b08f-47f5-93aa-5bfeef08f526",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e998a8ff-5000-4d04-bf7c-b8fbd23482cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524137f7-909f-4925-883f-fc37112caf6e",
        "cursor": {
          "ref": "cdd69a12-cb59-477a-9787-390581846c2b",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e905a635-56ff-45bb-a8ee-ea788c7bd643"
        },
        "item": {
          "id": "524137f7-909f-4925-883f-fc37112caf6e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ebfb1d5f-9f9c-4ccd-844f-243645c6cd7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b01f31-c87f-40de-8ac3-81ce0e6e47b0",
        "cursor": {
          "ref": "13a859e3-c259-4a4d-816b-e4e4145026c7",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "10da8e7a-dca5-4131-bd93-0d28c5b988e3"
        },
        "item": {
          "id": "a9b01f31-c87f-40de-8ac3-81ce0e6e47b0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e1eb4d8b-8d4b-428c-a436-c66ce9785f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5feda5-e1b6-4f11-bf50-6b8f172bb619",
        "cursor": {
          "ref": "8bfe1d9d-adb3-488b-8c1d-e8795ecbde17",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "dc6a764a-09ba-4506-9ade-b1db04bec629"
        },
        "item": {
          "id": "9c5feda5-e1b6-4f11-bf50-6b8f172bb619",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b5df4b3e-f407-4907-a661-9e42d5900e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f1854c-74ab-441e-9d86-874b78ba4706",
        "cursor": {
          "ref": "eef9cd53-a49b-4259-a0a6-14718a29c1f7",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "684f4942-52dc-4b8a-a6e7-dcabf28e2343"
        },
        "item": {
          "id": "08f1854c-74ab-441e-9d86-874b78ba4706",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3616fff0-51a8-4c2d-8ea3-db57a204b317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5acb3a-f60f-4cb0-a201-d3c9de627b72",
        "cursor": {
          "ref": "7927f164-b16f-4e97-bc4a-37c7fce4c42e",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "97766544-b7c1-4d70-a11f-129053cfee88"
        },
        "item": {
          "id": "0b5acb3a-f60f-4cb0-a201-d3c9de627b72",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "048a861f-2b4b-4c87-a4dd-64b6be344f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cfba10-fce1-4565-93ab-7e4ebbdbf108",
        "cursor": {
          "ref": "b1a7f810-cbda-4cc1-9a5d-164d5d63d9ab",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3d795edc-dfc2-481e-83a2-f03f04f2f9a0"
        },
        "item": {
          "id": "19cfba10-fce1-4565-93ab-7e4ebbdbf108",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6f8a59d8-f397-4556-9e3f-f8c4868bdeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9aab83f-68bd-4307-98ff-7128cb327fb7",
        "cursor": {
          "ref": "b0a3a4e3-c139-48fa-abb0-9262f16ea9dc",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "968ffafd-354d-414e-9882-83038284a436"
        },
        "item": {
          "id": "c9aab83f-68bd-4307-98ff-7128cb327fb7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "964298d0-6044-4e53-8673-4226d790fb37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94a9f88-022f-4f0a-8c04-753549884559",
        "cursor": {
          "ref": "c4e8ae62-1abc-4640-a172-9bc5364c3ec1",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "583e566b-f1e1-4a13-9012-5b1124491340"
        },
        "item": {
          "id": "e94a9f88-022f-4f0a-8c04-753549884559",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "570e67c6-9d70-4f80-a983-73be98010c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f22e04-f960-4603-bb5c-de2e00e90786",
        "cursor": {
          "ref": "62c805b0-f1bd-4a81-9aa0-d3878e640ad3",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c9d86c70-56da-4ba6-b07a-ef60e54faeb8"
        },
        "item": {
          "id": "17f22e04-f960-4603-bb5c-de2e00e90786",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2604c3b9-b4f9-4c49-8074-35adca57f66e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b366ee67-e676-43da-a4d1-b89436818cc6",
        "cursor": {
          "ref": "39fa8df3-bdc4-4eb4-ae8e-bb2327628981",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9d13c868-2fb8-4ddd-b63a-b1a0eb4284f8"
        },
        "item": {
          "id": "b366ee67-e676-43da-a4d1-b89436818cc6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "74a606b8-285d-4460-80c4-aae0f1bae02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b12a7a0-9490-475c-b64b-bcf0b725b35a",
        "cursor": {
          "ref": "e195cfbf-125c-4a1d-a068-4a7416544464",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7efb9dbb-72d2-4fab-92e5-bcb3912e79fc"
        },
        "item": {
          "id": "4b12a7a0-9490-475c-b64b-bcf0b725b35a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "aa8cdbf2-ea32-4f80-b9b6-d22de9b07a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2035802d-b6c7-44ce-84e5-22347143aca1",
        "cursor": {
          "ref": "392a534f-b681-45e7-9538-34ddac8735cf",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8ec6f765-39c8-48fb-9a8e-94544fdfa59e"
        },
        "item": {
          "id": "2035802d-b6c7-44ce-84e5-22347143aca1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "aa6cccfe-85e3-46ce-a422-c751942a344d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47cf94b-7d0f-4fcd-b4b3-dff0d51182ce",
        "cursor": {
          "ref": "f1d19937-3239-440a-807b-b58a3a7faecc",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4be6a5a5-1eb6-4df1-acec-c34fb1571647"
        },
        "item": {
          "id": "a47cf94b-7d0f-4fcd-b4b3-dff0d51182ce",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "229e38b4-bc9f-4e1d-86cb-b07dd978a44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbdca5f9-fd03-4b68-98c5-f058dd974f44",
        "cursor": {
          "ref": "4345faa3-9586-4a74-9b16-c520b54d6ccf",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b3af21ee-e506-467f-aa0e-dc41663f2887"
        },
        "item": {
          "id": "cbdca5f9-fd03-4b68-98c5-f058dd974f44",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "05c6aae2-4d40-46f4-b8b0-3c591b21416e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cbf1a7-3768-45cb-9f59-12cabc0306bc",
        "cursor": {
          "ref": "623d0d99-713f-4caf-88da-ef7384d67fd4",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d9c5aed1-2fdb-4969-9b51-db2685b29cae"
        },
        "item": {
          "id": "a1cbf1a7-3768-45cb-9f59-12cabc0306bc",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bf6eebde-2ef6-41a4-992d-d6fa1946d29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc5da28-f46d-44f2-9c63-dc61457e055b",
        "cursor": {
          "ref": "35416838-3ad4-46f3-a2b9-cbb72a544702",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3a1f4e04-b747-4796-a129-52b636618a80"
        },
        "item": {
          "id": "3fc5da28-f46d-44f2-9c63-dc61457e055b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8737ba8f-950d-4206-8186-8039ea895af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73218eae-00fe-4b5f-a459-3298347db769",
        "cursor": {
          "ref": "118fa969-17f8-44f9-84cb-bb2954449bb7",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a4f00f22-0022-40a1-8ead-0152a62781dd"
        },
        "item": {
          "id": "73218eae-00fe-4b5f-a459-3298347db769",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ead5c856-f3c6-46fc-a61d-293118478b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a47aa1-b553-4883-b8d4-1256bc54146e",
        "cursor": {
          "ref": "7d9ca48a-0821-4b89-9733-dba6fd3c4604",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d348894c-1abf-44fb-b1f4-3bded681d3fc"
        },
        "item": {
          "id": "f2a47aa1-b553-4883-b8d4-1256bc54146e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "59539b22-a13e-46af-80cc-6d42c54367ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce7425d-4468-48eb-9171-b7e993c47677",
        "cursor": {
          "ref": "13a759a4-af7c-49d7-a09e-ec1cdfc2137f",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d1a32f13-328c-4471-9f44-b63fe70260be"
        },
        "item": {
          "id": "3ce7425d-4468-48eb-9171-b7e993c47677",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c0f50b84-0761-4ac4-991c-a41be215e907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7de1065-8510-4c52-a426-b58cd8dd9a5a",
        "cursor": {
          "ref": "db08b315-9bce-4c70-a417-17d3a84831a5",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "74cb8201-87dd-4367-8d48-70ddf5e7d36f"
        },
        "item": {
          "id": "d7de1065-8510-4c52-a426-b58cd8dd9a5a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "869c9a28-8f0d-452e-8735-ef63d57cfc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d048d941-2722-4243-9c75-afe3ef49c806",
        "cursor": {
          "ref": "19dca05f-daae-4c08-9910-f7b41e4f9b3a",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e31d1c53-a8ad-4829-baae-033e9d249710"
        },
        "item": {
          "id": "d048d941-2722-4243-9c75-afe3ef49c806",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "52df9a4d-dfdd-4450-a171-be63303ca0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f9a557-3b98-4c4e-ae1c-3c18b4ace95e",
        "cursor": {
          "ref": "db1ba213-339c-4427-8c8e-79aa14a2e7b8",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7e0dc027-e99b-4aef-a263-7c546905027a"
        },
        "item": {
          "id": "25f9a557-3b98-4c4e-ae1c-3c18b4ace95e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "de07e1f5-25d8-43a0-9e9b-edb9c3cb1847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d04c13-e060-403a-9fff-2f62f5b7e20f",
        "cursor": {
          "ref": "f5967276-d94c-4de9-8554-88f20506f827",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e1827d9c-0359-41e0-bee4-13a0857a53dd"
        },
        "item": {
          "id": "c8d04c13-e060-403a-9fff-2f62f5b7e20f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e28e37b4-c7a8-4e62-a9d9-95850ea0c78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6fbd17-5126-49f7-aa61-4eef6530472e",
        "cursor": {
          "ref": "8ab1c80e-23f1-40e9-b4db-26c9f1a0d213",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c2507f22-1f62-4747-8890-5676cf4bc007"
        },
        "item": {
          "id": "df6fbd17-5126-49f7-aa61-4eef6530472e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "550dd833-b89f-4954-b48c-2b3be5b63092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47049ff0-6ab1-4f0a-84d2-4c75e6512fc1",
        "cursor": {
          "ref": "4311fbd3-b812-4c3a-8861-0cefb4731d14",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e17f1335-5279-4cd6-a35e-051bbfdc3757"
        },
        "item": {
          "id": "47049ff0-6ab1-4f0a-84d2-4c75e6512fc1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a52457a8-dd7a-4a4f-800b-ed4b7abedcbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24890812-fccd-4f91-ac54-39544ec77961",
        "cursor": {
          "ref": "d1c73800-5afb-4bb2-be48-65363f8fae30",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f90defe3-527e-4373-982b-e77d5b00561a"
        },
        "item": {
          "id": "24890812-fccd-4f91-ac54-39544ec77961",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a4a673a7-f4fe-4dce-85f5-b20cafd8e9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6afb6c2-727b-45bb-9937-183d1faf43c0",
        "cursor": {
          "ref": "14854192-487d-4b1d-a331-2249b3c63eb2",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a9e7ee10-c8ab-4262-8924-7073faaabeba"
        },
        "item": {
          "id": "f6afb6c2-727b-45bb-9937-183d1faf43c0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "97ce0cd3-06f6-44d1-bff4-20cc80e1df3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf37715-2175-41ed-83a4-07fe29d02d6a",
        "cursor": {
          "ref": "054b0de6-19ab-4a5a-afc4-30ae7b4b2a29",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ee1a797b-8bca-46d8-bb9c-b2a37c75f9c9"
        },
        "item": {
          "id": "dcf37715-2175-41ed-83a4-07fe29d02d6a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ef694c21-1365-4605-89de-b301bbb438e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a9f903-7727-4f20-94ad-7915fb8f31a9",
        "cursor": {
          "ref": "6edc118d-50ff-4ed2-8a20-8e4ea52283df",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c3c2c8cd-e02b-4a97-ac13-a06f74643b02"
        },
        "item": {
          "id": "04a9f903-7727-4f20-94ad-7915fb8f31a9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "910f2ef1-26c6-45f8-b6aa-40baee71f471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8afc295e-1504-4bae-99ab-9f39240f9ecc",
        "cursor": {
          "ref": "c0fc683c-59b4-4f18-a544-4e611606e65e",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0355e254-d415-46b2-a7cc-d34c90821c42"
        },
        "item": {
          "id": "8afc295e-1504-4bae-99ab-9f39240f9ecc",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e5bfe554-5863-4140-a2c4-e401729ca524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19388396-b8eb-4269-9615-381bd7d52c22",
        "cursor": {
          "ref": "9065729b-436a-454d-b6e7-5fea68b74d11",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "82e6ca03-1921-458e-be47-8b775f36b15b"
        },
        "item": {
          "id": "19388396-b8eb-4269-9615-381bd7d52c22",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "231f55e1-d449-4992-ae90-7a18c4c3ac49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e0c536-df17-45f0-97fb-d5d46d8b3aee",
        "cursor": {
          "ref": "36839a47-1aef-4000-a7c3-e685eb253be1",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ecf50aaf-7dc1-44a5-8729-f89d05f3086e"
        },
        "item": {
          "id": "30e0c536-df17-45f0-97fb-d5d46d8b3aee",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bf8c863a-8030-45d0-98c8-86db272b88a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524c0ae8-e99c-4786-8f39-cf18820ebad7",
        "cursor": {
          "ref": "0c540fe6-dcff-4370-96dc-db5adcc635fc",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "94d8760d-4b68-45a9-a050-b30d5653e99f"
        },
        "item": {
          "id": "524c0ae8-e99c-4786-8f39-cf18820ebad7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a29a1aff-3b72-472b-bd13-3689c1728635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf58936-7f04-4031-8793-c055532d2038",
        "cursor": {
          "ref": "96287f03-4fd6-4235-9e10-15c493e82565",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "87d0e693-66cb-4f1c-8621-cebfcf81eb18"
        },
        "item": {
          "id": "fdf58936-7f04-4031-8793-c055532d2038",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "dd1350b2-92d6-413c-ab98-eeb55254dd5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe0fac5-8c50-4287-a7bf-340c9b2341d0",
        "cursor": {
          "ref": "f14c17c4-d16e-45e6-93f6-cc7873900834",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b9e57431-084e-4164-98cc-356768cae59d"
        },
        "item": {
          "id": "7fe0fac5-8c50-4287-a7bf-340c9b2341d0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "199a8d30-848f-45c0-97ee-32fd3aeb2e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96907500-1ccc-4e92-ae7c-aabbba7c3436",
        "cursor": {
          "ref": "0628cf19-7bb9-4436-8aad-3b834b67ce18",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "46263af7-c8bc-45e9-a898-4222217de853"
        },
        "item": {
          "id": "96907500-1ccc-4e92-ae7c-aabbba7c3436",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ff53b8d6-5225-479e-a9a6-fef4d887fa5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e55dd9-235d-4c8e-bbcc-0b0d72ec5dcb",
        "cursor": {
          "ref": "4facdeee-5dee-42a0-916a-5940dbe3d375",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f9638562-7356-4ee8-89db-c7f530c0789b"
        },
        "item": {
          "id": "99e55dd9-235d-4c8e-bbcc-0b0d72ec5dcb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b9fc09b6-d9aa-4fc1-ad28-7b89edcde049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0aeffa-1f4b-4560-8d8a-1026992b2150",
        "cursor": {
          "ref": "2702355c-1a19-4a1b-8e6c-4fb358418c47",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "3536d509-d1c9-4a95-8ff5-5601c3b86ac3"
        },
        "item": {
          "id": "ca0aeffa-1f4b-4560-8d8a-1026992b2150",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2ac43946-adbf-4c9f-87d6-87b78364ca69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b9d58c-4dfe-43b8-9fe5-43e588cb1e9e",
        "cursor": {
          "ref": "f4365aee-6371-4da6-91ca-355d6c06e35c",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5e7c5b0a-8578-4c90-a21f-a103ac5d3c97"
        },
        "item": {
          "id": "65b9d58c-4dfe-43b8-9fe5-43e588cb1e9e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8cad5237-d9ac-4d4f-a15e-203226830e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f51d24-867e-4950-8813-a38e8fdfe94b",
        "cursor": {
          "ref": "d6d598db-853a-487a-bc4f-9572e2618824",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "69a070ce-6207-4a73-96ff-7da029ce3640"
        },
        "item": {
          "id": "01f51d24-867e-4950-8813-a38e8fdfe94b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f017ab15-d613-4f92-97dc-80b5883bd215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44842ea-e48f-4d6f-ba6d-c1f9404e9a2c",
        "cursor": {
          "ref": "ddbfd2f7-8c64-472f-a423-9769fcf88797",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "2cfc8038-3d2d-4aed-9870-a598989b26f2"
        },
        "item": {
          "id": "a44842ea-e48f-4d6f-ba6d-c1f9404e9a2c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1c518523-6f5d-4001-83e1-84b4dbbc3580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7349ce-c04c-47cd-b481-09ea9a1dba42",
        "cursor": {
          "ref": "83dd2a15-4863-45e5-8252-9ba24c96f6fe",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "01a14f3e-0cc6-4d56-a325-9d89ff772a89"
        },
        "item": {
          "id": "ce7349ce-c04c-47cd-b481-09ea9a1dba42",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b190e155-e737-4cf4-8a21-e0ce1a21f306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac97aac-c6e3-42cf-bc90-825a44014cc9",
        "cursor": {
          "ref": "4f68507f-7938-42b0-923f-0e98662ee630",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b84fe672-3931-49d5-98da-2ca8e5a3fd7d"
        },
        "item": {
          "id": "aac97aac-c6e3-42cf-bc90-825a44014cc9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "46f5b062-557e-411a-af08-1d44e3c5ad28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfcf299-ca36-4a6c-9c4b-bc1438edfe1f",
        "cursor": {
          "ref": "9b796e1c-80c9-492e-a068-4017b47fa2d9",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e550728d-7064-4fe0-9267-b7c7fb089953"
        },
        "item": {
          "id": "cdfcf299-ca36-4a6c-9c4b-bc1438edfe1f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "dfcb9f2a-d6f9-4af1-b609-fe461090e18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd1704f-3b35-4ad1-b01d-ae323e820aaa",
        "cursor": {
          "ref": "5f80934c-b3c4-42da-b578-37a446f51cc0",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "79cbfe2b-beee-4b35-9141-2f30d86c777f"
        },
        "item": {
          "id": "8dd1704f-3b35-4ad1-b01d-ae323e820aaa",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "04cb9e1e-9504-4bcf-910f-8ecb79bc9e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892fbe1b-1379-474b-a46d-48590a3473ec",
        "cursor": {
          "ref": "80dd82e4-49ab-4947-b430-18df5a8074c1",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "0b5443d4-e779-4d76-8805-8e02c75a075d"
        },
        "item": {
          "id": "892fbe1b-1379-474b-a46d-48590a3473ec",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7008f134-5cdf-4832-bea1-85d2e16f2484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee23d4b-6041-400f-82e1-c4d11d4ba5e8",
        "cursor": {
          "ref": "f630aec7-8fa3-4834-bd25-60fe5fde3249",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b9f69a86-5de8-4d09-9dfe-52d57e08d386"
        },
        "item": {
          "id": "cee23d4b-6041-400f-82e1-c4d11d4ba5e8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "da2ebec2-4e85-459e-b989-79769864498f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a8d92c-221a-4ed8-b318-226810105ea9",
        "cursor": {
          "ref": "6418ec6f-3f78-4ff3-82f2-ea80ea7ece09",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "829d21ed-b035-4e22-9ff4-e599382a45c5"
        },
        "item": {
          "id": "68a8d92c-221a-4ed8-b318-226810105ea9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2a7c2ab6-3133-462d-ac7a-6cab5f002ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd7f112-61cc-42f5-8137-033d9daaa0b7",
        "cursor": {
          "ref": "604a1270-4275-469e-b05b-a0799db6f278",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ffddafa3-596b-4b3d-b996-e79692c50228"
        },
        "item": {
          "id": "fcd7f112-61cc-42f5-8137-033d9daaa0b7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "88e72adf-b69e-4945-99d0-d2d3f3b33c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e38e54a-4a79-4cbf-b8be-de97d3542e8c",
        "cursor": {
          "ref": "70a6e7ff-b1ae-47cc-a21c-baf25b44c6e8",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "bd2db65b-4caa-4a90-8b49-d7aff3a2f5ee"
        },
        "item": {
          "id": "3e38e54a-4a79-4cbf-b8be-de97d3542e8c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4b13d47f-a3c2-400a-a863-7fffcdc7f37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5065636a-3e49-43e3-91d9-fb643a342d68",
        "cursor": {
          "ref": "9cb79510-a4f7-4e46-a505-288cd1272c0e",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "cec4eb95-655e-4699-9cd6-fe51b63823a9"
        },
        "item": {
          "id": "5065636a-3e49-43e3-91d9-fb643a342d68",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "43aaf6a1-2b6f-47ba-b11c-29b257800224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3c04f4-f470-4fc7-8d46-2c4583512986",
        "cursor": {
          "ref": "309f0391-7e9c-4770-80eb-d27cab34a31a",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "3251a96b-46ad-4690-b2ad-fef535b8788a"
        },
        "item": {
          "id": "7c3c04f4-f470-4fc7-8d46-2c4583512986",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4dfe37f7-105b-4097-a2c5-588c10589334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3f1373-a493-4970-8fd5-6ce4756d2a89",
        "cursor": {
          "ref": "9caa083b-6ebd-426c-857c-ab2a9ad96140",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "45cf1d46-eea7-41f0-afb3-79515c8bb623"
        },
        "item": {
          "id": "cc3f1373-a493-4970-8fd5-6ce4756d2a89",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e55c8cfe-7fcf-4efd-beb8-859f701892de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e038b2c4-2a6a-49e6-a6a6-e3552ed1acf2",
        "cursor": {
          "ref": "a3abf3a1-70ca-41d1-9282-7a3ec8828e6e",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "68d528bd-7aa5-4ddf-a7ca-97364507b8e8"
        },
        "item": {
          "id": "e038b2c4-2a6a-49e6-a6a6-e3552ed1acf2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e039b3bc-5e68-4432-8d9e-d78d08a6f2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bd08a3-87ee-4a99-8c22-589a461609fa",
        "cursor": {
          "ref": "a4a27429-71e2-4ff5-b196-543ac51ffad3",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "35c1843b-74be-4eea-af61-a35f76921eed"
        },
        "item": {
          "id": "29bd08a3-87ee-4a99-8c22-589a461609fa",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "92470688-27d6-4b37-a96a-6dab50528356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637096df-3ed6-4a15-a27c-001382f070d8",
        "cursor": {
          "ref": "ca62aec1-3f4a-4d75-ba12-d9b167538def",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "6c5295c3-cc3a-4deb-a20f-644a3d6d2226"
        },
        "item": {
          "id": "637096df-3ed6-4a15-a27c-001382f070d8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "14d4b522-7311-423e-9746-00236971719c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13a0300-7db8-4421-b193-21acdabbdfa8",
        "cursor": {
          "ref": "fcb0d916-fc76-47cc-9403-8ee71ae3f61a",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "293602e5-ed8b-4b4e-92ac-68841bb73bf5"
        },
        "item": {
          "id": "e13a0300-7db8-4421-b193-21acdabbdfa8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4d9d9447-b46d-4925-bbd4-676a38bec18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6f1880-7663-45bb-b35e-9e02bf68ebce",
        "cursor": {
          "ref": "292c56c8-599c-4a39-a1d6-01d0cd2c809c",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "9bf95366-232f-4e73-a04c-169f6d386888"
        },
        "item": {
          "id": "ee6f1880-7663-45bb-b35e-9e02bf68ebce",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e378ee08-b881-4dfe-bb8c-1176d8b876e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5889aa-dded-47ba-99a4-339467fb7595",
        "cursor": {
          "ref": "b8f2f76d-5cdf-422e-8426-e95868779a11",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "91229cab-3421-4bc9-96a9-7837b4155065"
        },
        "item": {
          "id": "2a5889aa-dded-47ba-99a4-339467fb7595",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4f601b2e-916c-4e44-b8e6-ce2b09bbb793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93a58be-e4bf-4282-8899-9848d7f1f740",
        "cursor": {
          "ref": "c3726ab2-2e8d-45f3-bef1-1ab93bc18bec",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ba5de0f9-3cbf-44db-bc37-73e712526e03"
        },
        "item": {
          "id": "a93a58be-e4bf-4282-8899-9848d7f1f740",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c0fe9e62-ea20-46bc-9b54-0e2da6fdb8a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f21a02-c5ae-45e5-81d2-68a282614936",
        "cursor": {
          "ref": "d8b30075-8aa8-4788-826a-1c40f356f3b5",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "4288e27a-a48f-4dbc-ad7c-17e173128103"
        },
        "item": {
          "id": "e8f21a02-c5ae-45e5-81d2-68a282614936",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cb333750-884b-4cba-92a6-dc9b635bd23d",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "041c1037-4fca-4f68-bdd8-a20edc948351",
        "cursor": {
          "ref": "f98b1b1f-a7d1-4957-a750-2cc8f7e5bc91",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "32dc4f21-a643-46d1-ac7a-81a15bb46cfc"
        },
        "item": {
          "id": "041c1037-4fca-4f68-bdd8-a20edc948351",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0c9a1fe6-0ce1-46b0-a934-0b1721378511",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "289cd42e-54e5-4b32-b5b1-10f7677dfadc",
        "cursor": {
          "ref": "d3a0f275-d31b-44fa-9d47-4b54cf640ca3",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "5765bef7-27e3-4fd2-ade3-01002b7014eb"
        },
        "item": {
          "id": "289cd42e-54e5-4b32-b5b1-10f7677dfadc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e4d22dc2-c538-423c-bd99-793dbd880ea2",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4fc8d1-6cc2-46c1-93d2-9aee39478df2",
        "cursor": {
          "ref": "56922851-25b0-498a-a591-87dac877430f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "46807e02-9c3b-4236-871b-ba2c1ebdfbbd"
        },
        "item": {
          "id": "ef4fc8d1-6cc2-46c1-93d2-9aee39478df2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f05072f3-87a0-452e-b1b8-313e4bea4fe7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4fc8d1-6cc2-46c1-93d2-9aee39478df2",
        "cursor": {
          "ref": "56922851-25b0-498a-a591-87dac877430f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "46807e02-9c3b-4236-871b-ba2c1ebdfbbd"
        },
        "item": {
          "id": "ef4fc8d1-6cc2-46c1-93d2-9aee39478df2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f05072f3-87a0-452e-b1b8-313e4bea4fe7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaedbe66-ec4d-44b9-9240-9f00df5f99bd",
        "cursor": {
          "ref": "5b73f639-2209-4710-a763-e39da6823c76",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ccc86f2a-c0f3-400f-a82f-bd828c120da4"
        },
        "item": {
          "id": "eaedbe66-ec4d-44b9-9240-9f00df5f99bd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "12f4d653-ae5c-49c2-8dbf-41e847aef33c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9a98c0-f72f-40d6-8497-da5f79960e2b",
        "cursor": {
          "ref": "ab2c655f-bcbe-4c09-9672-603e7ce725ed",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "80a51ca2-cf15-4beb-b0d2-ffcc26619841"
        },
        "item": {
          "id": "4f9a98c0-f72f-40d6-8497-da5f79960e2b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4f58b811-3f19-4a18-a1bf-ce48237a59f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}